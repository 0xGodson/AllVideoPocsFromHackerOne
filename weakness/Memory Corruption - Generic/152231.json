{"id":152231,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTIyMzE=","url":"https://hackerone.com/reports/152231","title":"Out of bound read in exif_process_IFD_in_MAKERNOTE","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-07-19T07:52:42.525Z","submitted_at":"2016-07-19T07:52:42.525Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"hoangnguyen","url":"/hoangnguyen","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/074/688/42c5ca5265ff965283d70fc52df2681dfd648d44_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-08-30T18:48:55.696Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2016-07-31T18:48:43.856Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I have found some vulnerable code that lacks check size of buffer may lead to memory out of read or write.\n\nTake a look at : \n```\nstatic int exif_process_IFD_in_MAKERNOTE(image_info_type *ImageInfo, char * value_ptr, int value_len, char *offset_base, size_t IFDlength, size_t displacement)\n{\n*****SNIP*******\n\tswitch (maker_note-\u003eoffset_mode) {\n\t\tcase MN_OFFSET_MAKER:\n\t\t\toffset_base = value_ptr;\n\t\t\tbreak;\n\t\tcase MN_OFFSET_GUESS:\n\t\t\toffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u003emotorola_intel);\n#ifdef EXIF_DEBUG\n\t\t\texif_error_docref(NULL EXIFERR_CC, ImageInfo, E_NOTICE, \"Using automatic offset correction: 0x%04X\", ((int)dir_start-(int)offset_base+maker_note-\u003eoffset+displacement) + offset_diff);\n#endif\n\t\t\toffset_base = value_ptr + offset_diff;\n\t\t\tbreak;\n\t\tdefault:\n\t\tcase MN_OFFSET_NORMAL:\n\t\t\tbreak;\n\t}\n\n\tif ((2+NumDirEntries*12) \u003e value_len)\n*****SNIP*******\n}\n```\nAs you can see this line while processing markernote of \"Cannon\"\n```\noffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u003emotorola_intel);\n```\nBecause no checking the value return from php_ifd_get32u(dir_start+10, ImageInfo-\u003emotorola_intel); and weak check value of NumDirEntries, so attacker can control both value to make offset_diff may out of size offset_base.\n\nThat result may lead to information leak or memory corruption.\n\nHere jpeg image link to lead to this problem : https://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing\n\nTest script:\n---------------\n```\n\u003c?php\n\t$exif = exif_read_data('exif/gen.jpg');\n\tvar_dump($exif);\n?\u003e\n```\nI will show you the variable of offset_diff, offset_base before and after hitting that code path.\n```\n[----------------------------------registers-----------------------------------]\nRAX: 0x0\nRBX: 0x18\nRCX: 0x0\nRDX: 0x7ffff3e7607e --\u003e 0x29286fffffa92\nRSI: 0x0\nRDI: 0x7ffff3e7607e --\u003e 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --\u003e 0x7fffffffa9d0 --\u003e 0x7fffffffaa30 --\u003e 0x7fffffffab60 --\u003e 0x7fffffffabc0 --\u003e 0x7fffffffac00 --\u003e 0x7fffffffac30 --\u003e 0x7fffffffacd0 --\u003e 0x7fffffffad10 --\u003e 0x7fffffffadf0 --\u003e 0x7fffffffb0d0 --\u003e 0x7fffffffb100 --\u003e 0x7fffffffb130 --\u003e 0x7fffffffb170 --\u003e 0x7fffffffb280 --\u003e 0x7fffffffd580 --\u003e 0x7fffffffe900 --\u003e 0x7fffffffea50 --\u003e 0xa15f90 (\u003c__libc_csu_init\u003e:\tpush   r15)\nRSP: 0x7fffffffa830 --\u003e 0xc ('\\x0c')\nRIP: 0x613c3d (\u003cexif_process_IFD_in_MAKERNOTE+489\u003e:\tcall   0x610603 \u003cphp_ifd_get32u\u003e)\nR8 : 0x594\nR9 : 0xc ('\\x0c')\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (\u003c_start\u003e:\txor    ebp,ebp)\nR13: 0x7fffffffeb30 --\u003e 0x2\nR14: 0x7ffff3e14030 --\u003e 0x7ffff3e5fb80 --\u003e 0x9a28f2 (\u003cZEND_DO_ICALL_SPEC_HANDLER\u003e:\tpush   rbp)\nR15: 0x7ffff3e5fb80 --\u003e 0x9a28f2 (\u003cZEND_DO_ICALL_SPEC_HANDLER\u003e:\tpush   rbp)\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c34 \u003cexif_process_IFD_in_MAKERNOTE+480\u003e:\tadd    rdx,0xa\n   0x613c38 \u003cexif_process_IFD_in_MAKERNOTE+484\u003e:\tmov    esi,eax\n   0x613c3a \u003cexif_process_IFD_in_MAKERNOTE+486\u003e:\tmov    rdi,rdx\n=\u003e 0x613c3d \u003cexif_process_IFD_in_MAKERNOTE+489\u003e:\tcall   0x610603 \u003cphp_ifd_get32u\u003e\n   0x613c42 \u003cexif_process_IFD_in_MAKERNOTE+494\u003e:\tsub    ebx,eax\n   0x613c44 \u003cexif_process_IFD_in_MAKERNOTE+496\u003e:\tmov    eax,ebx\n   0x613c46 \u003cexif_process_IFD_in_MAKERNOTE+498\u003e:\tadd    eax,0x6\n   0x613c49 \u003cexif_process_IFD_in_MAKERNOTE+501\u003e:\tmov    DWORD PTR [rbp-0x24],eax\nGuessed arguments:\narg[0]: 0x7ffff3e7607e --\u003e 0x29286fffffa92\narg[1]: 0x0\narg[2]: 0x7ffff3e7607e --\u003e 0x29286fffffa92\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --\u003e 0xc ('\\x0c')\n0008| 0x7fffffffa838 --\u003e 0x594\n0016| 0x7fffffffa840 --\u003e 0x7ffff3e76008 --\u003e 0x8002a4949\n0024| 0x7fffffffa848 --\u003e 0x1c006117bc\n0032| 0x7fffffffa850 --\u003e 0x7ffff3e76074 --\u003e 0x1000202080002\n0040| 0x7fffffffa858 --\u003e 0x7fffffffae50 --\u003e 0x7ffff3e5fa00 --\u003e 0x12b9700 --\u003e 0x8d43d1 (\u003cphp_stdiop_write\u003e:\tpush   rbp)\n0048| 0x7fffffffa860 --\u003e 0x7fffffffa8a0 --\u003e 0x7fffffffa9d0 --\u003e 0x7fffffffaa30 --\u003e 0x7fffffffab60 --\u003e 0x7fffffffabc0 --\u003e 0x7fffffffac00 --\u003e 0x7fffffffac30 --\u003e 0x7fffffffacd0 --\u003e 0x7fffffffad10 --\u003e 0x7fffffffadf0 --\u003e 0x7fffffffb0d0 --\u003e 0x7fffffffb100 --\u003e 0x7fffffffb130 --\u003e 0x7fffffffb170 --\u003e 0x7fffffffb280 --\u003e 0x7fffffffd580 --\u003e 0x7fffffffe900 --\u003e 0x7fffffffea50 --\u003e 0xa15f90 (\u003c__libc_csu_init\u003e:\tpush   r15)\n0056| 0x7fffffffa868 --\u003e 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 5, 0x0000000000613c3d in exif_process_IFD_in_MAKERNOTE (\n    ImageInfo=0x7fffffffae50, value_ptr=0x7ffff3e76074 \"\\002\", value_len=0x1c,\n    offset_base=0x7ffff3e76008 \"II*\", IFDlength=0x594, displacement=0xc)\n    at /home/vagrant/Sources_Ext/audit/src/php7.0-7.0.4/ext/exif/exif.c:2754\n2754\t\t\t\toffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u003emotorola_intel);\ngdb-peda$ x/80gx offset_base\n0x7ffff3e76008:\t0x00000008002a4949\t0x00010005011a0002\n0x7ffff3e76018:\t0x8769000004000000\t0x0022000000010004\n0x7ffff3e76028:\t0x0005829a00060000\t0x0000041200000001\n0x7ffff3e76038:\t0x000000010005829d\t0x0002928600000444\n0x7ffff3e76048:\t0x00000da6000000a8\t0x0000002c00028298\n0x7ffff3e76058:\t0x0002010f00000e4e\t0x00000e7a00000005\n0x7ffff3e76068:\t0x000000070004927c\t0x020800020000006c\n0x7ffff3e76078:\t0xfa92000000010002\t0x00ff00029286ffff\n0x7ffff3e76088:\t0x5252000000000000\t0x5252525252525252\n0x7ffff3e76098:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760a8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760b8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760c8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760d8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760e8:\t0x5252525252525252\t0x00f2525252525252\n.....\n0x7ffff3e76568:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76578:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76588:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76598:\t0x00000000d9ff5454\t0x0000000000000000\n0x7ffff3e765a8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765b8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765c8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765d8:\t0x0000000000000000\t0x000000000000059d\n0x7ffff3e765e8:\t0x0000000000b12b88\t0x0000000000f774a0\n0x7ffff3e765f8:\t0x000009ce00000646\t0x00007ffff3e76c00\n```\nAs you see above at address *0x7ffff3e76598* is the end of offset_base.\nNext i hit next to execute *offset_base = value_ptr + offset_diff;*\n```\n[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff3e76600 --\u003e 0x7ffff3e76c00 --\u003e 0x7ffff3e77200 --\u003e 0x7ffff3e77800 --\u003e 0x7ffff3e77e00 --\u003e 0x7ffff3e78400 --\u003e 0x7ffff3e78a00 --\u003e 0x0\nRBX: 0x586\nRCX: 0x0\nRDX: 0x58c\nRSI: 0x0\nRDI: 0x7ffff3e7607e --\u003e 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --\u003e 0x7fffffffa9d0 --\u003e 0x7fffffffaa30 --\u003e 0x7fffffffab60 --\u003e 0x7fffffffabc0 --\u003e 0x7fffffffac00 --\u003e 0x7fffffffac30 --\u003e 0x7fffffffacd0 --\u003e 0x7fffffffad10 --\u003e 0x7fffffffadf0 --\u003e 0x7fffffffb0d0 --\u003e 0x7fffffffb100 --\u003e 0x7fffffffb130 --\u003e 0x7fffffffb170 --\u003e 0x7fffffffb280 --\u003e 0x7fffffffd580 --\u003e 0x7fffffffe900 --\u003e 0x7fffffffea50 --\u003e 0xa15f90 (\u003c__libc_csu_init\u003e:\tpush   r15)\nRSP: 0x7fffffffa830 --\u003e 0xc ('\\x0c')\nRIP: 0x613c5d (\u003cexif_process_IFD_in_MAKERNOTE+521\u003e:\tnop)\nR8 : 0x594\nR9 : 0xc ('\\x0c')\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (\u003c_start\u003e:\txor    ebp,ebp)\nR13: 0x7fffffffeb30 --\u003e 0x2\nR14: 0x7ffff3e14030 --\u003e 0x7ffff3e5fb80 --\u003e 0x9a28f2 (\u003cZEND_DO_ICALL_SPEC_HANDLER\u003e:\tpush   rbp)\nR15: 0x7ffff3e5fb80 --\u003e 0x9a28f2 (\u003cZEND_DO_ICALL_SPEC_HANDLER\u003e:\tpush   rbp)\nEFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c52 \u003cexif_process_IFD_in_MAKERNOTE+510\u003e:\tmov    rax,QWORD PTR [rbp-0x50]\n   0x613c56 \u003cexif_process_IFD_in_MAKERNOTE+514\u003e:\tadd    rax,rdx\n   0x613c59 \u003cexif_process_IFD_in_MAKERNOTE+517\u003e:\tmov    QWORD PTR [rbp-0x60],rax\n=\u003e 0x613c5d \u003cexif_process_IFD_in_MAKERNOTE+521\u003e:\tnop\n   0x613c5e \u003cexif_process_IFD_in_MAKERNOTE+522\u003e:\tmov    edx,DWORD PTR [rbp-0x28]\n   0x613c61 \u003cexif_process_IFD_in_MAKERNOTE+525\u003e:\tmov    eax,edx\n   0x613c63 \u003cexif_process_IFD_in_MAKERNOTE+527\u003e:\tadd    eax,eax\n   0x613c65 \u003cexif_process_IFD_in_MAKERNOTE+529\u003e:\tadd    eax,edx\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --\u003e 0xc ('\\x0c')\n0008| 0x7fffffffa838 --\u003e 0x594\n0016| 0x7fffffffa840 --\u003e 0x7ffff3e76600 --\u003e 0x7ffff3e76c00 --\u003e 0x7ffff3e77200 --\u003e 0x7ffff3e77800 --\u003e 0x7ffff3e77e00 --\u003e 0x7ffff3e78400 --\u003e 0x7ffff3e78a00 --\u003e 0x0\n0024| 0x7fffffffa848 --\u003e 0x1c006117bc\n0032| 0x7fffffffa850 --\u003e 0x7ffff3e76074 --\u003e 0x1000202080002\n0040| 0x7fffffffa858 --\u003e 0x7fffffffae50 --\u003e 0x7ffff3e5fa00 --\u003e 0x12b9700 --\u003e 0x8d43d1 (\u003cphp_stdiop_write\u003e:\tpush   rbp)\n0048| 0x7fffffffa860 --\u003e 0x7fffffffa8a0 --\u003e 0x7fffffffa9d0 --\u003e 0x7fffffffaa30 --\u003e 0x7fffffffab60 --\u003e 0x7fffffffabc0 --\u003e 0x7fffffffac00 --\u003e 0x7fffffffac30 --\u003e 0x7fffffffacd0 --\u003e 0x7fffffffad10 --\u003e 0x7fffffffadf0 --\u003e 0x7fffffffb0d0 --\u003e 0x7fffffffb100 --\u003e 0x7fffffffb130 --\u003e 0x7fffffffb170 --\u003e 0x7fffffffb280 --\u003e 0x7fffffffd580 --\u003e 0x7fffffffe900 --\u003e 0x7fffffffea50 --\u003e 0xa15f90 (\u003c__libc_csu_init\u003e:\tpush   r15)\n0056| 0x7fffffffa868 --\u003e 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n2759\t\t\t\tbreak;\ngdb-peda$ p offset_base\n$86 = 0x7ffff3e76600 \"\"\ngdb-peda$ x/40gx offset_base\n0x7ffff3e76600:\t0x00007ffff3e76c00\t0x0000000000000000\n0x7ffff3e76610:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e76620:\t0x0000000000000000\t0x0000000000000000\n```\nAfter calculate offset_base, you can see that address is out of own buffer","vulnerability_information_html":"\u003cp\u003eI have found some vulnerable code that lacks check size of buffer may lead to memory out of read or write.\u003c/p\u003e\n\n\u003cp\u003eTake a look at : \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estatic int exif_process_IFD_in_MAKERNOTE(image_info_type *ImageInfo, char * value_ptr, int value_len, char *offset_base, size_t IFDlength, size_t displacement)\n{\n*****SNIP*******\n    switch (maker_note-\u0026gt;offset_mode) {\n        case MN_OFFSET_MAKER:\n            offset_base = value_ptr;\n            break;\n        case MN_OFFSET_GUESS:\n            offset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u0026gt;motorola_intel);\n#ifdef EXIF_DEBUG\n            exif_error_docref(NULL EXIFERR_CC, ImageInfo, E_NOTICE, \u0026quot;Using automatic offset correction: 0x%04X\u0026quot;, ((int)dir_start-(int)offset_base+maker_note-\u0026gt;offset+displacement) + offset_diff);\n#endif\n            offset_base = value_ptr + offset_diff;\n            break;\n        default:\n        case MN_OFFSET_NORMAL:\n            break;\n    }\n\n    if ((2+NumDirEntries*12) \u0026gt; value_len)\n*****SNIP*******\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you can see this line while processing markernote of \u0026quot;Cannon\u0026quot;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eoffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u0026gt;motorola_intel);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause no checking the value return from php_ifd_get32u(dir_start+10, ImageInfo-\u0026gt;motorola_intel); and weak check value of NumDirEntries, so attacker can control both value to make offset_diff may out of size offset_base.\u003c/p\u003e\n\n\u003cp\u003eThat result may lead to information leak or memory corruption.\u003c/p\u003e\n\n\u003cp\u003eHere jpeg image link to lead to this problem : \u003ca title=\"https://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing\" href=\"/redirect?url=https%3A%2F%2Fdrive.google.com%2Ffile%2Fd%2F0B0D1DYQpkA9UZmVOMzYwQlBnSGM%2Fview%3Fusp%3Dsharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$exif\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eexif_read_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;exif/gen.jpg\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003evar_dump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$exif\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI will show you the variable of offset_diff, offset_base before and after hitting that code path.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[----------------------------------registers-----------------------------------]\nRAX: 0x0\nRBX: 0x18\nRCX: 0x0\nRDX: 0x7ffff3e7607e --\u0026gt; 0x29286fffffa92\nRSI: 0x0\nRDI: 0x7ffff3e7607e --\u0026gt; 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --\u0026gt; 0x7fffffffa9d0 --\u0026gt; 0x7fffffffaa30 --\u0026gt; 0x7fffffffab60 --\u0026gt; 0x7fffffffabc0 --\u0026gt; 0x7fffffffac00 --\u0026gt; 0x7fffffffac30 --\u0026gt; 0x7fffffffacd0 --\u0026gt; 0x7fffffffad10 --\u0026gt; 0x7fffffffadf0 --\u0026gt; 0x7fffffffb0d0 --\u0026gt; 0x7fffffffb100 --\u0026gt; 0x7fffffffb130 --\u0026gt; 0x7fffffffb170 --\u0026gt; 0x7fffffffb280 --\u0026gt; 0x7fffffffd580 --\u0026gt; 0x7fffffffe900 --\u0026gt; 0x7fffffffea50 --\u0026gt; 0xa15f90 (\u0026lt;__libc_csu_init\u0026gt;: push   r15)\nRSP: 0x7fffffffa830 --\u0026gt; 0xc (\u0026#39;\\x0c\u0026#39;)\nRIP: 0x613c3d (\u0026lt;exif_process_IFD_in_MAKERNOTE+489\u0026gt;: call   0x610603 \u0026lt;php_ifd_get32u\u0026gt;)\nR8 : 0x594\nR9 : 0xc (\u0026#39;\\x0c\u0026#39;)\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (\u0026lt;_start\u0026gt;:    xor    ebp,ebp)\nR13: 0x7fffffffeb30 --\u0026gt; 0x2\nR14: 0x7ffff3e14030 --\u0026gt; 0x7ffff3e5fb80 --\u0026gt; 0x9a28f2 (\u0026lt;ZEND_DO_ICALL_SPEC_HANDLER\u0026gt;:  push   rbp)\nR15: 0x7ffff3e5fb80 --\u0026gt; 0x9a28f2 (\u0026lt;ZEND_DO_ICALL_SPEC_HANDLER\u0026gt;: push   rbp)\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c34 \u0026lt;exif_process_IFD_in_MAKERNOTE+480\u0026gt;:    add    rdx,0xa\n   0x613c38 \u0026lt;exif_process_IFD_in_MAKERNOTE+484\u0026gt;:    mov    esi,eax\n   0x613c3a \u0026lt;exif_process_IFD_in_MAKERNOTE+486\u0026gt;:    mov    rdi,rdx\n=\u0026gt; 0x613c3d \u0026lt;exif_process_IFD_in_MAKERNOTE+489\u0026gt;:    call   0x610603 \u0026lt;php_ifd_get32u\u0026gt;\n   0x613c42 \u0026lt;exif_process_IFD_in_MAKERNOTE+494\u0026gt;:    sub    ebx,eax\n   0x613c44 \u0026lt;exif_process_IFD_in_MAKERNOTE+496\u0026gt;:    mov    eax,ebx\n   0x613c46 \u0026lt;exif_process_IFD_in_MAKERNOTE+498\u0026gt;:    add    eax,0x6\n   0x613c49 \u0026lt;exif_process_IFD_in_MAKERNOTE+501\u0026gt;:    mov    DWORD PTR [rbp-0x24],eax\nGuessed arguments:\narg[0]: 0x7ffff3e7607e --\u0026gt; 0x29286fffffa92\narg[1]: 0x0\narg[2]: 0x7ffff3e7607e --\u0026gt; 0x29286fffffa92\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --\u0026gt; 0xc (\u0026#39;\\x0c\u0026#39;)\n0008| 0x7fffffffa838 --\u0026gt; 0x594\n0016| 0x7fffffffa840 --\u0026gt; 0x7ffff3e76008 --\u0026gt; 0x8002a4949\n0024| 0x7fffffffa848 --\u0026gt; 0x1c006117bc\n0032| 0x7fffffffa850 --\u0026gt; 0x7ffff3e76074 --\u0026gt; 0x1000202080002\n0040| 0x7fffffffa858 --\u0026gt; 0x7fffffffae50 --\u0026gt; 0x7ffff3e5fa00 --\u0026gt; 0x12b9700 --\u0026gt; 0x8d43d1 (\u0026lt;php_stdiop_write\u0026gt;:  push   rbp)\n0048| 0x7fffffffa860 --\u0026gt; 0x7fffffffa8a0 --\u0026gt; 0x7fffffffa9d0 --\u0026gt; 0x7fffffffaa30 --\u0026gt; 0x7fffffffab60 --\u0026gt; 0x7fffffffabc0 --\u0026gt; 0x7fffffffac00 --\u0026gt; 0x7fffffffac30 --\u0026gt; 0x7fffffffacd0 --\u0026gt; 0x7fffffffad10 --\u0026gt; 0x7fffffffadf0 --\u0026gt; 0x7fffffffb0d0 --\u0026gt; 0x7fffffffb100 --\u0026gt; 0x7fffffffb130 --\u0026gt; 0x7fffffffb170 --\u0026gt; 0x7fffffffb280 --\u0026gt; 0x7fffffffd580 --\u0026gt; 0x7fffffffe900 --\u0026gt; 0x7fffffffea50 --\u0026gt; 0xa15f90 (\u0026lt;__libc_csu_init\u0026gt;: push   r15)\n0056| 0x7fffffffa868 --\u0026gt; 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 5, 0x0000000000613c3d in exif_process_IFD_in_MAKERNOTE (\n    ImageInfo=0x7fffffffae50, value_ptr=0x7ffff3e76074 \u0026quot;\\002\u0026quot;, value_len=0x1c,\n    offset_base=0x7ffff3e76008 \u0026quot;II*\u0026quot;, IFDlength=0x594, displacement=0xc)\n    at /home/vagrant/Sources_Ext/audit/src/php7.0-7.0.4/ext/exif/exif.c:2754\n2754                offset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-\u0026gt;motorola_intel);\ngdb-peda$ x/80gx offset_base\n0x7ffff3e76008: 0x00000008002a4949  0x00010005011a0002\n0x7ffff3e76018: 0x8769000004000000  0x0022000000010004\n0x7ffff3e76028: 0x0005829a00060000  0x0000041200000001\n0x7ffff3e76038: 0x000000010005829d  0x0002928600000444\n0x7ffff3e76048: 0x00000da6000000a8  0x0000002c00028298\n0x7ffff3e76058: 0x0002010f00000e4e  0x00000e7a00000005\n0x7ffff3e76068: 0x000000070004927c  0x020800020000006c\n0x7ffff3e76078: 0xfa92000000010002  0x00ff00029286ffff\n0x7ffff3e76088: 0x5252000000000000  0x5252525252525252\n0x7ffff3e76098: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760a8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760b8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760c8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760d8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760e8: 0x5252525252525252  0x00f2525252525252\n.....\n0x7ffff3e76568: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76578: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76588: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76598: 0x00000000d9ff5454  0x0000000000000000\n0x7ffff3e765a8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765b8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765c8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765d8: 0x0000000000000000  0x000000000000059d\n0x7ffff3e765e8: 0x0000000000b12b88  0x0000000000f774a0\n0x7ffff3e765f8: 0x000009ce00000646  0x00007ffff3e76c00\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you see above at address \u003cem\u003e0x7ffff3e76598\u003c/em\u003e is the end of offset_base.\u003cbr\u003e\nNext i hit next to execute \u003cem\u003eoffset_base = value_ptr + offset_diff;\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff3e76600 --\u0026gt; 0x7ffff3e76c00 --\u0026gt; 0x7ffff3e77200 --\u0026gt; 0x7ffff3e77800 --\u0026gt; 0x7ffff3e77e00 --\u0026gt; 0x7ffff3e78400 --\u0026gt; 0x7ffff3e78a00 --\u0026gt; 0x0\nRBX: 0x586\nRCX: 0x0\nRDX: 0x58c\nRSI: 0x0\nRDI: 0x7ffff3e7607e --\u0026gt; 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --\u0026gt; 0x7fffffffa9d0 --\u0026gt; 0x7fffffffaa30 --\u0026gt; 0x7fffffffab60 --\u0026gt; 0x7fffffffabc0 --\u0026gt; 0x7fffffffac00 --\u0026gt; 0x7fffffffac30 --\u0026gt; 0x7fffffffacd0 --\u0026gt; 0x7fffffffad10 --\u0026gt; 0x7fffffffadf0 --\u0026gt; 0x7fffffffb0d0 --\u0026gt; 0x7fffffffb100 --\u0026gt; 0x7fffffffb130 --\u0026gt; 0x7fffffffb170 --\u0026gt; 0x7fffffffb280 --\u0026gt; 0x7fffffffd580 --\u0026gt; 0x7fffffffe900 --\u0026gt; 0x7fffffffea50 --\u0026gt; 0xa15f90 (\u0026lt;__libc_csu_init\u0026gt;: push   r15)\nRSP: 0x7fffffffa830 --\u0026gt; 0xc (\u0026#39;\\x0c\u0026#39;)\nRIP: 0x613c5d (\u0026lt;exif_process_IFD_in_MAKERNOTE+521\u0026gt;: nop)\nR8 : 0x594\nR9 : 0xc (\u0026#39;\\x0c\u0026#39;)\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (\u0026lt;_start\u0026gt;:    xor    ebp,ebp)\nR13: 0x7fffffffeb30 --\u0026gt; 0x2\nR14: 0x7ffff3e14030 --\u0026gt; 0x7ffff3e5fb80 --\u0026gt; 0x9a28f2 (\u0026lt;ZEND_DO_ICALL_SPEC_HANDLER\u0026gt;:  push   rbp)\nR15: 0x7ffff3e5fb80 --\u0026gt; 0x9a28f2 (\u0026lt;ZEND_DO_ICALL_SPEC_HANDLER\u0026gt;: push   rbp)\nEFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c52 \u0026lt;exif_process_IFD_in_MAKERNOTE+510\u0026gt;:    mov    rax,QWORD PTR [rbp-0x50]\n   0x613c56 \u0026lt;exif_process_IFD_in_MAKERNOTE+514\u0026gt;:    add    rax,rdx\n   0x613c59 \u0026lt;exif_process_IFD_in_MAKERNOTE+517\u0026gt;:    mov    QWORD PTR [rbp-0x60],rax\n=\u0026gt; 0x613c5d \u0026lt;exif_process_IFD_in_MAKERNOTE+521\u0026gt;:    nop\n   0x613c5e \u0026lt;exif_process_IFD_in_MAKERNOTE+522\u0026gt;:    mov    edx,DWORD PTR [rbp-0x28]\n   0x613c61 \u0026lt;exif_process_IFD_in_MAKERNOTE+525\u0026gt;:    mov    eax,edx\n   0x613c63 \u0026lt;exif_process_IFD_in_MAKERNOTE+527\u0026gt;:    add    eax,eax\n   0x613c65 \u0026lt;exif_process_IFD_in_MAKERNOTE+529\u0026gt;:    add    eax,edx\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --\u0026gt; 0xc (\u0026#39;\\x0c\u0026#39;)\n0008| 0x7fffffffa838 --\u0026gt; 0x594\n0016| 0x7fffffffa840 --\u0026gt; 0x7ffff3e76600 --\u0026gt; 0x7ffff3e76c00 --\u0026gt; 0x7ffff3e77200 --\u0026gt; 0x7ffff3e77800 --\u0026gt; 0x7ffff3e77e00 --\u0026gt; 0x7ffff3e78400 --\u0026gt; 0x7ffff3e78a00 --\u0026gt; 0x0\n0024| 0x7fffffffa848 --\u0026gt; 0x1c006117bc\n0032| 0x7fffffffa850 --\u0026gt; 0x7ffff3e76074 --\u0026gt; 0x1000202080002\n0040| 0x7fffffffa858 --\u0026gt; 0x7fffffffae50 --\u0026gt; 0x7ffff3e5fa00 --\u0026gt; 0x12b9700 --\u0026gt; 0x8d43d1 (\u0026lt;php_stdiop_write\u0026gt;:  push   rbp)\n0048| 0x7fffffffa860 --\u0026gt; 0x7fffffffa8a0 --\u0026gt; 0x7fffffffa9d0 --\u0026gt; 0x7fffffffaa30 --\u0026gt; 0x7fffffffab60 --\u0026gt; 0x7fffffffabc0 --\u0026gt; 0x7fffffffac00 --\u0026gt; 0x7fffffffac30 --\u0026gt; 0x7fffffffacd0 --\u0026gt; 0x7fffffffad10 --\u0026gt; 0x7fffffffadf0 --\u0026gt; 0x7fffffffb0d0 --\u0026gt; 0x7fffffffb100 --\u0026gt; 0x7fffffffb130 --\u0026gt; 0x7fffffffb170 --\u0026gt; 0x7fffffffb280 --\u0026gt; 0x7fffffffd580 --\u0026gt; 0x7fffffffe900 --\u0026gt; 0x7fffffffea50 --\u0026gt; 0xa15f90 (\u0026lt;__libc_csu_init\u0026gt;: push   r15)\n0056| 0x7fffffffa868 --\u0026gt; 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n2759                break;\ngdb-peda$ p offset_base\n$86 = 0x7ffff3e76600 \u0026quot;\u0026quot;\ngdb-peda$ x/40gx offset_base\n0x7ffff3e76600: 0x00007ffff3e76c00  0x0000000000000000\n0x7ffff3e76610: 0x0000000000000000  0x0000000000000000\n0x7ffff3e76620: 0x0000000000000000  0x0000000000000000\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter calculate offset_base, you can see that address is out of own buffer\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-08-30T18:48:43.913Z","allow_singular_disclosure_after":-136633497.17866573,"singular_disclosure_allowed":true,"vote_count":6,"voters":["rc0r","yaworsk","ymy","gopi","nginx_bug","dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1075420,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I missed when posting this report. Here my bug was verified by php security bug : https://bugs.php.net/bug.php?id=72603","markdown_message":"\u003cp\u003eI missed when posting this report. Here my bug was verified by php security bug : \u003ca title=\"https://bugs.php.net/bug.php?id=72603\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D72603\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=72603\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-19T07:56:53.941Z","updated_at":"2016-07-19T07:56:53.941Z","actor":{"username":"hoangnguyen","cleared":false,"url":"/hoangnguyen","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/074/688/42c5ca5265ff965283d70fc52df2681dfd648d44_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1098498,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-31T18:48:29.825Z","updated_at":"2016-07-31T18:48:29.825Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"hoangnguyen","url":"/hoangnguyen"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1098499,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-31T18:48:38.302Z","updated_at":"2016-07-31T18:48:38.302Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"1000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"hoangnguyen","url":"/hoangnguyen"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1098500,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-31T18:48:43.889Z","updated_at":"2016-07-31T18:48:43.889Z","first_to_agree":true,"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1163041,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-08-30T18:48:55.777Z","updated_at":"2016-08-30T18:48:55.777Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}