{"id":73491,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MzQ5MQ==","url":"https://hackerone.com/reports/73491","title":"Buffer Overflow in PHP of the AirMax Products","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-07-01T15:31:40.696Z","submitted_at":"2015-07-01T15:31:40.696Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"93c08539","url":"/93c08539","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":800,"url":"https://hackerone.com/ui","handle":"ui","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ubiquiti Inc.","twitter_handle":"ubnt","website":"https://ui.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-04-01T11:11:16.597Z","bug_reporter_agreed_on_going_public_at":"2016-03-02T11:10:57.464Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"#Vulnerability\r\nThe function `static int ub_normalize_filename(char* filename)` (implemented by the patch `430-smart-post-upload.patch` in the file `uploadbuffer.c` on the `SDK.UBNT.v5.5`) have the following code:\r\n```\r\nstatic int ub_normalize_filename(char* filename)\r\n{\r\n\r\n    char *fwd_slash;\r\n    char *back_slash;\r\n    size_t size;\r\n    /**\r\n     *  Some comments removed\r\n     */\r\n    if (filename == 0)\r\n    {\r\n        return -1;\r\n    }\r\n    size = strlen(filename);\r\n    fwd_slash = strrchr(filename, '/');\r\n    back_slash = strrchr(filename, '\\\\');\r\n    if ((fwd_slash == 0) ||\r\n\t(back_slash == 0))\r\n    {\r\n\t    /* No slashes or backslashes */\r\n        return 0;\r\n    }\r\n    if ((back_slash - filename == size - 1) ||\r\n\t(fwd_slash - filename == size - 1))\r\n    {\r\n        return -1; /* 'Empty filename ???' */\r\n    }\r\n    /* Move file part from last backslash to last forwardslash,\r\n       Copy including ending string \\0 */\r\n    memmove(fwd_slash + 1, back_slash + 1, size - (back_slash - filename));\r\n    return 0;\r\n}\r\n```\r\nManipulating the `filename` value of a HTTP POST (like in the report [73480](https://hackerone.com/reports/73480)), it's possible to cause a buffer overflow with the following value `filename=\"\\asdfasdfasdfasdfsdfgdsfg/a\"`. The Pointers will point to the following locations:\r\n```\r\n\\asdfasdfasdfasdfsdfgdsfg/a\\0\r\n^                        ^  ^\r\n-back_slash              |  |\r\n                         |  -End of String\r\n                         |\r\n                         -fwd_slash\r\n```\r\n\t\r\nThe `memmove` will write to `fwd_slash + 1` the content of `back_slash + 1` (until the end of the String), what will copy string off the bounds. \r\n\r\n```\r\n\\asdfasdfasdfasdfsdfgdsfg/aasdfasdfasdfasdfsdfgdsfg/a\r\n^                          ^\r\n-Init                      |\r\n                           -End of String\r\n```\r\n\r\n#Consequences\r\nIt's possible to cause a buffer overflow, but it's unlikely the vulnerability to result in a arbitrary code execution (but possible), once it's allocated in a the heap memory (function `ub_parse_disposition`, file `uploadbuffer.c`, I think).","vulnerability_information_html":"\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003cp\u003eThe function \u003ccode\u003estatic int ub_normalize_filename(char* filename)\u003c/code\u003e (implemented by the patch \u003ccode\u003e430-smart-post-upload.patch\u003c/code\u003e in the file \u003ccode\u003euploadbuffer.c\u003c/code\u003e on the \u003ccode\u003eSDK.UBNT.v5.5\u003c/code\u003e) have the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estatic int ub_normalize_filename(char* filename)\n{\n\n    char *fwd_slash;\n    char *back_slash;\n    size_t size;\n    /**\n     *  Some comments removed\n     */\n    if (filename == 0)\n    {\n        return -1;\n    }\n    size = strlen(filename);\n    fwd_slash = strrchr(filename, \u0026#39;/\u0026#39;);\n    back_slash = strrchr(filename, \u0026#39;\\\\\u0026#39;);\n    if ((fwd_slash == 0) ||\n    (back_slash == 0))\n    {\n        /* No slashes or backslashes */\n        return 0;\n    }\n    if ((back_slash - filename == size - 1) ||\n    (fwd_slash - filename == size - 1))\n    {\n        return -1; /* \u0026#39;Empty filename ???\u0026#39; */\n    }\n    /* Move file part from last backslash to last forwardslash,\n       Copy including ending string \\0 */\n    memmove(fwd_slash + 1, back_slash + 1, size - (back_slash - filename));\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eManipulating the \u003ccode\u003efilename\u003c/code\u003e value of a HTTP POST (like in the report \u003ca href=\"https://hackerone.com/reports/73480\"\u003e73480\u003c/a\u003e), it\u0026#39;s possible to cause a buffer overflow with the following value \u003ccode\u003efilename=\u0026quot;\\asdfasdfasdfasdfsdfgdsfg/a\u0026quot;\u003c/code\u003e. The Pointers will point to the following locations:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\\asdfasdfasdfasdfsdfgdsfg/a\\0\n^                        ^  ^\n-back_slash              |  |\n                         |  -End of String\n                         |\n                         -fwd_slash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ememmove\u003c/code\u003e will write to \u003ccode\u003efwd_slash + 1\u003c/code\u003e the content of \u003ccode\u003eback_slash + 1\u003c/code\u003e (until the end of the String), what will copy string off the bounds. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\\asdfasdfasdfasdfsdfgdsfg/aasdfasdfasdfasdfsdfgdsfg/a\n^                          ^\n-Init                      |\n                           -End of String\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"consequences\"\u003eConsequences\u003c/h1\u003e\n\n\u003cp\u003eIt\u0026#39;s possible to cause a buffer overflow, but it\u0026#39;s unlikely the vulnerability to result in a arbitrary code execution (but possible), once it\u0026#39;s allocated in a the heap memory (function \u003ccode\u003eub_parse_disposition\u003c/code\u003e, file \u003ccode\u003euploadbuffer.c\u003c/code\u003e, I think).\u003c/p\u003e\n","bounty_amount":"250.0","formatted_bounty":"$250","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-01T11:10:57.644Z","allow_singular_disclosure_after":-149715180.485388,"singular_disclosure_allowed":true,"vote_count":2,"voters":["dyabla","prowser"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":498296,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"#Reproducing\nWith this command you will cause a segmentation fault in the cgi (PHP) and the webserver (lighttpd) will not return a empty body.\n`curl -F \"file=@anyfile;filename=\\12345678901234567890/12\" 'https://192.168.1.20/login.cgi' -H \"Expect:\" -k`\n\nSome times you need a bigger filename to trigger the buffer overflow. In My tests (NanoStation Loco M5, XM.v5.5.10)`filename=\\123456789012/12` don't works, but `filename=\\1234567890123/12` do, I think what happens in the first case is a \"variable overwrite\", some memory owned by the system is overwritten, and when added `3` he write out of that area. I will not create a way to exploit that, because I don't have the time to compile a GDB (or money to buy a IDA) and study the MIPS architecture.","markdown_message":"\u003ch1 id=\"reproducing\"\u003eReproducing\u003c/h1\u003e\n\n\u003cp\u003eWith this command you will cause a segmentation fault in the cgi (PHP) and the webserver (lighttpd) will not return a empty body.\u003cbr\u003e\n\u003ccode\u003ecurl -F \u0026quot;file=@anyfile;filename=\\12345678901234567890/12\u0026quot; \u0026#39;https://192.168.1.20/login.cgi\u0026#39; -H \u0026quot;Expect:\u0026quot; -k\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSome times you need a bigger filename to trigger the buffer overflow. In My tests (NanoStation Loco M5, XM.v5.5.10)\u003ccode\u003efilename=\\123456789012/12\u003c/code\u003e don\u0026#39;t works, but \u003ccode\u003efilename=\\1234567890123/12\u003c/code\u003e do, I think what happens in the first case is a \u0026quot;variable overwrite\u0026quot;, some memory owned by the system is overwritten, and when added \u003ccode\u003e3\u003c/code\u003e he write out of that area. I will not create a way to exploit that, because I don\u0026#39;t have the time to compile a GDB (or money to buy a IDA) and study the MIPS architecture.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-02T11:10:28.947Z","updated_at":"2015-07-02T11:10:28.947Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":499002,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Lighttpd will return `(mod_cgi.c.1319) cleaning up CGI: process died with signal 11`, what means segmentation fault.","markdown_message":"\u003cp\u003eLighttpd will return \u003ccode\u003e(mod_cgi.c.1319) cleaning up CGI: process died with signal 11\u003c/code\u003e, what means segmentation fault.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-03T11:34:25.404Z","updated_at":"2015-07-03T11:34:25.404Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":502205,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It remains vulnerable on v5.6.1.","markdown_message":"\u003cp\u003eIt remains vulnerable on v5.6.1.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-07T17:56:13.488Z","updated_at":"2015-07-07T17:56:13.488Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":562940,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi there,\n\nThis should have been resolved with our fix for (https://hackerone.com/reports/73480 ).\n\nIf you find that 5.6.2 is still seeing this, please let us know.\n\nThanks for testing.\n\n","markdown_message":"\u003cp\u003eHi there,\u003c/p\u003e\n\n\u003cp\u003eThis should have been resolved with our fix for (\u003ca title=\"https://hackerone.com/reports/73480\" href=\"https://hackerone.com/reports/73480\"\u003ehttps://hackerone.com/reports/73480\u003c/a\u003e ).\u003c/p\u003e\n\n\u003cp\u003eIf you find that 5.6.2 is still seeing this, please let us know.\u003c/p\u003e\n\n\u003cp\u003eThanks for testing.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-25T20:22:15.156Z","updated_at":"2015-08-25T20:22:15.156Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":562969,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It has been solved in the 5.6.2. You can close this report.","markdown_message":"\u003cp\u003eIt has been solved in the 5.6.2. You can close this report.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-25T20:39:19.545Z","updated_at":"2015-08-25T20:39:19.545Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":562973,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2015-08-25T20:40:14.712Z","updated_at":"2015-08-25T20:40:14.712Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"93c08539","url":"/93c08539"},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":564003,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is not qualified to receive bounty? :(\nBecause this vulnerability is not equal to #73840.","markdown_message":"\u003cp\u003eThis is not qualified to receive bounty? :(\u003cbr\u003e\nBecause this vulnerability is not equal to \u003ca href=\"/reports/73840\"\u003e#73840\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-26T11:35:56.094Z","updated_at":"2015-08-26T11:35:56.094Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":564230,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nLet me check on this, and I'll let you know.\n\nRegards,\nJames","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eLet me check on this, and I\u0026#39;ll let you know.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\nJames\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-26T15:55:58.786Z","updated_at":"2015-08-26T15:55:58.786Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":564232,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"Hi there,\n\nI can't seem to access 73840.  Is that the correct report?\n\nThanks,\nJames","markdown_message":"\u003cp\u003eHi there,\u003c/p\u003e\n\n\u003cp\u003eI can\u0026#39;t seem to access 73840.  Is that the correct report?\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nJames\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-26T15:57:34.836Z","updated_at":"2015-08-26T15:57:34.836Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":564235,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, is #73480","markdown_message":"\u003cp\u003eSorry, is \u003ca href=\"/reports/73480\"\u003e#73480\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-26T16:00:22.104Z","updated_at":"2015-08-26T16:00:35.324Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":629646,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-23T15:39:38.935Z","updated_at":"2015-10-23T15:39:38.935Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"bounty_amount":"250.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ui","collaborator":{"username":"93c08539","url":"/93c08539"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":629647,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-23T15:39:45.786Z","updated_at":"2015-10-23T15:39:45.786Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"93c08539","url":"/93c08539"},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":820532,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-02T11:10:57.511Z","updated_at":"2016-03-02T11:10:57.511Z","first_to_agree":true,"actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":882337,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-01T11:11:16.628Z","updated_at":"2016-04-01T11:11:16.628Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}