{"id":119873,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTk4NzM=","url":"https://hackerone.com/reports/119873","title":"BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption (CVE-2016-0797)","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-03-01T19:08:11.018Z","submitted_at":"2016-03-01T19:08:11.018Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"guido","url":"/guido","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":24,"url":"https://hackerone.com/ibb-openssl","handle":"ibb-openssl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"OpenSSL (IBB)","twitter_handle":"","website":"https://www.openssl.org","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-03-27T23:33:43.907Z","bug_reporter_agreed_on_going_public_at":"2016-03-27T23:33:43.718Z","team_member_agreed_on_going_public_at":"2016-03-27T23:31:44.882Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"https://openssl.org/news/secadv/20160301.txt","vulnerability_information_html":"\u003cp\u003e\u003ca title=\"https://openssl.org/news/secadv/20160301.txt\" href=\"/redirect?url=https%3A%2F%2Fopenssl.org%2Fnews%2Fsecadv%2F20160301.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://openssl.org/news/secadv/20160301.txt\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-26T23:31:45.038Z","allow_singular_disclosure_after":-147502108.08631054,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":873608,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:31:30.276Z","updated_at":"2016-03-27T23:31:30.276Z","actor":{"url":"/ibb-openssl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"OpenSSL (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-openssl","collaborator":{"username":"guido","url":"/guido"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873609,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:31:38.046Z","updated_at":"2016-03-27T23:31:38.046Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"guido","url":"/guido"},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873610,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:31:44.910Z","updated_at":"2016-03-27T23:31:44.910Z","first_to_agree":true,"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873620,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:33:43.742Z","updated_at":"2016-03-27T23:33:43.742Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873621,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:33:43.924Z","updated_at":"2016-03-27T23:33:43.924Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":1565,"category":"team","content":"Severity: Low\n\nIn the BN_hex2bn function the number of hex digits is calculated using an int\nvalue |i|. Later |bn_expand| is called with a value of |i * 4|. For large values\nof |i| this can result in |bn_expand| not allocating any memory because |i * 4|\nis negative. This can leave the internal BIGNUM data field as NULL leading to a\nsubsequent NULL ptr deref. For very large values of |i|, the calculation |i * 4|\ncould be a positive value smaller than |i|. In this case memory is allocated to\nthe internal BIGNUM data field, but it is insufficiently sized leading to heap\ncorruption. A similar issue exists in BN_dec2bn. This could have security\nconsequences if BN_hex2bn/BN_dec2bn is ever called by user applications with\nvery large untrusted hex/dec data. This is anticipated to be a rare occurrence.\n\nAll OpenSSL internal usage of these functions use data that is not expected to\nbe untrusted, e.g. config file data or application command line arguments. If\nuser developed applications generate config file data based on untrusted data\nthen it is possible that this could also lead to security consequences. This is\nalso anticipated to be rare.\n\nThis issue affects OpenSSL versions 1.0.2 and 1.0.1.\n\nOpenSSL 1.0.2 users should upgrade to 1.0.2g\nOpenSSL 1.0.1 users should upgrade to 1.0.1s\n\nThis issue was reported to OpenSSL on February 19th 2016 by Guido Vranken.  The\nfix was developed by Matt Caswell of the OpenSSL development team.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eSeverity: Low\u003c/p\u003e\n\n\u003cp\u003eIn the BN_hex2bn function the number of hex digits is calculated using an int\u003cbr\u003e\nvalue |i|. Later |bn_expand| is called with a value of |i * 4|. For large values\u003cbr\u003e\nof |i| this can result in |bn_expand| not allocating any memory because |i * 4|\u003cbr\u003e\nis negative. This can leave the internal BIGNUM data field as NULL leading to a\u003cbr\u003e\nsubsequent NULL ptr deref. For very large values of |i|, the calculation |i * 4|\u003cbr\u003e\ncould be a positive value smaller than |i|. In this case memory is allocated to\u003cbr\u003e\nthe internal BIGNUM data field, but it is insufficiently sized leading to heap\u003cbr\u003e\ncorruption. A similar issue exists in BN_dec2bn. This could have security\u003cbr\u003e\nconsequences if BN_hex2bn/BN_dec2bn is ever called by user applications with\u003cbr\u003e\nvery large untrusted hex/dec data. This is anticipated to be a rare occurrence.\u003c/p\u003e\n\n\u003cp\u003eAll OpenSSL internal usage of these functions use data that is not expected to\u003cbr\u003e\nbe untrusted, e.g. config file data or application command line arguments. If\u003cbr\u003e\nuser developed applications generate config file data based on untrusted data\u003cbr\u003e\nthen it is possible that this could also lead to security consequences. This is\u003cbr\u003e\nalso anticipated to be rare.\u003c/p\u003e\n\n\u003cp\u003eThis issue affects OpenSSL versions 1.0.2 and 1.0.1.\u003c/p\u003e\n\n\u003cp\u003eOpenSSL 1.0.2 users should upgrade to 1.0.2g\u003cbr\u003e\nOpenSSL 1.0.1 users should upgrade to 1.0.1s\u003c/p\u003e\n\n\u003cp\u003eThis issue was reported to OpenSSL on February 19th 2016 by Guido Vranken.  The\u003cbr\u003e\nfix was developed by Matt Caswell of the OpenSSL development team.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}