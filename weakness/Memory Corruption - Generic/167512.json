{"id":167512,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc1MTI=","url":"https://hackerone.com/reports/167512","title":"CVE-2016-7163 OpenJPEG opj_pi_create_decode Integer Overflow Vulnerability","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-09-11T06:18:49.906Z","submitted_at":"2016-09-11T06:18:49.906Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"hacker2nd","url":"/hacker2nd","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":20,"url":"https://hackerone.com/internet","handle":"internet","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"The Internet","twitter_handle":null,"website":"","about":"Hack all the things."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T23:54:28.604Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T23:54:25.517Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# OpenJPEG opj_pi_create_decode Integer Overflow Vulnerability\n\n## 1. About OpenJPEG\nOpenJPEG is an open-source JPEG 2000 codec written in C language. It's widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at [GitHub](https://github.com/uclouvain/openjpeg).\n\n## 2. Credit\nThis vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.\n\n## 3. Testing Environments\n+ **OS**: Ubuntu\n+ **OpenJPEG**: [4a2a869](https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip) (Master version before Aug/6/2016)\n+ **Compiler**: Clang\n+ **CFLAGS**: ``-g -O0 -fsanitize=address``\n\n## 4. Reproduce Steps\nPlease copy file ``poc.jp2`` to directory ``openjpeg/bin`` before executing ``opj_decompress``.\n```\nwget https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nunzip -q 4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nmv openjpeg-4a2a8693e5a02207a8813b02a375abdc4e43c49b openjpeg\ncd openjpeg\nexport CC='/usr/bin/clang -g -O0 -fsanitize=address'\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n```\n\n## 5. Vulnerability Details\nAn integer overflow issue exists in function opj_pi_create_decode of pi.c. It can lead to Out-Of-Bounds Read and Out-Of-Bounds Write in function opj_pi_next_cprl of pi.c (function opj_pi_next_lrcp, opj_pi_next_rlcp, opj_pi_next_rpcl, opj_pi_next_pcrl may also be vulnerable). \n\n+ OOB read and OOB write exist in function opj_pi_next_cprl, function opj_pi_next_lrcp, opj_pi_next_rlcp, \nopj_pi_next_rpcl, opj_pi_next_pcrl may also be vulnerable.\n\n```\nstatic OPJ_BOOL opj_pi_next_cprl(opj_pi_iterator_t * pi) {\n    // ...\n    for (pi-\u003elayno = pi-\u003epoc.layno0; pi-\u003elayno \u003c pi-\u003epoc.layno1; pi-\u003elayno++) {\n        index = pi-\u003elayno * pi-\u003estep_l + pi-\u003eresno * pi-\u003estep_r + pi-\u003ecompno * pi-\u003estep_c + pi-\u003eprecno * pi-\u003estep_p;\n        if (!pi-\u003einclude[index]) {      // ----\u003e Out-Of-Bounds Read!!!\n            pi-\u003einclude[index] = 1;     // ----\u003e Out-Of-Bounds Write!!!\n            return OPJ_TRUE;\n        }\n    // ...\n    return OPJ_FALSE;\n}\n```\n\n+ Integer overflow exists in function opj_pi_create_decode.\n\n```\nopj_pi_iterator_t *opj_pi_create_decode(opj_image_t *p_image,\n                                        opj_cp_t *p_cp,\n                                        OPJ_UINT32 p_tile_no)\n{\n    // ...\n    l_step_p = 1;\n    l_step_c = l_max_prec * l_step_p;\n    l_step_r = p_image-\u003enumcomps * l_step_c;\n    l_step_l = l_max_res * l_step_r;\n\n    /* set values for first packet iterator */\n    l_current_pi = l_pi;\n\n    /* memory allocation for include */\n    l_current_pi-\u003einclude = (OPJ_INT16*) opj_calloc(\n        (l_tcp-\u003enumlayers +1) * l_step_l, sizeof(OPJ_INT16));   // ----\u003e Integer Overflow!!!\n    // ...\n}\n```\n\n+ AddressSanitizer output the following exception information.\n\n```\n==10074==ERROR: AddressSanitizer: heap-buffer-overflow on address \n    0xad9370a0 at pc 0xb767ba50 bp 0xbff1ad78 sp 0xbff1ad70\nREAD of size 2 at 0xad9370a0 thread T0\n    #0 0xb767ba4f in opj_pi_next_cprl src/lib/openjp2/pi.c:541:12\n    #1 0xb76644e7 in opj_pi_next src/lib/openjp2/pi.c:1872:11\n    #2 0xb76cd0af in opj_t2_decode_packets src/lib/openjp2/t2.c:412:24\n    #3 0xb771ee6e in opj_tcd_t2_decode src/lib/openjp2/tcd.c:1547:15\n    #4 0xb771de16 in opj_tcd_decode_tile src/lib/openjp2/tcd.c:1286:15\n    #5 0xb74d7a0e in opj_j2k_decode_tile src/lib/openjp2/j2k.c:8134:15\n    #6 0xb7563354 in opj_j2k_decode_tiles src/lib/openjp2/j2k.c:9761:23\n    #7 0xb74bce4c in opj_j2k_exec src/lib/openjp2/j2k.c:7350:43\n    #8 0xb74f378b in opj_j2k_decode src/lib/openjp2/j2k.c:9959:15\n    #9 0xb75b80de in opj_jp2_decode src/lib/openjp2/jp2.c:1492:8\n    #10 0xb7622eb8 in opj_decode src/lib/openjp2/openjpeg.c:412:10\n    #11 0x8140304 in main src/bin/jp2/opj_decompress.c:1332:10\n    #12 0xb71b9af2 in __libc_start_main /build/eglibc-X4bnBz/eglibc-2.19/csu/libc-start.c:287\n    #13 0x80781eb in _start (bin/opj_decompress+0x80781eb)\n\nAddressSanitizer can not describe address in more detail (wild memory access suspected).\nSUMMARY: AddressSanitizer: heap-buffer-overflow src/lib/openjp2/pi.c:541 opj_pi_next_cprl\nShadow bytes around the buggy address:\n  0x35b26dc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26dd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26de0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26df0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=\u003e0x35b26e10: fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==10074==ABORTING\n```\n\n## 6. Timeline\n+ 2016.08.20 - Found\n+ 2016.08.22 - Reported to OpenJPEG via info@openjpeg.org\n+ 2016.09.08 - Fixed\n+ 2016.09.08 - Publicly disclosed\n\n## 7. References\n+ [OpenJPEG Patch 1](https://github.com/uclouvain/openjpeg/commit/c16bc057ba3f125051c9966cf1f5b68a05681de4)\n+ [OpenJPEG Patch 2](https://github.com/uclouvain/openjpeg/commit/ef01f18dfc6780b776d0674ed3e7415c6ef54d24)\n+ [oss-sec CVE Request](http://seclists.org/oss-sec/2016/q3/439)\n","vulnerability_information_html":"\u003ch1 id=\"openjpeg-opj_pi_create_decode-integer-overflow-vulnerability\"\u003eOpenJPEG opj_pi_create_decode Integer Overflow Vulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"1-about-openjpeg\"\u003e1. About OpenJPEG\u003c/h2\u003e\n\n\u003cp\u003eOpenJPEG is an open-source JPEG 2000 codec written in C language. It\u0026#39;s widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eGitHub\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"2-credit\"\u003e2. Credit\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability was discovered by Ke Liu of Tencent\u0026#39;s Xuanwu LAB.\u003c/p\u003e\n\n\u003ch2 id=\"3-testing-environments\"\u003e3. Testing Environments\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOS\u003c/strong\u003e: Ubuntu\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eOpenJPEG\u003c/strong\u003e: \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Farchive%2F4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e4a2a869\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (Master version before Aug/6/2016)\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCompiler\u003c/strong\u003e: Clang\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCFLAGS\u003c/strong\u003e: \u003ccode\u003e-g -O0 -fsanitize=address\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"4-reproduce-steps\"\u003e4. Reproduce Steps\u003c/h2\u003e\n\n\u003cp\u003ePlease copy file \u003ccode\u003epoc.jp2\u003c/code\u003e to directory \u003ccode\u003eopenjpeg/bin\u003c/code\u003e before executing \u003ccode\u003eopj_decompress\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewget https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nunzip -q 4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nmv openjpeg-4a2a8693e5a02207a8813b02a375abdc4e43c49b openjpeg\ncd openjpeg\nexport CC=\u0026#39;/usr/bin/clang -g -O0 -fsanitize=address\u0026#39;\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"5-vulnerability-details\"\u003e5. Vulnerability Details\u003c/h2\u003e\n\n\u003cp\u003eAn integer overflow issue exists in function opj_pi_create_decode of pi.c. It can lead to Out-Of-Bounds Read and Out-Of-Bounds Write in function opj_pi_next_cprl of pi.c (function opj_pi_next_lrcp, opj_pi_next_rlcp, opj_pi_next_rpcl, opj_pi_next_pcrl may also be vulnerable). \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOOB read and OOB write exist in function opj_pi_next_cprl, function opj_pi_next_lrcp, opj_pi_next_rlcp, \nopj_pi_next_rpcl, opj_pi_next_pcrl may also be vulnerable.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estatic OPJ_BOOL opj_pi_next_cprl(opj_pi_iterator_t * pi) {\n    // ...\n    for (pi-\u0026gt;layno = pi-\u0026gt;poc.layno0; pi-\u0026gt;layno \u0026lt; pi-\u0026gt;poc.layno1; pi-\u0026gt;layno++) {\n        index = pi-\u0026gt;layno * pi-\u0026gt;step_l + pi-\u0026gt;resno * pi-\u0026gt;step_r + pi-\u0026gt;compno * pi-\u0026gt;step_c + pi-\u0026gt;precno * pi-\u0026gt;step_p;\n        if (!pi-\u0026gt;include[index]) {      // ----\u0026gt; Out-Of-Bounds Read!!!\n            pi-\u0026gt;include[index] = 1;     // ----\u0026gt; Out-Of-Bounds Write!!!\n            return OPJ_TRUE;\n        }\n    // ...\n    return OPJ_FALSE;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eInteger overflow exists in function opj_pi_create_decode.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eopj_pi_iterator_t *opj_pi_create_decode(opj_image_t *p_image,\n                                        opj_cp_t *p_cp,\n                                        OPJ_UINT32 p_tile_no)\n{\n    // ...\n    l_step_p = 1;\n    l_step_c = l_max_prec * l_step_p;\n    l_step_r = p_image-\u0026gt;numcomps * l_step_c;\n    l_step_l = l_max_res * l_step_r;\n\n    /* set values for first packet iterator */\n    l_current_pi = l_pi;\n\n    /* memory allocation for include */\n    l_current_pi-\u0026gt;include = (OPJ_INT16*) opj_calloc(\n        (l_tcp-\u0026gt;numlayers +1) * l_step_l, sizeof(OPJ_INT16));   // ----\u0026gt; Integer Overflow!!!\n    // ...\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eAddressSanitizer output the following exception information.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==10074==ERROR: AddressSanitizer: heap-buffer-overflow on address \n    0xad9370a0 at pc 0xb767ba50 bp 0xbff1ad78 sp 0xbff1ad70\nREAD of size 2 at 0xad9370a0 thread T0\n    #0 0xb767ba4f in opj_pi_next_cprl src/lib/openjp2/pi.c:541:12\n    #1 0xb76644e7 in opj_pi_next src/lib/openjp2/pi.c:1872:11\n    #2 0xb76cd0af in opj_t2_decode_packets src/lib/openjp2/t2.c:412:24\n    #3 0xb771ee6e in opj_tcd_t2_decode src/lib/openjp2/tcd.c:1547:15\n    #4 0xb771de16 in opj_tcd_decode_tile src/lib/openjp2/tcd.c:1286:15\n    #5 0xb74d7a0e in opj_j2k_decode_tile src/lib/openjp2/j2k.c:8134:15\n    #6 0xb7563354 in opj_j2k_decode_tiles src/lib/openjp2/j2k.c:9761:23\n    #7 0xb74bce4c in opj_j2k_exec src/lib/openjp2/j2k.c:7350:43\n    #8 0xb74f378b in opj_j2k_decode src/lib/openjp2/j2k.c:9959:15\n    #9 0xb75b80de in opj_jp2_decode src/lib/openjp2/jp2.c:1492:8\n    #10 0xb7622eb8 in opj_decode src/lib/openjp2/openjpeg.c:412:10\n    #11 0x8140304 in main src/bin/jp2/opj_decompress.c:1332:10\n    #12 0xb71b9af2 in __libc_start_main /build/eglibc-X4bnBz/eglibc-2.19/csu/libc-start.c:287\n    #13 0x80781eb in _start (bin/opj_decompress+0x80781eb)\n\nAddressSanitizer can not describe address in more detail (wild memory access suspected).\nSUMMARY: AddressSanitizer: heap-buffer-overflow src/lib/openjp2/pi.c:541 opj_pi_next_cprl\nShadow bytes around the buggy address:\n  0x35b26dc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26dd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26de0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26df0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=\u0026gt;0x35b26e10: fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x35b26e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==10074==ABORTING\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"6-timeline\"\u003e6. Timeline\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2016.08.20 - Found\u003c/li\u003e\n\u003cli\u003e2016.08.22 - Reported to OpenJPEG via \u003ca title=\"info@openjpeg.org\" href=\"mailto:info@openjpeg.org\" rel=\"nofollow noopener noreferrer\"\u003einfo@openjpeg.org\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2016.09.08 - Fixed\u003c/li\u003e\n\u003cli\u003e2016.09.08 - Publicly disclosed\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"7-references\"\u003e7. References\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Fcommit%2Fc16bc057ba3f125051c9966cf1f5b68a05681de4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eOpenJPEG Patch 1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Fcommit%2Fef01f18dfc6780b776d0674ed3e7415c6ef54d24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eOpenJPEG Patch 2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fseclists.org%2Foss-sec%2F2016%2Fq3%2F439\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eoss-sec CVE Request\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":118978,"file_name":"poc.jp2","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/118/978/0efa47261d80918230ea5e4a46cf680c3a6e2520/poc.jp2?response-content-disposition=attachment%3B%20filename%3D%22poc.jp2%22%3B%20filename%2A%3DUTF-8%27%27poc.jp2\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQUELEOUFM%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043937Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIEHcXLEQPeJ1NbEZdJXi%2BjDjW%2Brvnvj%2FJxEOqy4HmeuwAiBgfPiwnDW5VOmXCmdoSe8v4i4f3S1PrDzJHYj%2FK50vXSq0AwhTEAEaDDAxMzYxOTI3NDg0OSIMaRbp4M0ZZ3Ux0slgKpEDvGtg639OjuV4555YTXv0v1%2B3YeZYF7O3onBjNlgrOhYRA2lprfPhUel71T%2FX8MbclnF3ZoJTRbh1SdgGfYOStDOta4s40bALV9ZmACLawkbdV5j9rxJ9pCGv21GYDtjHl%2BVgYvqeUwT5NO%2BGzBJrB503UxwAbns4iOwLRos1I4mDZe8lyTK4OMOf2a1zF%2BFTTlSMuC7w658c6qUWnC5%2BArvYu5FSuBUNrnkIR0rG7uhSI8ku8glS3yPDiQjxIRB%2F6CwvXzaA%2B2%2FNSYCsbFFNan5Z3Qv3Pw0xINQ1V2xkEBrKDV2pJ42QAmmq7rgxA7nqrBru1GFYFrIkNUKpGw7I9OnBd81CnAxR9SYAoa%2B6sQ2cYGkXqOUhL0i6m1jBJc%2FiP11Lb%2FbVovAvfjqWsjLoQGLW6ZOZXFlq4Bb6qVcqO%2FV489Jh7LKgvf31VImkKBHPJZwDVAxn2q5yPm6TakzKJPvE4pDzpxa7Nw3oQ8Knf4I3qGhuif9BXRI3vu%2BhplC7ximOU4kG0vG2MI8F3rK2Xxow8Y6q%2FwU67AGCwlwk%2Fh50Mwp%2FofR%2Be%2BD5LiLGKMPNwxJJuYfv0E3oKNIT9wTCjV1Id28if6r3Zw9qtUxsnDKkDk%2B14l2fH9vPhI8cfp9BDEEHlfIIuWpITf0EUwAKcW%2BaKDKVRx%2FLb6InewTMZ%2B%2FgFi6gBqHlzu6MCAeys7vQVufF0akHiMP%2BiPeXfKCLU%2F4r9BeqnyEJqvrxabHfVXrZG5WsK5OLFxwqz4j4dpwzxocYRpH4zbbfII18jPfcKEQtcvg9zCzIaEfzIbLATRocx3PcEQLLDsdGuqcKyAv9S5VdHnJUqfDX%2BAjGLQcwxhdjmh4WHg%3D%3D\u0026X-Amz-Signature=5c47fb8a58a21a1261f5774e99b41d40df39582bf05758a98a7cd506564b1797","file_size":868,"type":"application/octet-stream"}],"allow_singular_disclosure_at":"2019-11-12T23:54:25.612Z","allow_singular_disclosure_after":-35613912.05116164,"singular_disclosure_allowed":true,"vote_count":2,"voters":["qtros","mk_l30"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1205874,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"Thank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.","markdown_message":"\u003cp\u003eThank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-20T05:15:38.751Z","updated_at":"2016-09-20T05:15:38.751Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1205875,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T05:15:43.918Z","updated_at":"2016-09-20T05:15:43.918Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"hacker2nd","url":"/hacker2nd"},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6028970,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T23:54:25.534Z","updated_at":"2019-10-13T23:54:25.534Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6293188,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T23:54:28.619Z","updated_at":"2019-11-12T23:54:28.619Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}