{"id":109175,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDkxNzU=","url":"https://hackerone.com/reports/109175","title":"Use After Free in sortWithSortKeys()","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-01-08T00:55:28.164Z","submitted_at":"2016-01-08T00:55:28.164Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"libnex","url":"/libnex","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/468/f5a6e39ea76748aa48e36e0087eb8b09ff892d6c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-01-20T00:20:52.450Z","bug_reporter_agreed_on_going_public_at":"2016-01-20T00:20:52.116Z","team_member_agreed_on_going_public_at":"2016-01-10T07:10:34.716Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Copy Paste of bug report at https://bugs.php.net/bug.php?id=71020\nIssue verified and fixed.\n\nDescription:\n------------\nThis is a vulnerability is in the function Collator::sortWithSortKeys. The vulnerable code is in ext/intl/collator/collator_sort.c\n\n1) Given an array, each element (hashData) is being referenced by a pointer in sortKeyIndxBuf[sortKeyCount].zstr (line 493):\n\n414: hash = Z_ARRVAL_P( array );\n...\n425: ZEND_HASH_FOREACH_VAL(hash, hashData) {\n....\n493: sortKeyIndxBuf[sortKeyCount].zstr = hashData;\n\n2) The array is then destroy and it's hashData elements freed (ref count -1):\n508: zval_ptr_dtor( array );\n\n\n3) Note that at this point sortKeyIndxBuf[sortKeyCount].zstr still contain pointers to the hashData elements which has been freed. In essence, sortKeyIndxBuf[sortKeyCount].zstr  are dangling pointers.\n\n4) A new array is reinitialized,\n510: array_init(array);\n\n5) The dangling pointers are then added as elements into the new array:\n515: zend_hash_next_index_insert( Z_ARRVAL_P(array), sortKeyIndxBuf[j].zstr);\n\n\n\n6) I've included a POC that triggers this  vulnerability, The POC can be obtained via: https://www.dropbox.com/s/5y9azo01hvflzug/collate-UAF-Poc.php?dl=0\n\n\t\t-an array of 0xbb elements is being passed into the function\n\t\t-sortKeyIndxBuf[0].zstr to sortKeyIndxBuf[0xba].zstr points to the elements in the array\n\t\t- Array is destroyed via zval_ptr_dtor( array );\n\t\t- sortKeyIndxBuf[0....0xba].zstr are now dangling pointers\n\t\t- New array initialized (Hashtable with initial element size of 8)\n\t\t- As the dangling pointers are added to array, the size of the Hashtable grows.\n\t\t- As the Hashtable grows, it's allocated more memory via zend_hash_do_resize()\n\t\t- It will then be allocated memory that co-incides with an address pointed to by the dangling pointer sortKeyIndxBuf[j].zstr. Thus sortKeyIndxBuf[j].zstr now no longer points to a valid zval.\n\t\t- When the code below dereferences this address, because it is pointing to an invalid zval, it will access dereference whatever is the value within this \"corrupted zval\". In this case it's a null pointer dereference. \n\t\t  514:Z_TRY_ADDREF_P( sortKeyIndxBuf[j].zstr );\n\n\n\nStopped reason: SIGSEGV\n0x000000000069f9cd in zval_addref_p (pz=0x7fffed28f840) at /home/elaw/php-7.0.0RC8/Zend/zend_types.h:822\n822             return ++GC_REFCOUNT(Z_COUNTED_P(pz));\ngdb-peda$ bt\n#0  0x000000000069f9cd in zval_addref_p (pz=0x7fffed28f840) at /home/elaw/php-7.0.0RC8/Zend/zend_types.h:822\n#1  zif_collator_sort_with_sort_keys (execute_data=0x7fffed213120, return_value=0x7fffed213110) at /home/elaw/php-7.0.0RC8/ext/intl/collator/collator_sort.c:514\n#2  0x0000000000ae496c in ZEND_DO_FCALL_SPEC_HANDLER () at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:842\n#3  0x0000000000ae0a37 in execute_ex (ex=0x7fffed213030) at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:414\n#4  0x0000000000ae135e in zend_execute (op_array=0x7fffed27f000, return_value=0x0) at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:458\n#5  0x0000000000a58578 in zend_execute_scripts (type=0x8, retval=0x0, file_count=0x3) at /home/elaw/php-7.0.0RC8/Zend/zend.c:1428\n#6  0x00000000009b143d in php_execute_script (primary_file=0x7fffffffdee0) at /home/elaw/php-7.0.0RC8/main/main.c:2471\n#7  0x0000000000bb41e3 in do_cli (argc=0x2, argv=0x14cc4d0) at /home/elaw/php-7.0.0RC8/sapi/cli/php_cli.c:974\n#8  0x0000000000bb53b5 in main (argc=0x2, argv=0x14cc4d0) at /home/elaw/php-7.0.0RC8/sapi/cli/php_cli.c:1345\n#9  0x00007ffff0c5ab45 in __libc_start_main (main=0xbb4d24 \u003cmain\u003e, argc=0x2, argv=0x7fffffffe328, init=\u003coptimized out\u003e, fini=\u003coptimized out\u003e, rtld_fini=\u003coptimized out\u003e,\n    stack_end=0x7fffffffe318) at libc-start.c:287\n#10 0x0000000000445719 in _start ()\n\n\nThis bug seems to have been introduced in this commit: Bug introducted in https://github.com/php/php-src/commit/4fbaddb4f8b041769bea7efdd12313641387bd14\nOnly php 7 is affected.\n\nAccording to their developer:\nstas@php.net\nPutting this in public before the release probably wasn't the best idea, as this could be exploitable if the sortable data is user-controlled.","vulnerability_information_html":"\u003cp\u003eCopy Paste of bug report at \u003ca title=\"https://bugs.php.net/bug.php?id=71020\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D71020\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=71020\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nIssue verified and fixed.\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription:\u003c/h2\u003e\n\n\u003cp\u003eThis is a vulnerability is in the function Collator::sortWithSortKeys. The vulnerable code is in ext/intl/collator/collator_sort.c\u003c/p\u003e\n\n\u003cp\u003e1) Given an array, each element (hashData) is being referenced by a pointer in sortKeyIndxBuf[sortKeyCount].zstr (line 493):\u003c/p\u003e\n\n\u003cp\u003e414: hash = Z_ARRVAL_P( array );\u003cbr\u003e\n...\u003cbr\u003e\n425: ZEND_HASH_FOREACH_VAL(hash, hashData) {\u003cbr\u003e\n....\u003cbr\u003e\n493: sortKeyIndxBuf[sortKeyCount].zstr = hashData;\u003c/p\u003e\n\n\u003cp\u003e2) The array is then destroy and it\u0026#39;s hashData elements freed (ref count -1):\u003cbr\u003e\n508: zval_ptr_dtor( array );\u003c/p\u003e\n\n\u003cp\u003e3) Note that at this point sortKeyIndxBuf[sortKeyCount].zstr still contain pointers to the hashData elements which has been freed. In essence, sortKeyIndxBuf[sortKeyCount].zstr  are dangling pointers.\u003c/p\u003e\n\n\u003cp\u003e4) A new array is reinitialized,\u003cbr\u003e\n510: array_init(array);\u003c/p\u003e\n\n\u003cp\u003e5) The dangling pointers are then added as elements into the new array:\u003cbr\u003e\n515: zend_hash_next_index_insert( Z_ARRVAL_P(array), sortKeyIndxBuf[j].zstr);\u003c/p\u003e\n\n\u003cp\u003e6) I\u0026#39;ve included a POC that triggers this  vulnerability, The POC can be obtained via: \u003ca title=\"https://www.dropbox.com/s/5y9azo01hvflzug/collate-UAF-Poc.php?dl=0\" href=\"/redirect?url=https%3A%2F%2Fwww.dropbox.com%2Fs%2F5y9azo01hvflzug%2Fcollate-UAF-Poc.php%3Fdl%3D0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.dropbox.com/s/5y9azo01hvflzug/collate-UAF-Poc.php?dl=0\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    -an array of 0xbb elements is being passed into the function\n    -sortKeyIndxBuf[0].zstr to sortKeyIndxBuf[0xba].zstr points to the elements in the array\n    - Array is destroyed via zval_ptr_dtor( array );\n    - sortKeyIndxBuf[0....0xba].zstr are now dangling pointers\n    - New array initialized (Hashtable with initial element size of 8)\n    - As the dangling pointers are added to array, the size of the Hashtable grows.\n    - As the Hashtable grows, it\u0026#39;s allocated more memory via zend_hash_do_resize()\n    - It will then be allocated memory that co-incides with an address pointed to by the dangling pointer sortKeyIndxBuf[j].zstr. Thus sortKeyIndxBuf[j].zstr now no longer points to a valid zval.\n    - When the code below dereferences this address, because it is pointing to an invalid zval, it will access dereference whatever is the value within this \u0026quot;corrupted zval\u0026quot;. In this case it\u0026#39;s a null pointer dereference. \n      514:Z_TRY_ADDREF_P( sortKeyIndxBuf[j].zstr );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eStopped reason: SIGSEGV\u003cbr\u003e\n0x000000000069f9cd in zval_addref_p (pz=0x7fffed28f840) at /home/elaw/php-7.0.0RC8/Zend/zend_types.h:822\u003cbr\u003e\n822             return ++GC_REFCOUNT(Z_COUNTED_P(pz));\u003cbr\u003e\ngdb-peda$ bt\u003c/p\u003e\n\n\u003ch1 id=\"0-0x000000000069f9cd-in-zval_addref_p-pz-0x7fffed28f840-at-home-elaw-php-7-0-0rc8-zend-zend_types-h-822\"\u003e0  0x000000000069f9cd in zval_addref_p (pz=0x7fffed28f840) at /home/elaw/php-7.0.0RC8/Zend/zend_types.h:822\u003c/h1\u003e\n\n\u003ch1 id=\"1-zif_collator_sort_with_sort_keys-execute_data-0x7fffed213120-return_value-0x7fffed213110-at-home-elaw-php-7-0-0rc8-ext-intl-collator-collator_sort-c-514\"\u003e1  zif_collator_sort_with_sort_keys (execute_data=0x7fffed213120, return_value=0x7fffed213110) at /home/elaw/php-7.0.0RC8/ext/intl/collator/collator_sort.c:514\u003c/h1\u003e\n\n\u003ch1 id=\"2-0x0000000000ae496c-in-zend_do_fcall_spec_handler-at-home-elaw-php-7-0-0rc8-zend-zend_vm_execute-h-842\"\u003e2  0x0000000000ae496c in ZEND_DO_FCALL_SPEC_HANDLER () at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:842\u003c/h1\u003e\n\n\u003ch1 id=\"3-0x0000000000ae0a37-in-execute_ex-ex-0x7fffed213030-at-home-elaw-php-7-0-0rc8-zend-zend_vm_execute-h-414\"\u003e3  0x0000000000ae0a37 in execute_ex (ex=0x7fffed213030) at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:414\u003c/h1\u003e\n\n\u003ch1 id=\"4-0x0000000000ae135e-in-zend_execute-op_array-0x7fffed27f000-return_value-0x0-at-home-elaw-php-7-0-0rc8-zend-zend_vm_execute-h-458\"\u003e4  0x0000000000ae135e in zend_execute (op_array=0x7fffed27f000, return_value=0x0) at /home/elaw/php-7.0.0RC8/Zend/zend_vm_execute.h:458\u003c/h1\u003e\n\n\u003ch1 id=\"5-0x0000000000a58578-in-zend_execute_scripts-type-0x8-retval-0x0-file_count-0x3-at-home-elaw-php-7-0-0rc8-zend-zend-c-1428\"\u003e5  0x0000000000a58578 in zend_execute_scripts (type=0x8, retval=0x0, file_count=0x3) at /home/elaw/php-7.0.0RC8/Zend/zend.c:1428\u003c/h1\u003e\n\n\u003ch1 id=\"6-0x00000000009b143d-in-php_execute_script-primary_file-0x7fffffffdee0-at-home-elaw-php-7-0-0rc8-main-main-c-2471\"\u003e6  0x00000000009b143d in php_execute_script (primary_file=0x7fffffffdee0) at /home/elaw/php-7.0.0RC8/main/main.c:2471\u003c/h1\u003e\n\n\u003ch1 id=\"7-0x0000000000bb41e3-in-do_cli-argc-0x2-argv-0x14cc4d0-at-home-elaw-php-7-0-0rc8-sapi-cli-php_cli-c-974\"\u003e7  0x0000000000bb41e3 in do_cli (argc=0x2, argv=0x14cc4d0) at /home/elaw/php-7.0.0RC8/sapi/cli/php_cli.c:974\u003c/h1\u003e\n\n\u003ch1 id=\"8-0x0000000000bb53b5-in-main-argc-0x2-argv-0x14cc4d0-at-home-elaw-php-7-0-0rc8-sapi-cli-php_cli-c-1345\"\u003e8  0x0000000000bb53b5 in main (argc=0x2, argv=0x14cc4d0) at /home/elaw/php-7.0.0RC8/sapi/cli/php_cli.c:1345\u003c/h1\u003e\n\n\u003ch1 id=\"9-0x00007ffff0c5ab45-in-__libc_start_main-main-0xbb4d24-main-argc-0x2-argv-0x7fffffffe328-init-optimized-out-fini-optimized-out-rtld_fini-optimized-out\"\u003e9  0x00007ffff0c5ab45 in __libc_start_main (main=0xbb4d24 \u0026lt;main\u0026gt;, argc=0x2, argv=0x7fffffffe328, init=\u0026lt;optimized out\u0026gt;, fini=\u0026lt;optimized out\u0026gt;, rtld_fini=\u0026lt;optimized out\u0026gt;,\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estack_end=0x7fffffffe318) at libc-start.c:287\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"10-0x0000000000445719-in-_start\"\u003e10 0x0000000000445719 in _start ()\u003c/h1\u003e\n\n\u003cp\u003eThis bug seems to have been introduced in this commit: Bug introducted in \u003ca title=\"https://github.com/php/php-src/commit/4fbaddb4f8b041769bea7efdd12313641387bd14\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fcommit%2F4fbaddb4f8b041769bea7efdd12313641387bd14\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/php/php-src/commit/4fbaddb4f8b041769bea7efdd12313641387bd14\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nOnly php 7 is affected.\u003c/p\u003e\n\n\u003cp\u003eAccording to their developer:\u003cbr\u003e\n\u003ca title=\"stas@php.net\" href=\"mailto:stas@php.net\" rel=\"nofollow noopener noreferrer\"\u003estas@php.net\u003c/a\u003e\u003cbr\u003e\nPutting this in public before the release probably wasn\u0026#39;t the best idea, as this could be exploitable if the sortable data is user-controlled.\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-02-09T07:10:36.012Z","allow_singular_disclosure_after":-154213496.6313469,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":751363,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-10T07:10:02.883Z","updated_at":"2016-01-10T07:10:02.883Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"libnex","url":"/libnex"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":751364,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-10T07:10:09.237Z","updated_at":"2016-01-10T07:10:09.237Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"1000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"libnex","url":"/libnex"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":751365,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-10T07:10:34.744Z","updated_at":"2016-01-10T07:10:34.744Z","first_to_agree":true,"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":764523,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-20T00:20:52.232Z","updated_at":"2016-01-20T00:20:52.232Z","actor":{"username":"libnex","cleared":false,"url":"/libnex","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/468/f5a6e39ea76748aa48e36e0087eb8b09ff892d6c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":764524,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-20T00:20:52.478Z","updated_at":"2016-01-20T00:20:52.478Z","actor":{"username":"libnex","cleared":false,"url":"/libnex","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/468/f5a6e39ea76748aa48e36e0087eb8b09ff892d6c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}