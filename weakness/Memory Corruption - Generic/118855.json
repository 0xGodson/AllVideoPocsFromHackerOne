{"id":118855,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTg4NTU=","url":"https://hackerone.com/reports/118855","title":"CVE-2016-0799 memory issues in BIO_*printf functions","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-02-25T23:17:09.406Z","submitted_at":"2016-02-25T23:17:09.406Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"guido","url":"/guido","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":24,"url":"https://hackerone.com/ibb-openssl","handle":"ibb-openssl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"OpenSSL (IBB)","twitter_handle":"","website":"https://www.openssl.org","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-03-27T23:33:14.919Z","bug_reporter_agreed_on_going_public_at":"2016-03-27T23:33:14.723Z","team_member_agreed_on_going_public_at":"2016-03-27T23:32:18.127Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"https://github.com/openssl/openssl/commit/9cb177301fdab492e4cfef376b28339afe3ef663","vulnerability_information_html":"\u003cp\u003e\u003ca title=\"https://github.com/openssl/openssl/commit/9cb177301fdab492e4cfef376b28339afe3ef663\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fcommit%2F9cb177301fdab492e4cfef376b28339afe3ef663\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/openssl/openssl/commit/9cb177301fdab492e4cfef376b28339afe3ef663\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-26T23:32:18.312Z","allow_singular_disclosure_after":-147502037.5429741,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":814959,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've confirmed that PHP is vulnerable to this via a particular function call and parameters.\n\nThere is some other major software using the BIO_prinf function with the \"%s\" format specifier and dynamic strings like Apache HTTPD in its OCSP stapling routines, but I still have to verify whether it's actually vulnerable.\n\n(I'm not gonna be secretive about the potential vulnerabilities in other software because the root issue, in OpenSSL, is already public)","markdown_message":"\u003cp\u003eI\u0026#39;ve confirmed that PHP is vulnerable to this via a particular function call and parameters.\u003c/p\u003e\n\n\u003cp\u003eThere is some other major software using the BIO_prinf function with the \u0026quot;%s\u0026quot; format specifier and dynamic strings like Apache HTTPD in its OCSP stapling routines, but I still have to verify whether it\u0026#39;s actually vulnerable.\u003c/p\u003e\n\n\u003cp\u003e(I\u0026#39;m not gonna be secretive about the potential vulnerabilities in other software because the root issue, in OpenSSL, is already public)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-27T02:43:57.043Z","updated_at":"2016-02-27T02:43:57.043Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":815592,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://guidovranken.wordpress.com/2016/02/27/openssl-cve-2016-0799-heap-corruption-via-bio_printf/","markdown_message":"\u003cp\u003e\u003ca title=\"https://guidovranken.wordpress.com/2016/02/27/openssl-cve-2016-0799-heap-corruption-via-bio_printf/\" href=\"/redirect?url=https%3A%2F%2Fguidovranken.wordpress.com%2F2016%2F02%2F27%2Fopenssl-cve-2016-0799-heap-corruption-via-bio_printf%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://guidovranken.wordpress.com/2016/02/27/openssl-cve-2016-0799-heap-corruption-via-bio_printf/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-27T19:20:42.470Z","updated_at":"2016-02-27T19:20:42.470Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873612,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:32:00.508Z","updated_at":"2016-03-27T23:32:00.508Z","actor":{"url":"/ibb-openssl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/024/523699736f62cf8e067320163b49e80626b1b3a3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"OpenSSL (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-openssl","collaborator":{"username":"guido","url":"/guido"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873613,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:32:09.558Z","updated_at":"2016-03-27T23:32:09.558Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"guido","url":"/guido"},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873615,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:32:18.151Z","updated_at":"2016-03-27T23:32:18.151Z","first_to_agree":true,"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873617,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:33:14.751Z","updated_at":"2016-03-27T23:33:14.751Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":873618,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-27T23:33:14.943Z","updated_at":"2016-03-27T23:33:14.943Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-openssl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":1564,"category":"team","content":"Severity: Low\n\nThe internal |fmtstr| function used in processing a \"%s\" format string in the\nBIO_*printf functions could overflow while calculating the length of a string\nand cause an OOB read when printing very long strings.\n\nAdditionally the internal |doapr_outch| function can attempt to write to an OOB\nmemory location (at an offset from the NULL pointer) in the event of a memory\nallocation failure. In 1.0.2 and below this could be caused where the size of a\nbuffer to be allocated is greater than INT_MAX. E.g. this could be in processing\na very long \"%s\" format string. Memory leaks can also occur.\n\nThe first issue may mask the second issue dependent on compiler behaviour.\nThese problems could enable attacks where large amounts of untrusted data is\npassed to the BIO_*printf functions. If applications use these functions in this\nway then they could be vulnerable. OpenSSL itself uses these functions when\nprinting out human-readable dumps of ASN.1 data. Therefore applications that\nprint this data could be vulnerable if the data is from untrusted sources.\nOpenSSL command line applications could also be vulnerable where they print out\nASN.1 data, or if untrusted data is passed as command line arguments.\n\nLibssl is not considered directly vulnerable. Additionally certificates etc\nreceived via remote connections via libssl are also unlikely to be able to\ntrigger these issues because of message size limits enforced within libssl.\n\nThis issue affects OpenSSL versions 1.0.2 and 1.0.1.\n\nOpenSSL 1.0.2 users should upgrade to 1.0.2g\nOpenSSL 1.0.1 users should upgrade to 1.0.1s\n\nThis issue was reported to OpenSSL on February 23rd by Guido Vranken.  The\nfix was developed by Matt Caswell of the OpenSSL development team.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eSeverity: Low\u003c/p\u003e\n\n\u003cp\u003eThe internal |fmtstr| function used in processing a \u0026quot;%s\u0026quot; format string in the\u003cbr\u003e\nBIO_*printf functions could overflow while calculating the length of a string\u003cbr\u003e\nand cause an OOB read when printing very long strings.\u003c/p\u003e\n\n\u003cp\u003eAdditionally the internal |doapr_outch| function can attempt to write to an OOB\u003cbr\u003e\nmemory location (at an offset from the NULL pointer) in the event of a memory\u003cbr\u003e\nallocation failure. In 1.0.2 and below this could be caused where the size of a\u003cbr\u003e\nbuffer to be allocated is greater than INT_MAX. E.g. this could be in processing\u003cbr\u003e\na very long \u0026quot;%s\u0026quot; format string. Memory leaks can also occur.\u003c/p\u003e\n\n\u003cp\u003eThe first issue may mask the second issue dependent on compiler behaviour.\u003cbr\u003e\nThese problems could enable attacks where large amounts of untrusted data is\u003cbr\u003e\npassed to the BIO_*printf functions. If applications use these functions in this\u003cbr\u003e\nway then they could be vulnerable. OpenSSL itself uses these functions when\u003cbr\u003e\nprinting out human-readable dumps of ASN.1 data. Therefore applications that\u003cbr\u003e\nprint this data could be vulnerable if the data is from untrusted sources.\u003cbr\u003e\nOpenSSL command line applications could also be vulnerable where they print out\u003cbr\u003e\nASN.1 data, or if untrusted data is passed as command line arguments.\u003c/p\u003e\n\n\u003cp\u003eLibssl is not considered directly vulnerable. Additionally certificates etc\u003cbr\u003e\nreceived via remote connections via libssl are also unlikely to be able to\u003cbr\u003e\ntrigger these issues because of message size limits enforced within libssl.\u003c/p\u003e\n\n\u003cp\u003eThis issue affects OpenSSL versions 1.0.2 and 1.0.1.\u003c/p\u003e\n\n\u003cp\u003eOpenSSL 1.0.2 users should upgrade to 1.0.2g\u003cbr\u003e\nOpenSSL 1.0.1 users should upgrade to 1.0.1s\u003c/p\u003e\n\n\u003cp\u003eThis issue was reported to OpenSSL on February 23rd by Guido Vranken.  The\u003cbr\u003e\nfix was developed by Matt Caswell of the OpenSSL development team.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}