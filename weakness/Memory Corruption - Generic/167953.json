{"id":167953,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc5NTM=","url":"https://hackerone.com/reports/167953","title":"CVE-2016-3182 OpenJPEG color_esycc_to_rgb Out-of-Bounds Read Vulnerability","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-09-13T08:24:48.732Z","submitted_at":"2016-09-13T08:24:48.732Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"hacker2nd","url":"/hacker2nd","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":20,"url":"https://hackerone.com/internet","handle":"internet","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"The Internet","twitter_handle":null,"website":"","about":"Hack all the things."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T23:54:17.381Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T23:54:14.903Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# CVE-2016-3182 OpenJPEG color_esycc_to_rgb Out-of-Bounds Read Vulnerability\n\n## 1. About OpenJPEG\nOpenJPEG is an open-source JPEG 2000 codec written in C language. It's widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at [GitHub](https://github.com/uclouvain/openjpeg).\n\n## 2. Credit\nThis vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.\n\n## 3. Testing Environments\n+ **OS**: Ubuntu\n+ **OpenJPEG**: [0069a2b](https://github.com/uclouvain/openjpeg/archive/0069a2bd2f8055b7edf9699332f4f00ac5351564.zip) (Master version before Mar/14/2016)\n+ **Compiler**: Clang\n+ **CFLAGS**: ``-g -O0 -fsanitize=address``\n\n## 4. Reproduce Steps\nPlease copy file ``poc.jp2`` to directory ``openjpeg/bin`` before executing ``opj_decompress``.\n```\nwget https://github.com/uclouvain/openjpeg/archive/0069a2bd2f8055b7edf9699332f4f00ac5351564.zip\nunzip -q 0069a2bd2f8055b7edf9699332f4f00ac5351564.zip\nmv openjpeg-0069a2bd2f8055b7edf9699332f4f00ac5351564 openjpeg\ncd openjpeg\nexport CC='/usr/bin/clang -g -O0 -fsanitize=address'\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n```\n\n## 5. Vulnerability Details\nAccording to AddressSanitizer's output message, the Out-of-Bounds read occurred in function color_esycc_to_rgb. However, there must be also an Out-of-Bounds write circumstance since an exception will be throwed when freeing the heap buffer.\n\n+ AddressSanitizer output the following exception information.\n\n```\n==116473==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61300000e000 \nat pc 0x0000005309ef bp 0x7fffb332de20 sp 0x7fffb332de18\nREAD of size 4 at 0x61300000e000 thread T0\n    #0 0x5309ee in color_esycc_to_rgb openjpeg/src/bin/common/color.c:760:37\n    #1 0x4f215c in main openjpeg/src/bin/jp2/opj_decompress.c:1381:4\n    #2 0x7f50d46dd82f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #3 0x41a978 in _start (openjpeg/bin/opj_decompress+0x41a978)\n\n0x61300000e000 is located 0 bytes to the right of 384-byte region [0x61300000de80,0x61300000e000)\nallocated by thread T0 here:\n    #0 0x4bac30 in calloc (openjpeg/bin/opj_decompress+0x4bac30)\n    #1 0x7f50d5fd9764 in opj_calloc openjpeg/src/lib/openjp2/opj_malloc.c:203:10\n    #2 0x7f50d5f4ce7a in opj_j2k_update_image_data openjpeg/src/lib/openjp2/j2k.c:8212:62\n    #3 0x7f50d5f4c886 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9752:23\n    #4 0x7f50d5f153fd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7341:41\n    #5 0x7f50d5f2844e in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9943:15\n    #6 0x7f50d5f636ce in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1487:8\n    #7 0x7f50d5f80356 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #8 0x4f1627 in main openjpeg/src/bin/jp2/opj_decompress.c:1330:10\n    #9 0x7f50d46dd82f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow openjpeg/src/bin/common/color.c:760:37 in color_esycc_to_rgb\nShadow bytes around the buggy address:\n  0x0c267fff9bb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9bc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c267fff9be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c267fff9bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=\u003e0x0c267fff9c00:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==116473==ABORTING\n```\n\n+ GDB backtrace\n\nIf compile openjpeg with gcc and **do not** specify ``-fsanitize=address``, a heap corruption will be occurred.\n\n```\n[INFO] Stream reached its end !\nWARNING -\u003e [PGM file] Only the first component\n           is written to the file\n[INFO] Generated Outfile image.pgm\n\nProgram received signal SIGSEGV, Segmentation fault.\n__GI___libc_free (mem=0x1f00000000) at malloc.c:2952\n2952\tmalloc.c: No such file or directory.\n(gdb) bt\n#0  __GI___libc_free (mem=0x1f00000000) at malloc.c:2952\n#1  0x00007ffff7bc775d in opj_free (ptr=0x1f00000000) at opj_gcc/src/lib/openjp2/opj_malloc.c:238\n#2  0x00007ffff7bc50e2 in opj_tcd_free_tile (p_tcd=0x626f00) at opj_gcc/src/lib/openjp2/tcd.c:1508\n#3  0x00007ffff7bc2d1d in opj_tcd_destroy (tcd=0x626f00) at opj_gcc/src/lib/openjp2/tcd.c:616\n#4  0x00007ffff7ba23e5 in opj_j2k_destroy (p_j2k=0x620440) at opj_gcc/src/lib/openjp2/j2k.c:7541\n#5  0x00007ffff7bb09d5 in opj_jp2_destroy (jp2=0x620380) at opj_gcc/src/lib/openjp2/jp2.c:2778\n#6  0x00007ffff7bb4515 in opj_destroy_codec (p_codec=0x6202d0) at opj_gcc/src/lib/openjp2/openjpeg.c:845\n#7  0x000000000040682d in main (argc=5, argv=0x7fffffffdeb8) at opj_gcc/src/bin/jp2/opj_decompress.c:1558\n\n```\n\n## 6. Timeline\n+ 2016.03.10 - Found\n+ 2016.03.14 - Reported to OpenJPEG via [Issue725](https://github.com/uclouvain/openjpeg/issues/725)\n+ 2016.05.01 - Fixed\n","vulnerability_information_html":"\u003ch1 id=\"cve-2016-3182-openjpeg-color_esycc_to_rgb-out-of-bounds-read-vulnerability\"\u003eCVE-2016-3182 OpenJPEG color_esycc_to_rgb Out-of-Bounds Read Vulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"1-about-openjpeg\"\u003e1. About OpenJPEG\u003c/h2\u003e\n\n\u003cp\u003eOpenJPEG is an open-source JPEG 2000 codec written in C language. It\u0026#39;s widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eGitHub\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"2-credit\"\u003e2. Credit\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability was discovered by Ke Liu of Tencent\u0026#39;s Xuanwu LAB.\u003c/p\u003e\n\n\u003ch2 id=\"3-testing-environments\"\u003e3. Testing Environments\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOS\u003c/strong\u003e: Ubuntu\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eOpenJPEG\u003c/strong\u003e: \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Farchive%2F0069a2bd2f8055b7edf9699332f4f00ac5351564.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e0069a2b\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (Master version before Mar/14/2016)\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCompiler\u003c/strong\u003e: Clang\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCFLAGS\u003c/strong\u003e: \u003ccode\u003e-g -O0 -fsanitize=address\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"4-reproduce-steps\"\u003e4. Reproduce Steps\u003c/h2\u003e\n\n\u003cp\u003ePlease copy file \u003ccode\u003epoc.jp2\u003c/code\u003e to directory \u003ccode\u003eopenjpeg/bin\u003c/code\u003e before executing \u003ccode\u003eopj_decompress\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewget https://github.com/uclouvain/openjpeg/archive/0069a2bd2f8055b7edf9699332f4f00ac5351564.zip\nunzip -q 0069a2bd2f8055b7edf9699332f4f00ac5351564.zip\nmv openjpeg-0069a2bd2f8055b7edf9699332f4f00ac5351564 openjpeg\ncd openjpeg\nexport CC=\u0026#39;/usr/bin/clang -g -O0 -fsanitize=address\u0026#39;\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"5-vulnerability-details\"\u003e5. Vulnerability Details\u003c/h2\u003e\n\n\u003cp\u003eAccording to AddressSanitizer\u0026#39;s output message, the Out-of-Bounds read occurred in function color_esycc_to_rgb. However, there must be also an Out-of-Bounds write circumstance since an exception will be throwed when freeing the heap buffer.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAddressSanitizer output the following exception information.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==116473==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61300000e000 \nat pc 0x0000005309ef bp 0x7fffb332de20 sp 0x7fffb332de18\nREAD of size 4 at 0x61300000e000 thread T0\n    #0 0x5309ee in color_esycc_to_rgb openjpeg/src/bin/common/color.c:760:37\n    #1 0x4f215c in main openjpeg/src/bin/jp2/opj_decompress.c:1381:4\n    #2 0x7f50d46dd82f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #3 0x41a978 in _start (openjpeg/bin/opj_decompress+0x41a978)\n\n0x61300000e000 is located 0 bytes to the right of 384-byte region [0x61300000de80,0x61300000e000)\nallocated by thread T0 here:\n    #0 0x4bac30 in calloc (openjpeg/bin/opj_decompress+0x4bac30)\n    #1 0x7f50d5fd9764 in opj_calloc openjpeg/src/lib/openjp2/opj_malloc.c:203:10\n    #2 0x7f50d5f4ce7a in opj_j2k_update_image_data openjpeg/src/lib/openjp2/j2k.c:8212:62\n    #3 0x7f50d5f4c886 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9752:23\n    #4 0x7f50d5f153fd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7341:41\n    #5 0x7f50d5f2844e in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9943:15\n    #6 0x7f50d5f636ce in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1487:8\n    #7 0x7f50d5f80356 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #8 0x4f1627 in main openjpeg/src/bin/jp2/opj_decompress.c:1330:10\n    #9 0x7f50d46dd82f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow openjpeg/src/bin/common/color.c:760:37 in color_esycc_to_rgb\nShadow bytes around the buggy address:\n  0x0c267fff9bb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9bc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c267fff9be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c267fff9bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=\u0026gt;0x0c267fff9c00:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c267fff9c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==116473==ABORTING\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eGDB backtrace\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf compile openjpeg with gcc and \u003cstrong\u003edo not\u003c/strong\u003e specify \u003ccode\u003e-fsanitize=address\u003c/code\u003e, a heap corruption will be occurred.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[INFO] Stream reached its end !\nWARNING -\u0026gt; [PGM file] Only the first component\n           is written to the file\n[INFO] Generated Outfile image.pgm\n\nProgram received signal SIGSEGV, Segmentation fault.\n__GI___libc_free (mem=0x1f00000000) at malloc.c:2952\n2952    malloc.c: No such file or directory.\n(gdb) bt\n#0  __GI___libc_free (mem=0x1f00000000) at malloc.c:2952\n#1  0x00007ffff7bc775d in opj_free (ptr=0x1f00000000) at opj_gcc/src/lib/openjp2/opj_malloc.c:238\n#2  0x00007ffff7bc50e2 in opj_tcd_free_tile (p_tcd=0x626f00) at opj_gcc/src/lib/openjp2/tcd.c:1508\n#3  0x00007ffff7bc2d1d in opj_tcd_destroy (tcd=0x626f00) at opj_gcc/src/lib/openjp2/tcd.c:616\n#4  0x00007ffff7ba23e5 in opj_j2k_destroy (p_j2k=0x620440) at opj_gcc/src/lib/openjp2/j2k.c:7541\n#5  0x00007ffff7bb09d5 in opj_jp2_destroy (jp2=0x620380) at opj_gcc/src/lib/openjp2/jp2.c:2778\n#6  0x00007ffff7bb4515 in opj_destroy_codec (p_codec=0x6202d0) at opj_gcc/src/lib/openjp2/openjpeg.c:845\n#7  0x000000000040682d in main (argc=5, argv=0x7fffffffdeb8) at opj_gcc/src/bin/jp2/opj_decompress.c:1558\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"6-timeline\"\u003e6. Timeline\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2016.03.10 - Found\u003c/li\u003e\n\u003cli\u003e2016.03.14 - Reported to OpenJPEG via \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Fissues%2F725\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eIssue725\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2016.05.01 - Fixed\u003c/li\u003e\n\u003c/ul\u003e\n","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":119519,"file_name":"poc.jp2","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/119/519/b857730afe9f9b6fbb181c717bfb3be918034f81/poc.jp2?response-content-disposition=attachment%3B%20filename%3D%22poc.jp2%22%3B%20filename%2A%3DUTF-8%27%27poc.jp2\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044001Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=1852c1d5104ef68101f3d59f59ff1e7c01bf166c37d72c5fe46ce98839e0a9b4","file_size":414,"type":"application/octet-stream"}],"allow_singular_disclosure_at":"2019-11-12T23:54:14.970Z","allow_singular_disclosure_after":-35613946.12755427,"singular_disclosure_allowed":true,"vote_count":1,"voters":["mashoud1122"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1205879,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"Thank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.","markdown_message":"\u003cp\u003eThank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-20T05:17:19.788Z","updated_at":"2016-09-20T05:17:19.788Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1205881,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T05:17:24.751Z","updated_at":"2016-09-20T05:17:24.751Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"hacker2nd","url":"/hacker2nd"},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6028968,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T23:54:14.918Z","updated_at":"2019-10-13T23:54:14.918Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6293186,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T23:54:17.402Z","updated_at":"2019-11-12T23:54:17.402Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}