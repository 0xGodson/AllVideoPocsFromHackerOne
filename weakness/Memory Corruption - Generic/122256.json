{"id":122256,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjIyNTY=","url":"https://hackerone.com/reports/122256","title":"Adobe Flash Player  Uninitialised Memory Corruption","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-03-11T04:19:30.194Z","submitted_at":"2016-03-11T04:19:30.194Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"riusksk","url":"/riusksk","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/006/780/fecc333bde2a3072fc6967ccdf943c1c873bdeb0_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46,"url":"https://hackerone.com/ibb-flash","handle":"ibb-flash","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"disabled","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Flash (IBB)","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:42:53.153Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:42:52.032Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"##Description\n---------------\nA Uninitialised Memory Corruption exist in Adobe Flash Player SA for Mac (test in v20.0.0.228 sa version)，successful exploitation could cause a crash and potentially allow an attacker to take control of the affected system. \n\n##Environment\n---------------\n1、Mac OSX 10.11.2\n2、flashplayer20_0d0_228_mac_sa\n\n##Details\n---------------\n\nvalgrind --tool=memcheck /Users/riusksk/Downloads/Flash\\ Player.app/Contents/MacOS/Flash\\ Player poc.swf    \n\n==3453== Memcheck, a memory error detector\n\n==3453== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n\n==3453== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n\n==3453== Command: /Users/riusksk/Downloads/Flash\\ Player.app/Contents/MacOS/Flash\\ Player poc.swf\n\n==3453== \n\n==3453== Conditional jump or move depends on uninitialised value(s)\n\n==3453==    at 0x7FFF5FC24A27: bcmp (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC11914: ImageLoaderMachO::validateFirstPages(linkedit_data_command const*, int, unsigned char const*, unsigned long, long long, ImageLoader::LinkContext const\u0026) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC16B8A: ImageLoaderMachOCompressed::instantiateFromFile(char const*, int, unsigned char const*, unsigned long, unsigned long long, unsigned long long, stat const\u0026, unsigned int, unsigned int, linkedit_data_command const*, encryption_info_command const*, ImageLoader::LinkContext const\u0026) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC10A7E: ImageLoaderMachO::instantiateFromFile(char const*, int, unsigned char const*, unsigned long long, unsigned long long, stat const\u0026, ImageLoader::LinkContext const\u0026) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC038C2: dyld::loadPhase6(int, stat const\u0026, char const*, dyld::LoadContext const\u0026) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC0846D: dyld::loadPhase5(char const*, char const*, dyld::LoadContext const\u0026, std::__1::vector\u003cchar const*, std::__1::allocator\u003cchar const*\u003e \u003e*) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC0818D: dyld::loadPhase4(char const*, char const*, dyld::LoadContext const\u0026, std::__1::vector\u003cchar const*, std::__1::allocator\u003cchar const*\u003e \u003e*) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC07EF2: dyld::loadPhase3(char const*, char const*, dyld::LoadContext const\u0026, std::__1::vector\u003cchar const*, std::__1::allocator\u003cchar const*\u003e \u003e*) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC07647: dyld::loadPhase1(char const*, char const*, dyld::LoadContext const\u0026, std::__1::vector\u003cchar const*, std::__1::allocator\u003cchar const*\u003e \u003e*) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC0347A: dyld::loadPhase0(char const*, char const*, dyld::LoadContext const\u0026, std::__1::vector\u003cchar const*, std::__1::allocator\u003cchar const*\u003e \u003e*) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC0315E: dyld::load(char const*, dyld::LoadContext const\u0026) (in /usr/lib/dyld)\n\n==3453==    by 0x7FFF5FC0870A: dyld::libraryLocator(char const*, bool, char const*, ImageLoader::RPathChain const*) (in /usr/lib/dyld)\n\n==3453== \n\n==3453== Use of uninitialised value of size 8\n\n\nlldb Flash\\ Player\n\n(lldb) target create \"Flash Player\"\n\nwarning: (x86_64) /Users/riusksk/Downloads/Flash Player.app/Contents/MacOS/Flash Player empty dSYM file detected, dSYM was created with an executable with no debug info.\n\nCurrent executable set to 'Flash Player' (x86_64).\n\n(lldb) run ~/Downloads/poc.swf\n\nProcess 96650 launched: '/Users/riusksk/Downloads/Flash Player.app/Contents/MacOS/Flash Player' (x86_64)\n\nVector smash protection is enabled.\n\nProcess 96650 stopped\n\n* thread #1: tid = 0xbbffa, 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n\nframe #0: 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15\n\nCoreFoundation`CFStringGetLength:\n\n-\u003e  0x7fff82cc0b4f \u003c+15\u003e: movq   (%rbx), %rax\n\n0x7fff82cc0b52 \u003c+18\u003e: testq  %rax, %rax\n\n0x7fff82cc0b55 \u003c+21\u003e: je     0x7fff82cc0b97            ; \u003c+87\u003e\n\n0x7fff82cc0b57 \u003c+23\u003e: leaq   -0xff65e76(%rip), %rcx    ; __CFConstantStringClassReferencePtr\n\n(lldb) bt\n\n* thread #1: tid = 0xbbffa, 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n\n* frame #0: 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15\n\nframe #1: 0x00007fff82df89cc CoreFoundation`_CFURLCreateWithFileSystemPath + 60\n\nframe #2: 0x000000010040d204 Flash Player`main + 165412\n\nframe #3: 0x0000000100394bb4 Flash Player`___lldb_unnamed_function14212$$Flash Player + 356\n\nframe #4: 0x00000001004053e8 Flash Player`main + 133128\n\nframe #5: 0x000000010040563e Flash Player`main + 133726\n\nframe #6: 0x000000010039630a Flash Player`___lldb_unnamed_function14228$$Flash Player + 10\n\nframe #7: 0x00000001001032fd Flash Player`___lldb_unnamed_function2712$$Flash Player + 13\n\nframe #8: 0x000000010034863c Flash Player`___lldb_unnamed_function12938$$Flash Player + 844\n\nframe #9: 0x000000010034824c Flash Player`___lldb_unnamed_function12937$$Flash Player + 764\n\nframe #10: 0x0000000100342843 Flash Player`___lldb_unnamed_function12890$$Flash Player + 1203\n\nframe #11: 0x00000001003421ef Flash Player`___lldb_unnamed_function12888$$Flash Player + 559\n\nframe #12: 0x00000001002fd32c Flash Player`___lldb_unnamed_function12368$$Flash Player + 540\n\nframe #13: 0x0000000100301438 Flash Player`___lldb_unnamed_function12395$$Flash Player + 968\n\nframe #14: 0x0000000100302447 Flash Player`___lldb_unnamed_function12397$$Flash Player + 1527\n\nframe #15: 0x0000000100309957 Flash Player`___lldb_unnamed_function12454$$Flash Player + 535\n\nframe #16: 0x0000000100308e12 Flash Player`___lldb_unnamed_function12453$$Flash Player + 770\n\nframe #17: 0x0000000100350dc3 Flash Player`___lldb_unnamed_function12977$$Flash Player + 371\n\nframe #18: 0x000000010039702a Flash Player`___lldb_unnamed_function14247$$Flash Player + 138\n\nframe #19: 0x0000000100405546 Flash Player`main + 133478\n\nframe #20: 0x000000010040563e Flash Player`main + 133726\n\nframe #21: 0x000000010039630a Flash Player`___lldb_unnamed_function14228$$Flash Player + 10\n\nframe #22: 0x00000001001032fd Flash Player`___lldb_unnamed_function2712$$Flash Player + 13\n\nframe #23: 0x000000010034863c Flash Player`___lldb_unnamed_function12938$$Flash Player + 844\n\nframe #24: 0x00000001003489b4 Flash Player`___lldb_unnamed_function12939$$Flash Player + 436\n\nframe #25: 0x00000001003e2499 Flash Player`___lldb_unnamed_function15719$$Flash Player + 1145\n\nframe #26: 0x00000001003e29ee Flash Player`___lldb_unnamed_function15722$$Flash Player + 46\n\nframe #27: 0x00007fff8c0fb2c4 AppKit`-[NSApplication _doOpenFile:ok:tryTemp:] + 315\n\nframe #28: 0x00007fff8bd26775 AppKit`-[NSApplication finishLaunching] + 1557\n\nframe #29: 0x00007fff8bd25e05 AppKit`-[NSApplication run] + 231\n\nframe #30: 0x00007fff8bca8520 AppKit`NSApplicationMain + 1176\n\nframe #31: 0x0000000100001784 Flash Player`___lldb_unnamed_function1$$Flash Player + 52\n\n##Reference\nriusksk of Tencent Security Platform Department (CVE-2016-0992):\nhttps://helpx.adobe.com/security/products/flash-player/apsb16-08.html\n\n\n\n","vulnerability_information_html":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eA Uninitialised Memory Corruption exist in Adobe Flash Player SA for Mac (test in v20.0.0.228 sa version)，successful exploitation could cause a crash and potentially allow an attacker to take control of the affected system. \u003c/p\u003e\n\n\u003ch2 id=\"environment\"\u003eEnvironment\u003c/h2\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e1、Mac OSX 10.11.2\u003cbr\u003e\n2、flashplayer20_0d0_228_mac_sa\u003c/p\u003e\n\n\u003ch2 id=\"details\"\u003eDetails\u003c/h2\u003e\n\n\u003chr\u003e\n\n\u003cp\u003evalgrind --tool=memcheck /Users/riusksk/Downloads/Flash\\ Player.app/Contents/MacOS/Flash\\ Player poc.swf    \u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Memcheck, a memory error detector\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Copyright (C) 2002-2015, and GNU GPL\u0026#39;d, by Julian Seward et al.\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Command: /Users/riusksk/Downloads/Flash\\ Player.app/Contents/MacOS/Flash\\ Player poc.swf\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Conditional jump or move depends on uninitialised value(s)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    at 0x7FFF5FC24A27: bcmp (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC11914: ImageLoaderMachO::validateFirstPages(linkedit_data_command const*, int, unsigned char const*, unsigned long, long long, ImageLoader::LinkContext const\u0026amp;) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC16B8A: ImageLoaderMachOCompressed::instantiateFromFile(char const*, int, unsigned char const*, unsigned long, unsigned long long, unsigned long long, stat const\u0026amp;, unsigned int, unsigned int, linkedit_data_command const*, encryption_info_command const*, ImageLoader::LinkContext const\u0026amp;) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC10A7E: ImageLoaderMachO::instantiateFromFile(char const*, int, unsigned char const*, unsigned long long, unsigned long long, stat const\u0026amp;, ImageLoader::LinkContext const\u0026amp;) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC038C2: dyld::loadPhase6(int, stat const\u0026amp;, char const*, dyld::LoadContext const\u0026amp;) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC0846D: dyld::loadPhase5(char const*, char const*, dyld::LoadContext const\u0026amp;, std::\u003cstrong\u003e1::vector\u0026lt;char const*, std::\u003c/strong\u003e1::allocator\u0026lt;char const*\u0026gt; \u0026gt;*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC0818D: dyld::loadPhase4(char const*, char const*, dyld::LoadContext const\u0026amp;, std::\u003cstrong\u003e1::vector\u0026lt;char const*, std::\u003c/strong\u003e1::allocator\u0026lt;char const*\u0026gt; \u0026gt;*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC07EF2: dyld::loadPhase3(char const*, char const*, dyld::LoadContext const\u0026amp;, std::\u003cstrong\u003e1::vector\u0026lt;char const*, std::\u003c/strong\u003e1::allocator\u0026lt;char const*\u0026gt; \u0026gt;*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC07647: dyld::loadPhase1(char const*, char const*, dyld::LoadContext const\u0026amp;, std::\u003cstrong\u003e1::vector\u0026lt;char const*, std::\u003c/strong\u003e1::allocator\u0026lt;char const*\u0026gt; \u0026gt;*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC0347A: dyld::loadPhase0(char const*, char const*, dyld::LoadContext const\u0026amp;, std::\u003cstrong\u003e1::vector\u0026lt;char const*, std::\u003c/strong\u003e1::allocator\u0026lt;char const*\u0026gt; \u0026gt;*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC0315E: dyld::load(char const*, dyld::LoadContext const\u0026amp;) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e    by 0x7FFF5FC0870A: dyld::libraryLocator(char const*, bool, char const*, ImageLoader::RPathChain const*) (in /usr/lib/dyld)\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e3453\u003c/mark\u003e Use of uninitialised value of size 8\u003c/p\u003e\n\n\u003cp\u003elldb Flash\\ Player\u003c/p\u003e\n\n\u003cp\u003e(lldb) target create \u0026quot;Flash Player\u0026quot;\u003c/p\u003e\n\n\u003cp\u003ewarning: (x86_64) /Users/riusksk/Downloads/Flash Player.app/Contents/MacOS/Flash Player empty dSYM file detected, dSYM was created with an executable with no debug info.\u003c/p\u003e\n\n\u003cp\u003eCurrent executable set to \u0026#39;Flash Player\u0026#39; (x86_64).\u003c/p\u003e\n\n\u003cp\u003e(lldb) run ~/Downloads/poc.swf\u003c/p\u003e\n\n\u003cp\u003eProcess 96650 launched: \u0026#39;/Users/riusksk/Downloads/Flash Player.app/Contents/MacOS/Flash Player\u0026#39; (x86_64)\u003c/p\u003e\n\n\u003cp\u003eVector smash protection is enabled.\u003c/p\u003e\n\n\u003cp\u003eProcess 96650 stopped\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethread #1: tid = 0xbbffa, 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15, queue = \u0026#39;com.apple.main-thread\u0026#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eframe #0: 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15\u003c/p\u003e\n\n\u003cp\u003eCoreFoundation`CFStringGetLength:\u003c/p\u003e\n\n\u003cp\u003e-\u0026gt;  0x7fff82cc0b4f \u0026lt;+15\u0026gt;: movq   (%rbx), %rax\u003c/p\u003e\n\n\u003cp\u003e0x7fff82cc0b52 \u0026lt;+18\u0026gt;: testq  %rax, %rax\u003c/p\u003e\n\n\u003cp\u003e0x7fff82cc0b55 \u0026lt;+21\u0026gt;: je     0x7fff82cc0b97            ; \u0026lt;+87\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e0x7fff82cc0b57 \u0026lt;+23\u0026gt;: leaq   -0xff65e76(%rip), %rcx    ; __CFConstantStringClassReferencePtr\u003c/p\u003e\n\n\u003cp\u003e(lldb) bt\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003ethread #1: tid = 0xbbffa, 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15, queue = \u0026#39;com.apple.main-thread\u0026#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eframe #0: 0x00007fff82cc0b4f CoreFoundation`CFStringGetLength + 15\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eframe #1: 0x00007fff82df89cc CoreFoundation`_CFURLCreateWithFileSystemPath + 60\u003c/p\u003e\n\n\u003cp\u003eframe #2: 0x000000010040d204 Flash Player`main + 165412\u003c/p\u003e\n\n\u003cp\u003eframe #3: 0x0000000100394bb4 Flash Player`___lldb_unnamed_function14212$$Flash Player + 356\u003c/p\u003e\n\n\u003cp\u003eframe #4: 0x00000001004053e8 Flash Player`main + 133128\u003c/p\u003e\n\n\u003cp\u003eframe #5: 0x000000010040563e Flash Player`main + 133726\u003c/p\u003e\n\n\u003cp\u003eframe #6: 0x000000010039630a Flash Player`___lldb_unnamed_function14228$$Flash Player + 10\u003c/p\u003e\n\n\u003cp\u003eframe #7: 0x00000001001032fd Flash Player`___lldb_unnamed_function2712$$Flash Player + 13\u003c/p\u003e\n\n\u003cp\u003eframe #8: 0x000000010034863c Flash Player`___lldb_unnamed_function12938$$Flash Player + 844\u003c/p\u003e\n\n\u003cp\u003eframe #9: 0x000000010034824c Flash Player`___lldb_unnamed_function12937$$Flash Player + 764\u003c/p\u003e\n\n\u003cp\u003eframe #10: 0x0000000100342843 Flash Player`___lldb_unnamed_function12890$$Flash Player + 1203\u003c/p\u003e\n\n\u003cp\u003eframe #11: 0x00000001003421ef Flash Player`___lldb_unnamed_function12888$$Flash Player + 559\u003c/p\u003e\n\n\u003cp\u003eframe #12: 0x00000001002fd32c Flash Player`___lldb_unnamed_function12368$$Flash Player + 540\u003c/p\u003e\n\n\u003cp\u003eframe #13: 0x0000000100301438 Flash Player`___lldb_unnamed_function12395$$Flash Player + 968\u003c/p\u003e\n\n\u003cp\u003eframe #14: 0x0000000100302447 Flash Player`___lldb_unnamed_function12397$$Flash Player + 1527\u003c/p\u003e\n\n\u003cp\u003eframe #15: 0x0000000100309957 Flash Player`___lldb_unnamed_function12454$$Flash Player + 535\u003c/p\u003e\n\n\u003cp\u003eframe #16: 0x0000000100308e12 Flash Player`___lldb_unnamed_function12453$$Flash Player + 770\u003c/p\u003e\n\n\u003cp\u003eframe #17: 0x0000000100350dc3 Flash Player`___lldb_unnamed_function12977$$Flash Player + 371\u003c/p\u003e\n\n\u003cp\u003eframe #18: 0x000000010039702a Flash Player`___lldb_unnamed_function14247$$Flash Player + 138\u003c/p\u003e\n\n\u003cp\u003eframe #19: 0x0000000100405546 Flash Player`main + 133478\u003c/p\u003e\n\n\u003cp\u003eframe #20: 0x000000010040563e Flash Player`main + 133726\u003c/p\u003e\n\n\u003cp\u003eframe #21: 0x000000010039630a Flash Player`___lldb_unnamed_function14228$$Flash Player + 10\u003c/p\u003e\n\n\u003cp\u003eframe #22: 0x00000001001032fd Flash Player`___lldb_unnamed_function2712$$Flash Player + 13\u003c/p\u003e\n\n\u003cp\u003eframe #23: 0x000000010034863c Flash Player`___lldb_unnamed_function12938$$Flash Player + 844\u003c/p\u003e\n\n\u003cp\u003eframe #24: 0x00000001003489b4 Flash Player`___lldb_unnamed_function12939$$Flash Player + 436\u003c/p\u003e\n\n\u003cp\u003eframe #25: 0x00000001003e2499 Flash Player`___lldb_unnamed_function15719$$Flash Player + 1145\u003c/p\u003e\n\n\u003cp\u003eframe #26: 0x00000001003e29ee Flash Player`___lldb_unnamed_function15722$$Flash Player + 46\u003c/p\u003e\n\n\u003cp\u003eframe #27: 0x00007fff8c0fb2c4 AppKit`-[NSApplication _doOpenFile:ok:tryTemp:] + 315\u003c/p\u003e\n\n\u003cp\u003eframe #28: 0x00007fff8bd26775 AppKit`-[NSApplication finishLaunching] + 1557\u003c/p\u003e\n\n\u003cp\u003eframe #29: 0x00007fff8bd25e05 AppKit`-[NSApplication run] + 231\u003c/p\u003e\n\n\u003cp\u003eframe #30: 0x00007fff8bca8520 AppKit`NSApplicationMain + 1176\u003c/p\u003e\n\n\u003cp\u003eframe #31: 0x0000000100001784 Flash Player`___lldb_unnamed_function1$$Flash Player + 52\u003c/p\u003e\n\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\n\u003cp\u003eriusksk of Tencent Security Platform Department (CVE-2016-0992):\u003cbr\u003e\n\u003ca title=\"https://helpx.adobe.com/security/products/flash-player/apsb16-08.html\" href=\"/redirect?url=https%3A%2F%2Fhelpx.adobe.com%2Fsecurity%2Fproducts%2Fflash-player%2Fapsb16-08.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://helpx.adobe.com/security/products/flash-player/apsb16-08.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","bounty_amount":"2000.0","formatted_bounty":"$2,000","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":77949,"file_name":"poc.swf","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/077/949/92d21687f1308e7c2609d18c8935008df0b9564a/poc.swf?response-content-disposition=attachment%3B%20filename%3D%22poc.swf%22%3B%20filename%2A%3DUTF-8%27%27poc.swf\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042058Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=70810880fbaab238081dfd26a6de5b8389faab6b9fa429e1a36ee9cfb6792efe","file_size":1424547,"type":"application/x-shockwave-flash"}],"allow_singular_disclosure_at":"2019-11-12T09:42:52.131Z","allow_singular_disclosure_after":-35663885.98973227,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":934991,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-30T23:25:25.931Z","updated_at":"2016-04-30T23:25:25.931Z","actor":{"url":"/ibb-flash","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Flash (IBB)"}},"bounty_amount":"2000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-flash","collaborator":{"username":"riusksk","url":"/riusksk"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":934992,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-30T23:25:32.811Z","updated_at":"2016-04-30T23:25:32.811Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"riusksk","url":"/riusksk"},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026614,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:42:52.056Z","updated_at":"2019-10-13T09:42:52.056Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285909,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:42:53.181Z","updated_at":"2019-11-12T09:42:53.181Z","actor":{"url":"/ibb-flash","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Flash (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}