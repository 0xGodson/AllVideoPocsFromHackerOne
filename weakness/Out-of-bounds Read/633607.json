{"id":633607,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MzM2MDc=","url":"https://hackerone.com/reports/633607","title":"Invalid read in `str_replace_partial`","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2019-07-02T06:34:49.653Z","submitted_at":"2019-07-02T06:34:49.653Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dgaletic","url":"/dgaletic","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-09-04T13:34:59.341Z","bug_reporter_agreed_on_going_public_at":"2019-09-03T10:30:25.094Z","team_member_agreed_on_going_public_at":"2019-09-04T13:34:59.230Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"PoC\n===\nThe attached POC shows an invalid read.\n\nDebug info\n==========\nThe issue happens when `memmove` is called inside `str_replace_partial`.\n\nvalgrind report:\n\n```\n0==27051== Invalid read of size 1\n==27051==    at 0x483FA10: memmove (vg_replace_strmem.c:1270)\n==27051==    by 0x135D60: str_replace_partial (string.c:1193)\n==27051==    by 0x1359CB: mrb_str_aset (string.c:1226)\n==27051==    by 0x131AE8: mrb_str_aset_m (string.c:1255)\n==27051==    by 0x1656FE: mrb_f_send (vm.c:633)\n==27051==    by 0x169C3E: mrb_vm_exec (vm.c:1441)\n==27051==    by 0x166540: mrb_vm_run (vm.c:949)\n==27051==    by 0x17A5C7: mrb_top_run (vm.c:2837)\n==27051==    by 0x153113: mrb_load_exec (parse.y:6318)\n==27051==    by 0x1533E6: mrb_load_file_cxt (parse.y:6327)\n==27051==    by 0x10DC3C: main (mruby.c:270)\n==27051==  Address 0x4da9370 is 176 bytes inside an unallocated block of size 2,796,832 in arena \"client\"\n```\n\ngit bisect shows the issue was introduced in [0d452073](https://github.com/mruby/mruby/commit/0d452073f46fc46496200db610ce785e514cdb65).\n\nTest platform\n=============\n* Arch Linux\n\nThank you,\nDinko Galetic\nDenis Kasak\n\n## Impact\n\nPotential information disclosure.","vulnerability_information_html":"\u003ch1 id=\"poc\"\u003ePoC\u003c/h1\u003e\n\n\u003cp\u003eThe attached POC shows an invalid read.\u003c/p\u003e\n\n\u003ch1 id=\"debug-info\"\u003eDebug info\u003c/h1\u003e\n\n\u003cp\u003eThe issue happens when \u003ccode\u003ememmove\u003c/code\u003e is called inside \u003ccode\u003estr_replace_partial\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003evalgrind report:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0==27051== Invalid read of size 1\n==27051==    at 0x483FA10: memmove (vg_replace_strmem.c:1270)\n==27051==    by 0x135D60: str_replace_partial (string.c:1193)\n==27051==    by 0x1359CB: mrb_str_aset (string.c:1226)\n==27051==    by 0x131AE8: mrb_str_aset_m (string.c:1255)\n==27051==    by 0x1656FE: mrb_f_send (vm.c:633)\n==27051==    by 0x169C3E: mrb_vm_exec (vm.c:1441)\n==27051==    by 0x166540: mrb_vm_run (vm.c:949)\n==27051==    by 0x17A5C7: mrb_top_run (vm.c:2837)\n==27051==    by 0x153113: mrb_load_exec (parse.y:6318)\n==27051==    by 0x1533E6: mrb_load_file_cxt (parse.y:6327)\n==27051==    by 0x10DC3C: main (mruby.c:270)\n==27051==  Address 0x4da9370 is 176 bytes inside an unallocated block of size 2,796,832 in arena \u0026quot;client\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003egit bisect shows the issue was introduced in \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F0d452073f46fc46496200db610ce785e514cdb65\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e0d452073\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch1 id=\"test-platform\"\u003eTest platform\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eArch Linux\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThank you,\u003cbr\u003e\nDinko Galetic\u003cbr\u003e\nDenis Kasak\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003ePotential information disclosure.\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":8,"name":"Out-of-bounds Read"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":520481,"file_name":"poc","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/520/481/02b862e64d0f8a58d7bc71c2225e3d9a9f4f9112/poc?response-content-disposition=attachment%3B%20filename%3D%22poc%22%3B%20filename%2A%3DUTF-8%27%27poc\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063152Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=a82796658061ab8846826577c9c7c624245c16cb03171e4ee77db258fdcf47bf","file_size":597,"type":"text/plain"}],"allow_singular_disclosure_at":"2019-10-03T10:30:25.159Z","allow_singular_disclosure_after":-39124887.23614872,"singular_disclosure_allowed":true,"vote_count":7,"voters":["mik317","mygf","z41b1337_","cryptographer","tej333","quixoticluck","formerslice"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5239589,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Thank you for your report.\n\nI am unable to reproduce this issue. Could you please let me know exactly which commit you tested, as well as the exact details of your environment (OS, compiler version, build options, etc). Thanks in advance.","markdown_message":"\u003cp\u003eThank you for your report.\u003c/p\u003e\n\n\u003cp\u003eI am unable to reproduce this issue. Could you please let me know exactly which commit you tested, as well as the exact details of your environment (OS, compiler version, build options, etc). Thanks in advance.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-02T15:48:45.415Z","updated_at":"2019-07-02T15:48:45.415Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5245878,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Test system: Arch Linux\n\nCompilation: We compiled using clang 8.0.0, and with the mruby-io module disabled.\n\nWe retested and the issue is present in the currently latest commit `8c29b5998fd0f603b654247f09c91b452372026d`. Bisect suggests it was introduced in [0d452073](https://github.com/mruby/mruby/commit/0d452073f46fc46496200db610ce785e514cdb65)\n\nNew POC\n=======\nIn the meantime, we've constructed a simpler POC:\n\n```\na = \"0\" * 257\nb = \"0\" * 256\na[b] = \"\"\n```\n\nOn the above, valgrind will report an invalid read in `memmove`, called from `str_replace_partial`. However, ASAN will not report an error.\n\nTo see the issue with ASAN as well, we needed to increase the string lengths:\n\n```\na = \"0\" * 257 * 4\nb = \"0\" * 256 * 4\na[b] = \"\"\n```\n\nThis produced:\n\n```\n==13329==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf4d111f0 at pc 0x5667205e bp 0xffff4708 sp 0xffff42e0\nREAD of size 4 at 0xf4d111f0 thread T0\n    #0 0x5667205d in __asan_memmove (/home/user/repos/mruby/mruby-asan/bin/mruby+0x11d05d)\n    #1 0x5675ba98 in str_replace_partial /home/user/repos/mruby/mruby-asan/src/string.c:1193:3\n    #2 0x5675aaf6 in mrb_str_aset /home/user/repos/mruby/mruby-asan/src/string.c:1226:7\n    #3 0x56747e96 in mrb_str_aset_m /home/user/repos/mruby/mruby-asan/src/string.c:1255:3\n    #4 0x56840788 in mrb_vm_exec /home/user/repos/mruby/mruby-asan/src/vm.c:1441:18\n    #5 0x5682f239 in mrb_vm_run /home/user/repos/mruby/mruby-asan/src/vm.c:949:12\n    #6 0x5688db4d in mrb_top_run /home/user/repos/mruby/mruby-asan/src/vm.c:2837:12\n    #7 0x567e96a6 in mrb_load_exec /home/user/repos/mruby/mruby-asan/mrbgems/mruby-compiler/core/parse.y:6318:7\n    #8 0x567ea0ba in mrb_load_file_cxt /home/user/repos/mruby/mruby-asan/mrbgems/mruby-compiler/core/parse.y:6327:10\n    #9 0x566b7f3c in main /home/user/repos/mruby/mruby-asan/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:270:11\n    #10 0xf7bf77d0 in __libc_start_main (/usr/lib32/libc.so.6+0x1e7d0)\n    #11 0x565903b0 in _start (/home/user/repos/mruby/mruby-asan/bin/mruby+0x3b3b0)\n\nAddress 0xf4d111f0 is a wild pointer.\n```\n\nIt's possible to modify the string sizes further and trigger a segfault. On our test machines, it happened with:\n\n```\na = \"0\" * 257 * 65536\nb = \"0\" * 256\na[b] = \"\"\n```\n\nCause\n=====\n\nWe believe the issue happens due to a `resize_capa` call in `str_replace_partial`.\n\n```\n  if (len \u003c newlen || len - newlen \u003e= shrink_threshold) {\n    resize_capa(mrb, str, newlen);\n  }\n```\n\nThe call is made *if* the new string will be larger than the old string (to increase the capacity) *or* if the new string is smaller than the old string by at least `shrink_threshold` (to trim the unused memory). This bug happens in the latter case.\n\n`str` is reduced, but `memmove` is called immediately after using the length `len` of the string prior to reduction. This makes `memmove` use data beyond allocated memory as its `src` parameter, leading to the invalid read.\n\nFix\n===\n\nWe suggest checking twice whether `resize_capa` should be called: once prior to `memmove`, in case the new string will be larger and need more memory, and once after `memmove`, in case the new string was smaller and memory could be trimmed. This is seen in the diff below.\n\nAlternatively, a temporary string could be used to avoid in--place changes.\n\n```diff\ndiff --git a/src/string.c b/src/string.c\nindex 6938418f..4ba596bb 100644\n--- a/src/string.c\n+++ b/src/string.c\n@@ -1184,7 +1184,7 @@ str_replace_partial(mrb_state *mrb, mrb_value src, mrb_int pos, mrb_int end, mrb\n\n   mrb_str_modify(mrb, str);\n\n-  if (len \u003c newlen || len - newlen \u003e= shrink_threshold) {\n+  if (len \u003c newlen) {\n     resize_capa(mrb, str, newlen);\n   }\n\n@@ -1194,9 +1194,15 @@ str_replace_partial(mrb_state *mrb, mrb_value src, mrb_int pos, mrb_int end, mrb\n   if (!mrb_nil_p(rep)) {\n     memcpy(strp + pos, RSTRING_PTR(rep), replen);\n   }\n+\n   RSTR_SET_LEN(str, newlen);\n   strp[newlen] = '\\0';\n\n+  if (len - newlen \u003e= shrink_threshold) {\n+    resize_capa(mrb, str, newlen);\n+  }\n+\n+\n   return src;\n }\n\n```\n\n","markdown_message":"\u003cp\u003eTest system: Arch Linux\u003c/p\u003e\n\n\u003cp\u003eCompilation: We compiled using clang 8.0.0, and with the mruby-io module disabled.\u003c/p\u003e\n\n\u003cp\u003eWe retested and the issue is present in the currently latest commit \u003ccode\u003e8c29b5998fd0f603b654247f09c91b452372026d\u003c/code\u003e. Bisect suggests it was introduced in \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F0d452073f46fc46496200db610ce785e514cdb65\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e0d452073\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"new-poc\"\u003eNew POC\u003c/h1\u003e\n\n\u003cp\u003eIn the meantime, we\u0026#39;ve constructed a simpler POC:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ea = \u0026quot;0\u0026quot; * 257\nb = \u0026quot;0\u0026quot; * 256\na[b] = \u0026quot;\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOn the above, valgrind will report an invalid read in \u003ccode\u003ememmove\u003c/code\u003e, called from \u003ccode\u003estr_replace_partial\u003c/code\u003e. However, ASAN will not report an error.\u003c/p\u003e\n\n\u003cp\u003eTo see the issue with ASAN as well, we needed to increase the string lengths:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ea = \u0026quot;0\u0026quot; * 257 * 4\nb = \u0026quot;0\u0026quot; * 256 * 4\na[b] = \u0026quot;\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis produced:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==13329==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf4d111f0 at pc 0x5667205e bp 0xffff4708 sp 0xffff42e0\nREAD of size 4 at 0xf4d111f0 thread T0\n    #0 0x5667205d in __asan_memmove (/home/user/repos/mruby/mruby-asan/bin/mruby+0x11d05d)\n    #1 0x5675ba98 in str_replace_partial /home/user/repos/mruby/mruby-asan/src/string.c:1193:3\n    #2 0x5675aaf6 in mrb_str_aset /home/user/repos/mruby/mruby-asan/src/string.c:1226:7\n    #3 0x56747e96 in mrb_str_aset_m /home/user/repos/mruby/mruby-asan/src/string.c:1255:3\n    #4 0x56840788 in mrb_vm_exec /home/user/repos/mruby/mruby-asan/src/vm.c:1441:18\n    #5 0x5682f239 in mrb_vm_run /home/user/repos/mruby/mruby-asan/src/vm.c:949:12\n    #6 0x5688db4d in mrb_top_run /home/user/repos/mruby/mruby-asan/src/vm.c:2837:12\n    #7 0x567e96a6 in mrb_load_exec /home/user/repos/mruby/mruby-asan/mrbgems/mruby-compiler/core/parse.y:6318:7\n    #8 0x567ea0ba in mrb_load_file_cxt /home/user/repos/mruby/mruby-asan/mrbgems/mruby-compiler/core/parse.y:6327:10\n    #9 0x566b7f3c in main /home/user/repos/mruby/mruby-asan/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:270:11\n    #10 0xf7bf77d0 in __libc_start_main (/usr/lib32/libc.so.6+0x1e7d0)\n    #11 0x565903b0 in _start (/home/user/repos/mruby/mruby-asan/bin/mruby+0x3b3b0)\n\nAddress 0xf4d111f0 is a wild pointer.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt\u0026#39;s possible to modify the string sizes further and trigger a segfault. On our test machines, it happened with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ea = \u0026quot;0\u0026quot; * 257 * 65536\nb = \u0026quot;0\u0026quot; * 256\na[b] = \u0026quot;\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"cause\"\u003eCause\u003c/h1\u003e\n\n\u003cp\u003eWe believe the issue happens due to a \u003ccode\u003eresize_capa\u003c/code\u003e call in \u003ccode\u003estr_replace_partial\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  if (len \u0026lt; newlen || len - newlen \u0026gt;= shrink_threshold) {\n    resize_capa(mrb, str, newlen);\n  }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe call is made \u003cem\u003eif\u003c/em\u003e the new string will be larger than the old string (to increase the capacity) \u003cem\u003eor\u003c/em\u003e if the new string is smaller than the old string by at least \u003ccode\u003eshrink_threshold\u003c/code\u003e (to trim the unused memory). This bug happens in the latter case.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estr\u003c/code\u003e is reduced, but \u003ccode\u003ememmove\u003c/code\u003e is called immediately after using the length \u003ccode\u003elen\u003c/code\u003e of the string prior to reduction. This makes \u003ccode\u003ememmove\u003c/code\u003e use data beyond allocated memory as its \u003ccode\u003esrc\u003c/code\u003e parameter, leading to the invalid read.\u003c/p\u003e\n\n\u003ch1 id=\"fix\"\u003eFix\u003c/h1\u003e\n\n\u003cp\u003eWe suggest checking twice whether \u003ccode\u003eresize_capa\u003c/code\u003e should be called: once prior to \u003ccode\u003ememmove\u003c/code\u003e, in case the new string will be larger and need more memory, and once after \u003ccode\u003ememmove\u003c/code\u003e, in case the new string was smaller and memory could be trimmed. This is seen in the diff below.\u003c/p\u003e\n\n\u003cp\u003eAlternatively, a temporary string could be used to avoid in--place changes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/src/string.c b/src/string.c\nindex 6938418f..4ba596bb 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/src/string.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/src/string.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1184,7 +1184,7 @@\u003c/span\u003e str_replace_partial(mrb_state *mrb, mrb_value src, mrb_int pos, mrb_int end, mrb\n\n   mrb_str_modify(mrb, str);\n\n-  if (len \u0026lt; newlen || len - newlen \u0026gt;= shrink_threshold) {\n\u003cspan class=\"gi\"\u003e+  if (len \u0026lt; newlen) {\n\u003c/span\u003e     resize_capa(mrb, str, newlen);\n   }\n\n@@ -1194,9 +1194,15 @@ str_replace_partial(mrb_state *mrb, mrb_value src, mrb_int pos, mrb_int end, mrb\n   if (!mrb_nil_p(rep)) {\n     memcpy(strp + pos, RSTRING_PTR(rep), replen);\n   }\n\u003cspan class=\"gi\"\u003e+\n\u003c/span\u003e   RSTR_SET_LEN(str, newlen);\n   strp[newlen] = \u0026#39;\\0\u0026#39;;\n\n+  if (len - newlen \u0026gt;= shrink_threshold) {\n\u003cspan class=\"gi\"\u003e+    resize_capa(mrb, str, newlen);\n+  }\n+\n+\n\u003c/span\u003e   return src;\n }\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-07-03T14:05:29.585Z","updated_at":"2019-07-03T14:15:35.865Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5245996,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the additional information. We've now reproduced the crash and opened an upstream issue: https://github.com/mruby/mruby/issues/4549","markdown_message":"\u003cp\u003eThanks for the additional information. We\u0026#39;ve now reproduced the crash and opened an upstream issue: \u003ca title=\"https://github.com/mruby/mruby/issues/4549\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fissues%2F4549\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/issues/4549\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-03T14:29:32.968Z","updated_at":"2019-07-03T14:29:32.968Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5255761,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report. Your proposed fix was accepted upstream in https://github.com/mruby/mruby/pull/4551.","markdown_message":"\u003cp\u003eThanks again for your report. Your proposed fix was accepted upstream in \u003ca title=\"https://github.com/mruby/mruby/pull/4551\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F4551\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/pull/4551\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-04T18:44:17.836Z","updated_at":"2019-07-04T18:44:17.836Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dgaletic","url":"/dgaletic"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5255763,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for improving the security of Shopify Scripts and mruby!","markdown_message":"\u003cp\u003eThanks for improving the security of Shopify Scripts and mruby!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-04T18:44:43.731Z","updated_at":"2019-07-04T18:44:43.731Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"1000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"dgaletic","url":"/dgaletic"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5717038,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-03T10:30:25.117Z","updated_at":"2019-09-03T10:30:25.117Z","first_to_agree":true,"actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5728055,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-04T13:34:59.258Z","updated_at":"2019-09-04T13:34:59.258Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5728056,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-04T13:34:59.365Z","updated_at":"2019-09-04T13:34:59.365Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}