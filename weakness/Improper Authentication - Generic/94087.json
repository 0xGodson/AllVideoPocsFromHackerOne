{"id":94087,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NDA4Nw==","url":"https://hackerone.com/reports/94087","title":"Arbitrary read on s3://shopify-delivery-app-storage/files","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-10-15T20:38:59.534Z","submitted_at":"2015-10-15T20:38:59.534Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"brakhane","url":"/brakhane","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":1382,"url":"https://hackerone.com/shopify","handle":"shopify","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Shopify","twitter_handle":"","website":"https://www.shopify.com","about":"Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2015-10-20T20:27:10.858Z","bug_reporter_agreed_on_going_public_at":"2015-10-20T20:27:10.623Z","team_member_agreed_on_going_public_at":"2015-10-20T20:24:03.816Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Short\n====\nAn attacker is able to read arbitrary files from the delivery app storage if the bucket key is known to him.\n\nVector\n====\n1) The victim uploads a.png to a product his shop located at https://myhackeronestore.myshopify.com.\n1a) The file is stored at s3://shopify-delivery-app-storage/files/myhackeronestore.myshopify.com/5682196162/a.png\n2) The attacker uploads b.png to a product in his shop (location irrelevant) and changes the 'attachment[filepath]' parameter from \"b.png\" to \"b.png/../../../../files/myhackeronestore.myshopify.com/5682196162/a.png\" in the initial call to /attachments.\n3) The attacker will now go ahead an generate a manual download link for his newly created attachment\n3a) When he visits the generated manual download link the site will state \"b.png/../../../../files/myhackeronestore.myshopify.com/5682196162/a.png\" as the file name\n3b) When the attacker proceeds to press the download button he'll get a working link to get a.png from the victim.\n\nWhat's wrong here\n====\nThe attacker is able to craft the bucket key in a way to use path traversals (and possibly other wired things related to AWS S3 key names) to get files he shouldn't have access to. \n\nHow it should be\n====\nIn an ideal world the delivery app should control 100% of the bucket key name to make sure no harm can be done by attacks like this. This could be achieved by having a mapping from uploaded_filename to actual_key_in_s3 (is there a way to tell S3 how the downloaded file should be named?). \n\nConclusion\n====\nIn my book this is fraud and shouldn't be there ;) You might consider the approach to control 100% of the bucket key to rule an entire class of bugs/vulnerabilities here out as filtering of the filename is tricky and will probably fail (now or in the near feature, who knows what S3 offers as a neat new 'feature' in the future).  Also there are just too many variants on how things could get wrong, what comes to mind is: Encoding interpretation failures on the app side, hidden/not well documented features on the AWS side,...","vulnerability_information_html":"\u003ch1 id=\"short\"\u003eShort\u003c/h1\u003e\n\n\u003cp\u003eAn attacker is able to read arbitrary files from the delivery app storage if the bucket key is known to him.\u003c/p\u003e\n\n\u003ch1 id=\"vector\"\u003eVector\u003c/h1\u003e\n\n\u003cp\u003e1) The victim uploads a.png to a product his shop located at \u003ca title=\"https://myhackeronestore.myshopify.com\" href=\"/redirect?url=https%3A%2F%2Fmyhackeronestore.myshopify.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://myhackeronestore.myshopify.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003cbr\u003e\n1a) The file is stored at s3://shopify-delivery-app-storage/files/myhackeronestore.myshopify.com/5682196162/a.png\u003cbr\u003e\n2) The attacker uploads b.png to a product in his shop (location irrelevant) and changes the \u0026#39;attachment[filepath]\u0026#39; parameter from \u0026quot;b.png\u0026quot; to \u0026quot;b.png/../../../../files/myhackeronestore.myshopify.com/5682196162/a.png\u0026quot; in the initial call to /attachments.\u003cbr\u003e\n3) The attacker will now go ahead an generate a manual download link for his newly created attachment\u003cbr\u003e\n3a) When he visits the generated manual download link the site will state \u0026quot;b.png/../../../../files/myhackeronestore.myshopify.com/5682196162/a.png\u0026quot; as the file name\u003cbr\u003e\n3b) When the attacker proceeds to press the download button he\u0026#39;ll get a working link to get a.png from the victim.\u003c/p\u003e\n\n\u003ch1 id=\"what-s-wrong-here\"\u003eWhat\u0026#39;s wrong here\u003c/h1\u003e\n\n\u003cp\u003eThe attacker is able to craft the bucket key in a way to use path traversals (and possibly other wired things related to AWS S3 key names) to get files he shouldn\u0026#39;t have access to. \u003c/p\u003e\n\n\u003ch1 id=\"how-it-should-be\"\u003eHow it should be\u003c/h1\u003e\n\n\u003cp\u003eIn an ideal world the delivery app should control 100% of the bucket key name to make sure no harm can be done by attacks like this. This could be achieved by having a mapping from uploaded_filename to actual_key_in_s3 (is there a way to tell S3 how the downloaded file should be named?). \u003c/p\u003e\n\n\u003ch1 id=\"conclusion\"\u003eConclusion\u003c/h1\u003e\n\n\u003cp\u003eIn my book this is fraud and shouldn\u0026#39;t be there ;) You might consider the approach to control 100% of the bucket key to rule an entire class of bugs/vulnerabilities here out as filtering of the filename is tricky and will probably fail (now or in the near feature, who knows what S3 offers as a neat new \u0026#39;feature\u0026#39; in the future).  Also there are just too many variants on how things could get wrong, what comes to mind is: Encoding interpretation failures on the app side, hidden/not well documented features on the AWS side,...\u003c/p\u003e\n","bounty_amount":"1500.0","formatted_bounty":"$1,500","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2015-11-19T20:24:04.025Z","allow_singular_disclosure_after":-161261328.47828314,"singular_disclosure_allowed":true,"vote_count":1,"voters":["spetr0x"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":622251,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\r\n\r\nOur team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don't worry, we'll get to yours!\r\n\r\nWhile you are waiting, you can read over our list of non applicable issues listed on our program page: https://hackerone.com/shopify. Make sure your issue isn't listed!","markdown_message":"\u003cp\u003eThank you for reporting this bug! This is an automated response to let you know that we\u0026#39;ve received your issue, and we\u0026#39;ll process it as soon as possible.\u003c/p\u003e\n\n\u003cp\u003eOur team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don\u0026#39;t worry, we\u0026#39;ll get to yours!\u003c/p\u003e\n\n\u003cp\u003eWhile you are waiting, you can read over our list of non applicable issues listed on our program page: \u003ca title=\"https://hackerone.com/shopify\" href=\"https://hackerone.com/shopify\"\u003ehttps://hackerone.com/shopify\u003c/a\u003e. Make sure your issue isn\u0026#39;t listed!\u003c/p\u003e\n","automated_response":true,"created_at":"2015-10-15T20:39:00.481Z","updated_at":"2015-10-15T20:39:00.481Z","actor":{"url":"/shopify","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Shopify"}},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":622253,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Oh, I'm sorry - the title is wrong. It should be 'Arbitrary read on s3://shopify-delivery-app-storage/' as this is not limited to the /files/ dir. Guess there's nothing else in that bucket but you never know, maybe some metadata?","markdown_message":"\u003cp\u003eOh, I\u0026#39;m sorry - the title is wrong. It should be \u0026#39;Arbitrary read on s3://shopify-delivery-app-storage/\u0026#39; as this is not limited to the /files/ dir. Guess there\u0026#39;s nothing else in that bucket but you never know, maybe some metadata?\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-15T20:40:15.908Z","updated_at":"2015-10-15T20:40:15.908Z","actor":{"username":"brakhane","cleared":false,"url":"/brakhane","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":622268,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This also doesn't surprisingly doesn't lead to an arbitrary write on the bucket. Guess there's some wired handling on amazons side going on. You might want to test this by yourself and see where the files land (I would bet they are stored in the correct directory with a key containing the path traversal part, would be nice to know whats going on there).","markdown_message":"\u003cp\u003eThis also doesn\u0026#39;t surprisingly doesn\u0026#39;t lead to an arbitrary write on the bucket. Guess there\u0026#39;s some wired handling on amazons side going on. You might want to test this by yourself and see where the files land (I would bet they are stored in the correct directory with a key containing the path traversal part, would be nice to know whats going on there).\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-15T20:49:39.713Z","updated_at":"2015-10-15T20:49:39.713Z","actor":{"username":"brakhane","cleared":false,"url":"/brakhane","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626575,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. I have reproduced the issue, and our engineering team is working on a fix.","markdown_message":"\u003cp\u003eThank you for your report. I have reproduced the issue, and our engineering team is working on a fix.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-20T19:56:05.739Z","updated_at":"2015-10-20T19:56:05.739Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626584,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We just deployed a fix that disallows `/` in the `attachment[filepath]` parameter. This appears to be sufficient to address the vulnerability.","markdown_message":"\u003cp\u003eWe just deployed a fix that disallows \u003ccode\u003e/\u003c/code\u003e in the \u003ccode\u003eattachment[filepath]\u003c/code\u003e parameter. This appears to be sufficient to address the vulnerability.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-20T20:09:45.702Z","updated_at":"2015-10-20T20:09:45.702Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626587,"is_internal":false,"editable":false,"type":"Activities::Comment","message":".","markdown_message":"\u003cp\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-20T20:14:23.205Z","updated_at":"2015-10-20T20:14:40.944Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626597,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify. This issue has been resolved.","markdown_message":"\u003cp\u003eThanks for helping improve the security of Shopify. This issue has been resolved.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-20T20:23:47.371Z","updated_at":"2015-10-20T20:23:47.371Z","actor":{"url":"/shopify","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Shopify"}},"bounty_amount":"1500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"shopify","collaborator":{"username":"brakhane","url":"/brakhane"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626598,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T20:23:56.063Z","updated_at":"2015-10-20T20:23:56.063Z","actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"brakhane","url":"/brakhane"},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626599,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T20:24:03.850Z","updated_at":"2015-10-20T20:24:03.850Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":626607,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You're welcome! Thank you very much for the bounty!","markdown_message":"\u003cp\u003eYou\u0026#39;re welcome! Thank you very much for the bounty!\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-20T20:26:55.313Z","updated_at":"2015-10-20T20:26:55.313Z","actor":{"username":"brakhane","cleared":false,"url":"/brakhane","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626610,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T20:27:10.681Z","updated_at":"2015-10-20T20:27:10.681Z","actor":{"username":"brakhane","cleared":false,"url":"/brakhane","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":626611,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2015-10-20T20:27:10.894Z","updated_at":"2015-10-20T20:27:10.894Z","actor":{"username":"brakhane","cleared":false,"url":"/brakhane","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/726/4b47d99eec4ee906a402afb934855158d1e6d929_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":941,"category":"team","content":"The [fog gem](https://github.com/fog/fog-aws/) performs [path normalization](https://github.com/fog/fog-aws/blob/27ec738ffea05beb0562f6097bd3bd6f8e2ff61f/lib/fog/aws/signaturev4.rb#L81-L97) on the user-controlled filename, which would have allowed a malicious user to specify a path containing \"../\". A valid download link (including the required signature) could be retrieved for any file uploaded to the amazon bucket, including other user's file.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThe \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffog%2Ffog-aws%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efog gem\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e performs \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffog%2Ffog-aws%2Fblob%2F27ec738ffea05beb0562f6097bd3bd6f8e2ff61f%2Flib%2Ffog%2Faws%2Fsignaturev4.rb%23L81-L97\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003epath normalization\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e on the user-controlled filename, which would have allowed a malicious user to specify a path containing \u0026quot;../\u0026quot;. A valid download link (including the required signature) could be retrieved for any file uploaded to the amazon bucket, including other user\u0026#39;s file.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}