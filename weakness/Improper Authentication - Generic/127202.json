{"id":127202,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjcyMDI=","url":"https://hackerone.com/reports/127202","title":"Mobile Authentication Endpoint Credentials Brute-Force Vulnerability","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-03-31T22:20:36.249Z","submitted_at":"2016-03-31T22:20:36.249Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"arneswinnen","url":"/arneswinnen","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":17011,"url":"https://hackerone.com/newrelic","handle":"newrelic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"New Relic","twitter_handle":"newrelic","website":"https://newrelic.com","about":"New Relic's Coordinated Disclosure Program"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-02-19T22:56:24.452Z","bug_reporter_agreed_on_going_public_at":"2017-02-19T22:56:24.420Z","team_member_agreed_on_going_public_at":"2017-02-18T01:40:21.727Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Dear,\n\nYour web authentication (login) endpoint, https://login.newrelic.com/login, currently properly protects against brute-force attacks. After a couple of 100 automated login attempts, a Captcha is required to login to the account under attack, even from a different IP address. Perfect, good job. I don't see that too often. \n\nHowever, your mobile authentication (login) endpoint currently does not have any protection against brute-force attacks. Login requests to https://login.newrelic.com/api/v1/tokens can be sent in a loop with different values for the \"password\" parameter, and no rate limiting/captcha/account lockout requiring out-of-band verification is present. This allows for brute-forcing of credentials, for example based on breached clear-text password databases of which there are many publicly available (https://wiki.skullsecurity.org/Passwords).\n\nA proof-of-concept python script can be found in attachment. This was invoked to brute-force the credentials of my New Relic test account, ferrariverdasco@gmail.com:Password1!, in a little more than 200 seconds. First, 10.000 wrong guesses are performed taken from a public dictionary (https://github.com/danielmiessler/SecLists/blob/master/Passwords/10k_most_common.txt), after which the 10.001th guess is the correct password and properly identified by the brute-force script. This was then used to login to the mobile app, which worked like a charm - no additional account verification step needed. Of course, a real mass exploitation attack would invoke multiple instances of this script and deploy more threads per instance. It could go at virtually unlimited speeds. \n\n```\n# cat 10k_most_common.txt | wc -l\n10001\n```\n\n```\n# tail 10k_most_common.txt \nhoes\nhowie\nhevnm4\nhugohugo\neighty\nepson\nevangeli\neeeee1\neyphed\nPassword1!\n```\n\n```\n# python newrelicmobilebrute.py ferrariverdasco@gmail.com 10k_most_common.txt 50\n[INFO] Creating 50 worker threads...\n[INFO] Total # passwords: 10001\n[INFO] Total # threads: 50\n71.20 pw/s [] 3% (356/10001)\n57.30 pw/s [=] 5% (573/10001)\n53.67 pw/s [=] 8% (805/10001)\n52.65 pw/s [==] 10% (1053/10001)\n50.84 pw/s [==] 12% (1271/10001)\n50.23 pw/s [===] 15% (1507/10001)\n50.03 pw/s [===] 17% (1751/10001)\n48.98 pw/s [===] 19% (1959/10001)\n49.56 pw/s [====] 22% (2230/10001)\n49.54 pw/s [====] 24% (2477/10001)\n49.89 pw/s [=====] 27% (2744/10001)\n49.32 pw/s [=====] 29% (2959/10001)\n49.85 pw/s [======] 32% (3240/10001)\n49.80 pw/s [======] 34% (3486/10001)\n49.37 pw/s [=======] 37% (3703/10001)\n49.56 pw/s [=======] 39% (3965/10001)\n49.47 pw/s [========] 42% (4205/10001)\n49.12 pw/s [========] 44% (4421/10001)\n49.43 pw/s [=========] 46% (4696/10001)\n49.57 pw/s [=========] 49% (4957/10001)\n49.74 pw/s [==========] 52% (5223/10001)\n49.77 pw/s [==========] 54% (5475/10001)\n49.74 pw/s [===========] 57% (5720/10001)\n49.96 pw/s [===========] 59% (5995/10001)\n49.85 pw/s [============] 62% (6231/10001)\n49.72 pw/s [============] 64% (6463/10001)\n49.95 pw/s [=============] 67% (6743/10001)\n49.76 pw/s [=============] 69% (6967/10001)\n49.70 pw/s [==============] 72% (7206/10001)\n49.68 pw/s [==============] 74% (7452/10001)\n49.54 pw/s [===============] 76% (7679/10001)\n49.68 pw/s [===============] 79% (7949/10001)\n49.75 pw/s [================] 82% (8209/10001)\n49.72 pw/s [================] 84% (8452/10001)\n49.78 pw/s [=================] 87% (8711/10001)\n49.68 pw/s [=================] 89% (8942/10001)\n49.90 pw/s [==================] 92% (9231/10001)\n49.87 pw/s [==================] 94% (9475/10001)\n49.73 pw/s [===================] 96% (9698/10001)\n49.83 pw/s [===================] 99% (9965/10001)\n[SUCCESS] Found the right password: Password1!\n48.79 pw/s [====================] 100% (10001/10001)\n[End] Total time: 207 seconds\n```\n\nOne example of a similar vulnerability that was exploited by blackhats in the past would be Apple's Celebgate scandal of January 2015, where celebrity passwords were brute-forced through an unprotected Apple authentication endpoint. In the case of New Relic, this could lead to the compromise of many accounts, since it is a well-known fact that people tend to choose similar passwords which turn up in dictionaries. \n\nFor more info, see http://www.imperva.com/docs/WP_Consumer_Password_Worst_Practices.pdf . A password analysis study of the 32-million clear-text password leak of the rockyou website breach reveals that by guessing the topmost 4655 passwords in this dump against all users, an attacker will gain access to around 20% of those (page 4). That would be a lot of New Relic accounts.\n\nRecommendation on the short-term: Enforce rate limiting on the mobile authentication endpoint based on IP address\nRecommendation on the mid-to-long term: Implement proper account lockout policy / Captcha protection after threshold on the authentication endpoint has been reached by any attacker.\n\nBest regards,\n\nArne Swinnen\nhttps://www.arneswinnen.net\n\n","vulnerability_information_html":"\u003cp\u003eDear,\u003c/p\u003e\n\n\u003cp\u003eYour web authentication (login) endpoint, \u003ca title=\"https://login.newrelic.com/login\" href=\"/redirect?url=https%3A%2F%2Flogin.newrelic.com%2Flogin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://login.newrelic.com/login\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, currently properly protects against brute-force attacks. After a couple of 100 automated login attempts, a Captcha is required to login to the account under attack, even from a different IP address. Perfect, good job. I don\u0026#39;t see that too often. \u003c/p\u003e\n\n\u003cp\u003eHowever, your mobile authentication (login) endpoint currently does not have any protection against brute-force attacks. Login requests to \u003ca title=\"https://login.newrelic.com/api/v1/tokens\" href=\"/redirect?url=https%3A%2F%2Flogin.newrelic.com%2Fapi%2Fv1%2Ftokens\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://login.newrelic.com/api/v1/tokens\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e can be sent in a loop with different values for the \u0026quot;password\u0026quot; parameter, and no rate limiting/captcha/account lockout requiring out-of-band verification is present. This allows for brute-forcing of credentials, for example based on breached clear-text password databases of which there are many publicly available (\u003ca title=\"https://wiki.skullsecurity.org/Passwords\" href=\"/redirect?url=https%3A%2F%2Fwiki.skullsecurity.org%2FPasswords\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wiki.skullsecurity.org/Passwords\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eA proof-of-concept python script can be found in attachment. This was invoked to brute-force the credentials of my New Relic test account, \u003ca title=\"ferrariverdasco@gmail.com\" href=\"mailto:ferrariverdasco@gmail.com\" rel=\"nofollow noopener noreferrer\"\u003eferrariverdasco@gmail.com\u003c/a\u003e:Password1!, in a little more than 200 seconds. First, 10.000 wrong guesses are performed taken from a public dictionary (\u003ca title=\"https://github.com/danielmiessler/SecLists/blob/master/Passwords/10k_most_common.txt\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists%2Fblob%2Fmaster%2FPasswords%2F10k_most_common.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/danielmiessler/SecLists/blob/master/Passwords/10k_most_common.txt\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e), after which the 10.001th guess is the correct password and properly identified by the brute-force script. This was then used to login to the mobile app, which worked like a charm - no additional account verification step needed. Of course, a real mass exploitation attack would invoke multiple instances of this script and deploy more threads per instance. It could go at virtually unlimited speeds. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# cat 10k_most_common.txt | wc -l\n10001\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# tail 10k_most_common.txt \nhoes\nhowie\nhevnm4\nhugohugo\neighty\nepson\nevangeli\neeeee1\neyphed\nPassword1!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# python newrelicmobilebrute.py ferrariverdasco@gmail.com 10k_most_common.txt 50\n[INFO] Creating 50 worker threads...\n[INFO] Total # passwords: 10001\n[INFO] Total # threads: 50\n71.20 pw/s [] 3% (356/10001)\n57.30 pw/s [=] 5% (573/10001)\n53.67 pw/s [=] 8% (805/10001)\n52.65 pw/s [==] 10% (1053/10001)\n50.84 pw/s [==] 12% (1271/10001)\n50.23 pw/s [===] 15% (1507/10001)\n50.03 pw/s [===] 17% (1751/10001)\n48.98 pw/s [===] 19% (1959/10001)\n49.56 pw/s [====] 22% (2230/10001)\n49.54 pw/s [====] 24% (2477/10001)\n49.89 pw/s [=====] 27% (2744/10001)\n49.32 pw/s [=====] 29% (2959/10001)\n49.85 pw/s [======] 32% (3240/10001)\n49.80 pw/s [======] 34% (3486/10001)\n49.37 pw/s [=======] 37% (3703/10001)\n49.56 pw/s [=======] 39% (3965/10001)\n49.47 pw/s [========] 42% (4205/10001)\n49.12 pw/s [========] 44% (4421/10001)\n49.43 pw/s [=========] 46% (4696/10001)\n49.57 pw/s [=========] 49% (4957/10001)\n49.74 pw/s [==========] 52% (5223/10001)\n49.77 pw/s [==========] 54% (5475/10001)\n49.74 pw/s [===========] 57% (5720/10001)\n49.96 pw/s [===========] 59% (5995/10001)\n49.85 pw/s [============] 62% (6231/10001)\n49.72 pw/s [============] 64% (6463/10001)\n49.95 pw/s [=============] 67% (6743/10001)\n49.76 pw/s [=============] 69% (6967/10001)\n49.70 pw/s [==============] 72% (7206/10001)\n49.68 pw/s [==============] 74% (7452/10001)\n49.54 pw/s [===============] 76% (7679/10001)\n49.68 pw/s [===============] 79% (7949/10001)\n49.75 pw/s [================] 82% (8209/10001)\n49.72 pw/s [================] 84% (8452/10001)\n49.78 pw/s [=================] 87% (8711/10001)\n49.68 pw/s [=================] 89% (8942/10001)\n49.90 pw/s [==================] 92% (9231/10001)\n49.87 pw/s [==================] 94% (9475/10001)\n49.73 pw/s [===================] 96% (9698/10001)\n49.83 pw/s [===================] 99% (9965/10001)\n[SUCCESS] Found the right password: Password1!\n48.79 pw/s [====================] 100% (10001/10001)\n[End] Total time: 207 seconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne example of a similar vulnerability that was exploited by blackhats in the past would be Apple\u0026#39;s Celebgate scandal of January 2015, where celebrity passwords were brute-forced through an unprotected Apple authentication endpoint. In the case of New Relic, this could lead to the compromise of many accounts, since it is a well-known fact that people tend to choose similar passwords which turn up in dictionaries. \u003c/p\u003e\n\n\u003cp\u003eFor more info, see \u003ca title=\"http://www.imperva.com/docs/WP_Consumer_Password_Worst_Practices.pdf\" href=\"/redirect?url=http%3A%2F%2Fwww.imperva.com%2Fdocs%2FWP_Consumer_Password_Worst_Practices.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.imperva.com/docs/WP_Consumer_Password_Worst_Practices.pdf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e . A password analysis study of the 32-million clear-text password leak of the rockyou website breach reveals that by guessing the topmost 4655 passwords in this dump against all users, an attacker will gain access to around 20% of those (page 4). That would be a lot of New Relic accounts.\u003c/p\u003e\n\n\u003cp\u003eRecommendation on the short-term: Enforce rate limiting on the mobile authentication endpoint based on IP address\u003cbr\u003e\nRecommendation on the mid-to-long term: Implement proper account lockout policy / Captcha protection after threshold on the authentication endpoint has been reached by any attacker.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003c/p\u003e\n\n\u003cp\u003eArne Swinnen\u003cbr\u003e\n\u003ca title=\"https://www.arneswinnen.net\" href=\"/redirect?url=https%3A%2F%2Fwww.arneswinnen.net\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.arneswinnen.net\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":82402,"file_name":"newrelicmobilebrute.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/082/402/6c734269f7aae36e0b22f2a3048099d187f3c7bb/newrelicmobilebrute.py?response-content-disposition=attachment%3B%20filename%3D%22newrelicmobilebrute.py%22%3B%20filename%2A%3DUTF-8%27%27newrelicmobilebrute.py\u0026response-content-type=text%2Fx-java\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ45QKBJAP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042327Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFSZhavgxXfzX1OF4s%2BY7IXUnkGhYQTCfjn0xAwLlrKfAiAbQ6KprR30hf3lpxrMSQUs9YcY%2BeQ3xX9Q4XRAtRyb1Sq0AwhUEAEaDDAxMzYxOTI3NDg0OSIMqu%2F12Yjb96W61sRfKpEDP%2FSFAIIHIynCl8FaEOZdXx05bQCtcneVSEHgtYjZgA6%2FSTNIg85p%2BbFyyuIIKLRhiFHRqSLNoRr7cYY%2FlUK5m3S%2FLsj%2F7VhL1dg%2FV30SqP8zd%2FrmAOMQMTaoKZ49gC3mFeVgnhZidGX1jeELuyugCQ7HDMbCG7FQ8RgLodVwjfHYR9rXEMvqtMaElTYOegof2wqfFG801xEBekey9yTX6vvYSVsNs4J6whwEGnJf2UYHqm9YsHI8ep6VxYcljuA7g60bzr%2FWvZnKBS1kik05Cejq6OWfbYUfHT5Q2s1ycDogKTTWrHDf2xazBhSpgTL8FiFJo%2BcaflE7wDIU4A2rptJPMn3iVUA9NSVqQNS3SJu62D8Bvc8HLTMSbH%2BHNcAJM34SXUAc1PQTIDtIZQChzDhPo6IvJsLsxEGWqgIfwVePGl785V2tWpXLS5YukCDLAjkBQAKhfpZKDU%2BXoFTaQ3aVwhjyxuQNas1zlpGXulBpm5X0SwAEA%2B5FTUaq7okFtvexYS6vWO70HQb9qtuKwJww5LSq%2FwU67AFwNfIGBYDCQFnk495mPu7He83OMSm1cdfSATPkFWp4e7AhH6bbZxGUHkwp3esPVr%2Bg9RbJwCYZ9Lu9uPoDt2hHJWGsfsSA%2FsaKKtc7yJ5i7VQZ0Z5qQ7%2BWszoLgX0OcOTy7mX4aCzwLGtARNj9%2FuwLh%2BwA6elyr5VmtYZaEKRMv0bvH8MkaoQNKMgTbV8z9IMWK36MtBkEjg9B5EWBEiKIAxPIhQ2LzXiaBz%2Fafa9rRatfkUW9hrgIuyGQWp2xjFWIyv9ZNiPySrZ2lQOBvpiUWoIqYpeOoLUMGfar2yPxpza2NmtcjgpnIhgPEg%3D%3D\u0026X-Amz-Signature=86882e3999ffd906da8c435089d9090f83314c7b882c7535a28755c388fc039f","file_size":2874,"type":"text/x-java"},{"id":82403,"file_name":"10k_most_common.txt","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/082/403/5aee429bec41246da393d3c7690670f530dac39c/10k_most_common.txt?response-content-disposition=attachment%3B%20filename%3D%2210k_most_common.txt%22%3B%20filename%2A%3DUTF-8%27%2710k_most_common.txt\u0026response-content-type=text%2Fx-c%2B%2B\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ45QKBJAP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042327Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFSZhavgxXfzX1OF4s%2BY7IXUnkGhYQTCfjn0xAwLlrKfAiAbQ6KprR30hf3lpxrMSQUs9YcY%2BeQ3xX9Q4XRAtRyb1Sq0AwhUEAEaDDAxMzYxOTI3NDg0OSIMqu%2F12Yjb96W61sRfKpEDP%2FSFAIIHIynCl8FaEOZdXx05bQCtcneVSEHgtYjZgA6%2FSTNIg85p%2BbFyyuIIKLRhiFHRqSLNoRr7cYY%2FlUK5m3S%2FLsj%2F7VhL1dg%2FV30SqP8zd%2FrmAOMQMTaoKZ49gC3mFeVgnhZidGX1jeELuyugCQ7HDMbCG7FQ8RgLodVwjfHYR9rXEMvqtMaElTYOegof2wqfFG801xEBekey9yTX6vvYSVsNs4J6whwEGnJf2UYHqm9YsHI8ep6VxYcljuA7g60bzr%2FWvZnKBS1kik05Cejq6OWfbYUfHT5Q2s1ycDogKTTWrHDf2xazBhSpgTL8FiFJo%2BcaflE7wDIU4A2rptJPMn3iVUA9NSVqQNS3SJu62D8Bvc8HLTMSbH%2BHNcAJM34SXUAc1PQTIDtIZQChzDhPo6IvJsLsxEGWqgIfwVePGl785V2tWpXLS5YukCDLAjkBQAKhfpZKDU%2BXoFTaQ3aVwhjyxuQNas1zlpGXulBpm5X0SwAEA%2B5FTUaq7okFtvexYS6vWO70HQb9qtuKwJww5LSq%2FwU67AFwNfIGBYDCQFnk495mPu7He83OMSm1cdfSATPkFWp4e7AhH6bbZxGUHkwp3esPVr%2Bg9RbJwCYZ9Lu9uPoDt2hHJWGsfsSA%2FsaKKtc7yJ5i7VQZ0Z5qQ7%2BWszoLgX0OcOTy7mX4aCzwLGtARNj9%2FuwLh%2BwA6elyr5VmtYZaEKRMv0bvH8MkaoQNKMgTbV8z9IMWK36MtBkEjg9B5EWBEiKIAxPIhQ2LzXiaBz%2Fafa9rRatfkUW9hrgIuyGQWp2xjFWIyv9ZNiPySrZ2lQOBvpiUWoIqYpeOoLUMGfar2yPxpza2NmtcjgpnIhgPEg%3D%3D\u0026X-Amz-Signature=7d1933c490973d8b0b0384e92c82770e035b29740d50372cda6a151bf0eee4e2","file_size":83029,"type":"text/x-c++"}],"allow_singular_disclosure_at":"2017-03-20T01:40:21.776Z","allow_singular_disclosure_after":-119241785.33214775,"singular_disclosure_allowed":true,"vote_count":15,"voters":["delimitry","arneswinnen","mashoud1122","bl4de","bogdantcaciuc","geekboy","brodie_codie","eveeez","malcolmx","khizer47","and 5 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":884252,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello Arne,\n\nThank you for your (very well-written) report! I have validated the lack of brute-force protections against the API and have filed an issue with the appropriate engineering team. We will keep you up-to-date on its progress.","markdown_message":"\u003cp\u003eHello Arne,\u003c/p\u003e\n\n\u003cp\u003eThank you for your (very well-written) report! I have validated the lack of brute-force protections against the API and have filed an issue with the appropriate engineering team. We will keep you up-to-date on its progress.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-01T23:39:26.367Z","updated_at":"2016-04-01T23:39:26.367Z","actor":{"username":"ahamlin","cleared":false,"url":"/ahamlin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/071/b10c1e5872fac616ba0f3b67bb1e6e06ba70fe6c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":939354,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nWould you have any update, given that it's been a month since the first vulnerability report?\n\nThanks,\n\nArne","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eWould you have any update, given that it\u0026#39;s been a month since the first vulnerability report?\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003c/p\u003e\n\n\u003cp\u003eArne\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-03T22:20:51.950Z","updated_at":"2016-05-03T22:20:51.950Z","actor":{"username":"arneswinnen","cleared":true,"url":"/arneswinnen","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":939375,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Arne - we've filed the bug with the appropriate Engineering team and it's in their queue - no updates beyond that at this time. ","markdown_message":"\u003cp\u003eHi Arne - we\u0026#39;ve filed the bug with the appropriate Engineering team and it\u0026#39;s in their queue - no updates beyond that at this time. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-03T22:37:41.932Z","updated_at":"2016-05-03T22:37:41.932Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":941249,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nOk, I'll await future updates from here on.\n\nThanks,\n\nArne","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eOk, I\u0026#39;ll await future updates from here on.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003c/p\u003e\n\n\u003cp\u003eArne\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-04T23:37:50.871Z","updated_at":"2016-05-04T23:37:50.871Z","actor":{"username":"arneswinnen","cleared":true,"url":"/arneswinnen","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1096661,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, work to resolve this issue has begun, thanks again for the report ! ","markdown_message":"\u003cp\u003eHi, work to resolve this issue has begun, thanks again for the report ! \u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-30T00:22:24.131Z","updated_at":"2016-07-30T00:22:24.131Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1124357,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We believe this issue to be resolved. Thanks very much for reporting it to us, we really appreciate your help keeping New Relic and its customers secure!","markdown_message":"\u003cp\u003eWe believe this issue to be resolved. Thanks very much for reporting it to us, we really appreciate your help keeping New Relic and its customers secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-08-12T23:42:03.646Z","updated_at":"2016-08-12T23:42:03.646Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"arneswinnen","url":"/arneswinnen"},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1492464,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-18T01:40:21.749Z","updated_at":"2017-02-18T01:40:21.749Z","first_to_agree":true,"actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1494101,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-19T22:56:24.435Z","updated_at":"2017-02-19T22:56:24.435Z","actor":{"username":"arneswinnen","cleared":true,"url":"/arneswinnen","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1494102,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-02-19T22:56:24.465Z","updated_at":"2017-02-19T22:56:24.465Z","actor":{"username":"arneswinnen","cleared":true,"url":"/arneswinnen","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2694264,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-03T03:32:48.800Z","updated_at":"2018-05-03T03:32:48.800Z","actor":{"url":"/newrelic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"New Relic"}},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}