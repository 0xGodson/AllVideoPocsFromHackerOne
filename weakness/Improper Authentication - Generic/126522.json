{"id":126522,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjY1MjI=","url":"https://hackerone.com/reports/126522","title":"Incorrect param parsing in Digits web authentication","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-03-28T16:57:50.738Z","submitted_at":"2016-03-28T16:57:50.738Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"filedescriptor","url":"/filedescriptor","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":61,"url":"https://hackerone.com/twitter","handle":"twitter","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Twitter","twitter_handle":"twittersecurity","website":"https://twitter.com","about":"Twitter helps you create and share ideas and information instantly, without barriers."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2018-08-18T05:57:12.114Z","bug_reporter_agreed_on_going_public_at":"2018-08-16T05:57:17.497Z","team_member_agreed_on_going_public_at":"2018-08-18T05:57:11.979Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\nI would like to report an issue on Digits web authentication which allows attackers to retrieve the OAuth credential data of an application victims authorized.\n\n#Detail\nDigits web authentication has strict validation on *host* and *callback_url*. On the server side, the values are compared with the registered domain. However, on the client side, the way parameters are parsed has a wrong assumption. Specifically, \nin https://cdn.digits.com/45ed91c4cf9b6bb7465c27574b16910df8a86d2e_1458327827406/javascripts/popup.js\n\n```javascript\n              return window.location.search.slice(1).split(\"\u0026\").forEach(function(e) {\n                    var n = e.split(\"=\");\n                    t[n[0]] = window.unescape(n[1])\n                })\n```\n\nThe above code snippet is responsible to convert query string into parameters, which assumes that the param delimiter has to be ampersand (\u0026). In fact, the server side also accepts semi-colon (;) as param delimiter. For example:\n\u003e https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE;host=https%3A%2F%2Fwww.periscope.tv\n\nis the same as \n\n\u003e https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026host=https%3A%2F%2Fwww.periscope.tv\n\nThis creates a problem because from the server's perspective, ```a=b;c=d``` is two different parameters *a* and *c*, while the client thinks there is only one parameter *a* with value *b;c=d*. Attacker can evade the validation by append `;@attacker.com` in the corresponding param. Such bypass looks like this:\n\n\u003e https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026host=https%3A%2F%2Fwww.periscope.tv;@attacker.com\n\nThe server side thinks the  *host* parameter is ```https://www.periscope.tv```, while for client side it is ```https://www.periscope.tv;@attacker.com```.\n\nThe funky URL in browser perspective looks like this:\n\n```\nhttps://www.periscope.tv;@attacker.com\n--------\\    authority   /\\ hostname /\n```\n\nTherefore attacker successfully control the destination domain to his/her controlled site.\n\n#PoC\n1. Prepare a Periscope account which is associated with a phone number\n2. Login to Periscope using the phone number with digits web login flow: https://innerht.ml/pocs/digits-validation-bypass/\n3. After that your account will be renamed as \"Pwn3d\"\n\n#Fix\nIn addition to ampersand, also treat semi-colon as param delimiter. A sample patch would be to change\n```javascript\nwindow.location.search.slice(1).split(\"\u0026\")\n```\nto\n```javascript\nwindow.location.search.slice(1).split(/[\u0026;]/)\n```","vulnerability_information_html":"\u003cp\u003eHi,\u003cbr\u003e\nI would like to report an issue on Digits web authentication which allows attackers to retrieve the OAuth credential data of an application victims authorized.\u003c/p\u003e\n\n\u003ch1 id=\"detail\"\u003eDetail\u003c/h1\u003e\n\n\u003cp\u003eDigits web authentication has strict validation on \u003cem\u003ehost\u003c/em\u003e and \u003cem\u003ecallback_url\u003c/em\u003e. On the server side, the values are compared with the registered domain. However, on the client side, the way parameters are parsed has a wrong assumption. Specifically, \u003cbr\u003e\nin \u003ca title=\"https://cdn.digits.com/45ed91c4cf9b6bb7465c27574b16910df8a86d2e_1458327827406/javascripts/popup.js\" href=\"/redirect?url=https%3A%2F%2Fcdn.digits.com%2F45ed91c4cf9b6bb7465c27574b16910df8a86d2e_1458327827406%2Fjavascripts%2Fpopup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://cdn.digits.com/45ed91c4cf9b6bb7465c27574b16910df8a86d2e_1458327827406/javascripts/popup.js\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                    \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eunescape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above code snippet is responsible to convert query string into parameters, which assumes that the param delimiter has to be ampersand (\u0026amp;). In fact, the server side also accepts semi-colon (;) as param delimiter. For example:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE%3Bhost=https%3A%2F%2Fwww.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%253Bhost%3Dhttps%253A%252F%252Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE%3Bhost=https%3A%2F%2Fwww.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eis the same as \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis creates a problem because from the server\u0026#39;s perspective, \u003ccode\u003ea=b;c=d\u003c/code\u003e is two different parameters \u003cem\u003ea\u003c/em\u003e and \u003cem\u003ec\u003c/em\u003e, while the client thinks there is only one parameter \u003cem\u003ea\u003c/em\u003e with value \u003cem\u003eb;c=d\u003c/em\u003e. Attacker can evade the validation by append \u003ccode\u003e;@attacker.com\u003c/code\u003e in the corresponding param. Such bypass looks like this:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.periscope.tv%3B@attacker.com\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.periscope.tv%253B%40attacker.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.periscope.tv%3B@attacker.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe server side thinks the  \u003cem\u003ehost\u003c/em\u003e parameter is \u003ccode\u003ehttps://www.periscope.tv\u003c/code\u003e, while for client side it is \u003ccode\u003ehttps://www.periscope.tv;@attacker.com\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe funky URL in browser perspective looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehttps://www.periscope.tv;@attacker.com\n--------\\    authority   /\\ hostname /\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTherefore attacker successfully control the destination domain to his/her controlled site.\u003c/p\u003e\n\n\u003ch1 id=\"poc\"\u003ePoC\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003ePrepare a Periscope account which is associated with a phone number\u003c/li\u003e\n\u003cli\u003eLogin to Periscope using the phone number with digits web login flow: \u003ca title=\"https://innerht.ml/pocs/digits-validation-bypass/\" href=\"/redirect?url=https%3A%2F%2Finnerht.ml%2Fpocs%2Fdigits-validation-bypass%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://innerht.ml/pocs/digits-validation-bypass/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAfter that your account will be renamed as \u0026quot;Pwn3d\u0026quot;\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"fix\"\u003eFix\u003c/h1\u003e\n\n\u003cp\u003eIn addition to ampersand, also treat semi-colon as param delimiter. A sample patch would be to change\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026amp;;\u003c/span\u003e\u003cspan class=\"se\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"2520.0","formatted_bounty":"$2,520","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-09-15T05:57:17.605Z","allow_singular_disclosure_after":-72224747.62838513,"singular_disclosure_allowed":true,"vote_count":118,"voters":["jokebookservice1","libcontainer","niklasb","kapytein","foobar7","hunter","mashoud1122","muon4","ramsexy","bogdantcaciuc","and 108 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":874727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It looks like HackerOne automatically encodes all semi-colon in the URL. Please copy-paste the URL to test.","markdown_message":"\u003cp\u003eIt looks like HackerOne automatically encodes all semi-colon in the URL. Please copy-paste the URL to test.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-28T17:00:42.695Z","updated_at":"2016-03-28T17:00:42.695Z","actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":875086,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eThank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-28T19:22:35.996Z","updated_at":"2016-03-28T19:22:35.996Z","actor":{"username":"andrewsorensen","cleared":false,"url":"/andrewsorensen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":883637,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again. As mentioned we’ll keep you updated as we investigate further. As a reminder, please remember to keep the details of this report private until we have fully investigated and addressed the issue.","markdown_message":"\u003cp\u003eThanks again. As mentioned we’ll keep you updated as we investigate further. As a reminder, please remember to keep the details of this report private until we have fully investigated and addressed the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-01T19:09:54.279Z","updated_at":"2016-04-01T19:09:54.279Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Twitter"}},"bounty_amount":"2520.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"twitter","collaborator":{"username":"filedescriptor","url":"/filedescriptor"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1168525,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We consider this issue to be fixed. Can you please confirm?\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eWe consider this issue to be fixed. Can you please confirm?\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-01T21:19:52.809Z","updated_at":"2016-09-01T21:19:52.809Z","actor":{"username":"andrewsorensen","cleared":false,"url":"/andrewsorensen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"filedescriptor","url":"/filedescriptor"},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1169038,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can confirm this is fixed (fixed months ago actually).","markdown_message":"\u003cp\u003eI can confirm this is fixed (fixed months ago actually).\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-02T05:24:05.942Z","updated_at":"2016-09-02T05:24:05.942Z","actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3201865,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-16T05:57:17.539Z","updated_at":"2018-08-16T05:57:17.539Z","first_to_agree":true,"actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3212946,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-18T05:57:12.033Z","updated_at":"2018-08-18T05:57:12.033Z","actor":{"username":"andrewsorensen","cleared":false,"url":"/andrewsorensen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3212947,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-18T05:57:12.151Z","updated_at":"2018-08-18T05:57:12.151Z","actor":{"username":"andrewsorensen","cleared":false,"url":"/andrewsorensen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}