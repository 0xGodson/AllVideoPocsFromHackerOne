{"id":781175,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODExNzU=","url":"https://hackerone.com/reports/781175","title":"Unauthenticated users can obtain information about Checklist objects with unclaimed ChecklistCheck objects","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-01-22T23:01:46.826Z","submitted_at":"2020-01-22T23:01:46.826Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-03-20T17:04:05.075Z","bug_reporter_agreed_on_going_public_at":"2020-03-20T17:03:19.741Z","team_member_agreed_on_going_public_at":"2020-03-20T17:04:04.996Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The `Checklist` objects that can be queried through GraphQL are supposed to only be accessible by program members, the users who claimed or responded to a check belonging to a checklist, and HackerOne Pentesters. The `Checklist` object is also supposed to be in the `running` state (e.g. when the platform collects responses for the checks) for HackerOne Pentesters to access them. The authorization check is implemented as follows:\n\n```ruby\nclass ProtectedChecklist\n  include ::ProtectedAttribute::Protector\n\n  model { Checklist }\n\n  copy_roles(ProtectedTeam) do\n    Checklist.joins(:team)\n  end\n\n  property(:RUNNING_CHECKLIST) do\n    Checklist.running\n  end\n\n  role(:CLAIMER) { |requester| claimed_by_user(requester) }\n  role(:RESPONDER) { |requester| responded_by_user(requester) }\n\n  group(\n    has_feature(RUNNING_CHECKLIST) \u0026 (\n      has_role(PUBLIC) |\n      has_role(H1_PENTESTER) |\n      has_role(WHITELISTED_REPORTER) |\n      has_role(INVITATION_RECIPIENT_WITH_SATISFIED_REQUIREMENTS)\n    ) |\n    has_role(TEAM_MEMBER) |\n    has_role(CLAIMER) |\n    has_role(RESPONDER),\n  ) do\n    allow :checklist_check_responses\n    allow :checklist_checks\n    allow :expires_at\n    allow :id\n    allow :name\n    allow :team\n    allow :unclaimed_checklist_checks_count\n  end\nend\n\n```\n\nAt first sight, the authorization check seems to be implemented correctly. However, the `CLAIMER` role is leveraging the `claimed_by_user` scope, which is implemented as follows:\n\n```ruby\nscope :claimed_by_user, lambda { |user|\n    where(id: ChecklistCheck.where(user_id: user).select(:checklist_id))\n  }\n```\n\nInstead of an inner join, a query (`ChecklistCheck.where(user_id: user).select(:checklist_id)`) is used to fetch the checklist IDs that are claimed. Because not all checks are claimed, `user_id` can be set to `NULL` in the database. Because the HackerOne GraphQL endpoint can be queried as an anonymous user, this scope can be called with `nil`. This causes anonymous users to automatically get the `CLAIMER` role, thus exposing information about `Checklist` objects.\n\nThe other protectors correctly implement the `claimed_by_user` scope.\n\nAny relations defined on the `Checklist` model, such as `team`, `checklist_check_responses`, and `checklist_checks` are protected separately and are not accessible by anonymous users. The exposed information is limited to `Checklist` objects, which doesn't expose any customer information.\n\nThe following query can be used to query a `Checklist` object. Make sure you're signed out when executing this query.\n\n```\nquery {\n  node(id: \"Z2lkOi8vaGFja2Vyb25lL0NoZWNrbGlzdC8x\") {\n    ... on Checklist {\n      name\n      expires_at\n    }\n  }\n}\n```\n\n## Impact\n\nAnonymous users can obtain information about checklists.","vulnerability_information_html":"\u003cp\u003eThe \u003ccode\u003eChecklist\u003c/code\u003e objects that can be queried through GraphQL are supposed to only be accessible by program members, the users who claimed or responded to a check belonging to a checklist, and HackerOne Pentesters. The \u003ccode\u003eChecklist\u003c/code\u003e object is also supposed to be in the \u003ccode\u003erunning\u003c/code\u003e state (e.g. when the platform collects responses for the checks) for HackerOne Pentesters to access them. The authorization check is implemented as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProtectedChecklist\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003einclude\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eProtectedAttribute\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eProtector\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"no\"\u003eChecklist\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ecopy_roles\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eProtectedTeam\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eChecklist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoins\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:team\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eproperty\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:RUNNING_CHECKLIST\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eChecklist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erunning\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003erole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:CLAIMER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003erequester\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimed_by_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequester\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:RESPONDER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003erequester\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eresponded_by_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequester\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003egroup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehas_feature\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eRUNNING_CHECKLIST\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003ePUBLIC\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eH1_PENTESTER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eWHITELISTED_REPORTER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eINVITATION_RECIPIENT_WITH_SATISFIED_REQUIREMENTS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eTEAM_MEMBER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eCLAIMER\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehas_role\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eRESPONDER\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:checklist_check_responses\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:checklist_checks\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:expires_at\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:id\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:team\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eallow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:unclaimed_checklist_checks_count\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt first sight, the authorization check seems to be implemented correctly. However, the \u003ccode\u003eCLAIMER\u003c/code\u003e role is leveraging the \u003ccode\u003eclaimed_by_user\u003c/code\u003e scope, which is implemented as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003escope\u003c/span\u003e \u003cspan class=\"ss\"\u003e:claimed_by_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elambda\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eid: \u003c/span\u003e\u003cspan class=\"no\"\u003eChecklistCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003euser_id: \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eselect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:checklist_id\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eInstead of an inner join, a query (\u003ccode\u003eChecklistCheck.where(user_id: user).select(:checklist_id)\u003c/code\u003e) is used to fetch the checklist IDs that are claimed. Because not all checks are claimed, \u003ccode\u003euser_id\u003c/code\u003e can be set to \u003ccode\u003eNULL\u003c/code\u003e in the database. Because the HackerOne GraphQL endpoint can be queried as an anonymous user, this scope can be called with \u003ccode\u003enil\u003c/code\u003e. This causes anonymous users to automatically get the \u003ccode\u003eCLAIMER\u003c/code\u003e role, thus exposing information about \u003ccode\u003eChecklist\u003c/code\u003e objects.\u003c/p\u003e\n\n\u003cp\u003eThe other protectors correctly implement the \u003ccode\u003eclaimed_by_user\u003c/code\u003e scope.\u003c/p\u003e\n\n\u003cp\u003eAny relations defined on the \u003ccode\u003eChecklist\u003c/code\u003e model, such as \u003ccode\u003eteam\u003c/code\u003e, \u003ccode\u003echecklist_check_responses\u003c/code\u003e, and \u003ccode\u003echecklist_checks\u003c/code\u003e are protected separately and are not accessible by anonymous users. The exposed information is limited to \u003ccode\u003eChecklist\u003c/code\u003e objects, which doesn\u0026#39;t expose any customer information.\u003c/p\u003e\n\n\u003cp\u003eThe following query can be used to query a \u003ccode\u003eChecklist\u003c/code\u003e object. Make sure you\u0026#39;re signed out when executing this query.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003equery {\n  node(id: \u0026quot;Z2lkOi8vaGFja2Vyb25lL0NoZWNrbGlzdC8x\u0026quot;) {\n    ... on Checklist {\n      name\n      expires_at\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAnonymous users can obtain information about checklists.\u003c/p\u003e\n","weakness":{"id":26,"name":"Improper Access Control - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-04-19T17:03:19.844Z","allow_singular_disclosure_after":-21908874.42191391,"singular_disclosure_allowed":true,"vote_count":57,"voters":["mashoud1122","sameerphad72","prophet","mygf","m359ah","gamliel","mtoy","haxta4ok00","bhavi","realtess","and 47 more..."],"severity":{"rating":"medium","score":4.4,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":3,"asset_type":"URL","asset_identifier":"https://hackerone.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6846114,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-22T23:02:19.880Z","updated_at":"2020-01-22T23:02:19.880Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6846117,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-22T23:02:32.609Z","updated_at":"2020-01-22T23:02:32.609Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7013371,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-10T22:58:46.351Z","updated_at":"2020-02-10T22:58:46.351Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7013377,"is_internal":false,"editable":false,"type":"Activities::ExternalUserInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-02-10T22:59:52.681Z","updated_at":"2020-02-10T22:59:52.681Z","additional_data":{"report_retest_user_id":2993},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"email":"popeax","genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7013378,"is_internal":false,"editable":false,"type":"Activities::ExternalUserInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-02-10T22:59:53.040Z","updated_at":"2020-02-10T22:59:53.040Z","additional_data":{"report_retest_user_id":2994},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"email":"japz","genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7013379,"is_internal":false,"editable":false,"type":"Activities::ExternalUserInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-02-10T22:59:53.589Z","updated_at":"2020-02-10T22:59:53.589Z","additional_data":{"report_retest_user_id":2995},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"email":"dr_dragon","genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7013530,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-10T23:32:58.722Z","updated_at":"2020-02-10T23:32:58.722Z","additional_data":{"report_retest_user_id":2994},"actor":{"username":"japz","cleared":false,"url":"/japz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/078/347/38b576ad263c5255e136ebbd3a19eb61ff7a298d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7013728,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-11T00:24:07.400Z","updated_at":"2020-02-11T00:24:07.400Z","additional_data":{"report_retest_user_id":2995},"actor":{"username":"dr_dragon","cleared":false,"url":"/dr_dragon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/r7Mc1RTnn4g3t5j7eEnogFAr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7028615,"is_internal":false,"editable":false,"type":"Activities::ExternalUserInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-02-12T08:45:06.556Z","updated_at":"2020-02-12T08:45:06.556Z","additional_data":{"report_retest_user_id":3033},"actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"email":"3apa3a","genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7040173,"is_internal":false,"editable":false,"type":"Activities::ExternalUserInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-02-13T09:45:06.596Z","updated_at":"2020-02-13T09:45:06.596Z","additional_data":{"report_retest_user_id":3059},"actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"email":"msdian7","genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7040862,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-13T11:32:40.760Z","updated_at":"2020-02-13T11:32:40.760Z","additional_data":{"report_retest_user_id":3059},"actor":{"username":"msdian7","cleared":false,"url":"/msdian7","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7379996,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-20T17:03:19.759Z","updated_at":"2020-03-20T17:03:19.759Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7380001,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-20T17:04:05.013Z","updated_at":"2020-03-20T17:04:05.013Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7380002,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-20T17:04:05.096Z","updated_at":"2020-03-20T17:04:05.096Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7783403,"is_internal":false,"editable":false,"type":"Activities::UserLeftRetest","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-24T13:34:36.603Z","updated_at":"2020-09-11T11:07:47.088Z","actor":{"username":"msdian7","cleared":false,"url":"/msdian7","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}