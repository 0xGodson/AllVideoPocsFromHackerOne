{"id":147570,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDc1NzA=","url":"https://hackerone.com/reports/147570","title":"Local File Inclusion path bypass","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-06-27T00:36:05.950Z","submitted_at":"2016-06-27T00:36:05.950Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"paulos_","url":"/paulos_","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":60,"url":"https://hackerone.com/concrete5","handle":"concrete5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"concrete5","twitter_handle":"concrete5","website":"https://www.concrete5.org","about":"A simple and powerful content management system."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-08-19T00:17:46.666Z","bug_reporter_agreed_on_going_public_at":"2016-07-20T00:17:37.057Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hey,\n\nAfter reading egix's report #59665 and seeing your fix at https://github.com/concrete5/concrete5/commit/19d0cc81c7cd485b856289ac71ebc0389ea7c3da \u0026 https://github.com/concrete5/concrete5/commit/c646dd0defcfa79ef119dca8ba1beba2c5bc91ea I think the fixes are insufficient to stop lfi.\n\nIf you are going to stick with the `strpos()` trick, you missed something. \n```php\n$path = $request-\u003egetPathInfo();\n$path = rawurldecode($request-\u003egetPathInfo());\n if (substr($path, 0, 3) == '../' || substr($path, -3) == '/..' || strpos($path, '/../') ||\n     substr($path, 0, 3) == '..\\\\' || substr($path, -3) == '\\\\..' || strpos($path, '\\\\..\\\\')) {\n``` \nwhile that is one way to go. you forgot about \"../\\\", \" ..\\/\", \"/\\..\" \u0026 \"\\/..\" this works because some oses (unix like) parse the backslash to forward slash and proceed. add those and I think you should be fine. :)\n\nThanks,\nP","vulnerability_information_html":"\u003cp\u003eHey,\u003c/p\u003e\n\n\u003cp\u003eAfter reading egix\u0026#39;s report \u003ca href=\"/reports/59665\"\u003e#59665\u003c/a\u003e and seeing your fix at \u003ca title=\"https://github.com/concrete5/concrete5/commit/19d0cc81c7cd485b856289ac71ebc0389ea7c3da\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fconcrete5%2Fconcrete5%2Fcommit%2F19d0cc81c7cd485b856289ac71ebc0389ea7c3da\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/concrete5/concrete5/commit/19d0cc81c7cd485b856289ac71ebc0389ea7c3da\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u0026amp; \u003ca title=\"https://github.com/concrete5/concrete5/commit/c646dd0defcfa79ef119dca8ba1beba2c5bc91ea\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fconcrete5%2Fconcrete5%2Fcommit%2Fc646dd0defcfa79ef119dca8ba1beba2c5bc91ea\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/concrete5/concrete5/commit/c646dd0defcfa79ef119dca8ba1beba2c5bc91ea\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e I think the fixes are insufficient to stop lfi.\u003c/p\u003e\n\n\u003cp\u003eIf you are going to stick with the \u003ccode\u003estrpos()\u003c/code\u003e trick, you missed something. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003egetPathInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003erawurldecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003egetPathInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;../\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/..\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003estrpos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/../\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n     \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;..\\\\\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\\\..\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003estrpos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\\\..\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewhile that is one way to go. you forgot about \u0026quot;../\\\u0026quot;, \u0026quot; ..\\/\u0026quot;, \u0026quot;/..\u0026quot; \u0026amp; \u0026quot;\\/..\u0026quot; this works because some oses (unix like) parse the backslash to forward slash and proceed. add those and I think you should be fine. :)\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nP\u003c/p\u003e\n","weakness":{"id":57,"name":"Violation of Secure Design Principles"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-08-19T00:17:37.182Z","allow_singular_disclosure_after":-137650440.3207731,"singular_disclosure_allowed":true,"vote_count":13,"voters":["hunter","faisalahmed","detroitsmash","dineshvicky","paulos_","japz","rootxflood","hulskar1997","spetr0x","localhost1st","and 3 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1039953,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"**This report has been automatically set to \"needs more info\"** because it does not adhere to the rules listed [on our project page](https://hackerone.com/concrete5). Please go over these rules and resubmit following the directions.\r\n\r\nIf you've read and complied with all of the rules, please email security@concrete5.org so that this issue may be reopened.","markdown_message":"\u003cp\u003e\u003cstrong\u003eThis report has been automatically set to \u0026quot;needs more info\u0026quot;\u003c/strong\u003e because it does not adhere to the rules listed \u003ca href=\"https://hackerone.com/concrete5\"\u003eon our project page\u003c/a\u003e. Please go over these rules and resubmit following the directions.\u003c/p\u003e\n\n\u003cp\u003eIf you\u0026#39;ve read and complied with all of the rules, please email \u003ca title=\"security@concrete5.org\" href=\"mailto:security@concrete5.org\" rel=\"nofollow noopener noreferrer\"\u003esecurity@concrete5.org\u003c/a\u003e so that this issue may be reopened.\u003c/p\u003e\n","automated_response":true,"created_at":"2016-06-27T00:36:06.274Z","updated_at":"2016-06-27T00:36:06.274Z","actor":{"url":"/concrete5","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"concrete5"}},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1040489,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"@egix mentioned in his pdf report: *the vulnerability is mitigated by the fact that only .php files can be included, however this might be exploited to include otherwise restricted files within Concrete5 itself bypassing the authentication mechanism, thus leading to unauthorized access to certain features.*\n\nBut there is also a way around that. \n**Fact 1**: On PHP, it turns out that /etc/passwd/ also refers to the /etc/passwd file: trailing slashes are stripped off. This doesn't work on base Unix, so it is a bit surprising that PHP would\naccept such a filename, but it appears that PHP is itself stripping off trailing slashes before opening the file. You can append any number of trailing slashes: /etc/passwd//// is also OK.\n\nAnd, you can append ./ (as many times as you want). For instance, /etc/passwd/., /etc/passwd/./, and /etc/passwd/././. all refer to /etc/passwd. \n\n**Fact 2**: Long paths are truncated. On most PHP installations, if the filename is longer than 4096 bytes, it will be silently truncated and everything after the first 4096 bytes will be discarded. No error is triggered: the excess characters are simply thrown away and PHP\nhappily continues on.\n\n**The attack.** Now I am ready to describe the attack. I'll show you the vulnerable code, why standard LFI attacks don't work, and then how to build a more-clever attack that does work.\n\nWith the additional background facts I gave you earlier, maybe you can see how to come up with a more sophisticated attack that defeats this limitation.\n\nBasically, the attacker chooses a very long parameter value, so that the constructed filename is longer than 4096 bytes long. When the filename is truncated, the .php extension will get thrown away. And if the attacker can arrange for the resulting filename to refer to an existing file on the filesystem, the attacker is good.\n\nNow this might sound like a far-fetched attack. What are the odds that we can find a filename on the filesystem whose full path happens to be exactly 4096 bytes long? Maybe not so good?\n\nThis is where the background facts come into play. The attacker can send a request with ?param1=../../../../etc/passwd/./././././\u003c...\u003e (with the ./ pattern repeated many thousands of times). Now look at what filename gets included, after the prefix is prepended and the\n.php file extension is added: it will be something like includes/../../../../etc/passwd/./././././\u003c...\u003e.php. This filename will be longer than 4096 bytes, so it will get truncated. The truncation will drop the file extension and leave us with a filename of the form includes/../../../../etc/passwd/./././././\u003c...\u003e. And, thanks to the way PHP handles trailing slashes and trailing ./ sequences, all that stuff at the end will be ignored. In other words, this filename will be treated by PHP as equivalent to the path\nincludes/../../../../etc/passwd. So PHP will try to read from the password file, and when it finds PHP syntax errors there, it may dump the contents of the password file into an error page -- disclosing\nsecret information to an attacker.\n\nSo this is indeed exploitable to include files \u0026 *isn't mitigated by the fact that only .php files can be included*\n\nThanks,\nP","markdown_message":"\u003cp\u003e\u003ca href=\"/egix\"\u003e@egix\u003c/a\u003e mentioned in his pdf report: \u003cem\u003ethe vulnerability is mitigated by the fact that only .php files can be included, however this might be exploited to include otherwise restricted files within Concrete5 itself bypassing the authentication mechanism, thus leading to unauthorized access to certain features.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eBut there is also a way around that. \u003cbr\u003e\n\u003cstrong\u003eFact 1\u003c/strong\u003e: On PHP, it turns out that /etc/passwd/ also refers to the /etc/passwd file: trailing slashes are stripped off. This doesn\u0026#39;t work on base Unix, so it is a bit surprising that PHP would\u003cbr\u003e\naccept such a filename, but it appears that PHP is itself stripping off trailing slashes before opening the file. You can append any number of trailing slashes: /etc/passwd//// is also OK.\u003c/p\u003e\n\n\u003cp\u003eAnd, you can append ./ (as many times as you want). For instance, /etc/passwd/., /etc/passwd/./, and /etc/passwd/././. all refer to /etc/passwd. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFact 2\u003c/strong\u003e: Long paths are truncated. On most PHP installations, if the filename is longer than 4096 bytes, it will be silently truncated and everything after the first 4096 bytes will be discarded. No error is triggered: the excess characters are simply thrown away and PHP\u003cbr\u003e\nhappily continues on.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe attack.\u003c/strong\u003e Now I am ready to describe the attack. I\u0026#39;ll show you the vulnerable code, why standard LFI attacks don\u0026#39;t work, and then how to build a more-clever attack that does work.\u003c/p\u003e\n\n\u003cp\u003eWith the additional background facts I gave you earlier, maybe you can see how to come up with a more sophisticated attack that defeats this limitation.\u003c/p\u003e\n\n\u003cp\u003eBasically, the attacker chooses a very long parameter value, so that the constructed filename is longer than 4096 bytes long. When the filename is truncated, the .php extension will get thrown away. And if the attacker can arrange for the resulting filename to refer to an existing file on the filesystem, the attacker is good.\u003c/p\u003e\n\n\u003cp\u003eNow this might sound like a far-fetched attack. What are the odds that we can find a filename on the filesystem whose full path happens to be exactly 4096 bytes long? Maybe not so good?\u003c/p\u003e\n\n\u003cp\u003eThis is where the background facts come into play. The attacker can send a request with ?param1=../../../../etc/passwd/./././././\u0026lt;...\u0026gt; (with the ./ pattern repeated many thousands of times). Now look at what filename gets included, after the prefix is prepended and the\u003cbr\u003e\n.php file extension is added: it will be something like includes/../../../../etc/passwd/./././././\u0026lt;...\u0026gt;.php. This filename will be longer than 4096 bytes, so it will get truncated. The truncation will drop the file extension and leave us with a filename of the form includes/../../../../etc/passwd/./././././\u0026lt;...\u0026gt;. And, thanks to the way PHP handles trailing slashes and trailing ./ sequences, all that stuff at the end will be ignored. In other words, this filename will be treated by PHP as equivalent to the path\u003cbr\u003e\nincludes/../../../../etc/passwd. So PHP will try to read from the password file, and when it finds PHP syntax errors there, it may dump the contents of the password file into an error page -- disclosing\u003cbr\u003e\nsecret information to an attacker.\u003c/p\u003e\n\n\u003cp\u003eSo this is indeed exploitable to include files \u0026amp; \u003cem\u003eisn\u0026#39;t mitigated by the fact that only .php files can be included\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nP\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-27T11:06:25.101Z","updated_at":"2016-06-27T11:06:25.101Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1041374,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also I think, the smartest fix around it would be doing :\n```javascript\nstr_replace(array('..', chr(0)), '', $path);\n```\ninstead of going through all that trouble with the slashes. :)","markdown_message":"\u003cp\u003eAlso I think, the smartest fix around it would be doing :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003estr_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e..\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$path\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003einstead of going through all that trouble with the slashes. :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-27T18:37:02.726Z","updated_at":"2016-06-27T18:37:02.726Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1065520,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Paulos,\nI opened a pull request to fix this here: https://github.com/concrete5/concrete5/pull/4020 If that merges I will apply it to version 7 as well.\n\nThanks,\nKorvin","markdown_message":"\u003cp\u003eHi Paulos,\u003cbr\u003e\nI opened a pull request to fix this here: \u003ca title=\"https://github.com/concrete5/concrete5/pull/4020\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fconcrete5%2Fconcrete5%2Fpull%2F4020\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/concrete5/concrete5/pull/4020\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e If that merges I will apply it to version 7 as well.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nKorvin\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-12T17:40:44.849Z","updated_at":"2016-07-12T17:40:44.849Z","actor":{"username":"korvin","cleared":false,"url":"/korvin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/yi9xvfnDmjKpKA1reqNSwGct/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1077100,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"And here's the version 7 pull: https://github.com/concrete5/concrete5/pull/4029","markdown_message":"\u003cp\u003eAnd here\u0026#39;s the version 7 pull: \u003ca title=\"https://github.com/concrete5/concrete5/pull/4029\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fconcrete5%2Fconcrete5%2Fpull%2F4029\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/concrete5/concrete5/pull/4029\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-20T00:09:27.043Z","updated_at":"2016-07-20T00:09:27.043Z","actor":{"username":"korvin","cleared":false,"url":"/korvin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/yi9xvfnDmjKpKA1reqNSwGct/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"paulos_","url":"/paulos_"},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1077105,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-20T00:17:37.087Z","updated_at":"2016-07-20T00:17:37.087Z","first_to_agree":true,"actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1077107,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'd like to wait the full 30 days on this one in order to get a release out.\n\nThanks,\nKorvin","markdown_message":"\u003cp\u003eI\u0026#39;d like to wait the full 30 days on this one in order to get a release out.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nKorvin\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-20T00:18:21.963Z","updated_at":"2016-07-20T00:18:21.963Z","actor":{"username":"korvin","cleared":false,"url":"/korvin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/yi9xvfnDmjKpKA1reqNSwGct/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1077108,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@korvin sure. np","markdown_message":"\u003cp\u003e\u003ca href=\"/korvin\"\u003e@korvin\u003c/a\u003e sure. np\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-20T00:19:28.113Z","updated_at":"2016-07-20T00:19:41.995Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1139159,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-08-19T00:17:46.778Z","updated_at":"2016-08-19T00:17:46.778Z","actor":{"url":"/concrete5","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"concrete5"}},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}