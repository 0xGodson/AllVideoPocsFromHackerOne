{"id":550696,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NTA2OTY=","url":"https://hackerone.com/reports/550696","title":"Heap Buffer Overflow at lib/tftp.c","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2019-04-29T18:08:38.242Z","submitted_at":"2019-04-29T18:08:38.242Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"l00p3r","url":"/l00p3r","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-5436"],"singular_disclosure_disabled":false,"disclosed_at":"2019-05-31T20:35:44.951Z","bug_reporter_agreed_on_going_public_at":"2019-05-31T11:11:11.228Z","team_member_agreed_on_going_public_at":"2019-05-31T20:35:44.871Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nA heap buffer overflow can occur at line 1114 in file `lib/tftp.c` due to the fact of `state-\u003eblksize` containing the default size instead of containing the one specified in the `--tftp-blksize` parameter.\n\nThis bug could lead to a **crash** or maybe to **RCE** in the case the attacker also had a memory leak.\n\n\n### Vulnerable line:\n```\nstate-\u003erbytes = (int)recvfrom(state-\u003esockfd,\n                                (void *)state-\u003erpacket.data,\n                                state-\u003eblksize + 4,\n                                0,\n                                (struct sockaddr *)\u0026fromaddr,\n                                \u0026fromlen);\n```\n\n\n## Steps To Reproduce:\n\n  1. Download the server script\n  1. Run it and bind to an address: `$ python evil-server.py IP PORT`\n  1. Connect to that server with curl: `$ curl --tftp-blksize N tftp://IP:PORT`\nWhere **N** should be a number lower than 293.\n\n## Impact\n\n* An attacker would also need a memory leak in order to gain full RCE.\n* The victim should explicitly set the `--blksize` argument to a value inferior to 293.\n\nThus, the impact is not very high but it's still quite dangerous to not release a patch.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eA heap buffer overflow can occur at line 1114 in file \u003ccode\u003elib/tftp.c\u003c/code\u003e due to the fact of \u003ccode\u003estate-\u0026gt;blksize\u003c/code\u003e containing the default size instead of containing the one specified in the \u003ccode\u003e--tftp-blksize\u003c/code\u003e parameter.\u003c/p\u003e\n\n\u003cp\u003eThis bug could lead to a \u003cstrong\u003ecrash\u003c/strong\u003e or maybe to \u003cstrong\u003eRCE\u003c/strong\u003e in the case the attacker also had a memory leak.\u003c/p\u003e\n\n\u003ch3 id=\"vulnerable-line\"\u003eVulnerable line:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estate-\u0026gt;rbytes = (int)recvfrom(state-\u0026gt;sockfd,\n                                (void *)state-\u0026gt;rpacket.data,\n                                state-\u0026gt;blksize + 4,\n                                0,\n                                (struct sockaddr *)\u0026amp;fromaddr,\n                                \u0026amp;fromlen);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eDownload the server script\u003c/li\u003e\n\u003cli\u003eRun it and bind to an address: \u003ccode\u003e$ python evil-server.py IP PORT\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eConnect to that server with curl: \u003ccode\u003e$ curl --tftp-blksize N tftp://IP:PORT\u003c/code\u003e\nWhere \u003cstrong\u003eN\u003c/strong\u003e should be a number lower than 293.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn attacker would also need a memory leak in order to gain full RCE.\u003c/li\u003e\n\u003cli\u003eThe victim should explicitly set the \u003ccode\u003e--blksize\u003c/code\u003e argument to a value inferior to 293.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThus, the impact is not very high but it\u0026#39;s still quite dangerous to not release a patch.\u003c/p\u003e\n","bounty_amount":"200.0","formatted_bounty":"$200","weakness":{"id":5,"name":"Heap Overflow"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":478252,"file_name":"evil-server.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/478/252/8d6391cef3216646017f17e05d2d75ad582223b4/evil-server.py?response-content-disposition=attachment%3B%20filename%3D%22evil-server.py%22%3B%20filename%2A%3DUTF-8%27%27evil-server.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRVDVIAIN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T062000Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCIE32Mqh2tZr%2BOU5TpCkMAcCIP7cUR4Cmx6knF0aE1pAIhANosl%2BxHV6Q%2F51LP%2Fec3HeAsrkcv3Oonagtggk2l2fcHKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyvivkNb%2F%2FihtanvJsqkQOxVl0vet745bZV8lQI5KYtwTWpcIFAsML7JxymD3vn9i8QCWhlYeT2MW%2B9baTQMb%2BdveMhrdwbKcBh3ip%2ByweQnVl9ueQzetzoXpB5k2WZrDCF3m0PA%2BCv6ox3XmJRewIkURiq4Ztl%2BHyUPdAtuOYZDYkHGUB8OqZgDmy0YoWLDqNPzGZK7dX7v62QUuo2TiCO%2BWHnWiVN2sIAHkLQ1c0cRYR2hre0%2FHfkXdHak9EM%2FJlTAH%2BQnt3DZGo6v788Hni0I1X%2F70QyGnfzTEgA8%2Fvb6vKESyULs14SrfKtlo9En1u2T1%2B79JNxVdhJNX%2BfERg06V3dMkcO%2BhECVPAWHzRrJ3bTOIIfgttUE3yW5ViJmecveb28ezf1szEuiXvW%2BZQUdTtFctgvSq22L57hu2QitzJ%2F7EFXuPPyfSKn70goiFML2nsYjayzP2jOzI85Wf0PZwwCg%2BTr7Ldre4VPxLs2y%2BAhqKPahi9iLDrk5IVFZPWBWrmRjgRlhjIP7aYZzYQEoqoD%2F3susXDMHlsiMv8yoDDN6ar%2FBTrqAdSZzhKXhWU9aDM9pF9urQto0LgyoOSxshu8McAhBrfa%2FReNxxcISybiMxPssa8oRShR7XUSBWuVRE7CnX5MQKY6UeaUB8HDokdym3sz7IA0tuq64XmfywVqSVqOZTRnXaNG%2BObO1m4FlOQ%2FC4n%2Fbe50N8rAEPnkWd81lyuaeMezjo4O%2BlEpCZ%2ByBXnfl88Bjx8KUaMIVJ5VHQ8J6PBiG%2FjOWow2rty2SDO%2BTqlQJxjPwbenYT7WUyEPOBmi%2FZgSy9qD6EP%2B5GMYGk0q2R6LmuTGm6QPTGNHaZ%2BHqK3PMyvOo0eC1hMcq6KJ8g%3D%3D\u0026X-Amz-Signature=5c77b548c52e4289d58293e8842b970f7d632de8368d04c2c99d4feaa8c990c7","file_size":1748,"type":"text/x-python"}],"allow_singular_disclosure_at":"2019-06-30T11:11:11.319Z","allow_singular_disclosure_after":-47329728.953354955,"singular_disclosure_allowed":true,"vote_count":12,"voters":["foobar7","mygf","nessun00x","cr4xerbik4sh","arifmkhls","odraude","cryptographer","vs19","metaller","leot","and 2 more..."],"severity":{"rating":"low","score":1.8,"author_type":"Team","metrics":{"attack_vector":"adjacent","attack_complexity":"high","privileges_required":"high","user_interaction":"required","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"low"}},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4665094,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your report, we are investigating and will get back to you shortly.","markdown_message":"\u003cp\u003eThanks for your report, we are investigating and will get back to you shortly.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T18:37:23.041Z","updated_at":"2019-04-29T18:37:23.041Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4669144,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-29T20:14:04.620Z","updated_at":"2019-04-29T20:14:04.620Z","additional_data":{"old_severity":null,"new_severity":"Low (1.8)","old_severity_id":null,"new_severity_id":361627},"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4669800,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Easily reproducible thanks to the fancy python script. Valgrind (on git master) says this:\n~~~\n==32004== Syscall param socketcall.recvfrom(buf) points to unaddressable byte(s)\n==32004==    at 0x511B834: recvfrom (recvfrom.c:27)\n==32004==    by 0x18FF50: tftp_receive_packet (tftp.c:1114)\n==32004==    by 0x190496: tftp_multi_statemach (tftp.c:1264)\n==32004==    by 0x190611: tftp_perform (tftp.c:1327)\n==32004==    by 0x1906B4: tftp_do (tftp.c:1363)\n==32004==    by 0x143839: multi_do (multi.c:1197)\n==32004==    by 0x144533: multi_runsingle (multi.c:1562)\n==32004==    by 0x14566B: curl_multi_perform (multi.c:2060)\n==32004==    by 0x13D60E: easy_transfer (easy.c:624)\n==32004==    by 0x13D83A: easy_perform (easy.c:718)\n==32004==    by 0x13D884: curl_easy_perform (easy.c:737)\n==32004==    by 0x130C17: operate_do (tool_operate.c:1592)\n==32004==  Address 0x5cf07f8 is 0 bytes after a block of size 120 alloc'd\n==32004==    at 0x4837B65: calloc (vg_replace_malloc.c:752)\n==32004==    by 0x13E9B4: curl_dbg_calloc (memdebug.c:205)\n==32004==    by 0x18FC4E: tftp_connect (tftp.c:991)\n==32004==    by 0x17B882: Curl_protocol_connect (url.c:1542)\n==32004==    by 0x144397: multi_runsingle (multi.c:1519)\n==32004==    by 0x14566B: curl_multi_perform (multi.c:2060)\n==32004==    by 0x13D60E: easy_transfer (easy.c:624)\n==32004==    by 0x13D83A: easy_perform (easy.c:718)\n==32004==    by 0x13D884: curl_easy_perform (easy.c:737)\n==32004==    by 0x130C17: operate_do (tool_operate.c:1592)\n==32004==    by 0x131F99: operate (tool_operate.c:2095)\n==32004==    by 0x12AB88: main (tool_main.c:326)\n\n","markdown_message":"\u003cp\u003eEasily reproducible thanks to the fancy python script. Valgrind (on git master) says this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==32004== Syscall param socketcall.recvfrom(buf) points to unaddressable byte(s)\n==32004==    at 0x511B834: recvfrom (recvfrom.c:27)\n==32004==    by 0x18FF50: tftp_receive_packet (tftp.c:1114)\n==32004==    by 0x190496: tftp_multi_statemach (tftp.c:1264)\n==32004==    by 0x190611: tftp_perform (tftp.c:1327)\n==32004==    by 0x1906B4: tftp_do (tftp.c:1363)\n==32004==    by 0x143839: multi_do (multi.c:1197)\n==32004==    by 0x144533: multi_runsingle (multi.c:1562)\n==32004==    by 0x14566B: curl_multi_perform (multi.c:2060)\n==32004==    by 0x13D60E: easy_transfer (easy.c:624)\n==32004==    by 0x13D83A: easy_perform (easy.c:718)\n==32004==    by 0x13D884: curl_easy_perform (easy.c:737)\n==32004==    by 0x130C17: operate_do (tool_operate.c:1592)\n==32004==  Address 0x5cf07f8 is 0 bytes after a block of size 120 alloc\u0026#39;d\n==32004==    at 0x4837B65: calloc (vg_replace_malloc.c:752)\n==32004==    by 0x13E9B4: curl_dbg_calloc (memdebug.c:205)\n==32004==    by 0x18FC4E: tftp_connect (tftp.c:991)\n==32004==    by 0x17B882: Curl_protocol_connect (url.c:1542)\n==32004==    by 0x144397: multi_runsingle (multi.c:1519)\n==32004==    by 0x14566B: curl_multi_perform (multi.c:2060)\n==32004==    by 0x13D60E: easy_transfer (easy.c:624)\n==32004==    by 0x13D83A: easy_perform (easy.c:718)\n==32004==    by 0x13D884: curl_easy_perform (easy.c:737)\n==32004==    by 0x130C17: operate_do (tool_operate.c:1592)\n==32004==    by 0x131F99: operate (tool_operate.c:2095)\n==32004==    by 0x12AB88: main (tool_main.c:326)\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-29T20:24:24.231Z","updated_at":"2019-04-29T20:24:24.231Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4670426,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I don't understand why the size has to be lower than 293? It seems to do an out of bounds write to the buffer as long as you set the size to something smaller than 504? At least my valgrind says so.\n\nA first shot at a patch:\n\n~~~diff\ndiff --git a/lib/tftp.c b/lib/tftp.c\nindex 8b92b7bd6..289cda282 100644\n--- a/lib/tftp.c\n+++ b/lib/tftp.c\n@@ -1007,11 +1007,11 @@ static CURLcode tftp_connect(struct connectdata *conn, bool *done)\n \n   state-\u003econn = conn;\n   state-\u003esockfd = state-\u003econn-\u003esock[FIRSTSOCKET];\n   state-\u003estate = TFTP_STATE_START;\n   state-\u003eerror = TFTP_ERR_NONE;\n-  state-\u003eblksize = TFTP_BLKSIZE_DEFAULT;\n+  state-\u003eblksize = blksize;\n   state-\u003erequested_blksize = blksize;\n \n   ((struct sockaddr *)\u0026state-\u003elocal_addr)-\u003esa_family =\n     (CURL_SA_FAMILY_T)(conn-\u003eip_addr-\u003eai_family);\n \n","markdown_message":"\u003cp\u003eI don\u0026#39;t understand why the size has to be lower than 293? It seems to do an out of bounds write to the buffer as long as you set the size to something smaller than 504? At least my valgrind says so.\u003c/p\u003e\n\n\u003cp\u003eA first shot at a patch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/lib/tftp.c b/lib/tftp.c\nindex 8b92b7bd6..289cda282 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/lib/tftp.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/lib/tftp.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1007,11 +1007,11 @@\u003c/span\u003e static CURLcode tftp_connect(struct connectdata *conn, bool *done)\n\n   state-\u0026gt;conn = conn;\n   state-\u0026gt;sockfd = state-\u0026gt;conn-\u0026gt;sock[FIRSTSOCKET];\n   state-\u0026gt;state = TFTP_STATE_START;\n   state-\u0026gt;error = TFTP_ERR_NONE;\n\u003cspan class=\"gd\"\u003e-  state-\u0026gt;blksize = TFTP_BLKSIZE_DEFAULT;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  state-\u0026gt;blksize = blksize;\n\u003c/span\u003e   state-\u0026gt;requested_blksize = blksize;\n\n   ((struct sockaddr *)\u0026amp;state-\u0026gt;local_addr)-\u0026gt;sa_family =\n     (CURL_SA_FAMILY_T)(conn-\u0026gt;ip_addr-\u0026gt;ai_family);\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-29T20:53:13.604Z","updated_at":"2019-04-29T20:53:13.604Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4670485,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-29T20:59:03.049Z","updated_at":"2019-04-29T20:59:03.049Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4672178,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The actual oob write occurs when the size is smaller than 504, but the core dump occurs when the size is smaller than 293 due to the fact that it needs to overwrite the size of a certain chunk after the overflowed one.\n\nSorry for the confusion.","markdown_message":"\u003cp\u003eThe actual oob write occurs when the size is smaller than 504, but the core dump occurs when the size is smaller than 293 due to the fact that it needs to overwrite the size of a certain chunk after the overflowed one.\u003c/p\u003e\n\n\u003cp\u003eSorry for the confusion.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T21:59:22.632Z","updated_at":"2019-04-29T21:59:22.632Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4672190,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'd like to propose a time schedule for this issue.\n\nThis is a low impact flaw, we don't need to hurry - I want to schedule the publication of this in sync with the pending next release in May 22 2019 (7.65.0).\n\n- In the coming week or so, write up an advisory draft explaining the flaw. I will do a first version and post here. Then we can polish the phrasing.\n- Decide on the patch. It might be enough with the one-liner above.\n- The security team determines the reward amount for this vulnerability.\n- Get a CVE issued\n- At May 22, publish the advisory in association with the 7.65.0 release.\n\nYou fine with this, @l00p3r ?","markdown_message":"\u003cp\u003eI\u0026#39;d like to propose a time schedule for this issue.\u003c/p\u003e\n\n\u003cp\u003eThis is a low impact flaw, we don\u0026#39;t need to hurry - I want to schedule the publication of this in sync with the pending next release in May 22 2019 (7.65.0).\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIn the coming week or so, write up an advisory draft explaining the flaw. I will do a first version and post here. Then we can polish the phrasing.\u003c/li\u003e\n\u003cli\u003eDecide on the patch. It might be enough with the one-liner above.\u003c/li\u003e\n\u003cli\u003eThe security team determines the reward amount for this vulnerability.\u003c/li\u003e\n\u003cli\u003eGet a CVE issued\u003c/li\u003e\n\u003cli\u003eAt May 22, publish the advisory in association with the 7.65.0 release.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou fine with this, \u003ca href=\"/l00p3r\"\u003e@l00p3r\u003c/a\u003e ?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T22:03:21.233Z","updated_at":"2019-04-29T22:03:21.233Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4672221,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I’m totally fine. Tomorrow I’ll check if that patch works ok, and if not I’ll propose a new one.","markdown_message":"\u003cp\u003eI’m totally fine. Tomorrow I’ll check if that patch works ok, and if not I’ll propose a new one.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T22:10:36.483Z","updated_at":"2019-04-29T22:10:36.483Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4688104,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've tested the patch and there's a small issue in it.\n\n```\n0x5555557a1bb0:\t0x000000021eda20b4\t 0x0000000000000071  \u003c--- Overflowed chunk\n0x5555557a1bc0:\t0x4141414141410500\t 0x4141414141414141\n0x5555557a1bd0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1be0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1bf0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c00:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c10:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c20:\t0x4141414141414141\u003c+ 0x0000000000000071  \u003c---- The next chunk\n0x5555557a1c30:\t0x746574636f000100 | 0x3000657a69737400\n0x5555557a1c40:\t0x657a69736b6c6200 | 0x6d69740030303100\n                                   +----------------------- The `prev` var of the next chunk\n```\n\nAs you can see, even with the patch applied, the `prev` var of the chunk next to the overflowed one still gets overflowed. This is **NOT** exploitable, but still, it could lead to some crash.\n\nHere's how the chunk should look like:\n\n```\n0x5555557a1bb0:\t0x000000021eda20b4\t 0x0000000000000071  \u003c--- Overflowed chunk\n0x5555557a1bc0:\t0x4141414141410500\t 0x4141414141414141\n0x5555557a1bd0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1be0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1bf0:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c00:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c10:\t0x4141414141414141\t 0x4141414141414141\n0x5555557a1c20:\t0x0000000000000000\u003c+ 0x0000000000000071  \u003c---- The next chunk\n0x5555557a1c30:\t0x746574636f000100 | 0x3000657a69737400\n0x5555557a1c40:\t0x657a69736b6c6200 | 0x6d69740030303100\n                                   +----------------------- The `prev` var of the next chunk\n```\n\nAnd that can be accomplished making the following patch:\n\n```\ndiff --git a/curl/lib/tftp.c b/curl-patched/lib/tftp.c\nindex 8b92b7b..8240fb3 100644\n--- a/curl/lib/tftp.c\n+++ b/curl-patched/lib/tftp.c\n@@ -1009,7 +1009,7 @@ static CURLcode tftp_connect(struct connectdata *conn, bool *done)\n   state-\u003esockfd = state-\u003econn-\u003esock[FIRSTSOCKET];\n   state-\u003estate = TFTP_STATE_START;\n   state-\u003eerror = TFTP_ERR_NONE;\n-  state-\u003eblksize = TFTP_BLKSIZE_DEFAULT;\n+  state-\u003eblksize = blksize;\n   state-\u003erequested_blksize = blksize;\n \n   ((struct sockaddr *)\u0026state-\u003elocal_addr)-\u003esa_family =\n@@ -1113,7 +1113,7 @@ static CURLcode tftp_receive_packet(struct connectdata *conn)\n   fromlen = sizeof(fromaddr);\n   state-\u003erbytes = (int)recvfrom(state-\u003esockfd,\n                                 (void *)state-\u003erpacket.data,\n-                                state-\u003eblksize + 4,\n+                                state-\u003eblksize - 4,\n                                 0,\n                                 (struct sockaddr *)\u0026fromaddr,\n                                 \u0026fromlen);\n```\n\nPlease, let me know if everything works as expected.","markdown_message":"\u003cp\u003eI\u0026#39;ve tested the patch and there\u0026#39;s a small issue in it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0x5555557a1bb0: 0x000000021eda20b4   0x0000000000000071  \u0026lt;--- Overflowed chunk\n0x5555557a1bc0: 0x4141414141410500   0x4141414141414141\n0x5555557a1bd0: 0x4141414141414141   0x4141414141414141\n0x5555557a1be0: 0x4141414141414141   0x4141414141414141\n0x5555557a1bf0: 0x4141414141414141   0x4141414141414141\n0x5555557a1c00: 0x4141414141414141   0x4141414141414141\n0x5555557a1c10: 0x4141414141414141   0x4141414141414141\n0x5555557a1c20: 0x4141414141414141\u0026lt;+ 0x0000000000000071  \u0026lt;---- The next chunk\n0x5555557a1c30: 0x746574636f000100 | 0x3000657a69737400\n0x5555557a1c40: 0x657a69736b6c6200 | 0x6d69740030303100\n                                   +----------------------- The `prev` var of the next chunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you can see, even with the patch applied, the \u003ccode\u003eprev\u003c/code\u003e var of the chunk next to the overflowed one still gets overflowed. This is \u003cstrong\u003eNOT\u003c/strong\u003e exploitable, but still, it could lead to some crash.\u003c/p\u003e\n\n\u003cp\u003eHere\u0026#39;s how the chunk should look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0x5555557a1bb0: 0x000000021eda20b4   0x0000000000000071  \u0026lt;--- Overflowed chunk\n0x5555557a1bc0: 0x4141414141410500   0x4141414141414141\n0x5555557a1bd0: 0x4141414141414141   0x4141414141414141\n0x5555557a1be0: 0x4141414141414141   0x4141414141414141\n0x5555557a1bf0: 0x4141414141414141   0x4141414141414141\n0x5555557a1c00: 0x4141414141414141   0x4141414141414141\n0x5555557a1c10: 0x4141414141414141   0x4141414141414141\n0x5555557a1c20: 0x0000000000000000\u0026lt;+ 0x0000000000000071  \u0026lt;---- The next chunk\n0x5555557a1c30: 0x746574636f000100 | 0x3000657a69737400\n0x5555557a1c40: 0x657a69736b6c6200 | 0x6d69740030303100\n                                   +----------------------- The `prev` var of the next chunk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd that can be accomplished making the following patch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/curl/lib/tftp.c b/curl-patched/lib/tftp.c\nindex 8b92b7b..8240fb3 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/curl/lib/tftp.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/curl-patched/lib/tftp.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1009,7 +1009,7 @@\u003c/span\u003e static CURLcode tftp_connect(struct connectdata *conn, bool *done)\n   state-\u0026gt;sockfd = state-\u0026gt;conn-\u0026gt;sock[FIRSTSOCKET];\n   state-\u0026gt;state = TFTP_STATE_START;\n   state-\u0026gt;error = TFTP_ERR_NONE;\n\u003cspan class=\"gd\"\u003e-  state-\u0026gt;blksize = TFTP_BLKSIZE_DEFAULT;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  state-\u0026gt;blksize = blksize;\n\u003c/span\u003e   state-\u0026gt;requested_blksize = blksize;\n\n   ((struct sockaddr *)\u0026amp;state-\u0026gt;local_addr)-\u0026gt;sa_family =\n\u003cspan class=\"p\"\u003e@@ -1113,7 +1113,7 @@\u003c/span\u003e static CURLcode tftp_receive_packet(struct connectdata *conn)\n   fromlen = sizeof(fromaddr);\n   state-\u0026gt;rbytes = (int)recvfrom(state-\u0026gt;sockfd,\n                                 (void *)state-\u0026gt;rpacket.data,\n\u003cspan class=\"gd\"\u003e-                                state-\u0026gt;blksize + 4,\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+                                state-\u0026gt;blksize - 4,\n\u003c/span\u003e                                 0,\n                                 (struct sockaddr *)\u0026amp;fromaddr,\n                                 \u0026amp;fromlen);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePlease, let me know if everything works as expected.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-30T14:27:53.568Z","updated_at":"2019-04-30T14:29:56.820Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4694514,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry but I don't follow this explanation of what exactly the problem is with my one-line patch.\n\nOn lib/tftp.c:991 there's a calloc of blksize + 4. So when calling recvfrom(), why can't we ask it to fill the entire memory area that was allocated for this purpose? blksize + 4 *should* be fine to use there surely? If you recvfrom less than the agreed block size, then we'll never get the full block?\n\nThe initial 4 bytes are there to hold the two-byte opcode (DATA) and the two-byte block number and blksize number of bytes hold a full block of data.\n\nSince valgrind doesn't find any problem when I run the tests with my patch, what do I need to do to see the problem with it that you see?","markdown_message":"\u003cp\u003eSorry but I don\u0026#39;t follow this explanation of what exactly the problem is with my one-line patch.\u003c/p\u003e\n\n\u003cp\u003eOn lib/tftp.c:991 there\u0026#39;s a calloc of blksize + 4. So when calling recvfrom(), why can\u0026#39;t we ask it to fill the entire memory area that was allocated for this purpose? blksize + 4 \u003cem\u003eshould\u003c/em\u003e be fine to use there surely? If you recvfrom less than the agreed block size, then we\u0026#39;ll never get the full block?\u003c/p\u003e\n\n\u003cp\u003eThe initial 4 bytes are there to hold the two-byte opcode (DATA) and the two-byte block number and blksize number of bytes hold a full block of data.\u003c/p\u003e\n\n\u003cp\u003eSince valgrind doesn\u0026#39;t find any problem when I run the tests with my patch, what do I need to do to see the problem with it that you see?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-30T21:27:09.167Z","updated_at":"2019-04-30T21:28:02.700Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4695359,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm so sorry, I've got totally confused with heap chunk types and their rounding. Seems like today isn't my day.\nI've rechecked and your first patch seems OK.\nSorry again for the confusion.","markdown_message":"\u003cp\u003eI\u0026#39;m so sorry, I\u0026#39;ve got totally confused with heap chunk types and their rounding. Seems like today isn\u0026#39;t my day.\u003cbr\u003e\nI\u0026#39;ve rechecked and your first patch seems OK.\u003cbr\u003e\nSorry again for the confusion.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-30T22:10:37.056Z","updated_at":"2019-04-30T22:10:37.056Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4705218,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"No worries, I'm just glad we're on the same page!","markdown_message":"\u003cp\u003eNo worries, I\u0026#39;m just glad we\u0026#39;re on the same page!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-01T20:04:35.266Z","updated_at":"2019-05-01T20:04:35.266Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4736865,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here's my first draft for a security advisory for this issue. @l00p3r, please let me know if you're fine with being credited like this (see the end).\n\nTFTP receive buffer overflow\n============================\n\nProject curl Security Advisory, May 22nd 2019 -\n[Permalink](https://curl.haxx.se/docs/CVE-2019-XXXX.html)\n\nVULNERABILITY\n-------------\n\nlibcurl contains a heap buffer overflow in the function\n(`tftp_receive_packet()`) that recevives data from a TFTP server. It calls\n`recvfrom()` with the default size for the buffer rather than with the size\nthat was used to allocate it. Thus, the content that might overwrite the heap\nmemory is entirely controlled by the server.\n\nThe flaw exists if the user selects to use a \"blksize\" of 504 or smaller\n(default is 512). The smaller size that is used, the larger the possible\noverflow becomes.\n\nUsers chosing a smaller size than default should be rare as the primary use\ncase for changing the size is to make it larger.\n\nIt is rare for users to use TFTP across the Internet. It is most commonly used\nwithin local networks.\n\nWe are not aware of any exploit of this flaw.\n\nINFO\n----\n\nThis bug was introduced in January 2009 in \n[commit 0516ce7786e95](https://github.com/curl/curl/commit/0516ce7786e95).\n\nThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\nCVE-2019-XXXX to this issue.\n\nCWE-122: Heap-based Buffer Overflow\n\nSeverity: 1.8 (Low)\n\nAFFECTED VERSIONS\n-----------------\n\n- Affected versions: libcurl 7.19.4 to and including 7.64.1\n- Not affected versions: libcurl \u003c 7.19.4 and \u003e= libcurl 7.65.0\n\nlibcurl is used by many applications, but not always advertised as such.\n\nTHE SOLUTION\n------------\n\nA [fix for CVE-2019-XXXX](https://curl.haxx.se/0001-tftp-use-the-current-blksize-for-recvfrom.patch) (The patch URL will be different in the final publication of this.)\n\nRECOMMENDATIONS\n--------------\n\nWe suggest you take one of the following actions immediately, in order of\npreference:\n\n A - Upgrade curl to version 7.65.0\n\n B - Apply the patch to your version and rebuild\n \n C - do not use TFTP with curl\n\nTIMELINE\n--------\n\nThe issue was reported to the curl project on April 29, 2019. The patch was\ncommunicated to the reporter on April 29, 2019. We contacted distros@openwall\non May XXX.\n\ncurl 7.65.0 was released on May 22 2019, coordinated with the publication of\nthis advisory.\n\nCREDITS\n-------\n\nReported by l00p3r. Patch by Daniel Stenberg\n\nThanks a lot!\n","markdown_message":"\u003cp\u003eHere\u0026#39;s my first draft for a security advisory for this issue. \u003ca href=\"/l00p3r\"\u003e@l00p3r\u003c/a\u003e, please let me know if you\u0026#39;re fine with being credited like this (see the end).\u003c/p\u003e\n\n\u003ch1 id=\"tftp-receive-buffer-overflow\"\u003eTFTP receive buffer overflow\u003c/h1\u003e\n\n\u003cp\u003eProject curl Security Advisory, May 22nd 2019 -\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2019-XXXX.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePermalink\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability\"\u003eVULNERABILITY\u003c/h2\u003e\n\n\u003cp\u003elibcurl contains a heap buffer overflow in the function\u003cbr\u003e\n(\u003ccode\u003etftp_receive_packet()\u003c/code\u003e) that recevives data from a TFTP server. It calls\u003cbr\u003e\n\u003ccode\u003erecvfrom()\u003c/code\u003e with the default size for the buffer rather than with the size\u003cbr\u003e\nthat was used to allocate it. Thus, the content that might overwrite the heap\u003cbr\u003e\nmemory is entirely controlled by the server.\u003c/p\u003e\n\n\u003cp\u003eThe flaw exists if the user selects to use a \u0026quot;blksize\u0026quot; of 504 or smaller\u003cbr\u003e\n(default is 512). The smaller size that is used, the larger the possible\u003cbr\u003e\noverflow becomes.\u003c/p\u003e\n\n\u003cp\u003eUsers chosing a smaller size than default should be rare as the primary use\u003cbr\u003e\ncase for changing the size is to make it larger.\u003c/p\u003e\n\n\u003cp\u003eIt is rare for users to use TFTP across the Internet. It is most commonly used\u003cbr\u003e\nwithin local networks.\u003c/p\u003e\n\n\u003cp\u003eWe are not aware of any exploit of this flaw.\u003c/p\u003e\n\n\u003ch2 id=\"info\"\u003eINFO\u003c/h2\u003e\n\n\u003cp\u003eThis bug was introduced in January 2009 in \u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2F0516ce7786e95\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecommit 0516ce7786e95\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\u003cbr\u003e\nCVE-2019-XXXX to this issue.\u003c/p\u003e\n\n\u003cp\u003eCWE-122: Heap-based Buffer Overflow\u003c/p\u003e\n\n\u003cp\u003eSeverity: 1.8 (Low)\u003c/p\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAFFECTED VERSIONS\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAffected versions: libcurl 7.19.4 to and including 7.64.1\u003c/li\u003e\n\u003cli\u003eNot affected versions: libcurl \u0026lt; 7.19.4 and \u0026gt;= libcurl 7.65.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003elibcurl is used by many applications, but not always advertised as such.\u003c/p\u003e\n\n\u003ch2 id=\"the-solution\"\u003eTHE SOLUTION\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2F0001-tftp-use-the-current-blksize-for-recvfrom.patch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efix for CVE-2019-XXXX\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (The patch URL will be different in the final publication of this.)\u003c/p\u003e\n\n\u003ch2 id=\"recommendations\"\u003eRECOMMENDATIONS\u003c/h2\u003e\n\n\u003cp\u003eWe suggest you take one of the following actions immediately, in order of\u003cbr\u003e\npreference:\u003c/p\u003e\n\n\u003cp\u003eA - Upgrade curl to version 7.65.0\u003c/p\u003e\n\n\u003cp\u003eB - Apply the patch to your version and rebuild\u003c/p\u003e\n\n\u003cp\u003eC - do not use TFTP with curl\u003c/p\u003e\n\n\u003ch2 id=\"timeline\"\u003eTIMELINE\u003c/h2\u003e\n\n\u003cp\u003eThe issue was reported to the curl project on April 29, 2019. The patch was\u003cbr\u003e\ncommunicated to the reporter on April 29, 2019. We contacted distros@openwall\u003cbr\u003e\non May XXX.\u003c/p\u003e\n\n\u003cp\u003ecurl 7.65.0 was released on May 22 2019, coordinated with the publication of\u003cbr\u003e\nthis advisory.\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCREDITS\u003c/h2\u003e\n\n\u003cp\u003eReported by l00p3r. Patch by Daniel Stenberg\u003c/p\u003e\n\n\u003cp\u003eThanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-03T20:24:53.347Z","updated_at":"2019-05-03T20:24:53.347Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4737146,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've now requested a CVE for this issue.","markdown_message":"\u003cp\u003eI\u0026#39;ve now requested a CVE for this issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-03T20:32:18.461Z","updated_at":"2019-05-03T20:32:18.461Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4740946,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Everything seems perfect!","markdown_message":"\u003cp\u003eEverything seems perfect!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-04T09:26:21.175Z","updated_at":"2019-05-04T09:26:21.175Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4741601,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"CVE-2019-5436","markdown_message":"\u003cp\u003eCVE-2019-5436\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-04T11:36:45.460Z","updated_at":"2019-05-04T11:36:45.460Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4747510,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I also wrote a new test case that reproduces this issue and verifies the fix, that I intend to land at the same time as the patch. ~48 hours before the release.","markdown_message":"\u003cp\u003eI also wrote a new test case that reproduces this issue and verifies the fix, that I intend to land at the same time as the patch. ~48 hours before the release.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-05T12:56:42.017Z","updated_at":"2019-05-05T12:56:42.017Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4802566,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"The curl security team has decided to reward hacker @l00p3r with the amount of 200 USD for finding and reporting this issue. Many thanks for your great work!","markdown_message":"\u003cp\u003eThe curl security team has decided to reward hacker \u003ca href=\"/l00p3r\"\u003e@l00p3r\u003c/a\u003e with the amount of 200 USD for finding and reporting this issue. Many thanks for your great work!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-09T18:48:43.107Z","updated_at":"2019-05-09T18:48:43.107Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"bounty_amount":"200.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"curl","collaborator":{"username":"l00p3r","url":"/l00p3r"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4804596,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you so much for the bounty and for the fast response and efficiency! I hope we work together again soon! :)","markdown_message":"\u003cp\u003eThank you so much for the bounty and for the fast response and efficiency! I hope we work together again soon! :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-10T05:27:55.958Z","updated_at":"2019-05-10T05:27:55.958Z","actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4905643,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-22T23:12:40.395Z","updated_at":"2019-05-22T23:12:40.395Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"l00p3r","url":"/l00p3r"},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4960011,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Are we ready to go public? ","markdown_message":"\u003cp\u003eAre we ready to go public? \u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-31T11:11:11.264Z","updated_at":"2019-05-31T11:11:11.264Z","first_to_agree":true,"actor":{"username":"l00p3r","cleared":false,"url":"/l00p3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/229/925/fb136992f17782808cc74ba197a6ceef9d9899c1_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4963227,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-31T20:35:44.896Z","updated_at":"2019-05-31T20:35:44.896Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4963228,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-31T20:35:44.977Z","updated_at":"2019-05-31T20:35:44.977Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}