{"id":218966,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTg5NjY=","url":"https://hackerone.com/reports/218966","title":"avrecode: global-buffer-overflow in get_neighbor()","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2017-04-06T06:10:15.406Z","submitted_at":"2017-04-06T06:10:15.406Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"geeknik","url":"/geeknik","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/7xfGZCKCxUuGLYGfuUZM3XyY/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":461,"url":"https://hackerone.com/dropbox","handle":"dropbox","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/461/76f193964f418c594dd74ae1326cf4d9223f481b_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/461/76f193964f418c594dd74ae1326cf4d9223f481b_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Dropbox","twitter_handle":"","website":"https://www.dropbox.com","about":"Your stuff, anywhere"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-03T16:15:23.381Z","bug_reporter_agreed_on_going_public_at":"2019-10-04T16:15:19.542Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Source: https://github.com/dropbox/avrecode\nVersion:  2de743d\n\nBuilt using the Github instructions with afl-gcc and ASAN. Feeding this malformed .mp4 to recode triggers a global buffer overflow. \n\n`./recode roundtrip test003.mp4`\n\n```\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0x61b00001f180] Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n[h264 @ 0x61a00001f280] error while decoding MB 2 2, bytestream -11\n[h264 @ 0x61a00001f280] concealing 27 DC, 27 AC, 27 MV errors in I frame\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'id:000003,sig:06,src:000000,op:havoc,rep:4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 19529854\n    compatible_brands: mp42isom\n    creation_time   : 2014-11-14 07:34:24\n  Duration: 00:00:01.00, start: 0.083333, bitrate: N/A\n    Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, smpte170m), 48x144 [SAR 1:1 DAR 1:3], 3 kb/s, 12 fps, 12 tbr, 12 tbn, 24 tbc (default)\n    Metadata:\n      rotate          : 0\n      creation_time   : 2014-11-14 07:34:24\n      handler_name    : Video Media Handler\n      encoder         : AVC Coding\n    Side data:\n      displaymatrix: rotation of -0.00 degrees\nFINISHED QUEUING DECODE: 1\nFINISHED QUEUING DECODE: 2\nFINISHED QUEUING DECODE: 2\nFINISHED QUEUING DECODE: 3\nFINISHED QUEUING DECODE: 3\nFINISHED QUEUING DECODE: 6\nFINISHED QUEUING DECODE: 7\nFINISHED QUEUING DECODE: 7\nFINISHED QUEUING DECODE: 6\nFINISHED QUEUING DECODE: 2\n=================================================================\n==5924==ERROR: AddressSanitizer: global-buffer-overflow on address 0x000003bceea4 at pc 0x656bd8 bp 0x7ffc81e15650 sp 0x7ffc81e15648\nREAD of size 1 at 0x000003bceea4 thread T0\n    #0 0x656bd7 in get_neighbor(bool, int, CoefficientCoord, CoefficientCoord*) /root/avrecode/recode.cpp:496\n    #1 0x6648f2 in h264_model::get_model_key(void const*) const /root/avrecode/recode.cpp:717\n    #2 0x670fb3 in h264_model::probability_for_state(unsigned long, void const*) /root/avrecode/recode.cpp:822\n    #3 0x670fb3 in void h264_symbol::execute\u003carithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e \u003e(arithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e\u0026, h264_model*, Recoded_Block*, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e\u0026)::{lambda(unsigned long)#1}::operator()(unsigned long) const /root/avrecode/recode.cpp:1075\n    #4 0x670fb3 in std::_Function_handler\u003cunsigned long (unsigned long), void h264_symbol::execute\u003carithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e \u003e(arithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e\u0026, h264_model*, Recoded_Block*, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e\u0026)::{lambda(unsigned long)#1}\u003e::_M_invoke(std::_Any_data const\u0026, unsigned long) /usr/include/c++/4.9/functional:2025\n    #5 0x683241 in std::function\u003cunsigned long (unsigned long)\u003e::operator()(unsigned long) const /usr/include/c++/4.9/functional:2439\n    #6 0x683241 in arithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e::put(int, std::function\u003cunsigned long (unsigned long)\u003e) /root/avrecode/arithmetic_code.h:107\n    #7 0x683241 in void h264_symbol::execute\u003carithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e \u003e(arithmetic_code\u003cunsigned long, unsigned char, 0\u003e::encoder\u003cstd::back_insert_iterator\u003cstd::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e \u003e, unsigned char\u003e\u0026, h264_model*, Recoded_Block*, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e\u0026) /root/avrecode/recode.cpp:1075\n    #8 0x6916b7 in compressor::cabac_decoder::pop_queueing_symbols(CodingType) /root/avrecode/recode.cpp:1252\n    #9 0x6916b7 in compressor::cabac_decoder::end_coding_type(CodingType) /root/avrecode/recode.cpp:1226\n    #10 0x6916b7 in av_decoder\u003ccompressor\u003e::model_hooks::end_coding_type(void*, CodingType) /root/avrecode/recode.cpp:207\n    #11 0x36bc9b3 in decode_cabac_residual_internal libavcodec/h264_cabac.c:1721\n    #12 0x36bc9b3 in decode_cabac_residual_dc_internal libavcodec/h264_cabac.c:1789\n    #13 0x36de622 in decode_cabac_residual_dc libavcodec/h264_cabac.c:1837\n    #14 0x36de622 in decode_cabac_luma_residual libavcodec/h264_cabac.c:1887\n    #15 0x36de622 in ff_h264_decode_mb_cabac libavcodec/h264_cabac.c:2418\n    #16 0x18b80ac in decode_slice libavcodec/h264_slice.c:2384\n    #17 0x18de556 in ff_h264_execute_decode_slices libavcodec/h264_slice.c:2560\n    #18 0x176348b in decode_nal_units libavcodec/h264.c:1646\n    #19 0x176348b in h264_decode_frame libavcodec/h264.c:1831\n    #20 0x6f522f in avcodec_decode_video2 libavcodec/utils.c:2115\n    #21 0x66b870 in av_decoder\u003ccompressor\u003e::decode_video() /root/avrecode/recode.cpp:130\n    #22 0x67de37 in compressor::run() /root/avrecode/recode.cpp:1119\n    #23 0x6585f5 in roundtrip(std::string const\u0026, std::ostream*) /root/avrecode/recode.cpp:1598\n    #24 0x638509 in main /root/avrecode/recode.cpp:1650\n    #25 0x7f73e7c3ab44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #26 0x65451c (/root/avrecode/recode+0x65451c)\n\n0x000003bceea4 is located 60 bytes to the left of global variable 'zigzag4' from 'recode.cpp' (0x3bceee0) of size 4\n0x000003bceea4 is located 0 bytes to the right of global variable 'unzigzag4' from 'recode.cpp' (0x3bceea0) of size 4\nSUMMARY: AddressSanitizer: global-buffer-overflow /root/avrecode/recode.cpp:496 get_neighbor(bool, int, CoefficientCoord, CoefficientCoord*)\n```","vulnerability_information_html":"\u003cp\u003eSource: \u003ca title=\"https://github.com/dropbox/avrecode\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdropbox%2Favrecode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/dropbox/avrecode\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nVersion:  2de743d\u003c/p\u003e\n\n\u003cp\u003eBuilt using the Github instructions with afl-gcc and ASAN. Feeding this malformed .mp4 to recode triggers a global buffer overflow. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e./recode roundtrip test003.mp4\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[mov,mp4,m4a,3gp,3g2,mj2 @ 0x61b00001f180] Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n[h264 @ 0x61a00001f280] error while decoding MB 2 2, bytestream -11\n[h264 @ 0x61a00001f280] concealing 27 DC, 27 AC, 27 MV errors in I frame\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from \u0026#39;id:000003,sig:06,src:000000,op:havoc,rep:4\u0026#39;:\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 19529854\n    compatible_brands: mp42isom\n    creation_time   : 2014-11-14 07:34:24\n  Duration: 00:00:01.00, start: 0.083333, bitrate: N/A\n    Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, smpte170m), 48x144 [SAR 1:1 DAR 1:3], 3 kb/s, 12 fps, 12 tbr, 12 tbn, 24 tbc (default)\n    Metadata:\n      rotate          : 0\n      creation_time   : 2014-11-14 07:34:24\n      handler_name    : Video Media Handler\n      encoder         : AVC Coding\n    Side data:\n      displaymatrix: rotation of -0.00 degrees\nFINISHED QUEUING DECODE: 1\nFINISHED QUEUING DECODE: 2\nFINISHED QUEUING DECODE: 2\nFINISHED QUEUING DECODE: 3\nFINISHED QUEUING DECODE: 3\nFINISHED QUEUING DECODE: 6\nFINISHED QUEUING DECODE: 7\nFINISHED QUEUING DECODE: 7\nFINISHED QUEUING DECODE: 6\nFINISHED QUEUING DECODE: 2\n=================================================================\n==5924==ERROR: AddressSanitizer: global-buffer-overflow on address 0x000003bceea4 at pc 0x656bd8 bp 0x7ffc81e15650 sp 0x7ffc81e15648\nREAD of size 1 at 0x000003bceea4 thread T0\n    #0 0x656bd7 in get_neighbor(bool, int, CoefficientCoord, CoefficientCoord*) /root/avrecode/recode.cpp:496\n    #1 0x6648f2 in h264_model::get_model_key(void const*) const /root/avrecode/recode.cpp:717\n    #2 0x670fb3 in h264_model::probability_for_state(unsigned long, void const*) /root/avrecode/recode.cpp:822\n    #3 0x670fb3 in void h264_symbol::execute\u0026lt;arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt; \u0026gt;(arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt;\u0026amp;, h264_model*, Recoded_Block*, std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt;\u0026amp;)::{lambda(unsigned long)#1}::operator()(unsigned long) const /root/avrecode/recode.cpp:1075\n    #4 0x670fb3 in std::_Function_handler\u0026lt;unsigned long (unsigned long), void h264_symbol::execute\u0026lt;arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt; \u0026gt;(arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt;\u0026amp;, h264_model*, Recoded_Block*, std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt;\u0026amp;)::{lambda(unsigned long)#1}\u0026gt;::_M_invoke(std::_Any_data const\u0026amp;, unsigned long) /usr/include/c++/4.9/functional:2025\n    #5 0x683241 in std::function\u0026lt;unsigned long (unsigned long)\u0026gt;::operator()(unsigned long) const /usr/include/c++/4.9/functional:2439\n    #6 0x683241 in arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt;::put(int, std::function\u0026lt;unsigned long (unsigned long)\u0026gt;) /root/avrecode/arithmetic_code.h:107\n    #7 0x683241 in void h264_symbol::execute\u0026lt;arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt; \u0026gt;(arithmetic_code\u0026lt;unsigned long, unsigned char, 0\u0026gt;::encoder\u0026lt;std::back_insert_iterator\u0026lt;std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt; \u0026gt;, unsigned char\u0026gt;\u0026amp;, h264_model*, Recoded_Block*, std::vector\u0026lt;unsigned char, std::allocator\u0026lt;unsigned char\u0026gt; \u0026gt;\u0026amp;) /root/avrecode/recode.cpp:1075\n    #8 0x6916b7 in compressor::cabac_decoder::pop_queueing_symbols(CodingType) /root/avrecode/recode.cpp:1252\n    #9 0x6916b7 in compressor::cabac_decoder::end_coding_type(CodingType) /root/avrecode/recode.cpp:1226\n    #10 0x6916b7 in av_decoder\u0026lt;compressor\u0026gt;::model_hooks::end_coding_type(void*, CodingType) /root/avrecode/recode.cpp:207\n    #11 0x36bc9b3 in decode_cabac_residual_internal libavcodec/h264_cabac.c:1721\n    #12 0x36bc9b3 in decode_cabac_residual_dc_internal libavcodec/h264_cabac.c:1789\n    #13 0x36de622 in decode_cabac_residual_dc libavcodec/h264_cabac.c:1837\n    #14 0x36de622 in decode_cabac_luma_residual libavcodec/h264_cabac.c:1887\n    #15 0x36de622 in ff_h264_decode_mb_cabac libavcodec/h264_cabac.c:2418\n    #16 0x18b80ac in decode_slice libavcodec/h264_slice.c:2384\n    #17 0x18de556 in ff_h264_execute_decode_slices libavcodec/h264_slice.c:2560\n    #18 0x176348b in decode_nal_units libavcodec/h264.c:1646\n    #19 0x176348b in h264_decode_frame libavcodec/h264.c:1831\n    #20 0x6f522f in avcodec_decode_video2 libavcodec/utils.c:2115\n    #21 0x66b870 in av_decoder\u0026lt;compressor\u0026gt;::decode_video() /root/avrecode/recode.cpp:130\n    #22 0x67de37 in compressor::run() /root/avrecode/recode.cpp:1119\n    #23 0x6585f5 in roundtrip(std::string const\u0026amp;, std::ostream*) /root/avrecode/recode.cpp:1598\n    #24 0x638509 in main /root/avrecode/recode.cpp:1650\n    #25 0x7f73e7c3ab44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #26 0x65451c (/root/avrecode/recode+0x65451c)\n\n0x000003bceea4 is located 60 bytes to the left of global variable \u0026#39;zigzag4\u0026#39; from \u0026#39;recode.cpp\u0026#39; (0x3bceee0) of size 4\n0x000003bceea4 is located 0 bytes to the right of global variable \u0026#39;unzigzag4\u0026#39; from \u0026#39;recode.cpp\u0026#39; (0x3bceea0) of size 4\nSUMMARY: AddressSanitizer: global-buffer-overflow /root/avrecode/recode.cpp:496 get_neighbor(bool, int, CoefficientCoord, CoefficientCoord*)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","weakness":{"id":3,"name":"Classic Buffer Overflow"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":173685,"file_name":"test003.mp4.gz","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/173/685/478b39b6f20a85b65808eb09e5746ee5f1260f42/test003.mp4.gz?response-content-disposition=attachment%3B%20filename%3D%22test003.mp4.gz%22%3B%20filename%2A%3DUTF-8%27%27test003.mp4.gz\u0026response-content-type=application%2Fgzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRAVCXZTG%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045927Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCDC1SbghdXLcy9ot06DANg74r5EiCC3XZ9CQGAdi%2BmbgIhALBQDzrYaszHyI6V41WOAEV%2Fa%2FxVgBgdKj18DrlZlW1RKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgxgXaQ5tEaz15kO93YqkQPMn8lqJM5b%2F2UF4vgQzRZODqw%2FjPEjzpD61mE7LpyVCQKuiixef4EDRyTs5YaVZ%2BSeI6BYbm829Q00SoHZnAn9tGULy0VEKf9Lyq8uAs7eAOStN9gpb9p9GsQ2vxpwHzC%2F%2FjQuXDX8lTd6eIkj3L4VFhPdt4MGf%2FwzTbeirX69pmEGa7VpqUl%2BzQFSRmiyNkLz0iIRuGyUxcUtEFnAa4dcYImN8d5Xmzj3VKwszN5CZZekG0f6wVgiDQt2PU05Sm4mXV8F7Zsd2gCjxy0LByxZo8wVIQRR7XpJjeAXw7Y%2BrcntwG4VG16O2JBB13PV47avtAluDB7xEmxCn7fC%2B0gCkgtqX5FvemeTqZkzDj%2BNAE87%2BEwY1GKygDSgK%2BDrUlCwwYU%2FB1k9vGEpOa46oz6dP6MWDopeRWpW%2Fh2qwIShnMsIk%2BmfjH9n%2FnOGNwWwQp93Hlr6OPw%2F8tYLstkLZrNH3jzkkWMoWcsrv71HzpJiG6RZtm22uXPNaQTbmOYqMX%2BCryjdGcVIctKAsj5EliP0zjCb4Kr%2FBTrqAW3ufL%2FR%2FpkxPRO%2BUhyyvDPzgPmCSraR2g7lBy3KlX6LZ3JukP4SRvLInSvSu0w4T7VQh0EVNyALDb1flUgqzAKwYanyEiiHqHeCF6g4fX5%2Fuz8knjUQsnKmjOQfBtyaMe0qlW%2BHWCfwsR%2Fh2SNKi%2BVT7%2FCT2Ct%2Fia0RQuGDOtTr7KGlRg89Qz6oCZtR4isqOEM5yt6saYHHNTOAelO07weXRwFwKuKqmrZYMA5sa9p7XKqJAwmjMWMyFxAcEDHOluiNcMsa9JfilicFsycW11kxP5ZdIbUgRRdK1IdlTu3Ykx5X3L1RmsfWjw%3D%3D\u0026X-Amz-Signature=d6d5c632b8f3adbd1a8ae0de5de94e3d7d4951fd1cfa1e282130e246176d765e","file_size":751,"type":"application/gzip"}],"allow_singular_disclosure_at":"2019-11-03T16:15:19.693Z","allow_singular_disclosure_after":-36420247.93751237,"singular_disclosure_allowed":true,"vote_count":10,"voters":["libcontainer","geeknik","r3y","exception","tarwadahorse","cryptographer","krt_","youngowl","ytatack","cipy"],"severity":{"rating":"high","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1588066,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @geeknik, thanks for the report! Our policy does not have avrecode in scope for bounty, but I'll discuss the possibly of rewarding with the team. In the meantime we are investigating the issue.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/geeknik\"\u003e@geeknik\u003c/a\u003e, thanks for the report! Our policy does not have avrecode in scope for bounty, but I\u0026#39;ll discuss the possibly of rewarding with the team. In the meantime we are investigating the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-06T21:28:21.332Z","updated_at":"2017-04-06T21:28:21.332Z","actor":{"username":"gabepike","cleared":false,"url":"/gabepike","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1589905,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"We do not use avrecode in our infrastructure, so this bug is not eligible for bounty.","markdown_message":"\u003cp\u003eWe do not use avrecode in our infrastructure, so this bug is not eligible for bounty.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-07T18:38:57.083Z","updated_at":"2017-04-07T18:38:57.083Z","actor":{"url":"/dropbox","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/461/76f193964f418c594dd74ae1326cf4d9223f481b_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Dropbox"}},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1590017,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"No worries my friends, it was a shot in the dark (I fuzz everything, 16 CVEs and counting).","markdown_message":"\u003cp\u003eNo worries my friends, it was a shot in the dark (I fuzz everything, 16 CVEs and counting).\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-07T19:29:12.863Z","updated_at":"2017-04-07T19:29:12.863Z","actor":{"username":"geeknik","cleared":true,"url":"/geeknik","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/7xfGZCKCxUuGLYGfuUZM3XyY/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1809610,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"btw, we have fixed in https://github.com/dropbox/avrecode/commit/0749548cc337c59933da84063c1edc97ac11d259 but also  added a warning in the repo about using this only on test, trusted data. thanks for your help!","markdown_message":"\u003cp\u003ebtw, we have fixed in \u003ca title=\"https://github.com/dropbox/avrecode/commit/0749548cc337c59933da84063c1edc97ac11d259\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdropbox%2Favrecode%2Fcommit%2F0749548cc337c59933da84063c1edc97ac11d259\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/dropbox/avrecode/commit/0749548cc337c59933da84063c1edc97ac11d259\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e but also  added a warning in the repo about using this only on test, trusted data. thanks for your help!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-06T03:42:35.300Z","updated_at":"2017-07-06T03:42:35.300Z","actor":{"username":"devd","cleared":false,"url":"/devd","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/376/241e11c4ddebe1e81cd547edaae1532bbed268aa_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"geeknik","url":"/geeknik"},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5960613,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-04T16:15:19.614Z","updated_at":"2019-10-04T16:15:19.614Z","first_to_agree":true,"actor":{"username":"geeknik","cleared":true,"url":"/geeknik","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/7xfGZCKCxUuGLYGfuUZM3XyY/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6205296,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-03T16:15:23.917Z","updated_at":"2019-11-03T16:15:23.917Z","actor":{"url":"/dropbox","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/461/76f193964f418c594dd74ae1326cf4d9223f481b_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Dropbox"}},"genius_execution_id":null,"team_handle":"dropbox","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}