{"id":440758,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NDA3NTg=","url":"https://hackerone.com/reports/440758","title":"Potential buffer overflow in demoplayer module of GoldSource Engine","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2018-11-14T15:25:50.243Z","submitted_at":"2018-11-14T15:25:50.243Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"kohtep2010","url":"/kohtep2010","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ZLr6Jvt7ixmtsP1vjXVwpdye/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23363,"url":"https://hackerone.com/valve","handle":"valve","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/363/c78d46a7d0ea39e3a15a7c19c1a48634f2571eb9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/363/c78d46a7d0ea39e3a15a7c19c1a48634f2571eb9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Valve","twitter_handle":"","website":"https://www.valvesoftware.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"no-content","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-02-27T18:38:39.513Z","bug_reporter_agreed_on_going_public_at":"2019-03-23T07:11:24.404Z","team_member_agreed_on_going_public_at":"2020-02-27T18:38:39.408Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"","vulnerability_information_html":"","bounty_amount":"200.0","formatted_bounty":"$200","weakness":{"id":3,"name":"Classic Buffer Overflow"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":16,"voters":["njbooher","mvc","a_d_a_m","securitychops","base_64","johndoe1492","romesful","mygf","cryptographer","anonymouse3d","and 6 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":{"databaseId":1289,"asset_type":"DOWNLOADABLE_EXECUTABLES","asset_identifier":"hl.exe","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3677550,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-19T09:22:59.992Z","updated_at":"2018-11-19T09:22:59.992Z","actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3677604,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-19T09:49:14.263Z","updated_at":"2018-11-19T10:01:48.166Z","actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3678116,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-19T12:48:21.537Z","updated_at":"2018-11-19T12:50:18.788Z","actor":{"username":"kohtep2010","cleared":false,"url":"/kohtep2010","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ZLr6Jvt7ixmtsP1vjXVwpdye/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3681389,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-19T21:13:21.035Z","updated_at":"2018-11-19T21:13:21.035Z","actor":{"username":"mikela","cleared":false,"url":"/mikela","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3681391,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-19T21:13:26.633Z","updated_at":"2018-11-19T21:13:26.633Z","additional_data":{},"actor":{"username":"mikela","cleared":false,"url":"/mikela","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3684816,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2018-11-20T12:39:06.042Z","updated_at":"2018-11-20T12:39:06.042Z","actor":{"username":"kohtep2010","cleared":false,"url":"/kohtep2010","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ZLr6Jvt7ixmtsP1vjXVwpdye/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4116855,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-08T19:48:16.983Z","updated_at":"2019-02-08T19:48:16.983Z","actor":{"url":"/valve","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/363/c78d46a7d0ea39e3a15a7c19c1a48634f2571eb9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Valve"}},"bounty_amount":"200.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"valve","collaborator":{"username":"kohtep2010","url":"/kohtep2010"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4284809,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-08T11:06:28.151Z","updated_at":"2019-03-08T11:06:28.151Z","actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"kohtep2010","url":"/kohtep2010"},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4376677,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-23T07:11:24.438Z","updated_at":"2019-03-23T07:11:24.438Z","first_to_agree":true,"actor":{"username":"kohtep2010","cleared":false,"url":"/kohtep2010","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ZLr6Jvt7ixmtsP1vjXVwpdye/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7168212,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-27T18:38:39.433Z","updated_at":"2020-02-27T18:38:39.433Z","actor":{"username":"mikela","cleared":false,"url":"/mikela","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7168213,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-27T18:38:39.535Z","updated_at":"2020-02-27T18:38:39.535Z","actor":{"username":"mikela","cleared":false,"url":"/mikela","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"valve","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":20449,"category":"team","content":"Introduction\n\nHey. There's a potential vulnerability in the **GoldSource Engine** that allows to write data to stack of arbitrary size, thereby causing a buffer overflow and the ability to execute assembler code using **.dem** files.\n\n**Description**\n\nThe problem is located in the **DemoPlayer::ReadDemoMessage** function, which lies in **demoplayer** module, which is called when the **viewdemo** console command is executed. Since this command is not included in the filter list of the **ValidStuffText** function, and the .dem extension is not included in the filter list of the **IsSafeFileToDownload** function, the server can upload the malformed dem-file to the client and run it. Also, it is possible for hackers to spread incorrect dem-files without using HLDS, sending a malformed dem to users on web-resources or using messengers.\n\nThe following opcodes are vulnerable: **DemoCmd::PlaySound** (8), **DemoCmd::PayLoad** (9). These opcodes contain a variable responsible for the amount of data that must be read by the **BitBuffer::ReadBuf** function. Since the variable where the read result fits is located in the stack memory, it is possible to overflow the buffer and overwrite the return address on its own code.\n\nAt the moment, the vulnerability does not pose a risk, since the limit of any network packet is 4010 (**MAX_UDP_PACKET** constant), which excludes the possibility of a buffer overflow in the DemoCmd::PayLoad command (which is 32767 bytes in size). At the same time, the buffer for DemoCmd::PlaySound is 256 bytes, but this buffer is located in front of the buffer for DemoCmd::PayLoad, which will not allow rewriting the return address on the stack. However, there is a potential danger that in future recompiling of the project, the buffers may be swapped, which will cause a vulnerability for the DemoCmd::PlaySound package.\n\n**Possible Solutions**\n\nCreate conditions that don't allow to read too much data. For example:\n\n```\nsize = BitBuffer::ReadLong(buf);\nif (size \u003e sizeof(buffer))\n  size = sizeof(buffer);\nBitBuffer::ReadBuf(buf, size, buffer);\n```\n\nImpact\n-------\nAs said before, an attacker can remotely execute arbitrary assembly code on the clients or player can run malformed dem-file himself with **viewdemo** console command.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eIntroduction\u003c/p\u003e\n\n\u003cp\u003eHey. There\u0026#39;s a potential vulnerability in the \u003cstrong\u003eGoldSource Engine\u003c/strong\u003e that allows to write data to stack of arbitrary size, thereby causing a buffer overflow and the ability to execute assembler code using \u003cstrong\u003e.dem\u003c/strong\u003e files.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe problem is located in the \u003cstrong\u003eDemoPlayer::ReadDemoMessage\u003c/strong\u003e function, which lies in \u003cstrong\u003edemoplayer\u003c/strong\u003e module, which is called when the \u003cstrong\u003eviewdemo\u003c/strong\u003e console command is executed. Since this command is not included in the filter list of the \u003cstrong\u003eValidStuffText\u003c/strong\u003e function, and the .dem extension is not included in the filter list of the \u003cstrong\u003eIsSafeFileToDownload\u003c/strong\u003e function, the server can upload the malformed dem-file to the client and run it. Also, it is possible for hackers to spread incorrect dem-files without using HLDS, sending a malformed dem to users on web-resources or using messengers.\u003c/p\u003e\n\n\u003cp\u003eThe following opcodes are vulnerable: \u003cstrong\u003eDemoCmd::PlaySound\u003c/strong\u003e (8), \u003cstrong\u003eDemoCmd::PayLoad\u003c/strong\u003e (9). These opcodes contain a variable responsible for the amount of data that must be read by the \u003cstrong\u003eBitBuffer::ReadBuf\u003c/strong\u003e function. Since the variable where the read result fits is located in the stack memory, it is possible to overflow the buffer and overwrite the return address on its own code.\u003c/p\u003e\n\n\u003cp\u003eAt the moment, the vulnerability does not pose a risk, since the limit of any network packet is 4010 (\u003cstrong\u003eMAX_UDP_PACKET\u003c/strong\u003e constant), which excludes the possibility of a buffer overflow in the DemoCmd::PayLoad command (which is 32767 bytes in size). At the same time, the buffer for DemoCmd::PlaySound is 256 bytes, but this buffer is located in front of the buffer for DemoCmd::PayLoad, which will not allow rewriting the return address on the stack. However, there is a potential danger that in future recompiling of the project, the buffers may be swapped, which will cause a vulnerability for the DemoCmd::PlaySound package.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePossible Solutions\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eCreate conditions that don\u0026#39;t allow to read too much data. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esize = BitBuffer::ReadLong(buf);\nif (size \u0026gt; sizeof(buffer))\n  size = sizeof(buffer);\nBitBuffer::ReadBuf(buf, size, buffer);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAs said before, an attacker can remotely execute arbitrary assembly code on the clients or player can run malformed dem-file himself with \u003cstrong\u003eviewdemo\u003c/strong\u003e console command.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}