{"id":858894,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NTg4OTQ=","url":"https://hackerone.com/reports/858894","title":"Potential stored Cross-Site Scripting vulnerability in Support Backend","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-04-24T21:58:57.544Z","submitted_at":"2020-04-24T21:58:57.544Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-05-04T20:58:49.541Z","bug_reporter_agreed_on_going_public_at":"2020-05-04T20:56:49.354Z","team_member_agreed_on_going_public_at":"2020-05-04T20:58:49.386Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"HackerOne maintains an internal Support Backend system for employees. On the internal user profiles for hackers, a small overview is shown that lists the skills the user tagged their penetration tester profile with. Although the skills are currently managed by HackerOne and a user can only pick skills from a list, an XSS payload can be injected in the skill name to execute JavaScript in the backend system. In case we would allow penetration testers to enter their own skills in a free-form text format, it could lead to a stored Cross-Site Scripting vulnerability that is exploited by people outside of HackerOne.\n\n# Proof of concept\nTo reproduce, make sure your local environment is set up correctly by running the following code:\n\n```ruby\nSkill.create! name: '\u003cscript\u003ealert(/XSS/);\u003c/script\u003e'\nUser.find_by!(username: 'hacker').update! h1_pentester: true\n```\n\nNext, authenticate as the `hacker` user and enable the `pentester-profile` feature. Go to http://localhost:8080/settings/pentests and create a penetration tester profile with the skill that was created earlier. When the profile is created successfully, sign in to the Support Backend at http://localhost:8080/support and navigate to http://localhost:8080/support/users/hacker. The XSS payload injected in the skill name will be executed.\n\n████\n\n# Root cause\nThe following code leads to two Cross-Site Scripting vulnerabilities:\n\n**lib/support/app/controllers/support/tables/columns/pentester_profile_skills.rb**\n```ruby\ndef render(record)\n  return unless record.pentester_profile.present?\n\n  skill_names = record.pentester_profile.skills.map(\u0026:name)\n  content = \"\u003cspan\n    data-toggle='tooltip'\n    data-placement='top'\n    style='cursor: pointer; font-weight: bold'\n    title='#{skill_names.join(\"\\n\")}'\u003e\n      #{skill_names.join(', ')}\n    \u003c/span\u003e\"\n  content.html_safe\nend\n```\n\nDue to the lack of sanitization of the skill name, an attacker can append additional HTML attributes and elements, including elements and attributes that execute JavaScript. The code `title='#{skill_names.join(\"\\n\")}'\u003e` can be exploited using skill name `'onclick='alert(/XSS/);`. The code `#{skill_names.join(', ')}` can be exploited using `\u003cscript\u003ealert(/XSS/);\u003c/script\u003e`.\n\n## Impact\n\nAn attacker could use this in the future to execute arbitrary JavaScript in the Support Backend. Please note that in the production environment, inline execution of JavaScript is **not** allowed, significantly reducing the exploitability of these vulnerabilities.","vulnerability_information_html":"\u003cp\u003eHackerOne maintains an internal Support Backend system for employees. On the internal user profiles for hackers, a small overview is shown that lists the skills the user tagged their penetration tester profile with. Although the skills are currently managed by HackerOne and a user can only pick skills from a list, an XSS payload can be injected in the skill name to execute JavaScript in the backend system. In case we would allow penetration testers to enter their own skills in a free-form text format, it could lead to a stored Cross-Site Scripting vulnerability that is exploited by people outside of HackerOne.\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of concept\u003c/h1\u003e\n\n\u003cp\u003eTo reproduce, make sure your local environment is set up correctly by running the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eSkill\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate!\u003c/span\u003e \u003cspan class=\"ss\"\u003ename: \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;script\u0026gt;alert(/XSS/);\u0026lt;/script\u0026gt;\u0026#39;\u003c/span\u003e\n\u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_by!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003eusername: \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;hacker\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate!\u003c/span\u003e \u003cspan class=\"ss\"\u003eh1_pentester: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, authenticate as the \u003ccode\u003ehacker\u003c/code\u003e user and enable the \u003ccode\u003epentester-profile\u003c/code\u003e feature. Go to \u003ca title=\"http://localhost:8080/settings/pentests\" href=\"/redirect?url=http%3A%2F%2Flocalhost%3A8080%2Fsettings%2Fpentests\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost:8080/settings/pentests\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and create a penetration tester profile with the skill that was created earlier. When the profile is created successfully, sign in to the Support Backend at \u003ca title=\"http://localhost:8080/support\" href=\"/redirect?url=http%3A%2F%2Flocalhost%3A8080%2Fsupport\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost:8080/support\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and navigate to \u003ca title=\"http://localhost:8080/support/users/hacker\" href=\"/redirect?url=http%3A%2F%2Flocalhost%3A8080%2Fsupport%2Fusers%2Fhacker\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost:8080/support/users/hacker\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. The XSS payload injected in the skill name will be executed.\u003c/p\u003e\n\n\u003cp\u003e████\u003c/p\u003e\n\n\u003ch1 id=\"root-cause\"\u003eRoot cause\u003c/h1\u003e\n\n\u003cp\u003eThe following code leads to two Cross-Site Scripting vulnerabilities:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003elib/support/app/controllers/support/tables/columns/pentester_profile_skills.rb\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epentester_profile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eskill_names\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epentester_profile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eskills\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"ss\"\u003e:name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003econtent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u0026lt;span\n    data-toggle=\u0026#39;tooltip\u0026#39;\n    data-placement=\u0026#39;top\u0026#39;\n    style=\u0026#39;cursor: pointer; font-weight: bold\u0026#39;\n    title=\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eskill_names\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026gt;\n      \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eskill_names\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;, \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n    \u0026lt;/span\u0026gt;\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehtml_safe\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDue to the lack of sanitization of the skill name, an attacker can append additional HTML attributes and elements, including elements and attributes that execute JavaScript. The code \u003ccode\u003etitle=\u0026#39;#{skill_names.join(\u0026quot;\\n\u0026quot;)}\u0026#39;\u0026gt;\u003c/code\u003e can be exploited using skill name \u003ccode\u003e\u0026#39;onclick=\u0026#39;alert(/XSS/);\u003c/code\u003e. The code \u003ccode\u003e#{skill_names.join(\u0026#39;, \u0026#39;)}\u003c/code\u003e can be exploited using \u003ccode\u003e\u0026lt;script\u0026gt;alert(/XSS/);\u0026lt;/script\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker could use this in the future to execute arbitrary JavaScript in the Support Backend. Please note that in the production environment, inline execution of JavaScript is \u003cstrong\u003enot\u003c/strong\u003e allowed, significantly reducing the exploitability of these vulnerabilities.\u003c/p\u003e\n","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-06-03T20:56:49.447Z","allow_singular_disclosure_after":-18007540.428257104,"singular_disclosure_allowed":true,"vote_count":67,"voters":["base_64","sameerphad72","mygk","newbipath12","prophet","zeroxyele","mygf","0xd0m7","holyfield","ronr","and 57 more..."],"severity":{"rating":"medium","score":5.9,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"high","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7788050,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-24T21:59:14.536Z","updated_at":"2020-04-24T21:59:14.536Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7788052,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"This report is ineligible for a bounty because it was found by a HackerOne employee.","markdown_message":"\u003cp\u003eThis report is ineligible for a bounty because it was found by a HackerOne employee.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-24T21:59:43.883Z","updated_at":"2020-04-24T21:59:43.883Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7892037,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"All instances where user input was used in HTML, JavaScript, and CSS have been audited and fixed where needed. Additionally, the `Rails/OutputSafety` RuboCop was enabled again (it seems to have gotten disabled by accident in a migration). Going forward, the developers will be warned of any potential Cross-Site Scripting vulnerabilities, locally and on the CI, when using `html_safe` and `raw` and will be advised to use ActionView's `content_tag` and `tag` helpers.","markdown_message":"\u003cp\u003eAll instances where user input was used in HTML, JavaScript, and CSS have been audited and fixed where needed. Additionally, the \u003ccode\u003eRails/OutputSafety\u003c/code\u003e RuboCop was enabled again (it seems to have gotten disabled by accident in a migration). Going forward, the developers will be warned of any potential Cross-Site Scripting vulnerabilities, locally and on the CI, when using \u003ccode\u003ehtml_safe\u003c/code\u003e and \u003ccode\u003eraw\u003c/code\u003e and will be advised to use ActionView\u0026#39;s \u003ccode\u003econtent_tag\u003c/code\u003e and \u003ccode\u003etag\u003c/code\u003e helpers.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-04T20:56:35.737Z","updated_at":"2020-05-04T20:56:35.737Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7892045,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-05-04T20:56:49.374Z","updated_at":"2020-05-04T20:56:49.374Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7892072,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-05-04T20:58:49.408Z","updated_at":"2020-05-04T20:58:49.408Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7892073,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-05-04T20:58:49.574Z","updated_at":"2020-05-04T20:58:49.574Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}