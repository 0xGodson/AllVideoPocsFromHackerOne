{"id":509930,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MDk5MzA=","url":"https://hackerone.com/reports/509930","title":"Potential unprivileged Stored XSS through wp_targeted_link_rel","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-03-14T21:37:27.180Z","submitted_at":"2019-03-14T21:37:27.180Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"simonscannell","url":"/simonscannell","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":55,"url":"https://hackerone.com/wordpress","handle":"wordpress","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"WordPress","twitter_handle":"wordpress","website":"https://wordpress.org/","about":"Beautiful sites of any kind."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-16773"],"singular_disclosure_disabled":false,"disclosed_at":"2020-01-08T16:12:24.864Z","bug_reporter_agreed_on_going_public_at":"2020-01-03T23:02:01.930Z","team_member_agreed_on_going_public_at":"2020-01-08T16:12:24.447Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The user description is vulnerable to a Stored XSS via an attribute injection. At fault is the `wp_targeted_link_rel()` filter that parses attributes regardless of their position.\n\n```\nfunction wp_targeted_link_rel( $text ) {\n\t// Don't run (more expensive) regex if no links with targets.\n\tif ( stripos( $text, 'target' ) !== false \u0026\u0026 stripos( $text, '\u003ca ' ) !== false ) {\n\t\t$text = preg_replace_callback( '|\u003ca\\s([^\u003e]*target\\s*=[^\u003e]*)\u003e|i', 'wp_targeted_link_rel_callback', $text );\n\t}\n```\n\nIt essentially just parses the attribute string of all `\u003ca\u003e` tags and passes them to the preg replace callback.\n\n```\nfunction wp_targeted_link_rel_callback( $matches ) {\n\t$link_html = $matches[1];\n\t$rel_match = array();\n...\n// Value with delimiters, spaces around are optional.\n\t$attr_regex = '|rel\\s*=\\s*?(\\\\\\\\{0,1}[\"\\'])(.*?)\\\\1|i';\n\tpreg_match( $attr_regex, $link_html, $rel_match );\n\n\tif ( empty( $rel_match[0] ) ) {\n\t\t// No delimiters, try with a single value and spaces, because `rel =  va\"lue` is totally fine...\n\t\t$attr_regex = '|rel\\s*=(\\s*)([^\\s]*)|i';\n\t\tpreg_match( $attr_regex, $link_html, $rel_match );\n\t}\n```\n\nAs can be seen it then uses a regex to parse the `rel` attribute, its value and its delimeter from the string.\n\nIf the rel attribute is found, the following happens:\n\n```\n\n\tif ( ! empty( $rel_match[0] ) ) {\n\t\t$parts     = preg_split( '|\\s+|', strtolower( $rel_match[2] ) );\n\t\t$parts     = array_map( 'esc_attr', $parts );\n\t\t$needed    = explode( ' ', $rel );\n\t\t$parts     = array_unique( array_merge( $parts, $needed ) );\n\t\t$delimiter = trim( $rel_match[1] ) ? $rel_match[1] : '\"';\n\t\t$rel       = 'rel=' . $delimiter . trim( implode( ' ', $parts ) ) . $delimiter;\n\t\t$link_html = str_replace( $rel_match[0], $rel, $link_html );\n```\n\nAs you can see the value of the `rel` attribute is splitted by whitespaces and each part is then escaped. The targeted `rel` value is then added to the alread existing ones and put back together.\n\nMost importantly, are the following line:\n\n```\n\t\t$delimiter = trim( $rel_match[1] ) ? $rel_match[1] : '\"';\n\t\t$rel       = 'rel=' . $delimiter . trim( implode( ' ', $parts ) ) . $delimiter;\n\t\t$link_html = str_replace( $rel_match[0], $rel, $link_html );\n```\nif the delimeter is empty (e.g. when `rel=abc` has no quotes), the delimer becomes  `\"`. The original rel attribute is then replaced with the new one. \n\nThis is a problem since the following payload:\n\n`\u003ca title=\"  target='xyz'  rel=abc \"\u003ePoC\u003c/a\u003e`\n\nwould turn into\n\n`\u003ca title=\" target='xyz' rel=\"abc\" \"\u003ePoC\u003c/a\u003e` Note that an additional `\"` has been injected and the title attribute has been escaped.\n\nThis is because the regex to match the rel attribute ignores the position of the `rel` attribute within the attribute string. The above payload shows how the rel attribute is placed within a double quoted attribute. Since no delimeter is set, the delimer becomes a double quote and when the rel attribute is inserted back into the string, the double quote is injected.\n\nI recommend using something like `parse_shortcode_atts()` as in `wp_rel_nofollow()` to prevent this from happening.\n\nBy abusing the attribute injection, it is easily possible to create a Stored XSS payload. \n\nTge `wp_targeted_link_rel()` filter is not only called on the user description, however, this is where it becomes exploitable. This is because this vulnerable filter is added before the `kses` filters are added, which means that the injected attribute would be caught by `wp_post_kses()`. The user description is the only exception where the kses filters are called before `wp_targeted_link_rel()` is called.\n\n`\u003ca href=\"#\" title=\" target='abc' rel= onmouseover=alert(/XSS/) \"\u003eThis is a PoC for a Stored XSS\u003c/a\u003e`\n\n\n## Proof of Concept\n\nThe following will demonstrate how a normal forum user can achieve stored XSS on their profile page in BuddyPress\n████████\n\n1. This works if the Bio of forum users is displayed in their profile page. Log in as an administrator and go to Appearence -\u003e Customize and then BuddyPress Nouveu -\u003e Member front page and make sure that displaying the user bio is enabled\n\n2. Create a normal forum user account\n3. Login and edit your profile. Paste \n`\u003ca href=\"#\" title=\" target='abc' rel= onmouseover=alert(/XSS/) \"\u003eThis is a PoC for a Stored XSS\u003c/a\u003e` as your user description\n4. visit your profil and hover over the link.\n\n## Impact\n\nThe Impact of this can vary from site to site. I have shown how this can be exploited in BuddyPress as a mere, normal forum user. Since you can also inject a style attribute and make the link span over the entire page, one can turn this into a wormable Stored XSS in BuddyPress.\n\nBasically every plugin or forum is affected that displays the user description.","vulnerability_information_html":"\u003cp\u003eThe user description is vulnerable to a Stored XSS via an attribute injection. At fault is the \u003ccode\u003ewp_targeted_link_rel()\u003c/code\u003e filter that parses attributes regardless of their position.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction wp_targeted_link_rel( $text ) {\n    // Don\u0026#39;t run (more expensive) regex if no links with targets.\n    if ( stripos( $text, \u0026#39;target\u0026#39; ) !== false \u0026amp;\u0026amp; stripos( $text, \u0026#39;\u0026lt;a \u0026#39; ) !== false ) {\n        $text = preg_replace_callback( \u0026#39;|\u0026lt;a\\s([^\u0026gt;]*target\\s*=[^\u0026gt;]*)\u0026gt;|i\u0026#39;, \u0026#39;wp_targeted_link_rel_callback\u0026#39;, $text );\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt essentially just parses the attribute string of all \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tags and passes them to the preg replace callback.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction wp_targeted_link_rel_callback( $matches ) {\n    $link_html = $matches[1];\n    $rel_match = array();\n...\n// Value with delimiters, spaces around are optional.\n    $attr_regex = \u0026#39;|rel\\s*=\\s*?(\\\\\\\\{0,1}[\u0026quot;\\\u0026#39;])(.*?)\\\\1|i\u0026#39;;\n    preg_match( $attr_regex, $link_html, $rel_match );\n\n    if ( empty( $rel_match[0] ) ) {\n        // No delimiters, try with a single value and spaces, because `rel =  va\u0026quot;lue` is totally fine...\n        $attr_regex = \u0026#39;|rel\\s*=(\\s*)([^\\s]*)|i\u0026#39;;\n        preg_match( $attr_regex, $link_html, $rel_match );\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs can be seen it then uses a regex to parse the \u003ccode\u003erel\u003c/code\u003e attribute, its value and its delimeter from the string.\u003c/p\u003e\n\n\u003cp\u003eIf the rel attribute is found, the following happens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\n    if ( ! empty( $rel_match[0] ) ) {\n        $parts     = preg_split( \u0026#39;|\\s+|\u0026#39;, strtolower( $rel_match[2] ) );\n        $parts     = array_map( \u0026#39;esc_attr\u0026#39;, $parts );\n        $needed    = explode( \u0026#39; \u0026#39;, $rel );\n        $parts     = array_unique( array_merge( $parts, $needed ) );\n        $delimiter = trim( $rel_match[1] ) ? $rel_match[1] : \u0026#39;\u0026quot;\u0026#39;;\n        $rel       = \u0026#39;rel=\u0026#39; . $delimiter . trim( implode( \u0026#39; \u0026#39;, $parts ) ) . $delimiter;\n        $link_html = str_replace( $rel_match[0], $rel, $link_html );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you can see the value of the \u003ccode\u003erel\u003c/code\u003e attribute is splitted by whitespaces and each part is then escaped. The targeted \u003ccode\u003erel\u003c/code\u003e value is then added to the alread existing ones and put back together.\u003c/p\u003e\n\n\u003cp\u003eMost importantly, are the following line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e        $delimiter = trim( $rel_match[1] ) ? $rel_match[1] : \u0026#39;\u0026quot;\u0026#39;;\n        $rel       = \u0026#39;rel=\u0026#39; . $delimiter . trim( implode( \u0026#39; \u0026#39;, $parts ) ) . $delimiter;\n        $link_html = str_replace( $rel_match[0], $rel, $link_html );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eif the delimeter is empty (e.g. when \u003ccode\u003erel=abc\u003c/code\u003e has no quotes), the delimer becomes  \u003ccode\u003e\u0026quot;\u003c/code\u003e. The original rel attribute is then replaced with the new one. \u003c/p\u003e\n\n\u003cp\u003eThis is a problem since the following payload:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;a title=\u0026quot;  target=\u0026#39;xyz\u0026#39;  rel=abc \u0026quot;\u0026gt;PoC\u0026lt;/a\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ewould turn into\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;a title=\u0026quot; target=\u0026#39;xyz\u0026#39; rel=\u0026quot;abc\u0026quot; \u0026quot;\u0026gt;PoC\u0026lt;/a\u0026gt;\u003c/code\u003e Note that an additional \u003ccode\u003e\u0026quot;\u003c/code\u003e has been injected and the title attribute has been escaped.\u003c/p\u003e\n\n\u003cp\u003eThis is because the regex to match the rel attribute ignores the position of the \u003ccode\u003erel\u003c/code\u003e attribute within the attribute string. The above payload shows how the rel attribute is placed within a double quoted attribute. Since no delimeter is set, the delimer becomes a double quote and when the rel attribute is inserted back into the string, the double quote is injected.\u003c/p\u003e\n\n\u003cp\u003eI recommend using something like \u003ccode\u003eparse_shortcode_atts()\u003c/code\u003e as in \u003ccode\u003ewp_rel_nofollow()\u003c/code\u003e to prevent this from happening.\u003c/p\u003e\n\n\u003cp\u003eBy abusing the attribute injection, it is easily possible to create a Stored XSS payload. \u003c/p\u003e\n\n\u003cp\u003eTge \u003ccode\u003ewp_targeted_link_rel()\u003c/code\u003e filter is not only called on the user description, however, this is where it becomes exploitable. This is because this vulnerable filter is added before the \u003ccode\u003ekses\u003c/code\u003e filters are added, which means that the injected attribute would be caught by \u003ccode\u003ewp_post_kses()\u003c/code\u003e. The user description is the only exception where the kses filters are called before \u003ccode\u003ewp_targeted_link_rel()\u003c/code\u003e is called.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;a href=\u0026quot;#\u0026quot; title=\u0026quot; target=\u0026#39;abc\u0026#39; rel= onmouseover=alert(/XSS/) \u0026quot;\u0026gt;This is a PoC for a Stored XSS\u0026lt;/a\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"proof-of-concept\"\u003eProof of Concept\u003c/h2\u003e\n\n\u003cp\u003eThe following will demonstrate how a normal forum user can achieve stored XSS on their profile page in BuddyPress\u003cbr\u003e\n████████\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThis works if the Bio of forum users is displayed in their profile page. Log in as an administrator and go to Appearence -\u0026gt; Customize and then BuddyPress Nouveu -\u0026gt; Member front page and make sure that displaying the user bio is enabled\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a normal forum user account\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLogin and edit your profile. Paste \u003cbr\u003e\n\u003ccode\u003e\u0026lt;a href=\u0026quot;#\u0026quot; title=\u0026quot; target=\u0026#39;abc\u0026#39; rel= onmouseover=alert(/XSS/) \u0026quot;\u0026gt;This is a PoC for a Stored XSS\u0026lt;/a\u0026gt;\u003c/code\u003e as your user description\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003evisit your profil and hover over the link.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe Impact of this can vary from site to site. I have shown how this can be exploited in BuddyPress as a mere, normal forum user. Since you can also inject a style attribute and make the link span over the entire page, one can turn this into a wormable Stored XSS in BuddyPress.\u003c/p\u003e\n\n\u003cp\u003eBasically every plugin or forum is affected that displays the user description.\u003c/p\u003e\n","bounty_amount":"650.0","formatted_bounty":"$650","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-02-02T23:02:01.985Z","allow_singular_disclosure_after":-28537829.013937633,"singular_disclosure_allowed":true,"vote_count":80,"voters":["thaivu","foobar7","simonscannell","mashoud1122","bibekshah","sameerphad72","0xelkomy","mygf","brodie_codie","aryan2808","and 70 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":2750,"asset_type":"SOURCE_CODE","asset_identifier":"WordPress Core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4370008,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the report, we're currently testing a patch for the issue and will keep you updated with any developments.","markdown_message":"\u003cp\u003eThanks for the report, we\u0026#39;re currently testing a patch for the issue and will keep you updated with any developments.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-21T23:16:29.893Z","updated_at":"2019-03-21T23:16:29.893Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4910299,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"████ ","markdown_message":"\u003cp\u003e████ \u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-23T13:43:28.991Z","updated_at":"2020-01-08T16:15:01.751Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6345943,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @vortfu ,\n\nAre there any updates on the patch?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/vortfu\"\u003e@vortfu\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eAre there any updates on the patch?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-19T14:01:29.206Z","updated_at":"2019-11-19T14:01:29.206Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6352337,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @simonscannell,\n\nWe put together this patch that aims to fix this problem. Could you please review?\n\nCheers,\n\n@whyisjake","markdown_message":"\u003cp\u003eHey \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe put together this patch that aims to fix this problem. Could you please review?\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-20T01:20:40.557Z","updated_at":"2019-11-20T01:20:40.557Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6400697,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @whyisjake ,\n\nSeems effective to me!\n\nBest,\nSimon","markdown_message":"\u003cp\u003eHi \u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eSeems effective to me!\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nSimon\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-25T17:01:30.755Z","updated_at":"2019-11-25T17:01:30.755Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6518341,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey there @simonscannell,\n\nDo you have a GitHub account? Would like to add you to the Security Advisory there.\n\nAlso, would the \"Props to Simon Scannell of RIPS Technologies\" still work for the release on Thursday?\n\nCheers,\n\n@whyisjake","markdown_message":"\u003cp\u003eHey there \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eDo you have a GitHub account? Would like to add you to the Security Advisory there.\u003c/p\u003e\n\n\u003cp\u003eAlso, would the \u0026quot;Props to Simon Scannell of RIPS Technologies\u0026quot; still work for the release on Thursday?\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-11T01:26:37.937Z","updated_at":"2019-12-11T01:26:37.937Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6518462,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @whyisjake ,\n\nMy github account is https://github.com/scannells thank you!\n\nYes, please do use this props for all Security issues reported by me!\n\nBest regards,\nSimon","markdown_message":"\u003cp\u003eHi \u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eMy github account is \u003ca title=\"https://github.com/scannells\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fscannells\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/scannells\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e thank you!\u003c/p\u003e\n\n\u003cp\u003eYes, please do use this props for all Security issues reported by me!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSimon\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-11T02:36:45.325Z","updated_at":"2019-12-11T02:36:45.325Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6556644,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Simon,\n\nThis went out in https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/ \n\nWorking on getting the bounty released. Thank you for your great research as always! :) ","markdown_message":"\u003cp\u003eHi Simon,\u003c/p\u003e\n\n\u003cp\u003eThis went out in \u003ca title=\"https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/\" href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fnews%2F2019%2F12%2Fwordpress-5-3-1-security-and-maintenance-release%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eWorking on getting the bounty released. Thank you for your great research as always! :) \u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-16T09:34:48.772Z","updated_at":"2019-12-16T09:34:48.772Z","actor":{"username":"ehtis","cleared":false,"url":"/ehtis","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6577760,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-18T09:48:26.590Z","updated_at":"2019-12-18T09:48:26.590Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"bounty_amount":"600.0","bounty_currency":"usd","bonus_amount":"50.0","genius_execution_id":null,"team_handle":"wordpress","collaborator":{"username":"simonscannell","url":"/simonscannell"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6577855,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-18T10:01:31.876Z","updated_at":"2019-12-18T10:01:31.876Z","actor":{"username":"ehtis","cleared":false,"url":"/ehtis","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"simonscannell","url":"/simonscannell"},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6583244,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much!\n\nI was told ██████████\nIs also in the queue, but since it was Not included in this round I just wanted to make sure there are no confusions, thank you!","markdown_message":"\u003cp\u003eThank you very much!\u003c/p\u003e\n\n\u003cp\u003eI was told ██████████\u003cbr\u003e\nIs also in the queue, but since it was Not included in this round I just wanted to make sure there are no confusions, thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-18T21:50:56.618Z","updated_at":"2020-01-08T16:16:45.513Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6591342,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yep! Also working on getting that released.","markdown_message":"\u003cp\u003eYep! Also working on getting that released.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-19T19:03:07.339Z","updated_at":"2019-12-19T19:03:07.339Z","actor":{"username":"ehtis","cleared":false,"url":"/ehtis","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6591391,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for taking care of this!","markdown_message":"\u003cp\u003eThank you for taking care of this!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-19T19:15:30.604Z","updated_at":"2019-12-19T19:15:30.604Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6684513,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-03T23:02:01.958Z","updated_at":"2020-01-03T23:02:01.958Z","first_to_agree":true,"actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6719040,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"@simonscannell,\n\nI just published this security advisory with associated CVE: CVE-2019-16773\n\nhttps://github.com/WordPress/wordpress-develop/security/advisories/GHSA-xvg2-m2f4-83m7\n\nCheers,\n\n@whyisjake","markdown_message":"\u003cp\u003e\u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI just published this security advisory with associated CVE: CVE-2019-16773\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-xvg2-m2f4-83m7\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FWordPress%2Fwordpress-develop%2Fsecurity%2Fadvisories%2FGHSA-xvg2-m2f4-83m7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/WordPress/wordpress-develop/security/advisories/GHSA-xvg2-m2f4-83m7\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-08T16:12:24.493Z","updated_at":"2020-01-08T16:12:24.493Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6719041,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-08T16:12:24.894Z","updated_at":"2020-01-08T16:12:24.894Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6719227,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @whyisjake ,\n\nThank you! I like the direction WordPress is going with full disclosure.\n\nAll the best,\nSimon","markdown_message":"\u003cp\u003eHi \u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eThank you! I like the direction WordPress is going with full disclosure.\u003c/p\u003e\n\n\u003cp\u003eAll the best,\u003cbr\u003e\nSimon\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-08T16:40:22.854Z","updated_at":"2020-01-08T16:40:22.854Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6867027,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-25T04:46:32.701Z","updated_at":"2020-01-25T04:46:32.701Z","cve_ids":["CVE-2019-16773"],"actor":{"username":"peterwilsoncc","cleared":false,"url":"/peterwilsoncc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/088/233/1bc225b5a7eece788797207b092f8b9083a4ed4d_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}