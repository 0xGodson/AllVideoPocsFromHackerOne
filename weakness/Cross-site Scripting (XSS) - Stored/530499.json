{"id":530499,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzA0OTk=","url":"https://hackerone.com/reports/530499","title":"WooCommerce: Persistent XSS via customer address (state/county)","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-04-07T09:06:52.809Z","submitted_at":"2019-04-07T09:06:52.809Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"foobar7","url":"/foobar7","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/197/817/efb62be6777043aba724654aa495ebeccabb9e72_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":111,"url":"https://hackerone.com/automattic","handle":"automattic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Automattic","twitter_handle":"","website":"https://automattic.com","about":"WordPress.com, VaultPress, Akismet, Gravatar, WooCommerce, Polldaddy, Tumblr and more!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-05-26T08:35:50.322Z","bug_reporter_agreed_on_going_public_at":"2019-04-26T08:35:48.875Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Persistent XSS via customer address (state/county)\n================================\n\nCVSS\n----\n\nHigh 7.2 [CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N](https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N)\n\nDescription\n-----------\n\nThe current version (3.5.7) of the WooCommerce WordPress plugin echoes the state/county of a customer in the admin backend without encoding, leading to persistent XSS.\n\nFor a successful attack, an attacker needs a customer account, though it is to be expected that account creation is available for users in a considerable amount of setups.\n\nIf the victim is an administrator on a default WordPress setup, an attacker can exploit the issue to gain code execution on the server by eg sending a request to edit a WordPress plugin file.\n\nPOC\n---\n\nSetup: Install the WooCommerce plugin \u0026 open registration / add a user (permissions do not matter, I used \"customer\"). \n\nTo place the payload:\n\n1. Login as a customer at http://192.168.0.101/wordpress/my-account/\n2. To place a payload, either:\n    - add an item to cart \u0026 proceed to checkout. Under \"Billing Details\", select UK as country and enter `'\"\u003e\u003cimg src=x onerror=alert(1) x=y` as `County` (note the missing `\u003e` which is required as tags are filtered).\n    - Alternatively, simply change the address under account settings at `http://192.168.0.101/wordpress/my-account/edit-address/`.\n\nTo trigger the payload:\n\n1. Go to `http://192.168.0.101/wordpress/wp-admin/users.php` and click on the customer, or directly visit `http://192.168.0.101/wordpress/wp-admin/user-edit.php?user_id=4`, where `4` is the customers ID.\n\n## Impact\n\nWith a successful attack, an attacker can read data available to the attacked user or perform arbitrary request in the name of the attacked user. \n\nWith a default setup, an attacker can gain code execution on the server by eg editing a WordPress plugin file.","vulnerability_information_html":"\u003ch1 id=\"persistent-xss-via-customer-address-state-county\"\u003ePersistent XSS via customer address (state/county)\u003c/h1\u003e\n\n\u003ch2 id=\"cvss\"\u003eCVSS\u003c/h2\u003e\n\n\u003cp\u003eHigh 7.2 \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.first.org%2Fcvss%2Fcalculator%2F3.0%23CVSS%3A3.0%2FAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AC%2FC%3AL%2FI%3AL%2FA%3AN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eThe current version (3.5.7) of the WooCommerce WordPress plugin echoes the state/county of a customer in the admin backend without encoding, leading to persistent XSS.\u003c/p\u003e\n\n\u003cp\u003eFor a successful attack, an attacker needs a customer account, though it is to be expected that account creation is available for users in a considerable amount of setups.\u003c/p\u003e\n\n\u003cp\u003eIf the victim is an administrator on a default WordPress setup, an attacker can exploit the issue to gain code execution on the server by eg sending a request to edit a WordPress plugin file.\u003c/p\u003e\n\n\u003ch2 id=\"poc\"\u003ePOC\u003c/h2\u003e\n\n\u003cp\u003eSetup: Install the WooCommerce plugin \u0026amp; open registration / add a user (permissions do not matter, I used \u0026quot;customer\u0026quot;). \u003c/p\u003e\n\n\u003cp\u003eTo place the payload:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eLogin as a customer at \u003ca title=\"http://192.168.0.101/wordpress/my-account/\" href=\"/redirect?url=http%3A%2F%2F192.168.0.101%2Fwordpress%2Fmy-account%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://192.168.0.101/wordpress/my-account/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eTo place a payload, either:\n\n\u003cul\u003e\n\u003cli\u003eadd an item to cart \u0026amp; proceed to checkout. Under \u0026quot;Billing Details\u0026quot;, select UK as country and enter \u003ccode\u003e\u0026#39;\u0026quot;\u0026gt;\u0026lt;img src=x onerror=alert(1) x=y\u003c/code\u003e as \u003ccode\u003eCounty\u003c/code\u003e (note the missing \u003ccode\u003e\u0026gt;\u003c/code\u003e which is required as tags are filtered).\u003c/li\u003e\n\u003cli\u003eAlternatively, simply change the address under account settings at \u003ccode\u003ehttp://192.168.0.101/wordpress/my-account/edit-address/\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eTo trigger the payload:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGo to \u003ccode\u003ehttp://192.168.0.101/wordpress/wp-admin/users.php\u003c/code\u003e and click on the customer, or directly visit \u003ccode\u003ehttp://192.168.0.101/wordpress/wp-admin/user-edit.php?user_id=4\u003c/code\u003e, where \u003ccode\u003e4\u003c/code\u003e is the customers ID.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eWith a successful attack, an attacker can read data available to the attacked user or perform arbitrary request in the name of the attacked user. \u003c/p\u003e\n\n\u003cp\u003eWith a default setup, an attacker can gain code execution on the server by eg editing a WordPress plugin file.\u003c/p\u003e\n","bounty_amount":"350.0","formatted_bounty":"$350","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":463897,"file_name":"xss.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/463/897/164bf771a0f5417aabc88070a2d4b40f2019112e/xss.png?response-content-disposition=attachment%3B%20filename%3D%22xss.png%22%3B%20filename%2A%3DUTF-8%27%27xss.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6SZWJ7EV%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061515Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDnUzI%2BFGOFBLAScWuVOL4Lj3JmbbQAzP3Z0CGixtLCuAIgQzjjEEfRLfyvyTUcWPuh1TmLwtvXfhn4Y1cmYaMrO6cqtAMIVRABGgwwMTM2MTkyNzQ4NDkiDGp%2BpnVA5musWTL7NCqRA8%2FtWDfuTNl%2BTEZ8%2F83sOgEjGfhPO7hqas9S5YFvyrG29udKPmtcuewMHQFGoWh6uvbSTE9LPEkFDl6RosJJJY3ZsFaD9BGxtIOBINUPfZd26XnOL01fuCQ8x%2BiErJvv8vHBR5mWXV7L6t7A2%2F5H8dY91iEQFmPdZboRnRed4t2q9jcZCwrkzHwMk8bNRFkfRqzqUB6%2Buk39e4oyKwiyqROwDwnoUxIOrVdA29STuUYzszGBQ%2B3Eg%2Fr4I9Ys7sDaoYDHJAVEt%2F6kVnewTLU3uHfL%2F%2FzDR0ZnJa5Oo%2BmValn4%2Fn34Ke7o7csnn3piiGYIK4mihEWUVtJZnq0bZ%2BEU14q4ZLfb79tvTTKy5%2B9XC3vM1tWdFU6K%2F2PISAY5LoVEscNgJL0aQIq7sAX0f00Uyo2TeQTR%2B9TUOeUvW40metpNAt6ZQ8u0%2BuTZij%2FLNaYEe6v5RA7Fg8wzm%2Bu7IVusddMT4HgUuba3afxdFVj8x9iXROa6QZZ%2BdlHYNGywE8eJxO3jkpwbaZpUg8PZ17ztcb5%2BMLHSqv8FOusBshs3Z1RNetRK0o6yVAL2zGdldUlxbnMrusEP31v5WyfcSXKYrW1oJGSAAOlTEHZOawyDOEVKZdmLftLsa7vpv4NkkvDc0MjvNZjQrLWiuTmEalVC704buBLYftchmedTLOrsCMIpwWkxoPJnEqO2VZwPnup4B1lMH%2B%2FHO0btRwbDEfX1bZu7nae%2FPoCvN9o%2FT1iQ8GcaSv5OUJxppuy2cagjSuiUWEkOXPhYiBKpxTQMFIMtd6%2FpRtJ2YeCQgmRXXl1K6ayBDQAQxWFeKQPM5vtrAzDrzE9Adaqtb3AdlxqDjg74xdcM9YFdyg%3D%3D\u0026X-Amz-Signature=327aa50431c13c088aff655e9dbdb697e2bac514870306eaf92fd604782d33fd","file_size":49837,"type":"image/png"}],"allow_singular_disclosure_at":"2019-05-26T08:35:48.944Z","allow_singular_disclosure_after":-50362766.53247552,"singular_disclosure_allowed":true,"vote_count":39,"voters":["sameerphad72","vavkamil","zikads","michan","javo","an0nym0us","yinvi777","ecx","roguesmg","cryptographer","and 29 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4501443,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-07T09:07:12.250Z","updated_at":"2019-04-07T09:07:12.250Z","additional_data":{"old_title":"Persistent XSS via customer address (state/county)","new_title":"WooCommerce: Persistent XSS via customer address (state/county)"},"actor":{"username":"foobar7","cleared":true,"url":"/foobar7","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/197/817/efb62be6777043aba724654aa495ebeccabb9e72_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4502119,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The option to open registration up can be found at WooCommerce -\u003e Settings -\u003e Accounts \u0026 Privacy -\u003e \"Allow customers to create an account [during checkout / on the My account page]\"\n\nThe origin of the vulnerability is in the `change_country` function in `/assets/js/admin/users.js`, which reads the properly encoded state/county value out of the DOM, and then reinserts it in an insecure manner.\n\nThe insecure insertion takes place in line 64:\n\n\u003e     $state.replaceWith( '\u003cinput type=\"text\" class=\"js_field-state\" name=\"' + input_name + '\" id=\"' + input_id + '\" value=\"' + value + '\" /\u003e' );\n\nwhere `value` is the user-controlled state/county name. \n\nThe issue can be fixed by encoding quotes in the line:\n\n    $state.replaceWith( '\u003cinput type=\"text\" class=\"js_field-state\" name=\"' + input_name + '\" id=\"' + input_id + '\" value=\"' + value.replace(/\"/g, \"\u0026quot;\") + '\" /\u003e' );\n\nThe fix would have to be applied to the minified version of the script.","markdown_message":"\u003cp\u003eThe option to open registration up can be found at WooCommerce -\u0026gt; Settings -\u0026gt; Accounts \u0026amp; Privacy -\u0026gt; \u0026quot;Allow customers to create an account [during checkout / on the My account page]\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eThe origin of the vulnerability is in the \u003ccode\u003echange_country\u003c/code\u003e function in \u003ccode\u003e/assets/js/admin/users.js\u003c/code\u003e, which reads the properly encoded state/county value out of the DOM, and then reinserts it in an insecure manner.\u003c/p\u003e\n\n\u003cp\u003eThe insecure insertion takes place in line 64:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$state.replaceWith( \u0026#39;\u0026lt;input type=\u0026quot;text\u0026quot; class=\u0026quot;js_field-state\u0026quot; name=\u0026quot;\u0026#39; + input_name + \u0026#39;\u0026quot; id=\u0026quot;\u0026#39; + input_id + \u0026#39;\u0026quot; value=\u0026quot;\u0026#39; + value + \u0026#39;\u0026quot; /\u0026gt;\u0026#39; );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ewhere \u003ccode\u003evalue\u003c/code\u003e is the user-controlled state/county name. \u003c/p\u003e\n\n\u003cp\u003eThe issue can be fixed by encoding quotes in the line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$state.replaceWith( \u0026#39;\u0026lt;input type=\u0026quot;text\u0026quot; class=\u0026quot;js_field-state\u0026quot; name=\u0026quot;\u0026#39; + input_name + \u0026#39;\u0026quot; id=\u0026quot;\u0026#39; + input_id + \u0026#39;\u0026quot; value=\u0026quot;\u0026#39; + value.replace(/\u0026quot;/g, \u0026quot;\u0026amp;quot;\u0026quot;) + \u0026#39;\u0026quot; /\u0026gt;\u0026#39; );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe fix would have to be applied to the minified version of the script.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-07T13:25:00.273Z","updated_at":"2019-04-07T13:25:00.273Z","actor":{"username":"foobar7","cleared":true,"url":"/foobar7","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/197/817/efb62be6777043aba724654aa495ebeccabb9e72_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4504997,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi. Thanks for the report. We are going to take a look.","markdown_message":"\u003cp\u003eHi. Thanks for the report. We are going to take a look.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-08T07:52:59.920Z","updated_at":"2019-04-08T07:52:59.920Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4528380,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-10T09:55:52.914Z","updated_at":"2019-04-10T09:55:52.914Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4641494,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi. This issue was fixed as part of the 3.5.8 release.","markdown_message":"\u003cp\u003eHi. This issue was fixed as part of the 3.5.8 release.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-25T13:14:40.130Z","updated_at":"2019-04-25T13:14:40.130Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"foobar7","url":"/foobar7"},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4641496,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-25T13:14:57.085Z","updated_at":"2019-04-25T13:14:57.085Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"bounty_amount":"300.0","bounty_currency":"usd","bonus_amount":"50.0","genius_execution_id":null,"team_handle":"automattic","collaborator":{"username":"foobar7","url":"/foobar7"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4646455,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"thanks for the bounty! \n\nIs disclosure OK with you?","markdown_message":"\u003cp\u003ethanks for the bounty! \u003c/p\u003e\n\n\u003cp\u003eIs disclosure OK with you?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-26T08:35:48.896Z","updated_at":"2019-04-26T08:35:48.896Z","first_to_agree":true,"actor":{"username":"foobar7","cleared":true,"url":"/foobar7","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/197/817/efb62be6777043aba724654aa495ebeccabb9e72_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4925882,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-26T08:35:50.347Z","updated_at":"2019-05-26T08:35:50.347Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}