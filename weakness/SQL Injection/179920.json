{"id":179920,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzk5MjA=","url":"https://hackerone.com/reports/179920","title":"WordPress DB Class, bad implementation of prepare method guides to sqli and information disclosure","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2016-11-03T13:32:17.535Z","submitted_at":"2016-11-03T13:32:17.535Z","is_member_of_team?":false,"reporter":{"disabled":true,"username":"b258ea62bf297b02afa9854","url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":55,"url":"https://hackerone.com/wordpress","handle":"wordpress","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"WordPress","twitter_handle":"wordpress","website":"https://wordpress.org/","about":"Beautiful sites of any kind."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-11-13T14:56:48.898Z","bug_reporter_agreed_on_going_public_at":"2017-10-14T14:56:45.530Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Issue 1: Method checks if first argument is an array and if it is, it avoids the rest of the arguments and uses the first argument array values as input.\n\nIssue 2: When input query has %s in it, then it quote and this guides to sql injection in case query that need to be prepared have quoted user controlled input in it.  \n\nThis leaves all wordpress plugins/ themes potentially vulnerable on this two types of attack. As PoC sqli in bbpress wp plugin and core wp function is shown.\n\nPoC: \n1. There is SQLi in bbpress in case anonymous posting is allowed. ( check  bbpress-sqli.png)\n2.  Demo for the Issue 1 and Issue 2 for the prepare method\n3. Wordpress core function delete_metadata is vulnerable to sqli in case delete all e.g. last argument is true and meta value has value e.g. is user supplied / controlled.","vulnerability_information_html":"\u003cp\u003eIssue 1: Method checks if first argument is an array and if it is, it avoids the rest of the arguments and uses the first argument array values as input.\u003c/p\u003e\n\n\u003cp\u003eIssue 2: When input query has %s in it, then it quote and this guides to sql injection in case query that need to be prepared have quoted user controlled input in it.  \u003c/p\u003e\n\n\u003cp\u003eThis leaves all wordpress plugins/ themes potentially vulnerable on this two types of attack. As PoC sqli in bbpress wp plugin and core wp function is shown.\u003c/p\u003e\n\n\u003cp\u003ePoC: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThere is SQLi in bbpress in case anonymous posting is allowed. ( check  bbpress-sqli.png)\u003c/li\u003e\n\u003cli\u003e Demo for the Issue 1 and Issue 2 for the prepare method\u003c/li\u003e\n\u003cli\u003eWordpress core function delete_metadata is vulnerable to sqli in case delete all e.g. last argument is true and meta value has value e.g. is user supplied / controlled.\u003c/li\u003e\n\u003c/ol\u003e\n","weakness":{"id":67,"name":"SQL Injection"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":132087,"file_name":"bbpress-sqli.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/132/087/2b5692ba30e2a51c3fa2d31a09f95ccd2785b935/bbpress-sqli.png?response-content-disposition=attachment%3B%20filename%3D%22bbpress-sqli.png%22%3B%20filename%2A%3DUTF-8%27%27bbpress-sqli.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=cecf9367e25d31a4fa4b707271d97e4155f8f53cedfa35c6d3c11b2c347d5a6e","file_size":17066,"type":"image/png"},{"id":132088,"file_name":"dh1.php","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/132/088/4c8580aebf8712978c479cb5618de2bbba6c9b21/dh1.php?response-content-disposition=attachment%3B%20filename%3D%22dh1.php%22%3B%20filename%2A%3DUTF-8%27%27dh1.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=7f2a2bf55283ed0d89cfb4c001e8897fe80a329eee4eef8e2b85c0d19e7e2603","file_size":2224,"type":"text/x-php"}],"allow_singular_disclosure_at":"2017-11-13T14:56:45.627Z","allow_singular_disclosure_after":-98632075.75255789,"singular_disclosure_allowed":true,"vote_count":17,"voters":["jin","jokebookservice1","marcs0h","jensec","kuromatae","hunter","skansing","eveeez","firs0v","hassham","and 7 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1282292,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-03T13:35:26.632Z","updated_at":"2016-11-03T13:35:26.632Z","actor":{"username":"nikolayb","cleared":false,"url":"/nikolayb","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/006/838/e07dd5308575ffd0d3b0f0650974a8482379734e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1284674,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As another example there is working sqli into popular wordpress plugin nextgen gallery (https://wordpress.org/plugins/nextgen-gallery/). It has huge number of active installations and is vulnerable to sqli caused by this WP issue.  Detailed description as attachment.","markdown_message":"\u003cp\u003eAs another example there is working sqli into popular wordpress plugin nextgen gallery (\u003ca title=\"https://wordpress.org/plugins/nextgen-gallery/\" href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fplugins%2Fnextgen-gallery%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wordpress.org/plugins/nextgen-gallery/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e). It has huge number of active installations and is vulnerable to sqli caused by this WP issue.  Detailed description as attachment.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-04T16:37:02.122Z","updated_at":"2016-11-04T16:37:02.122Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":132913,"filename":"ngg-description-sqli.txt","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/132/913/cf5a74ffd1b4438762e60ef5c93208a7a0f6272f/ngg-description-sqli.txt?response-content-disposition=attachment%3B%20filename%3D%22ngg-description-sqli.txt%22%3B%20filename%2A%3DUTF-8%27%27ngg-description-sqli.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=4c3f3f238e9f98b63c14a03d831dbf9a67b1512b7842a4da6f39dd56f9621b99"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1286735,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Another wordpress core method vulnerable to sqli is get_pages() function located in wp-includes/post.php . In case of attacker controls post_status variable then we have working sqli if it is passed as array and not sanitized as valid text for the input.","markdown_message":"\u003cp\u003eAnother wordpress core method vulnerable to sqli is get_pages() function located in wp-includes/post.php . In case of attacker controls post_status variable then we have working sqli if it is passed as array and not sanitized as valid text for the input.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-06T14:53:59.854Z","updated_at":"2016-11-06T14:53:59.854Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1291696,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, @slavco, thanks for the added examples. I am attaching our preliminary patch here, it should fix the reported issue, but let us know if you find a case we’ve missed.\n\nWe’re still exploring the backwards compatibility implications, since few plugins actually use this functionality.","markdown_message":"\u003cp\u003eHey, \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e, thanks for the added examples. I am attaching our preliminary patch here, it should fix the reported issue, but let us know if you find a case we’ve missed.\u003c/p\u003e\n\n\u003cp\u003eWe’re still exploring the backwards compatibility implications, since few plugins actually use this functionality.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-09T17:20:05.200Z","updated_at":"2016-11-09T17:20:05.200Z","actor":{"username":"nikolayb","cleared":false,"url":"/nikolayb","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/006/838/e07dd5308575ffd0d3b0f0650974a8482379734e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":133676,"filename":"h1-179920.diff","type":"text/x-diff","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/133/676/42572733e98672ee7db5f7f808cac431794921ed/h1-179920.diff?response-content-disposition=attachment%3B%20filename%3D%22h1-179920.diff%22%3B%20filename%2A%3DUTF-8%27%27h1-179920.diff\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=30b6bf1e181562d929ebecbded80b7b1874815c38cd3700326c2d7919952351d"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1292459,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm afraid that given fix doesn't solve the issue. \n\nTry this:\n$str = $wpdb-\u003eprepare(\"select * from test where id = %s\", \"%2$%2$%s%ss\");\necho $wpdb-\u003eprepare($str, \" or 1=1#\", \"t\");\n\nwill result in:\n\nselect * from test where id = '%2$%2$' or 1=1#''t's' \n\nand this is valid sqli.\n","markdown_message":"\u003cp\u003eI\u0026#39;m afraid that given fix doesn\u0026#39;t solve the issue. \u003c/p\u003e\n\n\u003cp\u003eTry this:\u003cbr\u003e\n$str = $wpdb-\u0026gt;prepare(\u0026quot;select * from test where id = %s\u0026quot;, \u0026quot;%2$%2$%s%ss\u0026quot;);\u003cbr\u003e\necho $wpdb-\u0026gt;prepare($str, \u0026quot; or 1=1#\u0026quot;, \u0026quot;t\u0026quot;);\u003c/p\u003e\n\n\u003cp\u003ewill result in:\u003c/p\u003e\n\n\u003cp\u003eselect * from test where id = \u0026#39;%2$%2$\u0026#39; or 1=1#\u0026#39;\u0026#39;t\u0026#39;s\u0026#39; \u003c/p\u003e\n\n\u003cp\u003eand this is valid sqli.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-09T23:49:00.027Z","updated_at":"2016-11-09T23:49:00.027Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1293973,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e I'm afraid that given fix doesn't solve the issue.\n\nWhile technically correct, the poc against the patch isn't really valid - you're injecting a valid conversion specification (`%s`) **AND** providing the correct number of arguments when you call `$wpdb-\u003eprepare()` for the second time.\n\nIf this were real code, the second call to `$wpdb::prepare()` would trigger a PHP notice, via `_doing_it_wrong()`, for all valid values because there wouldn't normally be any conversions to take place.\n\n````\nwp\u003e $sql = $wpdb-\u003eprepare( 'SELECT * FROM test WHERE id = %s', 'foo' ); // no injection\n=\u003e string(38) \"SELECT * FROM test WHERE id = 'foo'\"\nwp\u003e $sql = $wpdb-\u003eprepare( $sql, 'bar' ); // _doing_it_wrong()\nPHP Notice:  wpdb::prepare was called \u003cstrong\u003eincorrectly\u003c/strong\u003e. The query argument of wpdb::prepare() must have a placeholder. Please see \u003ca href=\"https://codex.wordpress.org/Debugging_in_WordPress\"\u003eDebugging in WordPress\u003c/a\u003e for more information. (This message was added in version 3.9.0.) in ...\n=\u003e string(35) \"SELECT * FROM test WHERE id = 'foo'\"\n````\n\nIn a more realistic use-case, there would be additional placeholders added to the sql during the second call to `$wpdb-\u003eprepare()` - such as:\n\n````\nwp\u003e $sql = $wpdb-\u003eprepare( 'SELECT * FROM test WHERE id = %s', 'foo' ); // no injection\n=\u003e string(35) \"SELECT * FROM test WHERE id = 'foo'\"\nwp\u003e $sql = $wpdb-\u003eprepare( $sql . ' AND username = %s', 'bar' ); // everything works as expected\n=\u003e string(56) \"SELECT * FROM test WHERE id = 'foo' AND username = 'bar'\"\n````\n\nIf you were to try and inject an additional conversion specification, everything should fail due to the mismatched number of placeholders and values.\n\n````\nwp\u003e $sql = $wpdb-\u003eprepare( 'SELECT * FROM test WHERE id = %s', '%s' ); // placeholder injection\n=\u003e string(34) \"SELECT * FROM test WHERE id = '%s'\"\nwp\u003e $sql = $wpdb-\u003eprepare( $sql . ' AND username = %s', 'bar' ); // failed due to argument mismatch\n=\u003e bool(false)\n````","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eI\u0026#39;m afraid that given fix doesn\u0026#39;t solve the issue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhile technically correct, the poc against the patch isn\u0026#39;t really valid - you\u0026#39;re injecting a valid conversion specification (\u003ccode\u003e%s\u003c/code\u003e) \u003cstrong\u003eAND\u003c/strong\u003e providing the correct number of arguments when you call \u003ccode\u003e$wpdb-\u0026gt;prepare()\u003c/code\u003e for the second time.\u003c/p\u003e\n\n\u003cp\u003eIf this were real code, the second call to \u003ccode\u003e$wpdb::prepare()\u003c/code\u003e would trigger a PHP notice, via \u003ccode\u003e_doing_it_wrong()\u003c/code\u003e, for all valid values because there wouldn\u0026#39;t normally be any conversions to take place.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewp\u0026gt; $sql = $wpdb-\u0026gt;prepare( \u0026#39;SELECT * FROM test WHERE id = %s\u0026#39;, \u0026#39;foo\u0026#39; ); // no injection\n=\u0026gt; string(38) \u0026quot;SELECT * FROM test WHERE id = \u0026#39;foo\u0026#39;\u0026quot;\nwp\u0026gt; $sql = $wpdb-\u0026gt;prepare( $sql, \u0026#39;bar\u0026#39; ); // _doing_it_wrong()\nPHP Notice:  wpdb::prepare was called \u0026lt;strong\u0026gt;incorrectly\u0026lt;/strong\u0026gt;. The query argument of wpdb::prepare() must have a placeholder. Please see \u0026lt;a href=\u0026quot;https://codex.wordpress.org/Debugging_in_WordPress\u0026quot;\u0026gt;Debugging in WordPress\u0026lt;/a\u0026gt; for more information. (This message was added in version 3.9.0.) in ...\n=\u0026gt; string(35) \u0026quot;SELECT * FROM test WHERE id = \u0026#39;foo\u0026#39;\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn a more realistic use-case, there would be additional placeholders added to the sql during the second call to \u003ccode\u003e$wpdb-\u0026gt;prepare()\u003c/code\u003e - such as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewp\u0026gt; $sql = $wpdb-\u0026gt;prepare( \u0026#39;SELECT * FROM test WHERE id = %s\u0026#39;, \u0026#39;foo\u0026#39; ); // no injection\n=\u0026gt; string(35) \u0026quot;SELECT * FROM test WHERE id = \u0026#39;foo\u0026#39;\u0026quot;\nwp\u0026gt; $sql = $wpdb-\u0026gt;prepare( $sql . \u0026#39; AND username = %s\u0026#39;, \u0026#39;bar\u0026#39; ); // everything works as expected\n=\u0026gt; string(56) \u0026quot;SELECT * FROM test WHERE id = \u0026#39;foo\u0026#39; AND username = \u0026#39;bar\u0026#39;\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you were to try and inject an additional conversion specification, everything should fail due to the mismatched number of placeholders and values.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewp\u0026gt; $sql = $wpdb-\u0026gt;prepare( \u0026#39;SELECT * FROM test WHERE id = %s\u0026#39;, \u0026#39;%s\u0026#39; ); // placeholder injection\n=\u0026gt; string(34) \u0026quot;SELECT * FROM test WHERE id = \u0026#39;%s\u0026#39;\u0026quot;\nwp\u0026gt; $sql = $wpdb-\u0026gt;prepare( $sql . \u0026#39; AND username = %s\u0026#39;, \u0026#39;bar\u0026#39; ); // failed due to argument mismatch\n=\u0026gt; bool(false)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2016-11-10T18:50:43.140Z","updated_at":"2016-11-10T18:50:43.140Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1294272,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It is valid because on the second call you need to have one more param not exactly the same. \nRegarding the calling -\u003eprepare for two times you know that there are real world examples that show the following:\n\n$sql = \"somestring where x='{$condition}' and x='strong' \";\n$wpdb-\u003eprepare($prequery.$sql,$arg1,$arg2,...) \n\nIs it valid now?","markdown_message":"\u003cp\u003eIt is valid because on the second call you need to have one more param not exactly the same. \u003cbr\u003e\nRegarding the calling -\u0026gt;prepare for two times you know that there are real world examples that show the following:\u003c/p\u003e\n\n\u003cp\u003e$sql = \u0026quot;somestring where x=\u0026#39;{$condition}\u0026#39; and x=\u0026#39;strong\u0026#39; \u0026quot;;\u003cbr\u003e\n$wpdb-\u0026gt;prepare($prequery.$sql,$arg1,$arg2,...) \u003c/p\u003e\n\n\u003cp\u003eIs it valid now?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-10T21:33:34.172Z","updated_at":"2016-11-10T21:33:34.172Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1294667,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Forgot to mention that another argument from my side why test case I propose is valid sqli and vulnerability that exists in the proposed patch is the moment where we state that this method could accept array as input, so there are a lot of cases where sqli will rise again.","markdown_message":"\u003cp\u003eForgot to mention that another argument from my side why test case I propose is valid sqli and vulnerability that exists in the proposed patch is the moment where we state that this method could accept array as input, so there are a lot of cases where sqli will rise again.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-11T07:31:51.940Z","updated_at":"2016-11-11T07:31:51.940Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1295087,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To be much more precise via your examples:\n\n$var1 = user controlled variable\n\n$sql = $wpdb-\u003eprepare( 'SELECT * FROM test WHERE id = %s', $var1 ); //ofc no injection\n\nand here we go:\n\n$var2 = esc_sql($_POST[\"id\"]);\n\nhere in this case $_POST['id'] could be an array so we have the following: \n\n$sql = $wpdb-\u003eprepare( $sql . ' AND username = %s', $var2 ); // sqli by definition\n","markdown_message":"\u003cp\u003eTo be much more precise via your examples:\u003c/p\u003e\n\n\u003cp\u003e$var1 = user controlled variable\u003c/p\u003e\n\n\u003cp\u003e$sql = $wpdb-\u0026gt;prepare( \u0026#39;SELECT * FROM test WHERE id = %s\u0026#39;, $var1 ); //ofc no injection\u003c/p\u003e\n\n\u003cp\u003eand here we go:\u003c/p\u003e\n\n\u003cp\u003e$var2 = esc_sql($_POST[\u0026quot;id\u0026quot;]);\u003c/p\u003e\n\n\u003cp\u003ehere in this case $_POST[\u0026#39;id\u0026#39;] could be an array so we have the following: \u003c/p\u003e\n\n\u003cp\u003e$sql = $wpdb-\u0026gt;prepare( $sql . \u0026#39; AND username = %s\u0026#39;, $var2 ); // sqli by definition\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-11T13:34:59.873Z","updated_at":"2016-11-11T13:36:18.020Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1296768,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"From proposed fix I can get the direction from you guys how you want to solve the issue. There is always but and I think that the biggest threat in this bug isn't sprintf functionality with swapping arguments where was your focus, but instead is this line of code in the prepare method:\n\n$query = preg_replace( '|(?\u003c!%)%s|', \"'%s'\", $query ); // quote the strings, avoiding escaped strings like %%s\n\nThis functionality fails on %%%s e.g. won't add quotes and it is quite simple e.g. if you find %s add quotes and it doesn't checks if it causes sql injection e.g. breaks valid sql code. \nThat is why my latest example is valid and is real e.g. proposed fix doesn't protect for sql injection in every cases and there is no way to keep compatibility and to be sure that first parameter should be scalar or array ( this will solve my latest test case too ). This means we must focus on this line e.g. to provide smart method for adding quotes on %%%s or omitting %%%%s in this method.\n\nSee attachment fix.php, more precisely method checkquotes .\n\nTest samples:\n\necho $wpdb-\u003eprepare(\"test ' \\\\\\\\\\' %s ' %%%%%s opa %s third '%s' cool \", \"a1\",\"a2\",\"a3\",\"a4\").\"\\n\";\necho $wpdb-\u003eprepare(\"test ' \\'%s ' %%%%%%s opa %s third '%s' cool \", \"a1\",\"a2\",\"a3\").\"\\n\";\n\nOutput with fix you proposed:\n\ntest ' \\\\\\' 'a1' ' %%a2 opa 'a3' third 'a4' cool \ntest ' \\''a1' ' %%%s opa 'a2' third 'a3' cool \n\nOutput with new method for handling %s and its variants depending of the place in the query:\n\ntest ' \\\\\\' a1 ' %%'a2' opa 'a3' third 'a4' cool \ntest ' \\'a1 ' %%%s opa 'a2' third 'a3' cool  \n\nNow I think wp should be safe from tricking this method and causing sql injection.","markdown_message":"\u003cp\u003eFrom proposed fix I can get the direction from you guys how you want to solve the issue. There is always but and I think that the biggest threat in this bug isn\u0026#39;t sprintf functionality with swapping arguments where was your focus, but instead is this line of code in the prepare method:\u003c/p\u003e\n\n\u003cp\u003e$query = preg_replace( \u0026#39;|(?\u0026lt;!%)%s|\u0026#39;, \u0026quot;\u0026#39;%s\u0026#39;\u0026quot;, $query ); // quote the strings, avoiding escaped strings like %%s\u003c/p\u003e\n\n\u003cp\u003eThis functionality fails on %%%s e.g. won\u0026#39;t add quotes and it is quite simple e.g. if you find %s add quotes and it doesn\u0026#39;t checks if it causes sql injection e.g. breaks valid sql code. \u003cbr\u003e\nThat is why my latest example is valid and is real e.g. proposed fix doesn\u0026#39;t protect for sql injection in every cases and there is no way to keep compatibility and to be sure that first parameter should be scalar or array ( this will solve my latest test case too ). This means we must focus on this line e.g. to provide smart method for adding quotes on %%%s or omitting %%%%s in this method.\u003c/p\u003e\n\n\u003cp\u003eSee attachment fix.php, more precisely method checkquotes .\u003c/p\u003e\n\n\u003cp\u003eTest samples:\u003c/p\u003e\n\n\u003cp\u003eecho $wpdb-\u0026gt;prepare(\u0026quot;test \u0026#39; \\\\\\\u0026#39; %s \u0026#39; %%%%%s opa %s third \u0026#39;%s\u0026#39; cool \u0026quot;, \u0026quot;a1\u0026quot;,\u0026quot;a2\u0026quot;,\u0026quot;a3\u0026quot;,\u0026quot;a4\u0026quot;).\u0026quot;\\n\u0026quot;;\u003cbr\u003e\necho $wpdb-\u0026gt;prepare(\u0026quot;test \u0026#39; \\\u0026#39;%s \u0026#39; %%%%%%s opa %s third \u0026#39;%s\u0026#39; cool \u0026quot;, \u0026quot;a1\u0026quot;,\u0026quot;a2\u0026quot;,\u0026quot;a3\u0026quot;).\u0026quot;\\n\u0026quot;;\u003c/p\u003e\n\n\u003cp\u003eOutput with fix you proposed:\u003c/p\u003e\n\n\u003cp\u003etest \u0026#39; \\\\\u0026#39; \u0026#39;a1\u0026#39; \u0026#39; %%a2 opa \u0026#39;a3\u0026#39; third \u0026#39;a4\u0026#39; cool \u003cbr\u003e\ntest \u0026#39; \\\u0026#39;\u0026#39;a1\u0026#39; \u0026#39; %%%s opa \u0026#39;a2\u0026#39; third \u0026#39;a3\u0026#39; cool \u003c/p\u003e\n\n\u003cp\u003eOutput with new method for handling %s and its variants depending of the place in the query:\u003c/p\u003e\n\n\u003cp\u003etest \u0026#39; \\\\\u0026#39; a1 \u0026#39; %%\u0026#39;a2\u0026#39; opa \u0026#39;a3\u0026#39; third \u0026#39;a4\u0026#39; cool \u003cbr\u003e\ntest \u0026#39; \\\u0026#39;a1 \u0026#39; %%%s opa \u0026#39;a2\u0026#39; third \u0026#39;a3\u0026#39; cool  \u003c/p\u003e\n\n\u003cp\u003eNow I think wp should be safe from tricking this method and causing sql injection.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-13T02:54:59.388Z","updated_at":"2016-11-13T02:54:59.388Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":134410,"filename":"fix.php","type":"text/x-php","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/410/99c31a9cbc33fa6db2ad33dcbcf138e1dde87a33/fix.php?response-content-disposition=attachment%3B%20filename%3D%22fix.php%22%3B%20filename%2A%3DUTF-8%27%27fix.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=8f616bc873bd8ec705e191c78f5cf5d045c6c47c884bc2f35151188c37ffd24b"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1298941,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The changes made in `fix.php` introduce the following SQLi\n\n````\n$sql = $wpdb-\u003eprepare( \"SELECT * FROM test WHERE id = %s\", \"'%s\" );\n$sql = $wpdb-\u003eprepare( $sql . \" AND name = %s\", [ \"' OR 1=1 -- -\", \"ignored\" ] );\n\n// fix.php: SELECT * FROM test WHERE id = '\\\\' OR 1=1 -- - AND name = ignored\n//    core: SELECT * FROM test WHERE id = '\\'\\' OR 1=1 -- -' AND name = 'ignored'\n````","markdown_message":"\u003cp\u003eThe changes made in \u003ccode\u003efix.php\u003c/code\u003e introduce the following SQLi\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$sql = $wpdb-\u0026gt;prepare( \u0026quot;SELECT * FROM test WHERE id = %s\u0026quot;, \u0026quot;\u0026#39;%s\u0026quot; );\n$sql = $wpdb-\u0026gt;prepare( $sql . \u0026quot; AND name = %s\u0026quot;, [ \u0026quot;\u0026#39; OR 1=1 -- -\u0026quot;, \u0026quot;ignored\u0026quot; ] );\n\n// fix.php: SELECT * FROM test WHERE id = \u0026#39;\\\\\u0026#39; OR 1=1 -- - AND name = ignored\n//    core: SELECT * FROM test WHERE id = \u0026#39;\\\u0026#39;\\\u0026#39; OR 1=1 -- -\u0026#39; AND name = \u0026#39;ignored\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2016-11-14T19:21:10.070Z","updated_at":"2016-11-14T19:21:10.070Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1299246,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"True, that lousy substr_count... Knew I should write my own function :) Will upload fix right now :)","markdown_message":"\u003cp\u003eTrue, that lousy substr_count... Knew I should write my own function :) Will upload fix right now :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-14T21:14:15.488Z","updated_at":"2016-11-14T21:14:15.488Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1299253,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Edit:\n###########\nAvoid this answer uploaded wrong file :)\n###########\nAs attachment fix e.g. substr_count is replaced with my own function. Didn't expect native php function to fail in substring counting but it is what it is. Fix as attachment and works even for this test case :)","markdown_message":"\u003cp\u003eEdit:\u003c/p\u003e\n\n\u003cp\u003eAvoid this answer uploaded wrong file :)\u003c/p\u003e\n\n\u003cp\u003eAs attachment fix e.g. substr_count is replaced with my own function. Didn\u0026#39;t expect native php function to fail in substring counting but it is what it is. Fix as attachment and works even for this test case :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-14T21:18:23.997Z","updated_at":"2016-11-14T21:28:28.308Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":134734,"filename":"fix.php","type":"text/x-php","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/734/7379bc7cb59f290bf1091fe8ea21de061fe52caa/fix.php?response-content-disposition=attachment%3B%20filename%3D%22fix.php%22%3B%20filename%2A%3DUTF-8%27%27fix.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=3c538e7d80cf40f857a44dbedc6a9b24787a7d59aea3a7063389caaec779dcb1"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1299292,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It isn't substr_count it is:\n\n$query = str_replace( \"'%s'\", '%s', $query ); // in case someone mistakenly already singlequoted it \n\nNow this line it is not needed anymore because function is aware for adding quotes now and we won't be in situation to add quotes twice.Checked twice and made mistake and I've blamed substr_count...\n\nNvm check attachment ","markdown_message":"\u003cp\u003eIt isn\u0026#39;t substr_count it is:\u003c/p\u003e\n\n\u003cp\u003e$query = str_replace( \u0026quot;\u0026#39;%s\u0026#39;\u0026quot;, \u0026#39;%s\u0026#39;, $query ); // in case someone mistakenly already singlequoted it \u003c/p\u003e\n\n\u003cp\u003eNow this line it is not needed anymore because function is aware for adding quotes now and we won\u0026#39;t be in situation to add quotes twice.Checked twice and made mistake and I\u0026#39;ve blamed substr_count...\u003c/p\u003e\n\n\u003cp\u003eNvm check attachment \u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-14T21:35:02.684Z","updated_at":"2016-11-14T21:35:02.684Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":134740,"filename":"fix.php","type":"text/x-php","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/740/6035fa8eec542559f8fd0994ba96180b96b705ca/fix.php?response-content-disposition=attachment%3B%20filename%3D%22fix.php%22%3B%20filename%2A%3DUTF-8%27%27fix.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=dc2c06199fa3b0e8b2aa16e1b7d7abdd3cd1b56aeafac085eef12e924e0486e0"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1299368,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This version of `checkquotes` seems broken (wrt trailing single quotes breaking things).\n````\n$sql = $wpdb-\u003eprepare( 'SELECT * FROM test WHERE id = %s', 'foobar' );\necho $sql . PHP_EOL; // SELECT * FROM test WHERE id = 'foobar''\n\n$sql = $wpdb-\u003eprepare( $sql . ' AND name = %s', 'pewpewpew' );\necho $sql . PHP_EOL; // SELECT * FROM test WHERE id = 'foobar'' AND name = pewpewpew\n````","markdown_message":"\u003cp\u003eThis version of \u003ccode\u003echeckquotes\u003c/code\u003e seems broken (wrt trailing single quotes breaking things).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$sql = $wpdb-\u0026gt;prepare( \u0026#39;SELECT * FROM test WHERE id = %s\u0026#39;, \u0026#39;foobar\u0026#39; );\necho $sql . PHP_EOL; // SELECT * FROM test WHERE id = \u0026#39;foobar\u0026#39;\u0026#39;\n\n$sql = $wpdb-\u0026gt;prepare( $sql . \u0026#39; AND name = %s\u0026#39;, \u0026#39;pewpewpew\u0026#39; );\necho $sql . PHP_EOL; // SELECT * FROM test WHERE id = \u0026#39;foobar\u0026#39;\u0026#39; AND name = pewpewpew\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2016-11-14T22:01:49.138Z","updated_at":"2016-11-14T22:01:49.138Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1299382,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes made change in a \nif ( $lq === true \u0026\u0026 $i\u003c=$chunks_len-2){ \n\ninto (when I was checking the reason for the test cases you provide to me)\n\nif ( $lq === true \u0026\u0026 $i\u003c=$chunks_len-1){\n\nNow it is changed, check attachment :)\n","markdown_message":"\u003cp\u003eYes made change in a \u003cbr\u003e\nif ( $lq === true \u0026amp;\u0026amp; $i\u0026lt;=$chunks_len-2){ \u003c/p\u003e\n\n\u003cp\u003einto (when I was checking the reason for the test cases you provide to me)\u003c/p\u003e\n\n\u003cp\u003eif ( $lq === true \u0026amp;\u0026amp; $i\u0026lt;=$chunks_len-1){\u003c/p\u003e\n\n\u003cp\u003eNow it is changed, check attachment :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-14T22:08:21.448Z","updated_at":"2016-11-14T22:08:21.448Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":134752,"filename":"fix.php","type":"text/x-php","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/752/6b5e0a14655bc5242e05e285802592ac7d422cca/fix.php?response-content-disposition=attachment%3B%20filename%3D%22fix.php%22%3B%20filename%2A%3DUTF-8%27%27fix.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044441Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=67f91fd269bf9dad9914cdf5083c54ff8ab891206063d7b906e010e8694b4f1f"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1299566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I would like to add opinion regarding proposed solution from your side and code/method I sent as extra for it. This solution where %1$s are escaped ( for sprintf ) could lead into bugs in some of the plugins out there. There are plugins that use this functionality when preparing queries... \nAnyway I think that after query is prepared there should not be place for %s, %1#s, ... in it e.g. any form of valid sprintf type specifier. \nAll of this data should be replaced/removed/cleaned from the query.","markdown_message":"\u003cp\u003eI would like to add opinion regarding proposed solution from your side and code/method I sent as extra for it. This solution where %1$s are escaped ( for sprintf ) could lead into bugs in some of the plugins out there. There are plugins that use this functionality when preparing queries... \u003cbr\u003e\nAnyway I think that after query is prepared there should not be place for %s, %1#s, ... in it e.g. any form of valid sprintf type specifier. \u003cbr\u003e\nAll of this data should be replaced/removed/cleaned from the query.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-15T00:00:22.452Z","updated_at":"2016-11-15T00:00:22.452Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338550,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Bump, what is the status of the current issue? When will be fixed and why it takes too long. It is obvious that removing content from final query isn't good for security (based on current design in wordpress core), but your patch combined with smart quotes provided by me is almost ideal solution.","markdown_message":"\u003cp\u003eBump, what is the status of the current issue? When will be fixed and why it takes too long. It is obvious that removing content from final query isn\u0026#39;t good for security (based on current design in wordpress core), but your patch combined with smart quotes provided by me is almost ideal solution.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-03T14:13:25.874Z","updated_at":"2016-12-03T14:13:25.874Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338569,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, slavco,\n\nWe’re still looking at the best approach, and we’d like some more time to test with some of the bigger plugins – from experience we’ve seen a lot of weird uses of queries and `prepare` there and we don’t want to break millions of websites. But yes, currently the initial patch with your quotes fixes seems the prevailing approach.\n\nNikolay.","markdown_message":"\u003cp\u003eHey, slavco,\u003c/p\u003e\n\n\u003cp\u003eWe’re still looking at the best approach, and we’d like some more time to test with some of the bigger plugins – from experience we’ve seen a lot of weird uses of queries and \u003ccode\u003eprepare\u003c/code\u003e there and we don’t want to break millions of websites. But yes, currently the initial patch with your quotes fixes seems the prevailing approach.\u003c/p\u003e\n\n\u003cp\u003eNikolay.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-03T14:47:33.307Z","updated_at":"2016-12-03T14:47:33.307Z","actor":{"username":"nikolayb","cleared":false,"url":"/nikolayb","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/006/838/e07dd5308575ffd0d3b0f0650974a8482379734e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1338574,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm glad there is progress with this one.  :)","markdown_message":"\u003cp\u003eI\u0026#39;m glad there is progress with this one.  :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-03T14:54:19.122Z","updated_at":"2016-12-03T14:54:19.122Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1449647,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\nI apologize for our unresponsiveness. We've had a long and somewhat rough transition to HackerOne. That should not be a valid excuse for not keeping up communication though. I'm adding your report to a list that I will be bringing up with the rest of the team over the next week. I'm also reaching out to our plugin team to see if we can tell if there are any existing uses of `wpdb::prepare()` that might be unexpected broken by this. As @nikolayb said, \"from experience we've seen a lot of weird uses of queries and `prepare`\".\n\nSorry again and thank you for your continued patience,\nAaron","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003cbr\u003e\nI apologize for our unresponsiveness. We\u0026#39;ve had a long and somewhat rough transition to HackerOne. That should not be a valid excuse for not keeping up communication though. I\u0026#39;m adding your report to a list that I will be bringing up with the rest of the team over the next week. I\u0026#39;m also reaching out to our plugin team to see if we can tell if there are any existing uses of \u003ccode\u003ewpdb::prepare()\u003c/code\u003e that might be unexpected broken by this. As \u003ca href=\"/nikolayb\"\u003e@nikolayb\u003c/a\u003e said, \u0026quot;from experience we\u0026#39;ve seen a lot of weird uses of queries and \u003ccode\u003eprepare\u003c/code\u003e\u0026quot;.\u003c/p\u003e\n\n\u003cp\u003eSorry again and thank you for your continued patience,\u003cbr\u003e\nAaron\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-28T17:21:45.856Z","updated_at":"2017-01-28T17:21:45.856Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1648507,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003c?php\n// Silence is golden.","markdown_message":"\u003cp\u003e\u0026lt;?php\u003cbr\u003e\n// Silence is golden.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-02T10:48:42.464Z","updated_at":"2017-05-02T10:48:42.464Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1649119,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\n\nI know this has been a very slow moving issue and I apologize for that. Breaking changes to such widely used functions have historically been extremely troublesome, so we try to be especially careful and thoughtful about our approaches. We've run some of the potential solutions past a set of plugin authors and have been discussing it internally as well. We'll try to get back to you soon with more information based on the feedback we've received.","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI know this has been a very slow moving issue and I apologize for that. Breaking changes to such widely used functions have historically been extremely troublesome, so we try to be especially careful and thoughtful about our approaches. We\u0026#39;ve run some of the potential solutions past a set of plugin authors and have been discussing it internally as well. We\u0026#39;ll try to get back to you soon with more information based on the feedback we\u0026#39;ve received.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-02T15:30:41.052Z","updated_at":"2017-05-02T15:30:41.052Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1707154,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"If possible to tell me the release time/period because I want to craft one security related tool :)","markdown_message":"\u003cp\u003eIf possible to tell me the release time/period because I want to craft one security related tool :)\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-29T10:55:59.020Z","updated_at":"2017-05-29T10:55:59.020Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1794330,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ding dong :)))","markdown_message":"\u003cp\u003eDing dong :)))\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-30T14:59:14.378Z","updated_at":"2017-06-30T14:59:14.378Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1933292,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nIssue was reported 10 months ago more than enough time to patch anything / anywhere so I'll consider this report more than responsible. I'll be releasing a white paper regarding this issue on 22nd - 24th August 2017, so you have more than enough time to push the patch.","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eIssue was reported 10 months ago more than enough time to patch anything / anywhere so I\u0026#39;ll consider this report more than responsible. I\u0026#39;ll be releasing a white paper regarding this issue on 22nd - 24th August 2017, so you have more than enough time to push the patch.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-16T12:45:20.336Z","updated_at":"2017-08-16T12:45:20.336Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1936445,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\nThe person handling this ( @vortfu ) has been out on leave for the last couple months and isn't due back in until early next month. I apologize that communication slipped through the cracks. I'd like to get this into a release in the near future, but:\n\n1) We won't have a release before August 22\n2) I'd prefer to let the person that's been working with this all along continue to shepherd it into the release, so I'd like to wait until he gets back.\n\nI know it's already been a long time, but would it be possible to delay the white paper for a month?\n\nThanks,\nAaron","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003cbr\u003e\nThe person handling this ( \u003ca href=\"/vortfu\"\u003e@vortfu\u003c/a\u003e ) has been out on leave for the last couple months and isn\u0026#39;t due back in until early next month. I apologize that communication slipped through the cracks. I\u0026#39;d like to get this into a release in the near future, but:\u003c/p\u003e\n\n\u003cp\u003e1) We won\u0026#39;t have a release before August 22\u003cbr\u003e\n2) I\u0026#39;d prefer to let the person that\u0026#39;s been working with this all along continue to shepherd it into the release, so I\u0026#39;d like to wait until he gets back.\u003c/p\u003e\n\n\u003cp\u003eI know it\u0026#39;s already been a long time, but would it be possible to delay the white paper for a month?\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nAaron\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-17T15:26:40.519Z","updated_at":"2017-08-17T15:26:40.519Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2009996,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @slavco,\n\nAs you'll have noticed, 4.8.2 was released yesterday with a fix for this issue. We'll arrange for a bounty payment shortly and close this report as fixed. Thanks again for your valuable report.\n\nIn the meantime, we noticed that you commented on your blog post stating that the fix in 4.8.2 is incomplete. Are you able to share some more information with us please? If you'd like to open another report on H1 please feel free. We're happy to award points and bounties to you for your responsible disclosure and co-operation.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eAs you\u0026#39;ll have noticed, 4.8.2 was released yesterday with a fix for this issue. We\u0026#39;ll arrange for a bounty payment shortly and close this report as fixed. Thanks again for your valuable report.\u003c/p\u003e\n\n\u003cp\u003eIn the meantime, we noticed that you commented on your blog post stating that the fix in 4.8.2 is incomplete. Are you able to share some more information with us please? If you\u0026#39;d like to open another report on H1 please feel free. We\u0026#39;re happy to award points and bounties to you for your responsible disclosure and co-operation.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-09-20T21:11:04.058Z","updated_at":"2017-09-20T21:11:04.058Z","actor":{"username":"johnbillion","cleared":false,"url":"/johnbillion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/014/083/8a397390a09844d8b0657ea57e4203abd852bb2e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2010013,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-20T21:18:20.302Z","updated_at":"2017-09-20T21:18:20.302Z","actor":{"username":"johnbillion","cleared":false,"url":"/johnbillion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/014/083/8a397390a09844d8b0657ea57e4203abd852bb2e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"b258ea62bf297b02afa9854","url":"/b258ea62bf297b02afa9854"},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2058990,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\n\nI was going through and getting bounties assigned for all tickets that were missing it, and I see that I neglected to comment here before. I wanted to make sure that I made it clear why no bounty was being paid for this one. We know that fixing this issue took a long time, but public disclosure before it is granted here (which is only after the issue has been fixed and shipped) makes a report ineligible for bounty.\n\nThanks,\nAaron","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI was going through and getting bounties assigned for all tickets that were missing it, and I see that I neglected to comment here before. I wanted to make sure that I made it clear why no bounty was being paid for this one. We know that fixing this issue took a long time, but public disclosure before it is granted here (which is only after the issue has been fixed and shipped) makes a report ineligible for bounty.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nAaron\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-11T14:58:49.381Z","updated_at":"2017-10-11T14:58:49.381Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2059911,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yo @aaroncampbell \n\nFrom the day one I wasn't expecting nothing except fix for this issue (isn't delivered) and that is why I have reported to security@wordpress.org, it was your wish this issue to be moved here. Please check with @johnbillion too ^^ he says something else, but who the fuck is he to tell something here.  \n\u003eAs you'll have noticed, 4.8.2 was released yesterday with a fix for this issue. We'll arrange for a bounty payment shortly and close this report as fixed. Thanks again for your valuable report.\n\nAccording me that is more than normal behavior for the Wordpress  security or what ever team. \n\nThis security issue/report brings the biggest bounty for me. Beside acknowledgment from infosec community I have learned why Wordpress is the worst open source project from security aspect and making this report public (yes will be public 100%) the audience will learn it too. It will learn to never trust the [fake news] (https://wordpress.org/news/category/security/) section on wordpress.org that is under your control. Will learn that any minor \"bigfix\" update could holds scary security fix. Will learn that some of the plugin authors are not equal with the another ones. Will learn that you care only if persons with huge number of followers rant against you and isn't important normal approach from regular users who believe in responsible disclosure (please learn what it means). This knowledge will be crucial for the developers out there to stay safe while they migrate towards another open source solution that will fit towards their needs and will care for the security of its users.  \n\np.s. It was pleasure to see how `types` plugin was removed from the repository and `bbpress` was there not patched to the same end...\n\np.s. Security researchers will learn that reporting vulnerabilities towards Wordpress security team on hackerone is nothing but wasting time and hackerone maybe will notice abusing their service from your side.\n\nFuck off,\nSlavco","markdown_message":"\u003cp\u003eYo \u003ca href=\"/aaroncampbell\"\u003e@aaroncampbell\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eFrom the day one I wasn\u0026#39;t expecting nothing except fix for this issue (isn\u0026#39;t delivered) and that is why I have reported to \u003ca title=\"security@wordpress.org\" href=\"mailto:security@wordpress.org\" rel=\"nofollow noopener noreferrer\"\u003esecurity@wordpress.org\u003c/a\u003e, it was your wish this issue to be moved here. Please check with \u003ca href=\"/johnbillion\"\u003e@johnbillion\u003c/a\u003e too ^^ he says something else, but who the fuck is he to tell something here.  \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs you\u0026#39;ll have noticed, 4.8.2 was released yesterday with a fix for this issue. We\u0026#39;ll arrange for a bounty payment shortly and close this report as fixed. Thanks again for your valuable report.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAccording me that is more than normal behavior for the Wordpress  security or what ever team. \u003c/p\u003e\n\n\u003cp\u003eThis security issue/report brings the biggest bounty for me. Beside acknowledgment from infosec community I have learned why Wordpress is the worst open source project from security aspect and making this report public (yes will be public 100%) the audience will learn it too. It will learn to never trust the \u003ca href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fnews%2Fcategory%2Fsecurity%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efake news\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e section on wordpress.org that is under your control. Will learn that any minor \u0026quot;bigfix\u0026quot; update could holds scary security fix. Will learn that some of the plugin authors are not equal with the another ones. Will learn that you care only if persons with huge number of followers rant against you and isn\u0026#39;t important normal approach from regular users who believe in responsible disclosure (please learn what it means). This knowledge will be crucial for the developers out there to stay safe while they migrate towards another open source solution that will fit towards their needs and will care for the security of its users.  \u003c/p\u003e\n\n\u003cp\u003ep.s. It was pleasure to see how \u003ccode\u003etypes\u003c/code\u003e plugin was removed from the repository and \u003ccode\u003ebbpress\u003c/code\u003e was there not patched to the same end...\u003c/p\u003e\n\n\u003cp\u003ep.s. Security researchers will learn that reporting vulnerabilities towards Wordpress security team on hackerone is nothing but wasting time and hackerone maybe will notice abusing their service from your side.\u003c/p\u003e\n\n\u003cp\u003eFuck off,\u003cbr\u003e\nSlavco\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-11T20:45:59.166Z","updated_at":"2017-10-11T20:56:12.993Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2060514,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Slavco,\n\nThe bbPress issue you brought up here was fixed in June via a separate bbPress-specific HackerOne report.\nPlease accept my personal apologies for not including that info for you here.\n\nWarmest regards,\n-JJJ","markdown_message":"\u003cp\u003eHi Slavco,\u003c/p\u003e\n\n\u003cp\u003eThe bbPress issue you brought up here was fixed in June via a separate bbPress-specific HackerOne report.\u003cbr\u003e\nPlease accept my personal apologies for not including that info for you here.\u003c/p\u003e\n\n\u003cp\u003eWarmest regards,\u003cbr\u003e\n-JJJ\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-12T01:19:02.619Z","updated_at":"2017-10-12T01:19:02.619Z","actor":{"username":"jjj","cleared":false,"url":"/jjj","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/063/b21324cc7d9861888c1ddd4fa345cda6612361ff_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2060842,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi jjj,\n\nStrange, I was watching the [development changelog] (https://wordpress.org/plugins/bbpress/#developers) in the past, but I didn't notice update neither saw removal from Wordpress plugin directory listing. Maybe update was silent, m? o_O \n\nHottest regards,\n-Slavco ","markdown_message":"\u003cp\u003eHi jjj,\u003c/p\u003e\n\n\u003cp\u003eStrange, I was watching the \u003ca href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fplugins%2Fbbpress%2F%23developers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edevelopment changelog\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in the past, but I didn\u0026#39;t notice update neither saw removal from Wordpress plugin directory listing. Maybe update was silent, m? o_O \u003c/p\u003e\n\n\u003cp\u003eHottest regards,\u003cbr\u003e\n-Slavco \u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-12T06:52:44.823Z","updated_at":"2017-10-12T07:00:53.108Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2066040,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-14T14:56:45.567Z","updated_at":"2017-10-14T14:56:45.567Z","first_to_agree":true,"actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2069259,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"Just cleaning this up, please see [previous comment for explanation](https://hackerone.com/reports/179920#activity-2058990)","markdown_message":"\u003cp\u003eJust cleaning this up, please see \u003ca href=\"https://hackerone.com/reports/179920#activity-2058990\"\u003eprevious comment for explanation\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T15:14:15.969Z","updated_at":"2017-10-16T15:14:15.969Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2120446,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Congrats for the new security release for the patch for this patch, you just introduced new feature towards wp.\nRecommended memory usage for the Wordpress gets new formula: \n`memory_limit` \u003e= `post_max_size * 66 * 3`\n\nCongrats again,\nSlavco ","markdown_message":"\u003cp\u003eCongrats for the new security release for the patch for this patch, you just introduced new feature towards wp.\u003cbr\u003e\nRecommended memory usage for the Wordpress gets new formula: \u003cbr\u003e\n\u003ccode\u003ememory_limit\u003c/code\u003e \u0026gt;= \u003ccode\u003epost_max_size * 66 * 3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eCongrats again,\u003cbr\u003e\nSlavco \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-01T10:17:24.627Z","updated_at":"2017-11-01T10:17:24.627Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131119,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Report will be disclosed in 10 days according counter. You understand the implications of latest 4.8.3 patch right? \n\nBeside not fixed `$wpdb-\u003eprepare(\"%1$%s\",\"grr\")` and easy out of memory for any wp instance, now there is something else:\n \n`code where variable is esc_sql-ed`\n...\n`code where wp-load.php is included/required again`\n...\n`salute extra data in the variable that won't be removed by -\u003equery`\n\nFew existing attacks made easy... :(  8.4.3 patch is probably worst in the wp history.\n\nStay safe,\nSlavco","markdown_message":"\u003cp\u003eReport will be disclosed in 10 days according counter. You understand the implications of latest 4.8.3 patch right? \u003c/p\u003e\n\n\u003cp\u003eBeside not fixed \u003ccode\u003e$wpdb-\u0026gt;prepare(\u0026quot;%1$%s\u0026quot;,\u0026quot;grr\u0026quot;)\u003c/code\u003e and easy out of memory for any wp instance, now there is something else:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecode where variable is esc_sql-ed\u003c/code\u003e\u003cbr\u003e\n...\u003cbr\u003e\n\u003ccode\u003ecode where wp-load.php is included/required again\u003c/code\u003e\u003cbr\u003e\n...\u003cbr\u003e\n\u003ccode\u003esalute extra data in the variable that won\u0026#39;t be removed by -\u0026gt;query\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eFew existing attacks made easy... :(  8.4.3 patch is probably worst in the wp history.\u003c/p\u003e\n\n\u003cp\u003eStay safe,\u003cbr\u003e\nSlavco\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T11:02:18.229Z","updated_at":"2017-11-03T11:02:18.229Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133104,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\n\nThanks for your continued concern and for the additional information.\n\n## Query Issue\n\nIn the case of `$wpdb-\u003eprepare( \"%1$%s\", \"grr\" )`, `%1$%s` isn't a valid placeholder. This means that during regular (expected) usage, the query would be broken and a developer would fix it. If a developer is putting something directly into the query part of a `wpdb::prepare` call, they could also just do `$wpdb-\u003eprepare( \"grr' ...\", ... )`. What we were attempting to protect against in 4.8.3 with regard to this, was developers that were using common practices that they *expected* (likely reasonably so) to be secure but they weren't. This included user-controlled data going into the query part of a `wpdb::prepare()` call only **after** having gone through `esc_sql()` or another `wpdb::prepare()` which the developer thought was protecting them.\n\nI also scanned the WordPress.org plugin directory and am not seeing any matches for `%[1-9][0-9]*\\$%s`. Can you point to the plugins you are saying are vulnerable? (Ref: https://twitter.com/mslavco/status/925686658779009025)\n\n## Memory\n\nI had a couple people on our team compare memory usage of 4.8.2 and 4.8.3. We're seeing results like this:\n\n| 4.8.2    | 4.8.3    | Diff     |\n|----------|----------|----------|\n| 14495632 | 14511272 | 15640    |\n| 20143104 | 20156416 | 13312    |\n\nThere is an increase, but it's fairly negligible. Only about 10-20k on an average page load, which doesn't seem like it justifies an adjustment to the memory limit. Hosts don't seem to be noticing any issues related to this either, at least not the ones that I've spoken to so far. Can you tell me what kind of setup you're testing on and what numbers you're seeing?\n\n## Something Else\n\nI'm not sure I'm tracking with the new things you mentioned:\n\n\u003e `code where variable is esc_sql-ed`\n...\n`code where wp-load.php is included/required again`\n...\n`salute extra data in the variable that won't be removed by -\u003equery`\n\nCould you expand on these or supply a PoC to help us understand what you mean?\n\nThanks,\nAaron","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your continued concern and for the additional information.\u003c/p\u003e\n\n\u003ch2 id=\"query-issue\"\u003eQuery Issue\u003c/h2\u003e\n\n\u003cp\u003eIn the case of \u003ccode\u003e$wpdb-\u0026gt;prepare( \u0026quot;%1$%s\u0026quot;, \u0026quot;grr\u0026quot; )\u003c/code\u003e, \u003ccode\u003e%1$%s\u003c/code\u003e isn\u0026#39;t a valid placeholder. This means that during regular (expected) usage, the query would be broken and a developer would fix it. If a developer is putting something directly into the query part of a \u003ccode\u003ewpdb::prepare\u003c/code\u003e call, they could also just do \u003ccode\u003e$wpdb-\u0026gt;prepare( \u0026quot;grr\u0026#39; ...\u0026quot;, ... )\u003c/code\u003e. What we were attempting to protect against in 4.8.3 with regard to this, was developers that were using common practices that they \u003cem\u003eexpected\u003c/em\u003e (likely reasonably so) to be secure but they weren\u0026#39;t. This included user-controlled data going into the query part of a \u003ccode\u003ewpdb::prepare()\u003c/code\u003e call only \u003cstrong\u003eafter\u003c/strong\u003e having gone through \u003ccode\u003eesc_sql()\u003c/code\u003e or another \u003ccode\u003ewpdb::prepare()\u003c/code\u003e which the developer thought was protecting them.\u003c/p\u003e\n\n\u003cp\u003eI also scanned the WordPress.org plugin directory and am not seeing any matches for \u003ccode\u003e%[1-9][0-9]*\\$%s\u003c/code\u003e. Can you point to the plugins you are saying are vulnerable? (Ref: \u003ca title=\"https://twitter.com/mslavco/status/925686658779009025\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fmslavco%2Fstatus%2F925686658779009025\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/mslavco/status/925686658779009025\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e)\u003c/p\u003e\n\n\u003ch2 id=\"memory\"\u003eMemory\u003c/h2\u003e\n\n\u003cp\u003eI had a couple people on our team compare memory usage of 4.8.2 and 4.8.3. We\u0026#39;re seeing results like this:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e4.8.2\u003c/th\u003e\n\u003cth\u003e4.8.3\u003c/th\u003e\n\u003cth\u003eDiff\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e14495632\u003c/td\u003e\n\u003ctd\u003e14511272\u003c/td\u003e\n\u003ctd\u003e15640\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e20143104\u003c/td\u003e\n\u003ctd\u003e20156416\u003c/td\u003e\n\u003ctd\u003e13312\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eThere is an increase, but it\u0026#39;s fairly negligible. Only about 10-20k on an average page load, which doesn\u0026#39;t seem like it justifies an adjustment to the memory limit. Hosts don\u0026#39;t seem to be noticing any issues related to this either, at least not the ones that I\u0026#39;ve spoken to so far. Can you tell me what kind of setup you\u0026#39;re testing on and what numbers you\u0026#39;re seeing?\u003c/p\u003e\n\n\u003ch2 id=\"something-else\"\u003eSomething Else\u003c/h2\u003e\n\n\u003cp\u003eI\u0026#39;m not sure I\u0026#39;m tracking with the new things you mentioned:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ecode where variable is esc_sql-ed\u003c/code\u003e\u003cbr\u003e\n...\u003cbr\u003e\n\u003ccode\u003ecode where wp-load.php is included/required again\u003c/code\u003e\u003cbr\u003e\n...\u003cbr\u003e\n\u003ccode\u003esalute extra data in the variable that won\u0026#39;t be removed by -\u0026gt;query\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCould you expand on these or supply a PoC to help us understand what you mean?\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nAaron\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T20:33:05.297Z","updated_at":"2017-11-03T20:33:05.297Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2133368,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"No need to search for the `%1$%s` you need to search for example you should search for code like this:\n`$not_in = \"'\" . implode( \"', '\", esc_sql( $_POST['exclude'] ) ) . \"'\";` - yes direct request in wp is sqli save. But also you can search for code like this:\n`if (!self::getDB()-\u003equeryWrite(sprintf(\"insert ignore into \" . self::table() . \" (name, val, autoload) values (%%s, X'%s', 'no')\", $dataChunk), $chunkedValueKey . $chunks))` - part of wordfence code and only because of `hex2bin` there isn't sqli towards wp `4.8.3`. Now if places like this exists :) then the payload would be more than simple e.g. you can play with the directives in order to get something like the following format string:\n`$wpdb-\u003e(\"%1$%s%2$%s%2$%s %s %s\", $input['one'], $input['two'])` - input one if it is user controlled then just set it on `'' - empty value` and choose your sqli payload in `$input['two']` - I think I was clear regarding this case.\n\nCase for memory usage (short: you replace `%` into 66 characters and you hold it in memory for some time):\n```\n((wp_posts.post_title LIKE '{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}') OR (wp_posts.post_excerpt LIKE '{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}') OR (wp_posts.post_content LIKE '{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}'))\n```\nthis is output of the prepare when you search something in wp - this case I search for `slavco`. This means that the attacker could stop execution of the PHP script at the place he want if he controls the user input and if PHP setting for memory usage e.g. memory_limit is lower than `66 * max_post_size` - 66 is output of hash_hmac + `{}` and I say `max_post_size` because if 10MB it is, then PHP memory must be bigger than 66*post_max_size in order to stop payload holding a lot of `%` in it. Good for the test of the memory usage for wp you conducted, but you  can try it with more `%` when you post comments for instance - yes you just turned wp in web goat for beginners to practice DOS attacks on it.\n\nRegarding the third concern it is the biggest of all, but this time I'll leave towards all of you to trust me e.g. I won't show any attack vector atm.\n\n","markdown_message":"\u003cp\u003eNo need to search for the \u003ccode\u003e%1$%s\u003c/code\u003e you need to search for example you should search for code like this:\u003cbr\u003e\n\u003ccode\u003e$not_in = \u0026quot;\u0026#39;\u0026quot; . implode( \u0026quot;\u0026#39;, \u0026#39;\u0026quot;, esc_sql( $_POST[\u0026#39;exclude\u0026#39;] ) ) . \u0026quot;\u0026#39;\u0026quot;;\u003c/code\u003e - yes direct request in wp is sqli save. But also you can search for code like this:\u003cbr\u003e\n\u003ccode\u003eif (!self::getDB()-\u0026gt;queryWrite(sprintf(\u0026quot;insert ignore into \u0026quot; . self::table() . \u0026quot; (name, val, autoload) values (%%s, X\u0026#39;%s\u0026#39;, \u0026#39;no\u0026#39;)\u0026quot;, $dataChunk), $chunkedValueKey . $chunks))\u003c/code\u003e - part of wordfence code and only because of \u003ccode\u003ehex2bin\u003c/code\u003e there isn\u0026#39;t sqli towards wp \u003ccode\u003e4.8.3\u003c/code\u003e. Now if places like this exists :) then the payload would be more than simple e.g. you can play with the directives in order to get something like the following format string:\u003cbr\u003e\n\u003ccode\u003e$wpdb-\u0026gt;(\u0026quot;%1$%s%2$%s%2$%s %s %s\u0026quot;, $input[\u0026#39;one\u0026#39;], $input[\u0026#39;two\u0026#39;])\u003c/code\u003e - input one if it is user controlled then just set it on \u003ccode\u003e\u0026#39;\u0026#39; - empty value\u003c/code\u003e and choose your sqli payload in \u003ccode\u003e$input[\u0026#39;two\u0026#39;]\u003c/code\u003e - I think I was clear regarding this case.\u003c/p\u003e\n\n\u003cp\u003eCase for memory usage (short: you replace \u003ccode\u003e%\u003c/code\u003e into 66 characters and you hold it in memory for some time):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e((wp_posts.post_title LIKE \u0026#39;{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}\u0026#39;) OR (wp_posts.post_excerpt LIKE \u0026#39;{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}\u0026#39;) OR (wp_posts.post_content LIKE \u0026#39;{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}slavco{5944533a7bbf0e39b0751657f6618c4003a77dc4d2a15581d17deef104a124a8}\u0026#39;))\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ethis is output of the prepare when you search something in wp - this case I search for \u003ccode\u003eslavco\u003c/code\u003e. This means that the attacker could stop execution of the PHP script at the place he want if he controls the user input and if PHP setting for memory usage e.g. memory_limit is lower than \u003ccode\u003e66 * max_post_size\u003c/code\u003e - 66 is output of hash_hmac + \u003ccode\u003e{}\u003c/code\u003e and I say \u003ccode\u003emax_post_size\u003c/code\u003e because if 10MB it is, then PHP memory must be bigger than 66*post_max_size in order to stop payload holding a lot of \u003ccode\u003e%\u003c/code\u003e in it. Good for the test of the memory usage for wp you conducted, but you  can try it with more \u003ccode\u003e%\u003c/code\u003e when you post comments for instance - yes you just turned wp in web goat for beginners to practice DOS attacks on it.\u003c/p\u003e\n\n\u003cp\u003eRegarding the third concern it is the biggest of all, but this time I\u0026#39;ll leave towards all of you to trust me e.g. I won\u0026#39;t show any attack vector atm.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T21:58:42.775Z","updated_at":"2017-11-03T21:58:42.775Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133416,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"`$not_in = \"'\" . implode( \"', '\", esc_sql( $_POST['exclude'] ) ) . \"'\";` - need to be without `esc_sql` in it. by default wp is sqli proof and there are many plugins that add `$_POST['var']` in the query \n`$wpdb-\u003equery(\"bla '\".$_POST['var'].\"'\");` - no sqli in wp","markdown_message":"\u003cp\u003e\u003ccode\u003e$not_in = \u0026quot;\u0026#39;\u0026quot; . implode( \u0026quot;\u0026#39;, \u0026#39;\u0026quot;, esc_sql( $_POST[\u0026#39;exclude\u0026#39;] ) ) . \u0026quot;\u0026#39;\u0026quot;;\u003c/code\u003e - need to be without \u003ccode\u003eesc_sql\u003c/code\u003e in it. by default wp is sqli proof and there are many plugins that add \u003ccode\u003e$_POST[\u0026#39;var\u0026#39;]\u003c/code\u003e in the query \u003cbr\u003e\n\u003ccode\u003e$wpdb-\u0026gt;query(\u0026quot;bla \u0026#39;\u0026quot;.$_POST[\u0026#39;var\u0026#39;].\u0026quot;\u0026#39;\u0026quot;);\u003c/code\u003e - no sqli in wp\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T22:13:51.244Z","updated_at":"2017-11-03T22:13:51.244Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133423,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"^^ `hex2bin` need to be `bin2hex` too ","markdown_message":"\u003cp\u003e^^ \u003ccode\u003ehex2bin\u003c/code\u003e need to be \u003ccode\u003ebin2hex\u003c/code\u003e too \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T22:15:07.779Z","updated_at":"2017-11-03T22:15:07.779Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133465,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"These are in WordFence? Have you reported it to them? https://www.wordfence.com/security/","markdown_message":"\u003cp\u003eThese are in WordFence? Have you reported it to them? \u003ca title=\"https://www.wordfence.com/security/\" href=\"/redirect?url=https%3A%2F%2Fwww.wordfence.com%2Fsecurity%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.wordfence.com/security/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T22:26:17.575Z","updated_at":"2017-11-03T22:26:17.575Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2133470,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Nothing scary, it is hex encoded data, as extra they use $wpdb only in case mysqli isn't avaliable on the server... NVM, this is just sample there are many many places where user input is put in the $query and then $query is used in `-\u003eprepare`. I can't believe after a year I'm talking this again, but it is my fault I don't have many followers to be able to rant like a man :D","markdown_message":"\u003cp\u003eNothing scary, it is hex encoded data, as extra they use $wpdb only in case mysqli isn\u0026#39;t avaliable on the server... NVM, this is just sample there are many many places where user input is put in the $query and then $query is used in \u003ccode\u003e-\u0026gt;prepare\u003c/code\u003e. I can\u0026#39;t believe after a year I\u0026#39;m talking this again, but it is my fault I don\u0026#39;t have many followers to be able to rant like a man :D\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T22:29:11.903Z","updated_at":"2017-11-03T22:29:11.903Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133569,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In one of my code bases just found a plugin that is (90% just followed the function calls) vulnerable to sqli caused by this patch ( wasn't with previous patch ). Core problem here isn't just numbered placeholders, but also input into format string and functionality of PHP sprintf. Yes with the latest patch something was done, but `%[NUMBER]$%s` is allowed in it and combined with quoting there is trouble e.g. sqli, basically for some cases you rolled back wordpress to not patched version `4.8.1`. Regarding memory usage and new \"features\" introduced with replacement of `%` that is another story that opens wide doors for different types of attack and it is a quite unbelievable for me. \nThere are two ways for complete backward compatible fix for wp regarding this issue with price not to introduce new issues like now. First half of the solution is delivered by me as idea for the patch and the rest of it is simple vsprintf functionality written in php that will be sprintf by the \"book\" without hidden gems of it (`c`, `O`, `l`, ... could be completely dismissed then ). Another one is much more simple and require no coding at all - just big note in the documentation and warning against community to not place in the query-format string any user input except constants in the form of allowed format directives. That is it, there is no another way. ","markdown_message":"\u003cp\u003eIn one of my code bases just found a plugin that is (90% just followed the function calls) vulnerable to sqli caused by this patch ( wasn\u0026#39;t with previous patch ). Core problem here isn\u0026#39;t just numbered placeholders, but also input into format string and functionality of PHP sprintf. Yes with the latest patch something was done, but \u003ccode\u003e%[NUMBER]$%s\u003c/code\u003e is allowed in it and combined with quoting there is trouble e.g. sqli, basically for some cases you rolled back wordpress to not patched version \u003ccode\u003e4.8.1\u003c/code\u003e. Regarding memory usage and new \u0026quot;features\u0026quot; introduced with replacement of \u003ccode\u003e%\u003c/code\u003e that is another story that opens wide doors for different types of attack and it is a quite unbelievable for me. \u003cbr\u003e\nThere are two ways for complete backward compatible fix for wp regarding this issue with price not to introduce new issues like now. First half of the solution is delivered by me as idea for the patch and the rest of it is simple vsprintf functionality written in php that will be sprintf by the \u0026quot;book\u0026quot; without hidden gems of it (\u003ccode\u003ec\u003c/code\u003e, \u003ccode\u003eO\u003c/code\u003e, \u003ccode\u003el\u003c/code\u003e, ... could be completely dismissed then ). Another one is much more simple and require no coding at all - just big note in the documentation and warning against community to not place in the query-format string any user input except constants in the form of allowed format directives. That is it, there is no another way. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T23:21:44.881Z","updated_at":"2017-11-03T23:21:44.881Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2133778,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @slavco,\n\nIt is true that non-escaped data going directly into either `wpdb::query()` or the query (first) parameter in `wpdb::prepare()` is generally unsafe and could be vulnerable to SQLi. Documentation around this, as you pointed out, is a must. I'll try to make sure what we document this where we can.\n\nIf you have a list of specific plugins that are are doing this, we could bring these cases directly to the developers and help them fix and secure their plugins. It would be extremely helpful.\n\nThanks,\nAaron","markdown_message":"\u003cp\u003eHey \u003ca href=\"/slavco\"\u003e@slavco\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eIt is true that non-escaped data going directly into either \u003ccode\u003ewpdb::query()\u003c/code\u003e or the query (first) parameter in \u003ccode\u003ewpdb::prepare()\u003c/code\u003e is generally unsafe and could be vulnerable to SQLi. Documentation around this, as you pointed out, is a must. I\u0026#39;ll try to make sure what we document this where we can.\u003c/p\u003e\n\n\u003cp\u003eIf you have a list of specific plugins that are are doing this, we could bring these cases directly to the developers and help them fix and secure their plugins. It would be extremely helpful.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nAaron\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-04T04:58:23.152Z","updated_at":"2017-11-04T04:58:23.152Z","actor":{"username":"aaroncampbell","cleared":false,"url":"/aaroncampbell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/020/821/f7e6872e5cd77bbdfb5edb77e7b9b2c91bb6c0c7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2133940,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"- Fixing current  issues won't prevent future failures in plugins, themes, cron scripts in the future... You should keep in mind that wp code base is PHP code and also you know that there are cases where people are using `mysqli_real_escape_string` into `array_map`, implement their own `esc_sql` functions like, use/parse output from mysql dumps in order to restructure/restore data, ... yes there are many use cases that are vulnerable towards SQLi re-introduced in `4.8.3` - but not in `4.8.2` for instance.\n- memory usage beside dos-ing the server php module could stop php execution at certain point (if accepts user input towards operation that includes `prepare`) that could lead towards broken authentications/authorizations or bypassing some flows...\n-told you there is 3rd case but I'm not going to disclose anything regarding it atm :)\n\n","markdown_message":"\u003cul\u003e\n\u003cli\u003eFixing current  issues won\u0026#39;t prevent future failures in plugins, themes, cron scripts in the future... You should keep in mind that wp code base is PHP code and also you know that there are cases where people are using \u003ccode\u003emysqli_real_escape_string\u003c/code\u003e into \u003ccode\u003earray_map\u003c/code\u003e, implement their own \u003ccode\u003eesc_sql\u003c/code\u003e functions like, use/parse output from mysql dumps in order to restructure/restore data, ... yes there are many use cases that are vulnerable towards SQLi re-introduced in \u003ccode\u003e4.8.3\u003c/code\u003e - but not in \u003ccode\u003e4.8.2\u003c/code\u003e for instance.\u003c/li\u003e\n\u003cli\u003ememory usage beside dos-ing the server php module could stop php execution at certain point (if accepts user input towards operation that includes \u003ccode\u003eprepare\u003c/code\u003e) that could lead towards broken authentications/authorizations or bypassing some flows...\n-told you there is 3rd case but I\u0026#39;m not going to disclose anything regarding it atm :)\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2017-11-04T08:17:08.735Z","updated_at":"2017-11-04T08:17:30.236Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2136980,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"And there are live traces of the 3rd case e.g. the new feature https://wordpress.org/support/topic/bug-with-character-in-woocommerce-product-name/ this is not functional bug, but it is security bug because it leads towards `unserialize` of the attacker/user payload. There are case scenarios that work in both directions - defeat `maybe_serialize` and defeat `maybe_unserialize`. Yup, core is now opened towards `unserialize` of user payload - few scenarios and as extra escalates limited security vulnerability as LFI towards possible RCE on wp. ","markdown_message":"\u003cp\u003eAnd there are live traces of the 3rd case e.g. the new feature \u003ca title=\"https://wordpress.org/support/topic/bug-with-character-in-woocommerce-product-name/\" href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fsupport%2Ftopic%2Fbug-with-character-in-woocommerce-product-name%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wordpress.org/support/topic/bug-with-character-in-woocommerce-product-name/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e this is not functional bug, but it is security bug because it leads towards \u003ccode\u003eunserialize\u003c/code\u003e of the attacker/user payload. There are case scenarios that work in both directions - defeat \u003ccode\u003emaybe_serialize\u003c/code\u003e and defeat \u003ccode\u003emaybe_unserialize\u003c/code\u003e. Yup, core is now opened towards \u003ccode\u003eunserialize\u003c/code\u003e of user payload - few scenarios and as extra escalates limited security vulnerability as LFI towards possible RCE on wp. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T14:07:01.145Z","updated_at":"2017-11-06T14:07:01.145Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2136997,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"```\n$value = wc_clean($_POST[\"name\"]);\n...\n$value = esc_sql($value);\n//used here in some insert / update query and on success used as meta\n...\nupdate_metadata('post', $_id, $key, $value );\n```\nIs this code safe, why isn't and why are there production codes with same approach? :)","markdown_message":"\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$value = wc_clean($_POST[\u0026quot;name\u0026quot;]);\n...\n$value = esc_sql($value);\n//used here in some insert / update query and on success used as meta\n...\nupdate_metadata(\u0026#39;post\u0026#39;, $_id, $key, $value );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIs this code safe, why isn\u0026#39;t and why are there production codes with same approach? :)\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T14:16:46.040Z","updated_at":"2017-11-06T14:16:46.040Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2138082,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Somebody reads here, you have opened wp for `unserialize` of user input. Many plugins perform `esc_sql` on some value -\u003e then `serialize` -\u003e then `-\u003equery`. We all know that `-\u003equery` removes the `{64charfeature}`, but string is already `serialized` =\u003e we can craft our payload so when `{64charfeature}` occurrences removed, some another serialized string property will become part of serialized object/array - boom RCE :)","markdown_message":"\u003cp\u003eSomebody reads here, you have opened wp for \u003ccode\u003eunserialize\u003c/code\u003e of user input. Many plugins perform \u003ccode\u003eesc_sql\u003c/code\u003e on some value -\u0026gt; then \u003ccode\u003eserialize\u003c/code\u003e -\u0026gt; then \u003ccode\u003e-\u0026gt;query\u003c/code\u003e. We all know that \u003ccode\u003e-\u0026gt;query\u003c/code\u003e removes the \u003ccode\u003e{64charfeature}\u003c/code\u003e, but string is already \u003ccode\u003eserialized\u003c/code\u003e =\u0026gt; we can craft our payload so when \u003ccode\u003e{64charfeature}\u003c/code\u003e occurrences removed, some another serialized string property will become part of serialized object/array - boom RCE :)\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T20:07:36.629Z","updated_at":"2017-11-06T20:07:36.629Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2139773,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In my last comment regarding solution (11 months ago) ^^ I have warned, but here we are. \nAgain, sorry that I do not have huge number of followers on social media, so my guides could be considered as valid. :( \n\n```\n... It is obvious that removing content from final query isn't good for security (based on current design in wordpress core)...\n```\n","markdown_message":"\u003cp\u003eIn my last comment regarding solution (11 months ago) ^^ I have warned, but here we are. \u003cbr\u003e\nAgain, sorry that I do not have huge number of followers on social media, so my guides could be considered as valid. :( \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e... It is obvious that removing content from final query isn\u0026#39;t good for security (based on current design in wordpress core)...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-11-07T10:19:51.230Z","updated_at":"2017-11-07T10:19:51.230Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2154083,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-13T14:56:49.388Z","updated_at":"2017-11-13T14:56:49.388Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}