{"id":7779,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83Nzc5","url":"https://hackerone.com/reports/7779","title":"Local File Include on marketing-dam.yahoo.com","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2014-04-16T16:59:52.320Z","submitted_at":"2014-04-16T16:59:52.320Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"redshark1802","url":"/redshark1802","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":19,"url":"https://hackerone.com/verizonmedia","handle":"verizonmedia","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/019/0376827ddfc63924843165255c8d07e237fd3ae4_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/019/0376827ddfc63924843165255c8d07e237fd3ae4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Verizon Media","twitter_handle":"verizonmedia","website":"https://www.verizonmedia.com","about":"Build Brands Members Love"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"no-content","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2014-05-16T17:58:40.753Z","bug_reporter_agreed_on_going_public_at":"2014-04-23T17:31:17.298Z","team_member_agreed_on_going_public_at":"2014-05-16T17:58:40.134Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"","vulnerability_information_html":"","bounty_amount":"2500.0","formatted_bounty":"$2,500","weakness":{"id":32,"name":"Cryptographic Issues - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2014-05-23T15:44:48.720Z","allow_singular_disclosure_after":-208364754.0725039,"singular_disclosure_allowed":true,"vote_count":16,"voters":["m13z","sw33tlie","mashoud1122","bogdantcaciuc","base_64","sameerphad72","ahiezer","tulswani","abdoubhc","elmahdi","and 6 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":31571,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2014-04-16T22:36:53.129Z","updated_at":"2014-04-16T22:36:53.129Z","actor":{"username":"redshark1802","cleared":false,"url":"/redshark1802","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":32159,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2014-04-17T21:48:51.263Z","updated_at":"2014-04-17T21:48:51.263Z","actor":{"username":"junot","cleared":false,"url":"/junot","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/M5pzVfGfQwf2ibThc1LRahdB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":37280,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2014-04-23T15:44:49.730Z","updated_at":"2014-04-23T15:44:49.730Z","actor":{"username":"sunshine","cleared":false,"url":"/sunshine","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"redshark1802","url":"/redshark1802"},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":37346,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2014-04-23T16:47:44.098Z","updated_at":"2014-04-23T16:47:44.098Z","actor":{"username":"redshark1802","cleared":false,"url":"/redshark1802","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":37395,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2014-04-23T17:31:17.317Z","updated_at":"2014-04-23T17:31:17.317Z","first_to_agree":true,"actor":{"username":"redshark1802","cleared":false,"url":"/redshark1802","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":45507,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2014-05-07T04:37:16.857Z","updated_at":"2014-05-07T04:37:50.244Z","actor":{"username":"redshark1802","cleared":false,"url":"/redshark1802","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":52428,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2014-05-16T17:58:40.151Z","updated_at":"2014-05-16T17:58:40.151Z","actor":{"username":"junot","cleared":false,"url":"/junot","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/M5pzVfGfQwf2ibThc1LRahdB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":52429,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2014-05-16T17:58:40.768Z","updated_at":"2014-05-16T17:58:40.768Z","actor":{"username":"junot","cleared":false,"url":"/junot","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/M5pzVfGfQwf2ibThc1LRahdB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":94888,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2014-07-23T22:00:59.579Z","updated_at":"2014-07-23T22:00:59.579Z","actor":{"url":"/verizonmedia","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/019/0376827ddfc63924843165255c8d07e237fd3ae4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Verizon Media"}},"bounty_amount":"2500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"verizonmedia","collaborator":{"username":"redshark1802","url":"/redshark1802"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":98157,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2014-07-30T11:12:51.266Z","updated_at":"2014-07-30T11:12:51.266Z","actor":{"username":"redshark1802","cleared":false,"url":"/redshark1802","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/538/032d1bb5577195a464c0c446919601207f50ed5a_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"verizonmedia","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":569,"category":"team","content":"Thank you for your submission to the Yahoo Bug Bounty program. We were able to reproduce the issue you reported and have implemented appropriate fixes. We appreciate your adherence to responsible disclosure guidelines and look forward to your future participation in the program.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThank you for your submission to the Yahoo Bug Bounty program. We were able to reproduce the issue you reported and have implemented appropriate fixes. We appreciate your adherence to responsible disclosure guidelines and look forward to your future participation in the program.\u003c/p\u003e\n"},{"id":663,"category":"researcher","content":"Local File Include vulnerability on marketing-dam.yahoo.com\n\nThe vulnerable end-point is marketing-dam.yahoo.com/DLMExt/DLAgent?dlurl=, usually the get parameter for ```dlurl``` looks like this: ```8lcO%3A%2F%2F0w.QbN.0.*Q%3Anbbn0%2FPSID%3Fz8A%3DAxT_DIfP7_UO9Y6I_hD67IdcI%26Ujd%3DlpxBXLmiKWMPRwUsLpu8cZ%26hj%3DaR9UU_hI-q5_UjP.W7U```\nWhen this get-parameter is url-decoded, the follwing \"sub\"get-parameter are visible: ```z8A```, ```Ujd```, ```hj```.\nThe vulnerable parameter is  ```hj```, which is usually encrypted and reflected as the filename to be downloaded.\n\nThe parameter is encoded using ecb-encryption with a blocksize of 32 characters-\n\nI've mapped the chracters using requests like this 'aaaaaaaaaa...'(32 characters) and the server responded with: 'aTYUYTSaTZUYVZTaUZVYWWXTZVYXUTZS'.\nNow when I want to insert a 'T' at position 2 of the block I knew I had to use the charcter 'a'.\n\nThis way I was able to craft encrypted strings on the fly (see ```Steps to reproduce and my attached poc```) which were decrypted by the server and directly used to load the file from the filesystem.\n\nSince the webserver used to serve the files is running as ```root```, I was able to actually read not just the usal ```/etc/passwd``` but ```/etc/shadow```.  Unfortunately, I was not able to get code execution on the server, but given enough time an attacker could quite surely exfiltrate enough informaton from the system (since the server is running as ```root```) to perform remote code execution.\n\nSteps to reproduce:\ngot to https://brandtoolkit.yahoo.com/ and request a download for any file\nthe download popup should appear, take the url and save it for later\n\nUse my poc to encrypt the following string: ```/../../../../../../../../etc/passwd```, or use this already encrypted string ```/../../../../../../../../79d/zGcIwd```\n(Please note that this poc is writen with node-js in mind, but the function ```ecnrypt``` should run in any other js-environment as long as you copy the ```blocks``` object with it)\nreplace the string after ```hj%3D``` with the encrypted string in the saved  download-url \nafter executing the \"download\" you will see the contents of  ```/etc/passwd```\n\nSince I don't want to post any critical information that could be used after the vulnerability has been fixed I'm not attaching the ```/etc/passwd``` file, but I'm going to give you the length of the file, which is 610. This way you can probably more quickly verify this vulnerability.\n","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eLocal File Include vulnerability on marketing-dam.yahoo.com\u003c/p\u003e\n\n\u003cp\u003eThe vulnerable end-point is marketing-dam.yahoo.com/DLMExt/DLAgent?dlurl=, usually the get parameter for \u003ccode\u003edlurl\u003c/code\u003e looks like this: \u003ccode\u003e8lcO%3A%2F%2F0w.QbN.0.*Q%3Anbbn0%2FPSID%3Fz8A%3DAxT_DIfP7_UO9Y6I_hD67IdcI%26Ujd%3DlpxBXLmiKWMPRwUsLpu8cZ%26hj%3DaR9UU_hI-q5_UjP.W7U\u003c/code\u003e\u003cbr\u003e\nWhen this get-parameter is url-decoded, the follwing \u0026quot;sub\u0026quot;get-parameter are visible: \u003ccode\u003ez8A\u003c/code\u003e, \u003ccode\u003eUjd\u003c/code\u003e, \u003ccode\u003ehj\u003c/code\u003e.\u003cbr\u003e\nThe vulnerable parameter is  \u003ccode\u003ehj\u003c/code\u003e, which is usually encrypted and reflected as the filename to be downloaded.\u003c/p\u003e\n\n\u003cp\u003eThe parameter is encoded using ecb-encryption with a blocksize of 32 characters-\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve mapped the chracters using requests like this \u0026#39;aaaaaaaaaa...\u0026#39;(32 characters) and the server responded with: \u0026#39;aTYUYTSaTZUYVZTaUZVYWWXTZVYXUTZS\u0026#39;.\u003cbr\u003e\nNow when I want to insert a \u0026#39;T\u0026#39; at position 2 of the block I knew I had to use the charcter \u0026#39;a\u0026#39;.\u003c/p\u003e\n\n\u003cp\u003eThis way I was able to craft encrypted strings on the fly (see \u003ccode\u003eSteps to reproduce and my attached poc\u003c/code\u003e) which were decrypted by the server and directly used to load the file from the filesystem.\u003c/p\u003e\n\n\u003cp\u003eSince the webserver used to serve the files is running as \u003ccode\u003eroot\u003c/code\u003e, I was able to actually read not just the usal \u003ccode\u003e/etc/passwd\u003c/code\u003e but \u003ccode\u003e/etc/shadow\u003c/code\u003e.  Unfortunately, I was not able to get code execution on the server, but given enough time an attacker could quite surely exfiltrate enough informaton from the system (since the server is running as \u003ccode\u003eroot\u003c/code\u003e) to perform remote code execution.\u003c/p\u003e\n\n\u003cp\u003eSteps to reproduce:\u003cbr\u003e\ngot to \u003ca title=\"https://brandtoolkit.yahoo.com/\" href=\"/redirect?url=https%3A%2F%2Fbrandtoolkit.yahoo.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://brandtoolkit.yahoo.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and request a download for any file\u003cbr\u003e\nthe download popup should appear, take the url and save it for later\u003c/p\u003e\n\n\u003cp\u003eUse my poc to encrypt the following string: \u003ccode\u003e/../../../../../../../../etc/passwd\u003c/code\u003e, or use this already encrypted string \u003ccode\u003e/../../../../../../../../79d/zGcIwd\u003c/code\u003e\u003cbr\u003e\n(Please note that this poc is writen with node-js in mind, but the function \u003ccode\u003eecnrypt\u003c/code\u003e should run in any other js-environment as long as you copy the \u003ccode\u003eblocks\u003c/code\u003e object with it)\u003cbr\u003e\nreplace the string after \u003ccode\u003ehj%3D\u003c/code\u003e with the encrypted string in the saved  download-url \u003cbr\u003e\nafter executing the \u0026quot;download\u0026quot; you will see the contents of  \u003ccode\u003e/etc/passwd\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSince I don\u0026#39;t want to post any critical information that could be used after the vulnerability has been fixed I\u0026#39;m not attaching the \u003ccode\u003e/etc/passwd\u003c/code\u003e file, but I\u0026#39;m going to give you the length of the file, which is 610. This way you can probably more quickly verify this vulnerability.\u003c/p\u003e\n"}]}