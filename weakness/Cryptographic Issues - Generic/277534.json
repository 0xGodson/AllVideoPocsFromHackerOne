{"id":277534,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzc1MzQ=","url":"https://hackerone.com/reports/277534","title":"Timing Attack in Google Authenticator - Per User Prompt","state":"Closed","substate":"informative","severity_rating":"high","readable_substate":"Informative","created_at":"2017-10-16T01:06:52.286Z","submitted_at":"2017-10-16T01:06:52.286Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"whitehatter","url":"/whitehatter","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/077/358/2c8b65e6a1929dcd9bd6a214857909ea5d127f88_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":162,"url":"https://hackerone.com/iandunn-projects","handle":"iandunn-projects","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ian Dunn","twitter_handle":"","website":"","about":"I'm a WordPress developer who maintains several small open source projects."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-10-29T00:35:04.682Z","bug_reporter_agreed_on_going_public_at":"2017-10-29T00:35:04.543Z","team_member_agreed_on_going_public_at":"2017-10-28T18:44:22.699Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"*Google Authenticator - Per User Prompt* contains a timing attack vulnerability in how it validates the application password for a user account.\n\n```\nif ( sha1( $attempted_password_plaintext ) === $valid_password_hash || wp_check_password( $attempted_password_plaintext, $valid_password_hash ) ) {\n\t$this-\u003eis_using_application_password = true;\n\treturn $user;\n}\n```\n__wp-content/plugins/google-authenticator-per-user-prompt/google-authenticator-per-user-prompt.php__\n\nAs the above code runs on the `authenticate` hook, and uses a strict equality check, it's possible to brute force an application password using a timing attack and gain access to the account, without needing the real password or even a valid OTP token.\n\nThe plugin adds two `authenticate` hooks, one for the above app password check, then a second that does the OTP validation stuff, but *only* if the not using an app password. This means that we only need the app password to login, which we can brute force via timing attack.\n\n```\nif ( 'enabled' == trim( get_user_option( 'googleauthenticator_enabled', $user-\u003eID ) ) \u0026\u0026 ! $this-\u003eis_using_application_password ) {\n    // ... OTP stuff\n}\n```\n\nThe correct way to check the app password is to use `hash_equals()`, which is safe from timing attacks - https://secure.php.net/manual/en/function.hash-equals.php\n\nExample:\n\n```\nif ( hash_equals( sha1( $attempted_password_plaintext ), $valid_password_hash ) || ... {\n```\n\nIt's worth noting that `hash_equals()` is already in use in `Google_Authenticator_Per_User_Prompt::verify_login_nonce()`.\n\nAll accounts that have an app password enabled (which is not by default) are vulnerable to takeover using this method.","vulnerability_information_html":"\u003cp\u003e\u003cem\u003eGoogle Authenticator - Per User Prompt\u003c/em\u003e contains a timing attack vulnerability in how it validates the application password for a user account.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eif ( sha1( $attempted_password_plaintext ) === $valid_password_hash || wp_check_password( $attempted_password_plaintext, $valid_password_hash ) ) {\n    $this-\u0026gt;is_using_application_password = true;\n    return $user;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003ewp-content/plugins/google-authenticator-per-user-prompt/google-authenticator-per-user-prompt.php\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAs the above code runs on the \u003ccode\u003eauthenticate\u003c/code\u003e hook, and uses a strict equality check, it\u0026#39;s possible to brute force an application password using a timing attack and gain access to the account, without needing the real password or even a valid OTP token.\u003c/p\u003e\n\n\u003cp\u003eThe plugin adds two \u003ccode\u003eauthenticate\u003c/code\u003e hooks, one for the above app password check, then a second that does the OTP validation stuff, but \u003cem\u003eonly\u003c/em\u003e if the not using an app password. This means that we only need the app password to login, which we can brute force via timing attack.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eif ( \u0026#39;enabled\u0026#39; == trim( get_user_option( \u0026#39;googleauthenticator_enabled\u0026#39;, $user-\u0026gt;ID ) ) \u0026amp;\u0026amp; ! $this-\u0026gt;is_using_application_password ) {\n    // ... OTP stuff\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe correct way to check the app password is to use \u003ccode\u003ehash_equals()\u003c/code\u003e, which is safe from timing attacks - \u003ca title=\"https://secure.php.net/manual/en/function.hash-equals.php\" href=\"/redirect?url=https%3A%2F%2Fsecure.php.net%2Fmanual%2Fen%2Ffunction.hash-equals.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://secure.php.net/manual/en/function.hash-equals.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eif ( hash_equals( sha1( $attempted_password_plaintext ), $valid_password_hash ) || ... {\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt\u0026#39;s worth noting that \u003ccode\u003ehash_equals()\u003c/code\u003e is already in use in \u003ccode\u003eGoogle_Authenticator_Per_User_Prompt::verify_login_nonce()\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAll accounts that have an app password enabled (which is not by default) are vulnerable to takeover using this method.\u003c/p\u003e\n","bounty_amount":"25.0","formatted_bounty":"$25","weakness":{"id":32,"name":"Cryptographic Issues - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":6,"voters":["whitehatter","eveeez","khizer47","mr_r3boot","tantrix10","b4155f7c29acd42c27d007a"],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":2357,"asset_type":"SOURCE_CODE","asset_identifier":"https://profiles.wordpress.org/iandunn#content-plugins","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2067611,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Hey, thanks for the report. I patched that awhile back in [1467124-plugins](https://plugins.trac.wordpress.org/changeset/1467124/), but consider it general hardening rather than an active vulnerability, so I  haven't released a new minor version yet. Using application passwords is uncommon, and timing attacks are difficult to execute.\n\nI don't have any features or fixes planning for the future, though, so I'll go ahead and push out a release now, just to be safe.","markdown_message":"\u003cp\u003eHey, thanks for the report. I patched that awhile back in \u003ca href=\"/redirect?url=https%3A%2F%2Fplugins.trac.wordpress.org%2Fchangeset%2F1467124%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e1467124-plugins\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, but consider it general hardening rather than an active vulnerability, so I  haven\u0026#39;t released a new minor version yet. Using application passwords is uncommon, and timing attacks are difficult to execute.\u003c/p\u003e\n\n\u003cp\u003eI don\u0026#39;t have any features or fixes planning for the future, though, so I\u0026#39;ll go ahead and push out a release now, just to be safe.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T02:17:24.963Z","updated_at":"2017-10-16T02:17:24.963Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2067952,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah cool - glad it has a fix in the works.","markdown_message":"\u003cp\u003eAh cool - glad it has a fix in the works.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T02:59:03.798Z","updated_at":"2017-10-16T02:59:03.798Z","actor":{"username":"whitehatter","cleared":true,"url":"/whitehatter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/077/358/2c8b65e6a1929dcd9bd6a214857909ea5d127f88_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2067992,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"[`0.7` is available now](https://wordpress.org/plugins/google-authenticator-per-user-prompt/), which includes the patch for this. Thanks for prompting me to push out the fix that was in `trunk` to a formal release.","markdown_message":"\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fplugins%2Fgoogle-authenticator-per-user-prompt%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003e0.7\u003c/code\u003e is available now\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, which includes the patch for this. Thanks for prompting me to push out the fix that was in \u003ccode\u003etrunk\u003c/code\u003e to a formal release.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T03:19:58.325Z","updated_at":"2017-10-16T03:19:58.325Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2067995,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Technically this was already fixed, but it hadn't been pushed out yet, so getting this report was still helpful to remind me to do that. Thanks!","markdown_message":"\u003cp\u003eTechnically this was already fixed, but it hadn\u0026#39;t been pushed out yet, so getting this report was still helpful to remind me to do that. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T03:21:18.891Z","updated_at":"2017-10-16T03:21:18.891Z","actor":{"url":"/iandunn-projects","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ian Dunn"}},"bounty_amount":"25.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"iandunn-projects","collaborator":{"username":"whitehatter","url":"/whitehatter"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2068000,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the fix and for the bounty!","markdown_message":"\u003cp\u003eThanks for the fix and for the bounty!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-16T03:26:12.501Z","updated_at":"2017-10-16T03:26:12.501Z","actor":{"username":"whitehatter","cleared":true,"url":"/whitehatter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/077/358/2c8b65e6a1929dcd9bd6a214857909ea5d127f88_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2101960,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-25T15:32:12.879Z","updated_at":"2017-10-25T15:32:12.879Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"old_scope":"None","new_scope":"https://profiles.wordpress.org/iandunn#content-plugins","genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2110483,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-28T18:44:22.780Z","updated_at":"2017-10-28T18:44:22.780Z","first_to_agree":true,"actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2110848,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-29T00:35:04.595Z","updated_at":"2017-10-29T00:35:04.595Z","actor":{"username":"whitehatter","cleared":true,"url":"/whitehatter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/077/358/2c8b65e6a1929dcd9bd6a214857909ea5d127f88_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2110849,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-29T00:35:04.734Z","updated_at":"2017-10-29T00:35:04.734Z","actor":{"username":"whitehatter","cleared":true,"url":"/whitehatter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/077/358/2c8b65e6a1929dcd9bd6a214857909ea5d127f88_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}