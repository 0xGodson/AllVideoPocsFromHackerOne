{"id":163338,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjMzMzg=","url":"https://hackerone.com/reports/163338","title":"\\OCA\\DAV\\CardDAV\\ImageExportPlugin allows serving arbitrary data with user-defined or empty mimetype","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2016-08-25T13:26:40.644Z","submitted_at":"2016-08-25T13:26:40.644Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"lukasreschke","url":"/lukasreschke","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13291,"url":"https://hackerone.com/nextcloud","handle":"nextcloud","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Nextcloud","twitter_handle":"nextclouders","website":"https://nextcloud.com","about":"Access, share and protect your files, calendars, contacts, communication \u0026 more at home and in your enterprise."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2016-9465"],"singular_disclosure_disabled":false,"disclosed_at":"2016-12-03T21:59:28.846Z","bug_reporter_agreed_on_going_public_at":"2016-11-03T21:59:15.769Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The SabreDAV plugin `\\OCA\\DAV\\CardDAV\\ImageExportPlugin` is used for displaying pictures of a VCF. It registers on a GET request on a CardDAV element and acts when the query parameter `photo` is sent.\n\nThe logic can be seen below:\n```\n/**\n * Intercepts GET requests on addressbook urls ending with ?photo.\n *\n * @param RequestInterface $request\n * @param ResponseInterface $response\n * @return bool|void\n */\nfunction httpGet(RequestInterface $request, ResponseInterface $response) {\n\n\t$queryParams = $request-\u003egetQueryParameters();\n\t// TODO: in addition to photo we should also add logo some point in time\n\tif (!array_key_exists('photo', $queryParams)) {\n\t\treturn true;\n\t}\n\n\t$path = $request-\u003egetPath();\n\t$node = $this-\u003eserver-\u003etree-\u003egetNodeForPath($path);\n\n\tif (!($node instanceof Card)) {\n\t\treturn true;\n\t}\n\n\t$this-\u003eserver-\u003etransactionType = 'carddav-image-export';\n\n\t// Checking ACL, if available.\n\tif ($aclPlugin = $this-\u003eserver-\u003egetPlugin('acl')) {\n\t\t/** @var \\Sabre\\DAVACL\\Plugin $aclPlugin */\n\t\t$aclPlugin-\u003echeckPrivileges($path, '{DAV:}read');\n\t}\n\n\tif ($result = $this-\u003egetPhoto($node)) {\n\t\t$response-\u003esetHeader('Content-Type', $result['Content-Type']);\n\t\t$response-\u003esetStatus(200);\n\n\t\t$response-\u003esetBody($result['body']);\n\n\t\t// Returning false to break the event chain\n\t\treturn false;\n\t}\n\treturn true;\n}\n```\n\nAs can be seen the the content-type is read from `$this-\u003egetPhoto($node)` as well as the body, looking at it's implementation shows that the data is directly read from the vCard:\n\n```\nfunction getPhoto(Card $node) {\n\t// TODO: this is kind of expensive - load carddav data from database and parse it\n\t//       we might want to build up a cache one day\n\ttry {\n\t\t$vObject = $this-\u003ereadCard($node-\u003eget());\n\t\tif (!$vObject-\u003ePHOTO) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$photo = $vObject-\u003ePHOTO;\n\t\t$type = $this-\u003egetType($photo);\n\n\t\t$val = $photo-\u003egetValue();\n\t\tif ($photo-\u003egetValueType() === 'URI') {\n\t\t\t$parsed = \\Sabre\\URI\\parse($val);\n\t\t\t//only allow data://\n\t\t\tif ($parsed['scheme'] !== 'data') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (substr_count($parsed['path'], ';') === 1) {\n\t\t\t\tlist($type,) = explode(';', $parsed['path']);\n\t\t\t}\n\t\t\t$val = file_get_contents($val);\n\t\t}\n\t\treturn [\n\t\t\t'Content-Type' =\u003e $type,\n\t\t\t'body' =\u003e $val\n\t\t];\n\t} catch(\\Exception $ex) {\n\t\t$this-\u003elogger-\u003elogException($ex);\n\t}\n\treturn false;\n}\n```\n\nThis means if somebody uploads a VCF with the following content this will deliver the content `\u003chtml\u003e\u003cfont color=\"red\"\u003etest\u003c/font\u003e\u003c/html\u003e` with an empty Content-Type. The photo is a base64 encoding of before mentioned string.\n\n```\nBEGIN:VCARD\nVERSION:3.0\nFN:test\nUID:5cf6e5e2-ec37-4798-abb7-3c261eda92c9\nPHOTO;ENCODING=b:PGh0bWw+PGZvbnQgY29sb3I9InJlZCI+dGVzdDwvZm9udD48L2h0bWw+\nEND:VCARD\n```\n\nThen it's sufficient to just access http://10.211.55.7/stable9/remote.php/dav/addressbooks/users/admin/contacts/5cf6e5e2-ec37-4798-abb7-3c261eda92c9.vcf?photo, the easiest to reproduce this is by enabling `debug` mode and using Internet Explorer since we employ CSP which largely mitigates the issue.\n\nAs another remark, we should replace the `file_get_contents` with another implementation. This seems currently like a too risky implementation for me.\n\n{F114833}","vulnerability_information_html":"\u003cp\u003eThe SabreDAV plugin \u003ccode\u003e\\OCA\\DAV\\CardDAV\\ImageExportPlugin\u003c/code\u003e is used for displaying pictures of a VCF. It registers on a GET request on a CardDAV element and acts when the query parameter \u003ccode\u003ephoto\u003c/code\u003e is sent.\u003c/p\u003e\n\n\u003cp\u003eThe logic can be seen below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/**\n * Intercepts GET requests on addressbook urls ending with ?photo.\n *\n * @param RequestInterface $request\n * @param ResponseInterface $response\n * @return bool|void\n */\nfunction httpGet(RequestInterface $request, ResponseInterface $response) {\n\n    $queryParams = $request-\u0026gt;getQueryParameters();\n    // TODO: in addition to photo we should also add logo some point in time\n    if (!array_key_exists(\u0026#39;photo\u0026#39;, $queryParams)) {\n        return true;\n    }\n\n    $path = $request-\u0026gt;getPath();\n    $node = $this-\u0026gt;server-\u0026gt;tree-\u0026gt;getNodeForPath($path);\n\n    if (!($node instanceof Card)) {\n        return true;\n    }\n\n    $this-\u0026gt;server-\u0026gt;transactionType = \u0026#39;carddav-image-export\u0026#39;;\n\n    // Checking ACL, if available.\n    if ($aclPlugin = $this-\u0026gt;server-\u0026gt;getPlugin(\u0026#39;acl\u0026#39;)) {\n        /** @var \\Sabre\\DAVACL\\Plugin $aclPlugin */\n        $aclPlugin-\u0026gt;checkPrivileges($path, \u0026#39;{DAV:}read\u0026#39;);\n    }\n\n    if ($result = $this-\u0026gt;getPhoto($node)) {\n        $response-\u0026gt;setHeader(\u0026#39;Content-Type\u0026#39;, $result[\u0026#39;Content-Type\u0026#39;]);\n        $response-\u0026gt;setStatus(200);\n\n        $response-\u0026gt;setBody($result[\u0026#39;body\u0026#39;]);\n\n        // Returning false to break the event chain\n        return false;\n    }\n    return true;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs can be seen the the content-type is read from \u003ccode\u003e$this-\u0026gt;getPhoto($node)\u003c/code\u003e as well as the body, looking at it\u0026#39;s implementation shows that the data is directly read from the vCard:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction getPhoto(Card $node) {\n    // TODO: this is kind of expensive - load carddav data from database and parse it\n    //       we might want to build up a cache one day\n    try {\n        $vObject = $this-\u0026gt;readCard($node-\u0026gt;get());\n        if (!$vObject-\u0026gt;PHOTO) {\n            return false;\n        }\n\n        $photo = $vObject-\u0026gt;PHOTO;\n        $type = $this-\u0026gt;getType($photo);\n\n        $val = $photo-\u0026gt;getValue();\n        if ($photo-\u0026gt;getValueType() === \u0026#39;URI\u0026#39;) {\n            $parsed = \\Sabre\\URI\\parse($val);\n            //only allow data://\n            if ($parsed[\u0026#39;scheme\u0026#39;] !== \u0026#39;data\u0026#39;) {\n                return false;\n            }\n            if (substr_count($parsed[\u0026#39;path\u0026#39;], \u0026#39;;\u0026#39;) === 1) {\n                list($type,) = explode(\u0026#39;;\u0026#39;, $parsed[\u0026#39;path\u0026#39;]);\n            }\n            $val = file_get_contents($val);\n        }\n        return [\n            \u0026#39;Content-Type\u0026#39; =\u0026gt; $type,\n            \u0026#39;body\u0026#39; =\u0026gt; $val\n        ];\n    } catch(\\Exception $ex) {\n        $this-\u0026gt;logger-\u0026gt;logException($ex);\n    }\n    return false;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means if somebody uploads a VCF with the following content this will deliver the content \u003ccode\u003e\u0026lt;html\u0026gt;\u0026lt;font color=\u0026quot;red\u0026quot;\u0026gt;test\u0026lt;/font\u0026gt;\u0026lt;/html\u0026gt;\u003c/code\u003e with an empty Content-Type. The photo is a base64 encoding of before mentioned string.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eBEGIN:VCARD\nVERSION:3.0\nFN:test\nUID:5cf6e5e2-ec37-4798-abb7-3c261eda92c9\nPHOTO;ENCODING=b:PGh0bWw+PGZvbnQgY29sb3I9InJlZCI+dGVzdDwvZm9udD48L2h0bWw+\nEND:VCARD\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen it\u0026#39;s sufficient to just access \u003ca title=\"http://10.211.55.7/stable9/remote.php/dav/addressbooks/users/admin/contacts/5cf6e5e2-ec37-4798-abb7-3c261eda92c9.vcf?photo\" href=\"/redirect?url=http%3A%2F%2F10.211.55.7%2Fstable9%2Fremote.php%2Fdav%2Faddressbooks%2Fusers%2Fadmin%2Fcontacts%2F5cf6e5e2-ec37-4798-abb7-3c261eda92c9.vcf%3Fphoto\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://10.211.55.7/stable9/remote.php/dav/addressbooks/users/admin/contacts/5cf6e5e2-ec37-4798-abb7-3c261eda92c9.vcf?photo\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, the easiest to reproduce this is by enabling \u003ccode\u003edebug\u003c/code\u003e mode and using Internet Explorer since we employ CSP which largely mitigates the issue.\u003c/p\u003e\n\n\u003cp\u003eAs another remark, we should replace the \u003ccode\u003efile_get_contents\u003c/code\u003e with another implementation. This seems currently like a too risky implementation for me.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2016-08-25_15-26-06.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/114/833/4aa3fbc2c1e64d92e8781dae48f5740964b607ea/2016-08-25_15-26-06.png?response-content-disposition=attachment%3B%20filename%3D%222016-08-25_15-26-06.png%22%3B%20filename%2A%3DUTF-8%27%272016-08-25_15-26-06.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ2QYQVMVU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043742Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQC3%2FsiyUovDMMRPwfmXSSMky3lQNd33wh1MrBmbWJC8HQIhAOSX92QvRr3Mllw0zHuI%2FUP9sF%2FDNWps6wYRKsfiEgbIKrQDCFEQARoMMDEzNjE5Mjc0ODQ5IgyayWzpgkc86ZJmRDMqkQNBHcx9TN8Qq3EOCDOHxZVSoo84ar5w931vjsPd%2BYQ3i%2Bx9eqo2ZtgVN1Jmoq8zs6hsL0mQ%2F20wJFKZixbR7HjPc8i4juMIQlnM8TPeS1SJgwLfpmO12sSyoWk3fn%2BevsZ74MOTjvipPhl7l4ysY7gvLSMb%2F%2FbZmlTb%2BRp9ew5nOoiXNI8oQZMkhOihsn1Q92Wzljmz7rLHf0SWhEVdMvtgNqYyJz%2FGfq5QgT7Ex9q0a8OeRuv2WivmkS0ItLzdLr4AZp8G9M8TS3hFKV7sBxW2jeQmBIgcwsfh6l5Kj2o1EeFByIjeAOeU8CtQvJjf1AYwsXig5iiWG1PDqO74ZMYim9a1AVJfIRMHELC9hgi%2BNRVkqsPBurY%2BhFIchB3A6MS0Fup9FcpwDiSPwMu92UsjrPwWcQSy7wF8W7uVHoWmYKo2Jie7uXX2WbkNvQn%2BVJkd%2ByJui6LuEsoOf46y4OUr9by1ZfOQEMvwaiEcDXAKt7msARgVRUaigRb1ZF8hYom2qPLbi%2BKKBIE%2FJ21mcK79gjDj36n%2FBTrqAbyLw6dOEWEdRc%2BQghV%2BGs0mxf6YcBEQ0xaDSLE5OQXQJX90aqhTYFzi15%2BtXM5rF%2FkTq%2FNonb0szkAGwKve9Fh2LyQ%2F7WBSh9XEjPVQ%2B94j5PqLLrVbqfO7RsbRpSefivNmepJrQv52y49fC1tTXoR893JVWe1bnDoXfPRtykz2CLE1WIUrJm7g0MwlQ4%2FYhjLC7FTb6WIejkEPZ0nJdYi90iaGNGoKuvlj2kpGsqCTPjBW8Vhu9R9qXAbPR%2Bj24hpsPhyGFzBe%2F1%2BqYcze%2B4BoEFO8hgcUAqm5L0zeqYMYIdqkfREAB0cTeQ%3D%3D\u0026amp;X-Amz-Signature=668b477467c75c0a346a45b770c2b01ae2ae5303011165c4222867994b2665aa\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/114/833/4aa3fbc2c1e64d92e8781dae48f5740964b607ea/2016-08-25_15-26-06.png?response-content-disposition=attachment%3B%20filename%3D%222016-08-25_15-26-06.png%22%3B%20filename%2A%3DUTF-8%27%272016-08-25_15-26-06.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ2QYQVMVU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043742Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQC3%2FsiyUovDMMRPwfmXSSMky3lQNd33wh1MrBmbWJC8HQIhAOSX92QvRr3Mllw0zHuI%2FUP9sF%2FDNWps6wYRKsfiEgbIKrQDCFEQARoMMDEzNjE5Mjc0ODQ5IgyayWzpgkc86ZJmRDMqkQNBHcx9TN8Qq3EOCDOHxZVSoo84ar5w931vjsPd%2BYQ3i%2Bx9eqo2ZtgVN1Jmoq8zs6hsL0mQ%2F20wJFKZixbR7HjPc8i4juMIQlnM8TPeS1SJgwLfpmO12sSyoWk3fn%2BevsZ74MOTjvipPhl7l4ysY7gvLSMb%2F%2FbZmlTb%2BRp9ew5nOoiXNI8oQZMkhOihsn1Q92Wzljmz7rLHf0SWhEVdMvtgNqYyJz%2FGfq5QgT7Ex9q0a8OeRuv2WivmkS0ItLzdLr4AZp8G9M8TS3hFKV7sBxW2jeQmBIgcwsfh6l5Kj2o1EeFByIjeAOeU8CtQvJjf1AYwsXig5iiWG1PDqO74ZMYim9a1AVJfIRMHELC9hgi%2BNRVkqsPBurY%2BhFIchB3A6MS0Fup9FcpwDiSPwMu92UsjrPwWcQSy7wF8W7uVHoWmYKo2Jie7uXX2WbkNvQn%2BVJkd%2ByJui6LuEsoOf46y4OUr9by1ZfOQEMvwaiEcDXAKt7msARgVRUaigRb1ZF8hYom2qPLbi%2BKKBIE%2FJ21mcK79gjDj36n%2FBTrqAbyLw6dOEWEdRc%2BQghV%2BGs0mxf6YcBEQ0xaDSLE5OQXQJX90aqhTYFzi15%2BtXM5rF%2FkTq%2FNonb0szkAGwKve9Fh2LyQ%2F7WBSh9XEjPVQ%2B94j5PqLLrVbqfO7RsbRpSefivNmepJrQv52y49fC1tTXoR893JVWe1bnDoXfPRtykz2CLE1WIUrJm7g0MwlQ4%2FYhjLC7FTb6WIejkEPZ0nJdYi90iaGNGoKuvlj2kpGsqCTPjBW8Vhu9R9qXAbPR%2Bj24hpsPhyGFzBe%2F1%2BqYcze%2B4BoEFO8hgcUAqm5L0zeqYMYIdqkfREAB0cTeQ%3D%3D\u0026amp;X-Amz-Signature=668b477467c75c0a346a45b770c2b01ae2ae5303011165c4222867994b2665aa\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":114833,"file_name":"2016-08-25_15-26-06.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/114/833/4aa3fbc2c1e64d92e8781dae48f5740964b607ea/2016-08-25_15-26-06.png?response-content-disposition=attachment%3B%20filename%3D%222016-08-25_15-26-06.png%22%3B%20filename%2A%3DUTF-8%27%272016-08-25_15-26-06.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ2QYQVMVU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043742Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQC3%2FsiyUovDMMRPwfmXSSMky3lQNd33wh1MrBmbWJC8HQIhAOSX92QvRr3Mllw0zHuI%2FUP9sF%2FDNWps6wYRKsfiEgbIKrQDCFEQARoMMDEzNjE5Mjc0ODQ5IgyayWzpgkc86ZJmRDMqkQNBHcx9TN8Qq3EOCDOHxZVSoo84ar5w931vjsPd%2BYQ3i%2Bx9eqo2ZtgVN1Jmoq8zs6hsL0mQ%2F20wJFKZixbR7HjPc8i4juMIQlnM8TPeS1SJgwLfpmO12sSyoWk3fn%2BevsZ74MOTjvipPhl7l4ysY7gvLSMb%2F%2FbZmlTb%2BRp9ew5nOoiXNI8oQZMkhOihsn1Q92Wzljmz7rLHf0SWhEVdMvtgNqYyJz%2FGfq5QgT7Ex9q0a8OeRuv2WivmkS0ItLzdLr4AZp8G9M8TS3hFKV7sBxW2jeQmBIgcwsfh6l5Kj2o1EeFByIjeAOeU8CtQvJjf1AYwsXig5iiWG1PDqO74ZMYim9a1AVJfIRMHELC9hgi%2BNRVkqsPBurY%2BhFIchB3A6MS0Fup9FcpwDiSPwMu92UsjrPwWcQSy7wF8W7uVHoWmYKo2Jie7uXX2WbkNvQn%2BVJkd%2ByJui6LuEsoOf46y4OUr9by1ZfOQEMvwaiEcDXAKt7msARgVRUaigRb1ZF8hYom2qPLbi%2BKKBIE%2FJ21mcK79gjDj36n%2FBTrqAbyLw6dOEWEdRc%2BQghV%2BGs0mxf6YcBEQ0xaDSLE5OQXQJX90aqhTYFzi15%2BtXM5rF%2FkTq%2FNonb0szkAGwKve9Fh2LyQ%2F7WBSh9XEjPVQ%2B94j5PqLLrVbqfO7RsbRpSefivNmepJrQv52y49fC1tTXoR893JVWe1bnDoXfPRtykz2CLE1WIUrJm7g0MwlQ4%2FYhjLC7FTb6WIejkEPZ0nJdYi90iaGNGoKuvlj2kpGsqCTPjBW8Vhu9R9qXAbPR%2Bj24hpsPhyGFzBe%2F1%2BqYcze%2B4BoEFO8hgcUAqm5L0zeqYMYIdqkfREAB0cTeQ%3D%3D\u0026X-Amz-Signature=668b477467c75c0a346a45b770c2b01ae2ae5303011165c4222867994b2665aa","file_size":84417,"type":"image/png"}],"allow_singular_disclosure_at":"2016-12-03T21:59:15.809Z","allow_singular_disclosure_after":-128414307.01175731,"singular_disclosure_allowed":true,"vote_count":9,"voters":["lukasreschke","secator","mpz","kiraak-boy","alfredsaonoy","ishahriyar","demo--hacker","spetr0x","dyabla"],"severity":{"rating":"medium","score":5.4,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"required","scope":"changed","confidentiality":"low","integrity":"low","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1153734,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks a lot for reporting this potential issue back to us!\n\nOur security team will take a look at this issue as soon as possible. We will reply to your report within 72 hours, usually much faster. For obvious reasons we'd like to ask you to not disclose this issue to any other party.","markdown_message":"\u003cp\u003eThanks a lot for reporting this potential issue back to us!\u003c/p\u003e\n\n\u003cp\u003eOur security team will take a look at this issue as soon as possible. We will reply to your report within 72 hours, usually much faster. For obvious reasons we\u0026#39;d like to ask you to not disclose this issue to any other party.\u003c/p\u003e\n","automated_response":true,"created_at":"2016-08-25T13:26:40.835Z","updated_at":"2016-08-25T13:26:40.835Z","actor":{"url":"/nextcloud","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Nextcloud"}},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1153737,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"No reward since this is an internal finding.","markdown_message":"\u003cp\u003eNo reward since this is an internal finding.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-08-25T13:27:03.345Z","updated_at":"2016-08-25T13:27:03.345Z","actor":{"url":"/nextcloud","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Nextcloud"}},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1153738,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"cc @nickvergessen FYI, as discussed in IRC.","markdown_message":"\u003cp\u003ecc \u003ca href=\"/nickvergessen\"\u003e@nickvergessen\u003c/a\u003e FYI, as discussed in IRC.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-08-25T13:27:22.219Z","updated_at":"2016-08-25T13:27:22.219Z","actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1153741,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To fix this we probably should always require one of the following mimetypes:\n\n- JPG\n- PNG\n- GIF\n- TIFF\n\n For parsing data URIs I found http://stackoverflow.com/a/6735480","markdown_message":"\u003cp\u003eTo fix this we probably should always require one of the following mimetypes:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eJPG\u003c/li\u003e\n\u003cli\u003ePNG\u003c/li\u003e\n\u003cli\u003eGIF\u003c/li\u003e\n\u003cli\u003eTIFF\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor parsing data URIs I found \u003ca title=\"http://stackoverflow.com/a/6735480\" href=\"/redirect?url=http%3A%2F%2Fstackoverflow.com%2Fa%2F6735480\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://stackoverflow.com/a/6735480\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-08-25T13:29:14.960Z","updated_at":"2016-08-25T13:29:14.960Z","actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1184191,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Patches:\n\n- master: https://github.com/nextcloud/server/pull/1339\n- stable10: https://github.com/nextcloud/server/pull/1340","markdown_message":"\u003cp\u003ePatches:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emaster: \u003ca title=\"https://github.com/nextcloud/server/pull/1339\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnextcloud%2Fserver%2Fpull%2F1339\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/nextcloud/server/pull/1339\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003estable10: \u003ca title=\"https://github.com/nextcloud/server/pull/1340\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnextcloud%2Fserver%2Fpull%2F1340\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/nextcloud/server/pull/1340\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2016-09-09T10:37:35.253Z","updated_at":"2016-09-09T10:37:35.253Z","actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1239987,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-10-10T12:36:50.164Z","updated_at":"2016-10-10T12:36:50.164Z","additional_data":{"old_severity":null,"new_severity":"Medium (5.4)","old_severity_id":null,"new_severity_id":1271},"actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1239988,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Closing as resolved, no bounty since internal finding.","markdown_message":"\u003cp\u003eClosing as resolved, no bounty since internal finding.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-10T12:37:06.712Z","updated_at":"2016-10-10T12:37:38.555Z","actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"lukasreschke","url":"/lukasreschke"},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1283466,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-03T21:59:15.788Z","updated_at":"2016-11-03T21:59:15.788Z","first_to_agree":true,"actor":{"username":"lukasreschke","cleared":false,"url":"/lukasreschke","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339199,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T21:59:28.862Z","updated_at":"2016-12-03T21:59:28.862Z","actor":{"url":"/nextcloud","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Nextcloud"}},"genius_execution_id":null,"team_handle":"nextcloud","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}