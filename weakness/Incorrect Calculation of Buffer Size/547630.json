{"id":547630,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NDc2MzA=","url":"https://hackerone.com/reports/547630","title":"An integer overflow found in /lib/urlapi.c","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2019-04-24T12:05:35.567Z","submitted_at":"2019-04-24T12:05:35.567Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"1wc","url":"/1wc","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-5435"],"singular_disclosure_disabled":false,"disclosed_at":"2020-12-05T08:36:11.710Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-11-05T08:36:10.841Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\n\nlibcurl contains a heap-based buffer overrun in /lib/urlapi.c. A similiar issue to CVE-2018-14618.\n\n## Steps To Reproduce:\n\n### analysis\n\nI found a potential integer overflow which may lead to a buffer overrun in /curl/lib/urlapi.c. In function `seturl`, urllen was multiplied by 2 and then passed to malloc. So an integer overflow will happen when the url is as long as 2GB in a 32 bit OS. \n\n```c\nstatic CURLUcode seturl(const char *url, CURLU *u, unsigned int flags)\n{\n  char *path;\n  bool path_alloced = FALSE;\n  char *hostname;\n  char *query = NULL;\n  char *fragment = NULL;\n  CURLUcode result;\n  bool url_has_scheme = FALSE;\n  char schemebuf[MAX_SCHEME_LEN];\n  char *schemep = NULL;\n  size_t schemelen = 0;\n  size_t urllen;\n  const struct Curl_handler *h = NULL;\n\n  if(!url)\n    return CURLUE_MALFORMED_INPUT;\n\n  /*************************************************************\n   * Parse the URL.\n   ************************************************************/\n  /* allocate scratch area */\n  urllen = strlen(url);\n  path = u-\u003escratch = malloc(urllen * 2 + 2); \u003c= overflow here\n```\n\nThe url was passed by `parseurl` to `seturl`.\n\n```c\nstatic CURLUcode parseurl(const char *url, CURLU *u, unsigned int flags)\n{\n  CURLUcode result = seturl(url, u, flags);\n  if(result) {\n    free_urlhandle(u);\n    memset(u, 0, sizeof(struct Curl_URL));\n  }\n  return result;\n}\n```\n\nAnd the `parseurl` was called when do `curl_url_set` and execute the parse of url.  If someone use libcurl to code, and call `curl_url_set` with a extreme long url, it might be triggered.\n\n```cÂ \nCURLUcode curl_url_set(CURLU *u, CURLUPart what,\n                       const char *part, unsigned int flags)\n......\ncase CURLUPART_URL: {\n    /*\n     * Allow a new URL to replace the existing (if any) contents.\n     *\n     * If the existing contents is enough for a URL, allow a relative URL to\n     * replace it.\n     */\n    CURLUcode result;\n    char *oldurl;\n    char *redired_url;\n    CURLU *handle2;\n\n    if(Curl_is_absolute_url(part, NULL, MAX_SCHEME_LEN)) {\n      handle2 = curl_url();\n      if(!handle2)\n        return CURLUE_OUT_OF_MEMORY;\n      result = parseurl(part, handle2, flags); \u003c= call parseurl\n      if(!result)\n        mv_urlhandle(handle2, u);\n      else\n        curl_url_cleanup(handle2);\n      return result;\n    }\n```\n\n## Impact\n\nIt might leads to a crash or some other impact.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003elibcurl contains a heap-based buffer overrun in /lib/urlapi.c. A similiar issue to CVE-2018-14618.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003ch3 id=\"analysis\"\u003eanalysis\u003c/h3\u003e\n\n\u003cp\u003eI found a potential integer overflow which may lead to a buffer overrun in /curl/lib/urlapi.c. In function \u003ccode\u003eseturl\u003c/code\u003e, urllen was multiplied by 2 and then passed to malloc. So an integer overflow will happen when the url is as long as 2GB in a 32 bit OS. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLUcode\u003c/span\u003e \u003cspan class=\"nf\"\u003eseturl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLU\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003epath_alloced\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFALSE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efragment\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eCURLUcode\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_has_scheme\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFALSE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eschemebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eMAX_SCHEME_LEN\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eschemep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eschemelen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eurllen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eCurl_handler\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLUE_MALFORMED_INPUT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"cm\"\u003e/*************************************************************\n   * Parse the URL.\n   ************************************************************/\u003c/span\u003e\n  \u003cspan class=\"cm\"\u003e/* allocate scratch area */\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eurllen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003escratch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurllen\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverflow\u003c/span\u003e \u003cspan class=\"n\"\u003ehere\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe url was passed by \u003ccode\u003eparseurl\u003c/code\u003e to \u003ccode\u003eseturl\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLUcode\u003c/span\u003e \u003cspan class=\"nf\"\u003eparseurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLU\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eCURLUcode\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eseturl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efree_urlhandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eCurl_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd the \u003ccode\u003eparseurl\u003c/code\u003e was called when do \u003ccode\u003ecurl_url_set\u003c/code\u003e and execute the parse of url.  If someone use libcurl to code, and call \u003ccode\u003ecurl_url_set\u003c/code\u003e with a extreme long url, it might be triggered.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCURLUcode curl_url_set(CURLU *u, CURLUPart what,\n                       const char *part, unsigned int flags)\n......\ncase CURLUPART_URL: {\n    /*\n     * Allow a new URL to replace the existing (if any) contents.\n     *\n     * If the existing contents is enough for a URL, allow a relative URL to\n     * replace it.\n     */\n    CURLUcode result;\n    char *oldurl;\n    char *redired_url;\n    CURLU *handle2;\n\n    if(Curl_is_absolute_url(part, NULL, MAX_SCHEME_LEN)) {\n      handle2 = curl_url();\n      if(!handle2)\n        return CURLUE_OUT_OF_MEMORY;\n      result = parseurl(part, handle2, flags); \u0026lt;= call parseurl\n      if(!result)\n        mv_urlhandle(handle2, u);\n      else\n        curl_url_cleanup(handle2);\n      return result;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIt might leads to a crash or some other impact.\u003c/p\u003e\n","bounty_amount":"150.0","formatted_bounty":"$150","weakness":{"id":13,"name":"Incorrect Calculation of Buffer Size"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-12-05T08:36:10.926Z","allow_singular_disclosure_after":-2065410.552187846,"singular_disclosure_allowed":true,"vote_count":22,"voters":["sw33tlie","secator","prophet","zeroxyele","mygf","hensis","exploit_db","mrsinister15","h4x0r-dz","l00p3r","and 12 more..."],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4633767,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you. This is indeed a mistake that can lead to badness. We are however already working on this issue separately (along with the `nalloc  *3` further down in the same source code), reported independently already by @dgustafsson.","markdown_message":"\u003cp\u003eThank you. This is indeed a mistake that can lead to badness. We are however already working on this issue separately (along with the \u003ccode\u003enalloc  *3\u003c/code\u003e further down in the same source code), reported independently already by \u003ca href=\"/dgustafsson\"\u003e@dgustafsson\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-24T12:11:12.556Z","updated_at":"2019-04-24T12:11:12.556Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4633785,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You're welcome. I got it.","markdown_message":"\u003cp\u003eYou\u0026#39;re welcome. I got it.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-24T12:16:15.096Z","updated_at":"2019-04-24T12:16:15.096Z","actor":{"username":"1wc","cleared":false,"url":"/1wc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4634049,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Still, the title, description and severity level seems correct!","markdown_message":"\u003cp\u003eStill, the title, description and severity level seems correct!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-24T12:57:27.006Z","updated_at":"2019-04-24T12:57:27.006Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4644634,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @1wc, we've decided that your initial dict finding (that then was deemed not a security issue) was what made this exact issue be found by someone in the security team but only thanks to your initial report and therefore we will give you the credit for this one as well and come up with and offer a reward according to our bounty program.\n\nTaken all this into account, I'd like to present a time schedule that is almost identical to the one previously presented in the dict issue:\n\nThis is a low impact flaw, we don't need to hurry - I want to schedule the publication of this in sync with the pending next release in May 22 2019 (7.65.0).\n\n1. In the coming week or so, write up an advisory draft explaining the flaw. I will do a first version and attach here. Then we can polish the phrasing.\n2. Decide on the patch. I have independently filed a [PR](https://github.com/curl/curl/pull/3805) in the curl project that will fix this issue - but there's no mention of security problems in the current description or patch. If we agree to and land that, or a similar patch, then we let that be the fix. If not, we need to consider a more surgical fix, like @1wc suggested initially.\n3. The security team determines the reward amount for this vulnerability.\n4. Get a CVE issued\n5. At May 22, publish the advisory in association with the 7.65.0 release.\n","markdown_message":"\u003cp\u003eHey \u003ca href=\"/1wc\"\u003e@1wc\u003c/a\u003e, we\u0026#39;ve decided that your initial dict finding (that then was deemed not a security issue) was what made this exact issue be found by someone in the security team but only thanks to your initial report and therefore we will give you the credit for this one as well and come up with and offer a reward according to our bounty program.\u003c/p\u003e\n\n\u003cp\u003eTaken all this into account, I\u0026#39;d like to present a time schedule that is almost identical to the one previously presented in the dict issue:\u003c/p\u003e\n\n\u003cp\u003eThis is a low impact flaw, we don\u0026#39;t need to hurry - I want to schedule the publication of this in sync with the pending next release in May 22 2019 (7.65.0).\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn the coming week or so, write up an advisory draft explaining the flaw. I will do a first version and attach here. Then we can polish the phrasing.\u003c/li\u003e\n\u003cli\u003eDecide on the patch. I have independently filed a \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fpull%2F3805\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePR\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in the curl project that will fix this issue - but there\u0026#39;s no mention of security problems in the current description or patch. If we agree to and land that, or a similar patch, then we let that be the fix. If not, we need to consider a more surgical fix, like \u003ca href=\"/1wc\"\u003e@1wc\u003c/a\u003e suggested initially.\u003c/li\u003e\n\u003cli\u003eThe security team determines the reward amount for this vulnerability.\u003c/li\u003e\n\u003cli\u003eGet a CVE issued\u003c/li\u003e\n\u003cli\u003eAt May 22, publish the advisory in association with the 7.65.0 release.\u003c/li\u003e\n\u003c/ol\u003e\n","automated_response":false,"created_at":"2019-04-25T21:09:47.856Z","updated_at":"2019-04-25T21:11:13.931Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4645558,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much. I still agree with your nice plan and I think this PR is a good patch which can not only fix this issue but also avoid all the potential similar integer overflow. Cause there's no such long string in real world, the patch seems to have  no side effects.","markdown_message":"\u003cp\u003eThank you very much. I still agree with your nice plan and I think this PR is a good patch which can not only fix this issue but also avoid all the potential similar integer overflow. Cause there\u0026#39;s no such long string in real world, the patch seems to have  no side effects.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-26T01:51:20.061Z","updated_at":"2019-04-26T01:51:20.061Z","actor":{"username":"1wc","cleared":false,"url":"/1wc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4670484,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-29T20:58:28.976Z","updated_at":"2019-04-29T20:58:28.976Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4670959,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"PR 3805 has now been merged so practically this issue has been fixed in git already...","markdown_message":"\u003cp\u003ePR 3805 has now been merged so practically this issue has been fixed in git already...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T21:09:37.394Z","updated_at":"2019-04-29T21:09:37.394Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4671075,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"(here's my first advisory draft)\n\nInteger overflows in `curl_url_set()`\n=====================================\n\nProject curl Security Advisory, May 22nd 2019 -\n[Permalink](https://curl.haxx.se/docs/CVE-2019-XXXX.html)\n\nVULNERABILITY\n-------------\n\nlibcurl contains two integer overflows in the `curl_url_set()` function that\nif triggered, can lead to a too small buffer allocation and a subsequent heap\nbuffer overflow.\n\nThe flaws only exist on 32 bit architectures and require excessive string\ninput lengths.\n\nWe are not aware of any exploit of this flaw.\n\nINFO\n----\n\nThere are two entry points to this issue.\n\nBy asking libcurl to parse a string, passing in a string longer than 2GB to\nthis API: `curl_url_set(uh, CURLUPART_URL, \"string\", 0);` triggers the bug.\n\nAsking libcurl to update a URL with a new string, and URL encoded it in the\nprocess, by passing in a string longer than 1.33GB to this API:\n`curl_url_set(uh, CURLUPART_*, \"string\", CURLU_URLENCODE);` triggers the bug.\n\nThis bug was introduced in August 2018 in\n[commit fb30ac5a2d](https://github.com/curl/curl/commit/fb30ac5a2d63773c52).\n\nThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\nCVE-2019-XXXX to this issue.\n\nCWE-131: Incorrect Calculation of Buffer Size\n\nSeverity: 3.7 (Low)\n\nAFFECTED VERSIONS\n-----------------\n\n- Affected versions: libcurl 7.62.0 to and including 7.64.1\n- Not affected versions: libcurl \u003c 7.62.0 and \u003e= libcurl 7.65.0\n\nlibcurl is used by many applications, but not always advertised as such.\n\nTHE SOLUTION\n------------\n\nA [fix for CVE-2019-XXXX](https://github.com/curl/curl/commit/5fc28510a4664f4) is already merged.\n\nRECOMMENDATIONS\n--------------\n\nWe suggest you take one of the following actions immediately, in order of\npreference:\n\n A - Upgrade curl to version 7.65.0\n\n B - Apply the patch to your version and rebuild\n\nTIMELINE\n--------\n\nThe issue was reported to the curl project on April 24, 2019. The patch was\ncommunicated to the reporter on April 25, 2019. We contacted distros@openwall\non May XXX.\n\ncurl 7.65.0 was released on May 22 2019, coordinated with the publication of\nthis advisory.\n\nCREDITS\n-------\n\nReported by Wenchao Li. Patch by Daniel Stenberg\n\nThanks a lot!\n","markdown_message":"\u003cp\u003e(here\u0026#39;s my first advisory draft)\u003c/p\u003e\n\n\u003ch1 id=\"integer-overflows-in-curl_url_set\"\u003eInteger overflows in \u003ccode\u003ecurl_url_set()\u003c/code\u003e\n\u003c/h1\u003e\n\n\u003cp\u003eProject curl Security Advisory, May 22nd 2019 -\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2019-XXXX.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePermalink\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability\"\u003eVULNERABILITY\u003c/h2\u003e\n\n\u003cp\u003elibcurl contains two integer overflows in the \u003ccode\u003ecurl_url_set()\u003c/code\u003e function that\u003cbr\u003e\nif triggered, can lead to a too small buffer allocation and a subsequent heap\u003cbr\u003e\nbuffer overflow.\u003c/p\u003e\n\n\u003cp\u003eThe flaws only exist on 32 bit architectures and require excessive string\u003cbr\u003e\ninput lengths.\u003c/p\u003e\n\n\u003cp\u003eWe are not aware of any exploit of this flaw.\u003c/p\u003e\n\n\u003ch2 id=\"info\"\u003eINFO\u003c/h2\u003e\n\n\u003cp\u003eThere are two entry points to this issue.\u003c/p\u003e\n\n\u003cp\u003eBy asking libcurl to parse a string, passing in a string longer than 2GB to\u003cbr\u003e\nthis API: \u003ccode\u003ecurl_url_set(uh, CURLUPART_URL, \u0026quot;string\u0026quot;, 0);\u003c/code\u003e triggers the bug.\u003c/p\u003e\n\n\u003cp\u003eAsking libcurl to update a URL with a new string, and URL encoded it in the\u003cbr\u003e\nprocess, by passing in a string longer than 1.33GB to this API:\u003cbr\u003e\n\u003ccode\u003ecurl_url_set(uh, CURLUPART_*, \u0026quot;string\u0026quot;, CURLU_URLENCODE);\u003c/code\u003e triggers the bug.\u003c/p\u003e\n\n\u003cp\u003eThis bug was introduced in August 2018 in\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2Ffb30ac5a2d63773c52\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecommit fb30ac5a2d\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\u003cbr\u003e\nCVE-2019-XXXX to this issue.\u003c/p\u003e\n\n\u003cp\u003eCWE-131: Incorrect Calculation of Buffer Size\u003c/p\u003e\n\n\u003cp\u003eSeverity: 3.7 (Low)\u003c/p\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAFFECTED VERSIONS\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAffected versions: libcurl 7.62.0 to and including 7.64.1\u003c/li\u003e\n\u003cli\u003eNot affected versions: libcurl \u0026lt; 7.62.0 and \u0026gt;= libcurl 7.65.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003elibcurl is used by many applications, but not always advertised as such.\u003c/p\u003e\n\n\u003ch2 id=\"the-solution\"\u003eTHE SOLUTION\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2F5fc28510a4664f4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efix for CVE-2019-XXXX\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is already merged.\u003c/p\u003e\n\n\u003ch2 id=\"recommendations\"\u003eRECOMMENDATIONS\u003c/h2\u003e\n\n\u003cp\u003eWe suggest you take one of the following actions immediately, in order of\u003cbr\u003e\npreference:\u003c/p\u003e\n\n\u003cp\u003eA - Upgrade curl to version 7.65.0\u003c/p\u003e\n\n\u003cp\u003eB - Apply the patch to your version and rebuild\u003c/p\u003e\n\n\u003ch2 id=\"timeline\"\u003eTIMELINE\u003c/h2\u003e\n\n\u003cp\u003eThe issue was reported to the curl project on April 24, 2019. The patch was\u003cbr\u003e\ncommunicated to the reporter on April 25, 2019. We contacted distros@openwall\u003cbr\u003e\non May XXX.\u003c/p\u003e\n\n\u003cp\u003ecurl 7.65.0 was released on May 22 2019, coordinated with the publication of\u003cbr\u003e\nthis advisory.\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCREDITS\u003c/h2\u003e\n\n\u003cp\u003eReported by Wenchao Li. Patch by Daniel Stenberg\u003c/p\u003e\n\n\u003cp\u003eThanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-29T21:32:09.324Z","updated_at":"2019-04-29T21:32:09.324Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4678552,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you. I think the description of this advisory  is complete and accurate.","markdown_message":"\u003cp\u003eThank you. I think the description of this advisory  is complete and accurate.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-30T01:57:21.148Z","updated_at":"2019-04-30T01:58:02.320Z","actor":{"username":"1wc","cleared":false,"url":"/1wc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4737145,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've now requested a CVE for this issue.","markdown_message":"\u003cp\u003eI\u0026#39;ve now requested a CVE for this issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-03T20:31:58.464Z","updated_at":"2019-05-03T20:31:58.464Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4741600,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"CVE-2019-5435","markdown_message":"\u003cp\u003eCVE-2019-5435\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-04T11:35:56.842Z","updated_at":"2019-05-04T11:35:56.842Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4742318,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, everything seems very good","markdown_message":"\u003cp\u003eOk, everything seems very good\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-04T14:15:43.849Z","updated_at":"2019-05-04T14:18:13.953Z","actor":{"username":"1wc","cleared":false,"url":"/1wc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4746256,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"The curl security team has decided to reward hacker @1wc with the amount of 150 USD for finding and reporting this issue. Many thanks for your great work!\n","markdown_message":"\u003cp\u003eThe curl security team has decided to reward hacker \u003ca href=\"/1wc\"\u003e@1wc\u003c/a\u003e with the amount of 150 USD for finding and reporting this issue. Many thanks for your great work!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-05T08:43:10.396Z","updated_at":"2019-05-05T08:43:10.396Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"bounty_amount":"150.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"curl","collaborator":{"username":"1wc","url":"/1wc"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4746826,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for rewarding.","markdown_message":"\u003cp\u003eThanks for rewarding.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-05T11:42:19.492Z","updated_at":"2019-05-05T11:42:19.492Z","actor":{"username":"1wc","cleared":false,"url":"/1wc","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/590/931/e6d40b9d1140ec634d712996f2ecdbfe231f62c9_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4905645,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-22T23:12:58.108Z","updated_at":"2019-05-22T23:12:58.108Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"1wc","url":"/1wc"},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9730808,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-05T08:36:10.860Z","updated_at":"2020-11-05T08:36:10.860Z","first_to_agree":true,"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10012152,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-05T08:36:11.748Z","updated_at":"2020-12-05T08:36:11.748Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}