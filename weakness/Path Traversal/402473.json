{"id":402473,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDI0NzM=","url":"https://hackerone.com/reports/402473","title":"Arbitrary File Download as Shopmanager","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2018-08-29T15:43:55.540Z","submitted_at":"2018-08-29T15:43:55.540Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"simonscannell","url":"/simonscannell","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":111,"url":"https://hackerone.com/automattic","handle":"automattic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Automattic","twitter_handle":"","website":"https://automattic.com","about":"WordPress.com, VaultPress, Akismet, Gravatar, WooCommerce, Polldaddy, Tumblr and more!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-12-19T14:23:57.394Z","bug_reporter_agreed_on_going_public_at":"2019-11-19T14:23:55.332Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Due to a flaw in the way WooCommerce handles downloadable products, a shop manager can download arbitrary files on the server.\n\nThe video shows the exploit and how simple it is:\nhttps://www.youtube.com/watch?v=bkrHpqht5SM\n\nThe function responsible for validating the download file input is the following:\n(/woocommerce/includes/abstracts/abstract-wc-product.php)\n```\n\tpublic function set_downloads( $downloads_array ) {\n\t\t$downloads = array();\n\t\t$errors    = array();\n\n\t\tforeach ( $downloads_array as $download ) {\n\t\t\tif ( is_a( $download, 'WC_Product_Download' ) ) {\n\t\t\t\t$download_object = $download;\n\t\t\t} else {\n\t\t\t\t$download_object = new WC_Product_Download();\n\n\t\t\t\t// If we don't have a previous hash, generate UUID for download.\n\t\t\t\tif ( empty( $download['download_id'] ) ) {\n\t\t\t\t\t$download['download_id'] = wp_generate_uuid4();\n\t\t\t\t}\n\n\t\t\t\t$download_object-\u003eset_id( $download['download_id'] );\n\t\t\t\t$download_object-\u003eset_name( $download['name'] );\n\t\t\t\t$download_object-\u003eset_file( $download['file'] );\n\t\t\t}\n\n\t\t\t// Validate the file extension.\n\t\t\tif ( ! $download_object-\u003eis_allowed_filetype() ) {\n\t\t\t\tif ( $this-\u003eget_object_read() ) {\n\t\t\t\t\t/* translators: %1$s: Downloadable file */\n\t\t\t\t\t$errors[] = sprintf( __( 'The downloadable file %1$s cannot be used as it does not have an allowed file type. Allowed types include: %2$s', 'woocommerce' ), '\u003ccode\u003e' . basename( $download_object-\u003eget_file() ) . '\u003c/code\u003e', '\u003ccode\u003e' . implode( ', ', array_keys( $download_object-\u003eget_allowed_mime_types() ) ) . '\u003c/code\u003e' );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Validate the file exists.\n\t\t\tif ( ! $download_object-\u003efile_exists() ) {\n\t\t\t\tif ( $this-\u003eget_object_read() ) {\n\t\t\t\t\t/* translators: %s: Downloadable file */\n\t\t\t\t\t$errors[] = sprintf( __( 'The downloadable file %s cannot be used as it does not exist on the server.', 'woocommerce' ), '\u003ccode\u003e' . $download_object-\u003eget_file() . '\u003c/code\u003e' );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$downloads[ $download_object-\u003eget_id() ] = $download_object;\n\t\t}\n\n\t\tif ( $errors ) {\n\t\t\t$this-\u003eerror( 'product_invalid_download', $errors[0] );\n\t\t}\n\n\t\t$this-\u003eset_prop( 'downloads', $downloads );\n\t}\n```\nWhen I took a look at the function I naturally wanted to see if there was a way to bypass is_allowed_filetype().\n\nThe function does the following:\n\n```\n\tpublic function is_allowed_filetype() {\n\t\tif ( 'relative' !== $this-\u003eget_type_of_file_path() ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn ! $this-\u003eget_file_extension() || in_array( $this-\u003eget_file_type(), $this-\u003eget_allowed_mime_types(), true );\n\t}\n```\nIt will see what type of file path it is (it could be a URL, it could be an absolute path etc.) and interestingly enough it will only validate the file extension if it is a relative path. So of course I wanted to see what would happen if we would enter an absolute path, since then I could bypass the extension check entirely.\n\n```\n\tpublic function get_type_of_file_path( $file_path = '' ) {\n\t\t$file_path = $file_path ? $file_path : $this-\u003eget_file();\n\t\tif ( 0 === strpos( $file_path, 'http' ) || 0 === strpos( $file_path, '//' ) ) {\n\t\t\treturn 'absolute';\n\t\t} elseif ( '[' === substr( $file_path, 0, 1 ) \u0026\u0026 ']' === substr( $file_path, -1 ) ) {\n\t\t\treturn 'shortcode';\n\t\t} else {\n\t\t\treturn 'relative';\n\t\t}\n\t}\n```\n\nAnd I was right. Funny enough, input is only an absolute path if it starts with two slashes. So all I did was  to set the download file to //home/simon/html/wordpress/wp-config.php and then just downloaded it.\n\nAs a patch recommendation: Also check the file types if it is an absolute path.\n\nBest regards,\nSimon\n\n## Impact\n\nWhen an attacker can download the wp-config.php file, a privilege escalation is easily possible. He could either log into the database if the DB host is not localhost or if the WordPress installation is used with a shared hosting provider, he can simply get some hosting space on the same server and then access the database, which leads to a complete compromise of the installation.","vulnerability_information_html":"\u003cp\u003eDue to a flaw in the way WooCommerce handles downloadable products, a shop manager can download arbitrary files on the server.\u003c/p\u003e\n\n\u003cp\u003eThe video shows the exploit and how simple it is:\u003cbr\u003e\n\u003ca title=\"https://www.youtube.com/watch?v=bkrHpqht5SM\" href=\"/redirect?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DbkrHpqht5SM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.youtube.com/watch?v=bkrHpqht5SM\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe function responsible for validating the download file input is the following:\u003cbr\u003e\n(/woocommerce/includes/abstracts/abstract-wc-product.php)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    public function set_downloads( $downloads_array ) {\n        $downloads = array();\n        $errors    = array();\n\n        foreach ( $downloads_array as $download ) {\n            if ( is_a( $download, \u0026#39;WC_Product_Download\u0026#39; ) ) {\n                $download_object = $download;\n            } else {\n                $download_object = new WC_Product_Download();\n\n                // If we don\u0026#39;t have a previous hash, generate UUID for download.\n                if ( empty( $download[\u0026#39;download_id\u0026#39;] ) ) {\n                    $download[\u0026#39;download_id\u0026#39;] = wp_generate_uuid4();\n                }\n\n                $download_object-\u0026gt;set_id( $download[\u0026#39;download_id\u0026#39;] );\n                $download_object-\u0026gt;set_name( $download[\u0026#39;name\u0026#39;] );\n                $download_object-\u0026gt;set_file( $download[\u0026#39;file\u0026#39;] );\n            }\n\n            // Validate the file extension.\n            if ( ! $download_object-\u0026gt;is_allowed_filetype() ) {\n                if ( $this-\u0026gt;get_object_read() ) {\n                    /* translators: %1$s: Downloadable file */\n                    $errors[] = sprintf( __( \u0026#39;The downloadable file %1$s cannot be used as it does not have an allowed file type. Allowed types include: %2$s\u0026#39;, \u0026#39;woocommerce\u0026#39; ), \u0026#39;\u0026lt;code\u0026gt;\u0026#39; . basename( $download_object-\u0026gt;get_file() ) . \u0026#39;\u0026lt;/code\u0026gt;\u0026#39;, \u0026#39;\u0026lt;code\u0026gt;\u0026#39; . implode( \u0026#39;, \u0026#39;, array_keys( $download_object-\u0026gt;get_allowed_mime_types() ) ) . \u0026#39;\u0026lt;/code\u0026gt;\u0026#39; );\n                }\n                continue;\n            }\n\n            // Validate the file exists.\n            if ( ! $download_object-\u0026gt;file_exists() ) {\n                if ( $this-\u0026gt;get_object_read() ) {\n                    /* translators: %s: Downloadable file */\n                    $errors[] = sprintf( __( \u0026#39;The downloadable file %s cannot be used as it does not exist on the server.\u0026#39;, \u0026#39;woocommerce\u0026#39; ), \u0026#39;\u0026lt;code\u0026gt;\u0026#39; . $download_object-\u0026gt;get_file() . \u0026#39;\u0026lt;/code\u0026gt;\u0026#39; );\n                }\n                continue;\n            }\n\n            $downloads[ $download_object-\u0026gt;get_id() ] = $download_object;\n        }\n\n        if ( $errors ) {\n            $this-\u0026gt;error( \u0026#39;product_invalid_download\u0026#39;, $errors[0] );\n        }\n\n        $this-\u0026gt;set_prop( \u0026#39;downloads\u0026#39;, $downloads );\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen I took a look at the function I naturally wanted to see if there was a way to bypass is_allowed_filetype().\u003c/p\u003e\n\n\u003cp\u003eThe function does the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    public function is_allowed_filetype() {\n        if ( \u0026#39;relative\u0026#39; !== $this-\u0026gt;get_type_of_file_path() ) {\n            return true;\n        }\n        return ! $this-\u0026gt;get_file_extension() || in_array( $this-\u0026gt;get_file_type(), $this-\u0026gt;get_allowed_mime_types(), true );\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt will see what type of file path it is (it could be a URL, it could be an absolute path etc.) and interestingly enough it will only validate the file extension if it is a relative path. So of course I wanted to see what would happen if we would enter an absolute path, since then I could bypass the extension check entirely.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    public function get_type_of_file_path( $file_path = \u0026#39;\u0026#39; ) {\n        $file_path = $file_path ? $file_path : $this-\u0026gt;get_file();\n        if ( 0 === strpos( $file_path, \u0026#39;http\u0026#39; ) || 0 === strpos( $file_path, \u0026#39;//\u0026#39; ) ) {\n            return \u0026#39;absolute\u0026#39;;\n        } elseif ( \u0026#39;[\u0026#39; === substr( $file_path, 0, 1 ) \u0026amp;\u0026amp; \u0026#39;]\u0026#39; === substr( $file_path, -1 ) ) {\n            return \u0026#39;shortcode\u0026#39;;\n        } else {\n            return \u0026#39;relative\u0026#39;;\n        }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd I was right. Funny enough, input is only an absolute path if it starts with two slashes. So all I did was  to set the download file to //home/simon/html/wordpress/wp-config.php and then just downloaded it.\u003c/p\u003e\n\n\u003cp\u003eAs a patch recommendation: Also check the file types if it is an absolute path.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSimon\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eWhen an attacker can download the wp-config.php file, a privilege escalation is easily possible. He could either log into the database if the DB host is not localhost or if the WordPress installation is used with a shared hosting provider, he can simply get some hosting space on the same server and then access the database, which leads to a complete compromise of the installation.\u003c/p\u003e\n","bounty_amount":"350.0","formatted_bounty":"$350","weakness":{"id":19,"name":"Path Traversal"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-12-19T14:23:55.421Z","allow_singular_disclosure_after":-32455665.934322536,"singular_disclosure_allowed":true,"vote_count":15,"voters":["mashoud1122","sameerphad72","mygf","realtess","t-4-y-m","cryptographer","clarckowen_","facelessdevhack","mahelsay","r1pp3r_","and 5 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3265179,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the report, we're investigating.","markdown_message":"\u003cp\u003eThanks for the report, we\u0026#39;re investigating.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-29T18:24:37.031Z","updated_at":"2018-08-29T18:24:37.031Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3289645,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have also just realized that it is also possible to simply enter http://localhost/wordpress/wp-config.php?ext=.jpg and download arbitrary files this way. This is because WooCommerce translates URLs that refer to the own domain to local paths and then downloads them.","markdown_message":"\u003cp\u003eI have also just realized that it is also possible to simply enter \u003ca title=\"http://localhost/wordpress/wp-config.php?ext=.jpg\" href=\"/redirect?url=http%3A%2F%2Flocalhost%2Fwordpress%2Fwp-config.php%3Fext%3D.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost/wordpress/wp-config.php?ext=.jpg\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and download arbitrary files this way. This is because WooCommerce translates URLs that refer to the own domain to local paths and then downloads them.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-04T13:34:51.542Z","updated_at":"2018-09-04T13:34:51.542Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3332831,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Simon,\n\nThanks for the follow up! We'll have patches for this issue and others you reported in WC 3.4.6, releasing in a couple weeks.\n\nThanks,\nClaudiu","markdown_message":"\u003cp\u003eHi Simon,\u003c/p\u003e\n\n\u003cp\u003eThanks for the follow up! We\u0026#39;ll have patches for this issue and others you reported in WC 3.4.6, releasing in a couple weeks.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nClaudiu\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-13T14:41:06.688Z","updated_at":"2018-09-13T14:41:06.688Z","actor":{"username":"claudiulodro","cleared":false,"url":"/claudiulodro","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3332842,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @claudiulodro ,\n\nThanks for notifying me. I do have an issue though, I am new to Hackerone. As a security researcher with a new account you only get 6 \"trial reports\". After you have reported 6 bugs, you won't be able to report any more bugs until your first 3 bugs are closed. I currently am stuck in this situation and can't report any further exploits to you. However, I have identified two more vulnerabilities in WooCommerce: An Open Redirect and another Code Execution. If you guys could close the reports I sent you, I can report the other ones too so you can include all of them in the upcoming patch and don't have to issue other ones.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/claudiulodro\"\u003e@claudiulodro\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eThanks for notifying me. I do have an issue though, I am new to Hackerone. As a security researcher with a new account you only get 6 \u0026quot;trial reports\u0026quot;. After you have reported 6 bugs, you won\u0026#39;t be able to report any more bugs until your first 3 bugs are closed. I currently am stuck in this situation and can\u0026#39;t report any further exploits to you. However, I have identified two more vulnerabilities in WooCommerce: An Open Redirect and another Code Execution. If you guys could close the reports I sent you, I can report the other ones too so you can include all of them in the upcoming patch and don\u0026#39;t have to issue other ones.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-13T14:45:15.061Z","updated_at":"2018-09-13T14:45:25.929Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3334051,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @simonscannell, I've contacted our H1 rep and requested that this restriction be removed from your account so that you can report additional issues - I'll keep you updated (and or just close out the existing reports as `Resolved` if they're unable to help) :)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e, I\u0026#39;ve contacted our H1 rep and requested that this restriction be removed from your account so that you can report additional issues - I\u0026#39;ll keep you updated (and or just close out the existing reports as \u003ccode\u003eResolved\u003c/code\u003e if they\u0026#39;re unable to help) :)\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-13T20:10:25.667Z","updated_at":"2018-09-13T20:10:25.667Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3335643,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The report rate limiting restriction should now be removed. Please let us know if there are any issues :)","markdown_message":"\u003cp\u003eThe report rate limiting restriction should now be removed. Please let us know if there are any issues :)\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-14T03:03:50.607Z","updated_at":"2018-09-14T03:03:50.607Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3398965,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Simon,\n\nI've attached an updated version of WooCommerce with patches for these vulnerabilities.\n\nThere are two changes to mitigate the reported vulnerabilities:\n\n1. For download URLs that begin with `//` the correct behavior should always be to treat that as a URL and never to treat that as a path (e.g. for the download URL `//home/simon/html/wordpress/wp-config.php` the user should be taken to `http(s)://home/simon/html/wordpress/wp-config.php` when trying to download the file). This change is on lines 246-253 of `includes/class-wc-download-handler.php`.\n\n2. For absolute URLs to the current site (e.g. `http://localhost/wordpress/wp-config.php`) we've implemented filetype checking just like if the user had input a path. This change is in the updated `WC_Product_Download::is_allowed_filetype` method located in `includes/class-wc-product-download.php`.\n\nIf you see any flaws in either of these approaches please let us know.\n\nThanks!\nClaudiu\n","markdown_message":"\u003cp\u003eHi Simon,\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve attached an updated version of WooCommerce with patches for these vulnerabilities.\u003c/p\u003e\n\n\u003cp\u003eThere are two changes to mitigate the reported vulnerabilities:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eFor download URLs that begin with \u003ccode\u003e//\u003c/code\u003e the correct behavior should always be to treat that as a URL and never to treat that as a path (e.g. for the download URL \u003ccode\u003e//home/simon/html/wordpress/wp-config.php\u003c/code\u003e the user should be taken to \u003ccode\u003ehttp(s)://home/simon/html/wordpress/wp-config.php\u003c/code\u003e when trying to download the file). This change is on lines 246-253 of \u003ccode\u003eincludes/class-wc-download-handler.php\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFor absolute URLs to the current site (e.g. \u003ccode\u003ehttp://localhost/wordpress/wp-config.php\u003c/code\u003e) we\u0026#39;ve implemented filetype checking just like if the user had input a path. This change is in the updated \u003ccode\u003eWC_Product_Download::is_allowed_filetype\u003c/code\u003e method located in \u003ccode\u003eincludes/class-wc-product-download.php\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIf you see any flaws in either of these approaches please let us know.\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003cbr\u003e\nClaudiu\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-27T20:32:39.603Z","updated_at":"2018-09-27T20:32:39.603Z","actor":{"username":"claudiulodro","cleared":false,"url":"/claudiulodro","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":352106,"filename":"woocommerce.zip","type":"application/zip","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/352/106/35ff2e33e2ff818ed52a41699b7b7d1673d4b066/woocommerce.zip?response-content-disposition=attachment%3B%20filename%3D%22woocommerce.zip%22%3B%20filename%2A%3DUTF-8%27%27woocommerce.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQT27VLVF5%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055141Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDyDghanG6vysQhpIAbM6%2FNloTNBCfelRP1BGB1eeXDqQIgbh0u2InfYPRbM%2F0t24amgCOkVvoWkVHPo82TR%2BcSzPAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDG%2B9r1w6aCtbN7N%2FgSqRA8D1stzGXUi9998X9PqljCsxgqGb%2Fp5uwkl6HJ0ecyYUUOvKKK5bmjBmyhHU2siTJ5oMPHjZxACmC8QQR3zoStgvndU2Zk5FbI60XrAqVuUH%2BAK8pT26qvrZcq89M6eB7hRHvO%2BlRluLVtVVrfnC9UY0ATKZRmiYQyw9njaWy8e1cjtpV8uOzRbjAhSciTaQQ4Rof7K88HsyWXiwgfBdP3a0%2F0Eg3oYuiHO02sK0kJaBKVYS07wec5XsHKb5ikjLS61g4AVfdD4E0s3BTqyyWJeUCuyZ2YF95UI2CgkxcN5uOwwloEhHGonUYBlgrAIqXt%2FcecQNzktOM4Kjb30muwbzt0arTqS1XHySraj31WYHm2Cjy8AzyWIgNzu3Fq1xIENb3SovWG27JzCLGUyEU3ScE8nRNwiiydbGzKllImVZY%2BlC%2Bix1yqgNQOGSyxfVhY5J1d45Od%2BL4mUjygcLy%2FfzSKLf2qk3Prr%2BvcoxR9uUbkbtYRAEtizE%2BcIlRuTm3EFnBIvoMHCuplZLf4vZOpMrMLy9qv8FOusBWsgqdyTGkJS5%2BgtM3tHipB468LJZahmRjNSAud9TlniHiRJFpE4feQDaRgu4UD5waPGdkb1Mb3i2BGePA4gRyDu2hwL2UgW1yGpknpSCsy8uyMOhlVuIUyq7t0qBeid6h%2BvKgio2%2B05MKsls9XtVWxBqwW4LqYzc6KBQa0dOAdmkMORLktM2DWUfeoN%2FP12TUiKzRe%2BPGjaA3xBRgCZ2zNYmbNzYsoqOBfPEmbGygz2YZR0LAXBWrVpPc%2FJcYMLT6Jiu%2B2LCo6XyNRnu8YlFqwJ3EhjYkRvFzarUXssQ7cQHuLkop%2BkUTr8Vig%3D%3D\u0026X-Amz-Signature=3fe04dfb46000b688f74a92390d9130127b3dae4243fcca05ed4fa3f4f16ef55"}],"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3413221,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @claudiulodro ,\n\njust had a look and the changes do seem to do the trick. :)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/claudiulodro\"\u003e@claudiulodro\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003ejust had a look and the changes do seem to do the trick. :)\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-01T12:40:55.573Z","updated_at":"2018-10-01T12:40:55.573Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3471862,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Simon,\n\nThis was patched in [WC 3.4.6](https://woocommerce.wordpress.com/2018/10/11/woocommerce-3-4-6-security-fix-release-notes/), released yesterday. Thanks for all your help!\n\nClaudiu","markdown_message":"\u003cp\u003eHi Simon,\u003c/p\u003e\n\n\u003cp\u003eThis was patched in \u003ca href=\"/redirect?url=https%3A%2F%2Fwoocommerce.wordpress.com%2F2018%2F10%2F11%2Fwoocommerce-3-4-6-security-fix-release-notes%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eWC 3.4.6\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, released yesterday. Thanks for all your help!\u003c/p\u003e\n\n\u003cp\u003eClaudiu\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-12T16:59:39.707Z","updated_at":"2018-10-12T16:59:39.707Z","actor":{"username":"claudiulodro","cleared":false,"url":"/claudiulodro","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3478626,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Glad to have helped. :)","markdown_message":"\u003cp\u003eGlad to have helped. :)\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-14T11:59:31.506Z","updated_at":"2018-10-14T11:59:31.506Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3501057,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-10-19T00:18:20.255Z","updated_at":"2018-10-19T00:18:20.255Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"simonscannell","url":"/simonscannell"},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3506113,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-10-19T23:49:36.465Z","updated_at":"2018-10-19T23:49:36.465Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"bounty_amount":"300.0","bounty_currency":"usd","bonus_amount":"50.0","genius_execution_id":null,"team_handle":"automattic","collaborator":{"username":"simonscannell","url":"/simonscannell"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3520139,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much! Was a pleasure working with you.","markdown_message":"\u003cp\u003eThank you very much! Was a pleasure working with you.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-10-23T13:27:29.633Z","updated_at":"2018-10-23T13:27:29.633Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6346149,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-19T14:23:55.364Z","updated_at":"2019-11-19T14:23:55.364Z","first_to_agree":true,"actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6589166,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-19T14:23:57.411Z","updated_at":"2019-12-19T14:23:57.411Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}