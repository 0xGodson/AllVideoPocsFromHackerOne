{"id":187305,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODczMDU=","url":"https://hackerone.com/reports/187305","title":"Invalid handling of zero-length heredoc identifiers leads to infinite loop in the sandbox","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2016-12-01T11:47:43.778Z","submitted_at":"2016-12-01T11:47:43.778Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dkasak","url":"/dkasak","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-01-12T00:37:21.368Z","bug_reporter_agreed_on_going_public_at":"2017-01-12T00:37:21.327Z","team_member_agreed_on_going_public_at":"2017-01-11T21:54:06.985Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Introduction\n============\n\nCertain invalid Ruby programs (which should normally raise a syntax error) are able to cause an infinite loop in MRuby's parser which makes the mruby-engine sandbox (and consequently the MRI process it is running in) unresponsive to SIGTERM. The process begins looping forever and has to be terminated using SIGABRT or SIGKILL. The bug is caused by an improper handling of heredocs with a zero-length identifier.\n\nProof of concept\n================\n\ninfinite_heredoc.rb:\n--------------------\n\n    \u003c\u003c''.a begin\n\n1. Save the above code as `infinite_heredoc.rb`.\n2. Run either:\n   a) `mruby infinite_heredoc.rb`\n   b) `sandbox infinite_heredoc.rb`\n3. Both cause an infinite loop, but b) also leaves the process unresponsive to SIGTERM.\n\nDiscussion\n==========\n\nEverything below assumes the latest master of the mruby repository as of Dec 01th, which is commit `2cca9d368815e9c83a7489c40d69937d68cb43a2`.\n\nThe `\u003c\u003c''`˙in the above POC code is parsed as a heredoc with an empty identifier. The rest of the POC is needed to bring the parser in a state where it is:\n\n   1. Continually searching for the identifier.\n   2. Erroneously thinking it found it, thereby signalling an end of the heredoc by pushing a `tHEREDOC_END` token.\n   3. This token is then invalid for the current parser state, which makes it push an error token.\n   4. Finally, while processing the error, the parser eventually calls `parse_string` again, which brings the process back to step 1, resulting in an infinite loop.\n\nA variation of the bug, using `do` instead of `begin`:\n\ninfinite_heredoc_variation.rb:\n------------------------------\n\n    \u003c\u003c''.a do\n\nAn excerpt from the parser's debug output, demonstrating the above:\n\n    Reading a token: Next token is token tHEREDOC_END ()\n    Error: discarding token tHEREDOC_END ()\n    Error: popping token error ()\n    Stack now 0 2 81 370 586 257 8 199\n    Shifting token error ()\n    Entering state 271\n    Reading a token: Next token is token tHEREDOC_END ()\n    Error: discarding token tHEREDOC_END ()\n    [...]\n\nIt is interesting to study what output MRI's parser gives for the same input:\n\n    infinite_heredoc.rb:1: can't find string \"\" anywhere before EOF\n    infinite_heredoc.rb:1: syntax error, unexpected end-of-input, expecting tSTRING_CONTENT or tSTRING_DBEG or tSTRING_DVAR or tSTRING_END\n    \u003c\u003c''.a begin\n        ^\n\nFor a heredoc with a non-zero name, both MRuby and MRI produce similar outputs:\n\nheredoc_valid_name.rb\n---------------------\n\n    \u003c\u003c'h'.a begin\n\nMRuby output\n------------\n\n    heredoc_valid_name.rb:3:0: can't find heredoc delimiter \"h\" anywhere before EOF\n    heredoc_valid_name.rb:3:0: syntax error, unexpected $end\n\nMRI output\n----------\n\n    heredoc_valid_name.rb:1: can't find string \"h\" anywhere before EOF\n    heredoc_valid_name.rb:1: syntax error, unexpected end-of-input, expecting tSTRING_CONTENT or tSTRING_DBEG or tSTRING_DVAR or tSTRING_END\n    \u003c\u003c'h'.a begin\n        ^\n\nSolution\n========\n\nThe problematic code is located `parse.y`, function `parse_string`, starting at line 3956:\n\n    if ((len-1 == hinf-\u003eterm_len) \u0026\u0026 (strncmp(s, hinf-\u003eterm, len-1) == 0)) {\n        return tHEREDOC_END;\n    }\n\nThe above code checks whether the current heredoc identifier can be matched and, if so, signals the end of the heredoc by returning a `tHEREDOC_END` token. The code is incorrect in the case when the length parameter is 0 due to the use of `strncmp` since it will return 0 even when the input strings are different (as is the case here, where `s` is `\"\\n\"` and `hinf-\u003eterm` is `\"\"`). Therefore, the check incorrectly succeeds when it shouldn't.\n\nA possible fix is to check whether `hinf-\u003eterm_len != 0` in addition to the present checks so zero-length heredoc identifiers are invalidated.\n\nempty_heredoc_identifier.patch\n------------------------------\n\n    diff --git a/mrbgems/mruby-compiler/core/parse.y b/mrbgems/mruby-compiler/core/parse.y\n    index bf893fb..85150fc 100644\n    --- a/mrbgems/mruby-compiler/core/parse.y\n    +++ b/mrbgems/mruby-compiler/core/parse.y\n    @@ -3953,7 +3953,7 @@ parse_string(parser_state *p)\n                --len;\n            }\n            }\n    -        if ((len-1 == hinf-\u003eterm_len) \u0026\u0026 (strncmp(s, hinf-\u003eterm, len-1) == 0)) {\n    +        if ((len-1 == hinf-\u003eterm_len) \u0026\u0026 (strncmp(s, hinf-\u003eterm, len-1) == 0) \u0026\u0026 (hinf-\u003eterm_len != 0)) {\n            return tHEREDOC_END;\n            }\n        }\n\nWith the provided patch, MRuby correctly terminates with the POC and issues an error message very similar to the one in MRI:\n\n    infinite_heredoc.rb:3:0: can't find heredoc delimiter \"\" anywhere before EOF\n    infinite_heredoc.rb:3:0: syntax error, unexpected $end\n\nIn addition, all the tests pass.\n\n--\nDenis Kasak\nDamir Jelić","vulnerability_information_html":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\n\u003cp\u003eCertain invalid Ruby programs (which should normally raise a syntax error) are able to cause an infinite loop in MRuby\u0026#39;s parser which makes the mruby-engine sandbox (and consequently the MRI process it is running in) unresponsive to SIGTERM. The process begins looping forever and has to be terminated using SIGABRT or SIGKILL. The bug is caused by an improper handling of heredocs with a zero-length identifier.\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of concept\u003c/h1\u003e\n\n\u003ch2 id=\"infinite_heredoc-rb\"\u003einfinite_heredoc.rb:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026#39;\u0026#39;.a begin\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003col\u003e\n\u003cli\u003eSave the above code as \u003ccode\u003einfinite_heredoc.rb\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eRun either:\na) \u003ccode\u003emruby infinite_heredoc.rb\u003c/code\u003e\nb) \u003ccode\u003esandbox infinite_heredoc.rb\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eBoth cause an infinite loop, but b) also leaves the process unresponsive to SIGTERM.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"discussion\"\u003eDiscussion\u003c/h1\u003e\n\n\u003cp\u003eEverything below assumes the latest master of the mruby repository as of Dec 01th, which is commit \u003ccode\u003e2cca9d368815e9c83a7489c40d69937d68cb43a2\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003e\u0026lt;\u0026lt;\u0026#39;\u0026#39;\u003c/code\u003e˙in the above POC code is parsed as a heredoc with an empty identifier. The rest of the POC is needed to bring the parser in a state where it is:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eContinually searching for the identifier.\u003c/li\u003e\n\u003cli\u003eErroneously thinking it found it, thereby signalling an end of the heredoc by pushing a \u003ccode\u003etHEREDOC_END\u003c/code\u003e token.\u003c/li\u003e\n\u003cli\u003eThis token is then invalid for the current parser state, which makes it push an error token.\u003c/li\u003e\n\u003cli\u003eFinally, while processing the error, the parser eventually calls \u003ccode\u003eparse_string\u003c/code\u003e again, which brings the process back to step 1, resulting in an infinite loop.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eA variation of the bug, using \u003ccode\u003edo\u003c/code\u003e instead of \u003ccode\u003ebegin\u003c/code\u003e:\u003c/p\u003e\n\n\u003ch2 id=\"infinite_heredoc_variation-rb\"\u003einfinite_heredoc_variation.rb:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026#39;\u0026#39;.a do\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAn excerpt from the parser\u0026#39;s debug output, demonstrating the above:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eReading a token: Next token is token tHEREDOC_END ()\nError: discarding token tHEREDOC_END ()\nError: popping token error ()\nStack now 0 2 81 370 586 257 8 199\nShifting token error ()\nEntering state 271\nReading a token: Next token is token tHEREDOC_END ()\nError: discarding token tHEREDOC_END ()\n[...]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt is interesting to study what output MRI\u0026#39;s parser gives for the same input:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003einfinite_heredoc.rb:1: can\u0026#39;t find string \u0026quot;\u0026quot; anywhere before EOF\ninfinite_heredoc.rb:1: syntax error, unexpected end-of-input, expecting tSTRING_CONTENT or tSTRING_DBEG or tSTRING_DVAR or tSTRING_END\n\u0026lt;\u0026lt;\u0026#39;\u0026#39;.a begin\n    ^\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor a heredoc with a non-zero name, both MRuby and MRI produce similar outputs:\u003c/p\u003e\n\n\u003ch2 id=\"heredoc_valid_name-rb\"\u003eheredoc_valid_name.rb\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026#39;h\u0026#39;.a begin\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"mruby-output\"\u003eMRuby output\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eheredoc_valid_name.rb:3:0: can\u0026#39;t find heredoc delimiter \u0026quot;h\u0026quot; anywhere before EOF\nheredoc_valid_name.rb:3:0: syntax error, unexpected $end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"mri-output\"\u003eMRI output\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eheredoc_valid_name.rb:1: can\u0026#39;t find string \u0026quot;h\u0026quot; anywhere before EOF\nheredoc_valid_name.rb:1: syntax error, unexpected end-of-input, expecting tSTRING_CONTENT or tSTRING_DBEG or tSTRING_DVAR or tSTRING_END\n\u0026lt;\u0026lt;\u0026#39;h\u0026#39;.a begin\n    ^\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"solution\"\u003eSolution\u003c/h1\u003e\n\n\u003cp\u003eThe problematic code is located \u003ccode\u003eparse.y\u003c/code\u003e, function \u003ccode\u003eparse_string\u003c/code\u003e, starting at line 3956:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eif ((len-1 == hinf-\u0026gt;term_len) \u0026amp;\u0026amp; (strncmp(s, hinf-\u0026gt;term, len-1) == 0)) {\n    return tHEREDOC_END;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above code checks whether the current heredoc identifier can be matched and, if so, signals the end of the heredoc by returning a \u003ccode\u003etHEREDOC_END\u003c/code\u003e token. The code is incorrect in the case when the length parameter is 0 due to the use of \u003ccode\u003estrncmp\u003c/code\u003e since it will return 0 even when the input strings are different (as is the case here, where \u003ccode\u003es\u003c/code\u003e is \u003ccode\u003e\u0026quot;\\n\u0026quot;\u003c/code\u003e and \u003ccode\u003ehinf-\u0026gt;term\u003c/code\u003e is \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e). Therefore, the check incorrectly succeeds when it shouldn\u0026#39;t.\u003c/p\u003e\n\n\u003cp\u003eA possible fix is to check whether \u003ccode\u003ehinf-\u0026gt;term_len != 0\u003c/code\u003e in addition to the present checks so zero-length heredoc identifiers are invalidated.\u003c/p\u003e\n\n\u003ch2 id=\"empty_heredoc_identifier-patch\"\u003eempty_heredoc_identifier.patch\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/mrbgems/mruby-compiler/core/parse.y b/mrbgems/mruby-compiler/core/parse.y\nindex bf893fb..85150fc 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/mrbgems/mruby-compiler/core/parse.y\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/mrbgems/mruby-compiler/core/parse.y\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -3953,7 +3953,7 @@\u003c/span\u003e parse_string(parser_state *p)\n            --len;\n        }\n        }\n\u003cspan class=\"gd\"\u003e-        if ((len-1 == hinf-\u0026gt;term_len) \u0026amp;\u0026amp; (strncmp(s, hinf-\u0026gt;term, len-1) == 0)) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if ((len-1 == hinf-\u0026gt;term_len) \u0026amp;\u0026amp; (strncmp(s, hinf-\u0026gt;term, len-1) == 0) \u0026amp;\u0026amp; (hinf-\u0026gt;term_len != 0)) {\n\u003c/span\u003e        return tHEREDOC_END;\n        }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith the provided patch, MRuby correctly terminates with the POC and issues an error message very similar to the one in MRI:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003einfinite_heredoc.rb:3:0: can\u0026#39;t find heredoc delimiter \u0026quot;\u0026quot; anywhere before EOF\ninfinite_heredoc.rb:3:0: syntax error, unexpected $end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn addition, all the tests pass.\u003c/p\u003e\n\n\u003cp\u003e--\u003cbr\u003e\nDenis Kasak\u003cbr\u003e\nDamir Jelić\u003c/p\u003e\n","bounty_amount":"10000.0","formatted_bounty":"$10,000","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":139327,"file_name":"infinite_heredoc.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/139/327/929c2620e52f0a589c0ab9e8b49cb3b727590fed/infinite_heredoc.rb?response-content-disposition=attachment%3B%20filename%3D%22infinite_heredoc.rb%22%3B%20filename%2A%3DUTF-8%27%27infinite_heredoc.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044759Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=60b026963ec05c5f2f9a2b44c4aab2faa61a58c994acc39a0174d59bc7cd4ce5","file_size":13,"type":"text/plain"},{"id":139328,"file_name":"infinite_heredoc_variation.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/139/328/c85f7e3556cb7cd6c9d1539bc50720435e68db1a/infinite_heredoc_variation.rb?response-content-disposition=attachment%3B%20filename%3D%22infinite_heredoc_variation.rb%22%3B%20filename%2A%3DUTF-8%27%27infinite_heredoc_variation.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044759Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=051968f3e680e07cebf10371d09a961f64c5579fc800f87292ec6e54af3cdb9d","file_size":10,"type":"text/plain"},{"id":139329,"file_name":"heredoc_valid_name.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/139/329/e0da80004f27e891f5078cbd07daf6d32a3d22fa/heredoc_valid_name.rb?response-content-disposition=attachment%3B%20filename%3D%22heredoc_valid_name.rb%22%3B%20filename%2A%3DUTF-8%27%27heredoc_valid_name.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044759Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=87c658626af6e84ed57dce327661267928d5445a535b07ffc34eb3f54ce5807f","file_size":14,"type":"text/plain"},{"id":139330,"file_name":"empty_heredoc_identifier.patch","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/139/330/04cf921090a34878ddbe93579d50b2edad44cdd8/empty_heredoc_identifier.patch?response-content-disposition=attachment%3B%20filename%3D%22empty_heredoc_identifier.patch%22%3B%20filename%2A%3DUTF-8%27%27empty_heredoc_identifier.patch\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044759Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=bf4bb516ef82d8504046cca2275a326f9606e4e975e46a6bbcd9baa5ffa4c8d8","file_size":538,"type":"text/x-diff"}],"allow_singular_disclosure_at":"2017-02-10T21:54:07.052Z","allow_singular_disclosure_after":-122453632.04332815,"singular_disclosure_allowed":true,"vote_count":21,"voters":["dkasak","dgaletic","michiel","danila","icanthack","supernatural","madrobot","mpz","eveeez","khizer47","and 11 more..."],"severity":{"rating":"high","score":8.6,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1333943,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the issue, and our engineering team is investigating.","markdown_message":"\u003cp\u003eThank you for your report. We\u0026#39;ve reproduced the issue, and our engineering team is investigating.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-01T15:11:03.078Z","updated_at":"2016-12-01T15:11:03.078Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1351928,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report and patch! We deployed a fix to our production environment earlier today. The issue has also been patched upstream: https://github.com/mruby/mruby/commit/43512cc7bdb4949a24e310aa03e67a95c59b5f1b\n\nAs we mentioned in previous reports, we're still working to assess the impact of the issues we've received and calibrate our bounty payouts. We'll get back to you soon. In the meantime, thank you for your patience.","markdown_message":"\u003cp\u003eThanks again for your report and patch! We deployed a fix to our production environment earlier today. The issue has also been patched upstream: \u003ca title=\"https://github.com/mruby/mruby/commit/43512cc7bdb4949a24e310aa03e67a95c59b5f1b\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F43512cc7bdb4949a24e310aa03e67a95c59b5f1b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/43512cc7bdb4949a24e310aa03e67a95c59b5f1b\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs we mentioned in previous reports, we\u0026#39;re still working to assess the impact of the issues we\u0026#39;ve received and calibrate our bounty payouts. We\u0026#39;ll get back to you soon. In the meantime, thank you for your patience.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-08T21:09:41.022Z","updated_at":"2016-12-08T21:09:41.022Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dkasak","url":"/dkasak"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1352412,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Unfortunately, the patch you linked to doesn't seem to fix this issue at all, as you can see from this very slightly modified POC:\n\ninfinite_heredoc_further_variation.rb\n-----------------------------------------------------\n    \u003c\u003c''.\n\nThere are also many others. We strongly encourage you to push our patch (or equivalent) upstream, if possible.","markdown_message":"\u003cp\u003eUnfortunately, the patch you linked to doesn\u0026#39;t seem to fix this issue at all, as you can see from this very slightly modified POC:\u003c/p\u003e\n\n\u003ch2 id=\"infinite_heredoc_further_variation-rb\"\u003einfinite_heredoc_further_variation.rb\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u0026#39;\u0026#39;.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are also many others. We strongly encourage you to push our patch (or equivalent) upstream, if possible.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-08T23:43:05.406Z","updated_at":"2016-12-08T23:43:05.406Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":141862,"filename":"infinite_heredoc_further_variation.rb","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/141/862/507b2794ce6654ab08a37b24701ed29171e81cd3/infinite_heredoc_further_variation.rb?response-content-disposition=attachment%3B%20filename%3D%22infinite_heredoc_further_variation.rb%22%3B%20filename%2A%3DUTF-8%27%27infinite_heredoc_further_variation.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044759Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=87017ecc9b2d6adc54c3ad99e2732d503ba85cf8d087bb87e025441c310e3bdf"}],"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1353850,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"Indeed, thanks for pointing that out! I'll reopen this while we investigate further.","markdown_message":"\u003cp\u003eIndeed, thanks for pointing that out! I\u0026#39;ll reopen this while we investigate further.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-09T14:31:21.305Z","updated_at":"2016-12-09T14:31:21.305Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1408975,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report. The issue has now been resolved upstream, and the fixed version is running in our production environment.\n\nThe relevant upstream commits are:\nhttps://github.com/mruby/mruby/commit/7b968ca893b5c24e07ba67e4e5100d93a4024418\nhttps://github.com/mruby/mruby/commit/b0886d5692dd58bed608fe8fb2be0c017c729060\n\nOur next round of bounty payouts will take place within two weeks, so we will be in touch with you again soon.","markdown_message":"\u003cp\u003eThanks again for your report. The issue has now been resolved upstream, and the fixed version is running in our production environment.\u003c/p\u003e\n\n\u003cp\u003eThe relevant upstream commits are:\u003cbr\u003e\n\u003ca title=\"https://github.com/mruby/mruby/commit/7b968ca893b5c24e07ba67e4e5100d93a4024418\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F7b968ca893b5c24e07ba67e4e5100d93a4024418\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/7b968ca893b5c24e07ba67e4e5100d93a4024418\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/mruby/mruby/commit/b0886d5692dd58bed608fe8fb2be0c017c729060\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2Fb0886d5692dd58bed608fe8fb2be0c017c729060\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/b0886d5692dd58bed608fe8fb2be0c017c729060\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOur next round of bounty payouts will take place within two weeks, so we will be in touch with you again soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-09T17:18:00.380Z","updated_at":"2017-01-09T17:18:00.380Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dkasak","url":"/dkasak"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1414733,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify Scripts and the mruby project!","markdown_message":"\u003cp\u003eThanks for helping improve the security of Shopify Scripts and the mruby project!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-11T21:54:00.227Z","updated_at":"2017-01-11T21:54:00.227Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"10000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"dkasak","url":"/dkasak"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1414734,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-01-11T21:54:07.023Z","updated_at":"2017-01-11T21:54:07.023Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1415093,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the bounty. As before, it was a pleasure of working on this with you, Shopify.","markdown_message":"\u003cp\u003eThank you for the bounty. As before, it was a pleasure of working on this with you, Shopify.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-12T00:36:02.416Z","updated_at":"2017-01-12T00:36:35.115Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1415098,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-01-12T00:37:21.347Z","updated_at":"2017-01-12T00:37:21.347Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1415099,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-01-12T00:37:21.382Z","updated_at":"2017-01-12T00:37:21.382Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}