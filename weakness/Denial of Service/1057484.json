{"id":1057484,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDU3NDg0","url":"https://hackerone.com/reports/1057484","title":"Permanent DOS for new users!","state":"Closed","substate":"informative","severity_rating":"high","readable_substate":"Informative","created_at":"2020-12-12T15:28:51.614Z","submitted_at":"2020-12-12T15:28:51.665Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"exploit_db","url":"/exploit_db","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":42368,"url":"https://hackerone.com/stripo","handle":"stripo","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/042/368/5b1017d17427be6c8e05cbc95da27646bf45e925_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/042/368/5b1017d17427be6c8e05cbc95da27646bf45e925_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Stripo Inc","twitter_handle":"","website":"https://stripo.email","about":"Stripo is a lightweight and intuitive email template editor that lets users build professional looking and highly responsive email templates."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-12-21T12:11:51.051Z","bug_reporter_agreed_on_going_public_at":"2020-12-18T11:50:10.147Z","team_member_agreed_on_going_public_at":"2020-12-21T12:11:50.965Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nHi team its me Akash Hamal, and while testing my.stripo.email website which is in scope of your program i was able to DOS permanently any new mail,user which might use your service in future but they won't be able to use !\n\nWhile registration  on my.stripo.email there are three fields required:\n1. Name [this one is interesting and our point of focus]\n2. Email\n3. Password\n\nI filled up Email, Password field and while filling up Name field i noticed the client-side javascript was filtering out /,[],etc \n\nI was able to bypass that filter by intercepting request of registration using   BurpSuite and adding restricted character like / in name field  in  this scenario whereas others characters  might be used too!\n\n## Steps To Reproduce:\n1. Go to https://my.stripo.email/cabinet/#/register\n2. Fill our Name,Email and Password field and intercept that request with burp suite\n3. In request change \"Name\" value to https://google.com/\n4. After doing that forward request and login with credentials!\n5. You have to complete the setup-wizard in order to get access to account! but the victim won't be able to as the server doesn't accept invalid characters in name field resulting in permanent DOS!\n\n## Supporting Material/References:\nI have provided STRIPO.mkv as video POC where the same things have been explained and demonstrated!\n\n## Impact\n\nThe attacker might target single/multiple new user and reproduce this bug in order to DOS their account permanently and also this makes their mail unusable for your service and they have to use new mail in order to use your service","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eHi team its me Akash Hamal, and while testing my.stripo.email website which is in scope of your program i was able to DOS permanently any new mail,user which might use your service in future but they won\u0026#39;t be able to use !\u003c/p\u003e\n\n\u003cp\u003eWhile registration  on my.stripo.email there are three fields required:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eName [this one is interesting and our point of focus]\u003c/li\u003e\n\u003cli\u003eEmail\u003c/li\u003e\n\u003cli\u003ePassword\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI filled up Email, Password field and while filling up Name field i noticed the client-side javascript was filtering out /,[],etc \u003c/p\u003e\n\n\u003cp\u003eI was able to bypass that filter by intercepting request of registration using   BurpSuite and adding restricted character like / in name field  in  this scenario whereas others characters  might be used too!\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eGo to \u003ca title=\"https://my.stripo.email/cabinet/#/register\" href=\"/redirect?url=https%3A%2F%2Fmy.stripo.email%2Fcabinet%2F%23%2Fregister\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://my.stripo.email/cabinet/#/register\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eFill our Name,Email and Password field and intercept that request with burp suite\u003c/li\u003e\n\u003cli\u003eIn request change \u0026quot;Name\u0026quot; value to \u003ca title=\"https://google.com/\" href=\"/redirect?url=https%3A%2F%2Fgoogle.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://google.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAfter doing that forward request and login with credentials!\u003c/li\u003e\n\u003cli\u003eYou have to complete the setup-wizard in order to get access to account! but the victim won\u0026#39;t be able to as the server doesn\u0026#39;t accept invalid characters in name field resulting in permanent DOS!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eI have provided STRIPO.mkv as video POC where the same things have been explained and demonstrated!\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe attacker might target single/multiple new user and reproduce this bug in order to DOS their account permanently and also this makes their mail unusable for your service and they have to use new mail in order to use your service\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":1114073,"file_name":"STRIPO.mkv","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jq2pdd9i5ak06m9e3mx91q2psssb?response-content-disposition=attachment%3B%20filename%3D%22STRIPO.mkv%22%3B%20filename%2A%3DUTF-8%27%27STRIPO.mkv\u0026response-content-type=video%2Fx-matroska\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVN4C5GIR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T041417Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICjdrX7ABZ%2BvfX76vY4hAT36HAFa7ABTRFnFNWlME3RsAiA6spUqHGGbpGIJMpDYYPRLrN21uLj3JvPgDLV04KLXWCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIM%2BwbYtZgzO0HRNuilKpED0QRzghA3dQ82LDNvNHg%2F%2Bapjkbzzquj0OQyaslf6lhZ6ae5aaEALaU1htc90%2FTkEnCjK7YAB%2BOOqYauHnXFwgnicH8P2qB1b6qq8ByPdiyv%2F6FeKLaeKEKd1ked0wxhxGILfvv9geWvP9kPkCkrnpW%2Bk3I2nWFhXQ59oSwcUQzXUMoZ0agtptlqAo0vIB0BQ8w3QdM1eyZALy%2Fa2aEoAk0NEEkFhGgVq6y7NSlne0HYNYsnTubU1gtBiWgKFN75WWxAKzP41DZr9biaTv2LpKz%2BS54%2B0D7gM01Pv9DWNFSxduldCjFNWMHaz53TpINKZivByzZ%2FZritkdAHNoYR8NUHdDo4fG9KADtaMgItKYoCYS9dQ3VQKUnEB%2FG5XIqiEWJNuiVPw9Xo1zZJ7ItciKJ%2F2lZOYbSY5IWLtOLK3LAXfBln%2BqWM6KN%2BYSgAqj80OMMoKJozuCJRCLPgT%2BsuXVxgkfPMjWm0msUwRdOuNqAG3PPIFx7Qi20ur1fS33s63LIR24RY3pe1aeEm14DkixQAwqvyp%2FwU67AFUTZKxgkosuC9%2FFnLTDWAcFKkGbWeTSyQlX9WvARJtmEGSKKE3O3RCz4o1fvK2y8cIWG4ZDqIQnnY30DkA5lvQ1S96196eUcIlxUE3IU6WzlYzirsAJvCXzxdcKxl0gn59sA3vLFJkUTgoas7IMyJTtRG6%2B0%2BVBuYKCHqJR1eTwSQxZvSP%2Bzn9VyHRQJZnA1hWcpkteF706gKj%2FXnieX9VW%2FOBOoEUExU1kfEmA0ZpoQRXSm8ma7vzsQoYhwoevAvKutaOvkhM8WM71tgT1%2FjC27FmA%2F%2FsDsAjQs2Rv9IujFElYACO0n6OSheOZw%3D%3D\u0026X-Amz-Signature=dc68db5b45289669a88b50d77014ec7ea256fe2092c896979d3fb05e54838691","file_size":108769814,"type":"video/x-matroska"}],"allow_singular_disclosure_at":null,"vote_count":4,"voters":["mr-medi","exploit_db","roy6900","cufflio"],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":38702,"asset_type":"URL","asset_identifier":"my.stripo.email","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":10096184,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Please suggest a mitigation.","markdown_message":"\u003cp\u003ePlease suggest a mitigation.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-14T12:44:03.355Z","updated_at":"2020-12-14T12:44:03.355Z","actor":{"username":"artem_nefedov","cleared":false,"url":"/artem_nefedov","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10096238,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"first solution: the other solution looks like hard but for now i can say allow  special characters and filter by different tricks like html encoding and others in order to prevent other web attacks like xss,etc \n\nsecond solution:  the second way is validating name at backend too!\n\n in this scenario u guys are validating name by client side javascript and it can be bypassed as seen in this report! this might look weird and more harder but if u dont  want to encode character and allow those forbidden characters the second solution is best. as u guys don't have to like filter those special characters and allow them in name as first solution and still if u adopt first solution there is a risk of being bypassed as xss custom payloads would do that!\n\n\nso its better if u guys validate name at backend too and throw error if name contains any character that is forbidden! \n\nRegards,\n\nAkash Hamal","markdown_message":"\u003cp\u003efirst solution: the other solution looks like hard but for now i can say allow  special characters and filter by different tricks like html encoding and others in order to prevent other web attacks like xss,etc \u003c/p\u003e\n\n\u003cp\u003esecond solution:  the second way is validating name at backend too!\u003c/p\u003e\n\n\u003cp\u003ein this scenario u guys are validating name by client side javascript and it can be bypassed as seen in this report! this might look weird and more harder but if u dont  want to encode character and allow those forbidden characters the second solution is best. as u guys don\u0026#39;t have to like filter those special characters and allow them in name as first solution and still if u adopt first solution there is a risk of being bypassed as xss custom payloads would do that!\u003c/p\u003e\n\n\u003cp\u003eso its better if u guys validate name at backend too and throw error if name contains any character that is forbidden! \u003c/p\u003e\n\n\u003cp\u003eRegards,\u003c/p\u003e\n\n\u003cp\u003eAkash Hamal\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-14T12:51:59.150Z","updated_at":"2020-12-14T12:51:59.150Z","actor":{"username":"exploit_db","cleared":false,"url":"/exploit_db","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10122614,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"We discussed this case with the team and came up that it's an acceptable risk. Thank you!","markdown_message":"\u003cp\u003eWe discussed this case with the team and came up that it\u0026#39;s an acceptable risk. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-16T15:04:30.972Z","updated_at":"2020-12-16T15:04:30.972Z","actor":{"username":"artem_nefedov","cleared":false,"url":"/artem_nefedov","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10122920,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ya it would be better if u guys fix else u know consequences and rest depends on your decision :) take care","markdown_message":"\u003cp\u003eya it would be better if u guys fix else u know consequences and rest depends on your decision :) take care\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-16T15:44:26.696Z","updated_at":"2020-12-16T15:44:26.696Z","actor":{"username":"exploit_db","cleared":false,"url":"/exploit_db","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10122935,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"can we disclose it? if yes then update me! so that community can know this bug is an acceptable risk and it will also prevent similar reports in future if we disclose now!","markdown_message":"\u003cp\u003ecan we disclose it? if yes then update me! so that community can know this bug is an acceptable risk and it will also prevent similar reports in future if we disclose now!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-16T15:46:13.367Z","updated_at":"2020-12-16T15:46:13.367Z","actor":{"username":"exploit_db","cleared":false,"url":"/exploit_db","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10128237,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"can we disclose it? if not disclosure then can i do a writeup?\n","markdown_message":"\u003cp\u003ecan we disclose it? if not disclosure then can i do a writeup?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-17T05:52:40.796Z","updated_at":"2020-12-17T05:52:40.796Z","actor":{"username":"exploit_db","cleared":false,"url":"/exploit_db","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10142882,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"any update on disclosure?","markdown_message":"\u003cp\u003eany update on disclosure?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-12-18T11:50:10.167Z","updated_at":"2020-12-18T11:50:10.167Z","first_to_agree":true,"actor":{"username":"exploit_db","cleared":false,"url":"/exploit_db","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/vdyDQhCg37orFjBs8DU9T7Lf/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10164279,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-21T12:11:50.994Z","updated_at":"2020-12-21T12:11:50.994Z","actor":{"username":"artem_nefedov","cleared":false,"url":"/artem_nefedov","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10164280,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-21T12:11:51.076Z","updated_at":"2020-12-21T12:11:51.076Z","actor":{"username":"artem_nefedov","cleared":false,"url":"/artem_nefedov","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"stripo","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":25954,"category":"researcher","content":"The team concluded as informative but this issue is active and reproducible enjoy ;)","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThe team concluded as informative but this issue is active and reproducible enjoy ;)\u003c/p\u003e\n"}]}