{"id":771596,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NzE1OTY=","url":"https://hackerone.com/reports/771596","title":"CRLF Injection in legacy url API (url.parse().hostname)","state":"Closed","substate":"informative","severity_rating":"medium","readable_substate":"Informative","created_at":"2020-01-10T12:07:06.310Z","submitted_at":"2020-01-10T12:07:06.310Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"vavkamil","url":"/vavkamil","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/069/616/003619f9ca0b0b3d11a238bb540d86b9b22d5b5c_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-01-10T17:55:53.774Z","bug_reporter_agreed_on_going_public_at":"2020-01-10T17:55:53.693Z","team_member_agreed_on_going_public_at":"2020-01-10T17:51:45.981Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\n\nThere is CRLF Injection in legacy `url.hostname()` API.\n\n**Description:**\n\nDuring the recent penetration test, I have found a whitelist bypass using CRLF Injection. We did a code review and determined the issue is in a legacy url.hostname() API. Not sure if it's a known issue or not, I wasn't able to find any report related to `url.hostname()`.\n\n## Steps To Reproduce:\n\n```\npoc_url = \"http://test1.com\\n\\rtest2.com\"\n\nconst url = require('url');\nconsole.log(\"Vulnerable: \", url.parse(poc_url).hostname)\n\nconsole.log(\"\\n\")\n\nconst myURL = new URL(poc_url);\nconsole.log(\"Not Vulnerable: \", myURL.hostname)\n```\n\nNot exactly sure where is the problem, but probably in here:\n`https://github.com/nodejs/node/blob/master/lib/url.js#L298-L340`\n\n## Impact:\n\nEven if it's legacy code, there still might be a lot of projects and codebases relying on it. As mentioned in the description, I was able to bypass a whitelist function during the recent penetration test and exploit a medium/high vulnerability thanks to it.\n\n## Supporting Material/References:\n\nPoc:\n```\npoc_url = \"http://test1.com\\n\\rtest2.com\"\n\nconst url = require('url');\nconsole.log(\"Vulnerable: \", url.parse(poc_url).hostname)\n\nconsole.log(\"\\n\")\n\nconst myURL = new URL(poc_url);\nconsole.log(\"Not Vulnerable: \", myURL.hostname)\n```\n\nOutput:\n```\nVulnerable:  test1.com\n\nNot Vulnerable:  test1.comtest2.com\n```\n\n## Impact\n\nWhitelist function can use url.parse(\"https://example.com\").hostname to check for allowed hostnames. It can be easily bypassed using CRLF injection and it can lead to whitelist bypass and compromise of the website.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThere is CRLF Injection in legacy \u003ccode\u003eurl.hostname()\u003c/code\u003e API.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the recent penetration test, I have found a whitelist bypass using CRLF Injection. We did a code review and determined the issue is in a legacy url.hostname() API. Not sure if it\u0026#39;s a known issue or not, I wasn\u0026#39;t able to find any report related to \u003ccode\u003eurl.hostname()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epoc_url = \u0026quot;http://test1.com\\n\\rtest2.com\u0026quot;\n\nconst url = require(\u0026#39;url\u0026#39;);\nconsole.log(\u0026quot;Vulnerable: \u0026quot;, url.parse(poc_url).hostname)\n\nconsole.log(\u0026quot;\\n\u0026quot;)\n\nconst myURL = new URL(poc_url);\nconsole.log(\u0026quot;Not Vulnerable: \u0026quot;, myURL.hostname)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNot exactly sure where is the problem, but probably in here:\u003cbr\u003e\n\u003ccode\u003ehttps://github.com/nodejs/node/blob/master/lib/url.js#L298-L340\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact:\u003c/h2\u003e\n\n\u003cp\u003eEven if it\u0026#39;s legacy code, there still might be a lot of projects and codebases relying on it. As mentioned in the description, I was able to bypass a whitelist function during the recent penetration test and exploit a medium/high vulnerability thanks to it.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003ePoc:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epoc_url = \u0026quot;http://test1.com\\n\\rtest2.com\u0026quot;\n\nconst url = require(\u0026#39;url\u0026#39;);\nconsole.log(\u0026quot;Vulnerable: \u0026quot;, url.parse(poc_url).hostname)\n\nconsole.log(\u0026quot;\\n\u0026quot;)\n\nconst myURL = new URL(poc_url);\nconsole.log(\u0026quot;Not Vulnerable: \u0026quot;, myURL.hostname)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eVulnerable:  test1.com\n\nNot Vulnerable:  test1.comtest2.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eWhitelist function can use url.parse(\u0026quot;https://example.com\u0026quot;).hostname to check for allowed hostnames. It can be easily bypassed using CRLF injection and it can lead to whitelist bypass and compromise of the website.\u003c/p\u003e\n","weakness":{"id":69,"name":"CRLF Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":2,"voters":["danerh","mehrshad232"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":{"databaseId":666,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/nodejs/node","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6735960,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Security issues with url.parse are known and are not likely to be fixed given that the legacy parser and api is on the deprecation path. ","markdown_message":"\u003cp\u003eSecurity issues with url.parse are known and are not likely to be fixed given that the legacy parser and api is on the deprecation path. \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T13:11:33.395Z","updated_at":"2020-01-10T13:11:33.395Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6736667,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, it's ok, I don't expect anything from it and I saw some related issues with CRLF, just couldn't find anything about the `hostname`. So should I self-close the report?","markdown_message":"\u003cp\u003eHi, it\u0026#39;s ok, I don\u0026#39;t expect anything from it and I saw some related issues with CRLF, just couldn\u0026#39;t find anything about the \u003ccode\u003ehostname\u003c/code\u003e. So should I self-close the report?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T14:55:20.846Z","updated_at":"2020-01-10T14:55:20.846Z","actor":{"username":"vavkamil","cleared":false,"url":"/vavkamil","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/069/616/003619f9ca0b0b3d11a238bb540d86b9b22d5b5c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738051,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vavkamil I think you missed https://hackerone.com/reports/678487 because it was disclosed just hours before you reported this.\n\nI suggest we close this as a duplicate, and then disclose it, because you have a useful writeup of the issue, and it may encourage people to stop using the legacy API.\n\nIs that agreeable to you?","markdown_message":"\u003cp\u003e\u003ca href=\"/vavkamil\"\u003e@vavkamil\u003c/a\u003e I think you missed \u003ca title=\"https://hackerone.com/reports/678487\" href=\"https://hackerone.com/reports/678487\"\u003ehttps://hackerone.com/reports/678487\u003c/a\u003e because it was disclosed just hours before you reported this.\u003c/p\u003e\n\n\u003cp\u003eI suggest we close this as a duplicate, and then disclose it, because you have a useful writeup of the issue, and it may encourage people to stop using the legacy API.\u003c/p\u003e\n\n\u003cp\u003eIs that agreeable to you?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T17:21:46.685Z","updated_at":"2020-01-10T17:21:46.685Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738099,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-10T17:26:33.708Z","updated_at":"2020-01-10T17:26:33.708Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738104,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm sorry, looking more closely, I think this may be a slightly different issue, though related. So, I suggest we close it as *informative* and disclose it.","markdown_message":"\u003cp\u003eI\u0026#39;m sorry, looking more closely, I think this may be a slightly different issue, though related. So, I suggest we close it as \u003cem\u003einformative\u003c/em\u003e and disclose it.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T17:27:41.201Z","updated_at":"2020-01-10T17:27:41.201Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738129,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, it's a lucky timing :) It's fine from my side, you can disclose the report.","markdown_message":"\u003cp\u003eHi, it\u0026#39;s a lucky timing :) It\u0026#39;s fine from my side, you can disclose the report.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T17:30:35.165Z","updated_at":"2020-01-10T17:30:35.165Z","actor":{"username":"vavkamil","cleared":false,"url":"/vavkamil","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/069/616/003619f9ca0b0b3d11a238bb540d86b9b22d5b5c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738273,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Thanks for the informative report. We don't intend to change url.parse() because of the high probability of breaking existing code, but we continue to encourage people to use the WhatWG standard `URL` class.","markdown_message":"\u003cp\u003eThanks for the informative report. We don\u0026#39;t intend to change url.parse() because of the high probability of breaking existing code, but we continue to encourage people to use the WhatWG standard \u003ccode\u003eURL\u003c/code\u003e class.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T17:51:36.774Z","updated_at":"2020-01-10T17:51:36.774Z","actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738274,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-10T17:51:46.000Z","updated_at":"2020-01-10T17:51:46.000Z","first_to_agree":true,"actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738295,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks for the fast response on this one!","markdown_message":"\u003cp\u003eThanks for the fast response on this one!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T17:55:53.730Z","updated_at":"2020-01-10T17:55:53.730Z","actor":{"username":"vavkamil","cleared":false,"url":"/vavkamil","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/069/616/003619f9ca0b0b3d11a238bb540d86b9b22d5b5c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6738296,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-10T17:55:53.792Z","updated_at":"2020-01-10T17:55:53.792Z","actor":{"username":"vavkamil","cleared":false,"url":"/vavkamil","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/069/616/003619f9ca0b0b3d11a238bb540d86b9b22d5b5c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}