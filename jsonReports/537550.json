{"id":537550,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81Mzc1NTA=","url":"https://hackerone.com/reports/537550","title":"Memory corruption in imap-parser.c","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-04-13T19:14:11.719Z","submitted_at":"2019-04-13T19:14:11.719Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"nick_roessler","url":"/nick_roessler","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-10-24T06:38:32.952Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-08-28T12:33:48.650Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello Dovecot devs, this is a report from Nick Roessler and Rafi Rubin. We are researchers at the University of Pennsylvania. We’ve been fuzzing Dovecot and have triggered some memory errors---this one is the most serious, and can be used for controlled indirect out-of-bounds writes into heap memory.\n\n## Summary:\n  The imap_parser_read_string() function inside imap-parser.c sets the parser -\u003e str_first_escape field equal to the index of the first ‘\\’ escape character found when parsing the input data. However, it does not check for a null byte (end of string) when scanning that data. As a result, if a ‘\\’ is placed _after_ a null byte in an input data, then the str_first_escape index may be larger than the strlen() of the actual data, which leads to out of bounds heap memory accesses (both reads and writes).\n\nOn line 266 of imap-parser.c, a new string is allocated from the memory pool of the parser, and a copy of the input data is copied there using p_strndup():\n\nstr = p_strndup(parser-\u003epool, data+1, size-1);\n\np_strndup() computes the _length_ of the original string (distance to first null byte), allocates that many bytes, and then copies that many bytes into the allocated buffer. Several lines later the program calls str_unescape() on the shorter copied string using the original offset parser -\u003e str_first_escape:\n\n(void)str_unescape(str + parser-\u003estr_first_escape-1);\n\nAs noted, we can create inputs in which str_first_escape will have a larger value than the actual length of the string, thus driving str out of bounds in the input to str_unescape(). The p_strndup() allocates its memory from the parser memory pool; with an appropriate arrangement of the pool, this could be made to allocate from a block with a higher address than the data; because the distance between the ‘\\’ and the null byte can be controlled by an attacker and is only constrained by the length of a line, the pointer can thus be set to a controlled value outside of the memory pool. str_unescape() performs writes, which could be used to corrupt arbitrary heap memory that is allocated after the pool, thus providing realistic footing for exploitation. Attached to this report are two screenshots from Address Sanitizer that show the state of the call stack and the detected out-of-bounds writes to heap objects.\n\n## Releases Affected:\n\nThe affected code has not been touched since 2003 and the vulnerability may be older than that.\n\n## Steps To Reproduce:\n\n  1. Compile Dovecot with ASAN to detect memory errors, or add the assertion “i_assert(strlen(str) \u003e= parser-\u003estr_first_escape);” after line 270 in imap-parser.c to detect violations of that logical invariant.\n  2. Insert a ‘\\0’ before the first ‘\\\\’ in a string that will be parsed by imap-parser.c --- example IMAP session provided below \n  3. Run session\n\nExample session:\na0000 AUTHENTICATE PLAIN xxxxxxxxxxxxx\na0001 CAPABILITY\na0002 LIST \"0\\A\" “”\na0006 CLOSE\na0007 LOGOUT\n\nNote the 0 before “\\A” would be an actual null byte not \\x30.\n\n## Fixing the vulnerability\nThe offset of the first escape should not be set higher than the offset of the null byte.  This could be achieved either by setting str_first_escape if it has not been set when the first ‘\\0’ is encountered, or by terminating the processing (and maybe dropping the ill-behaved client) on that first ‘\\0’ and leaving str_first_escape unset.  Given that we are not experts on this code and the nuances of the IMAP syntax, we can’t say which is more appropriate.\n\n## Supporting Material/References:\nThis report includes two screenshots of Address Sanitizer reported out-of-bounds writes.\n\n## Impact\n\nThis vulnerability allows for out-of-bounds writes to objects stored on the heap. One of the attached screenshots shows an ASAN report from a null byte write from line 76 of strescape.c; this alone can feasibly lead to arbitrary code execution, for example: https://bugs.chromium.org/p/project-zero/issues/detail?id=96\n\nIn this particular case, the attacker capabilities are much greater than a single null byte overflow. Not only can the write be controlled to skip over memory and write to an offset of the attacker’s choosing, but if heap memory contains ‘\\’ bytes (which can be prepared by an attacker through previous IMAP session operations), then they will cause str_unescape() to perform a repeated series of writes as dictated by the logic of the function; attached is a screenshot showing out-of-bounds writes from line 73. Furthermore, this vulnerability can be triggered repeatedly within a single IMAP session, thus allowing quite sophisticated manipulation of heap memory. Once the state of memory can be corrupted this way in a complex program, arbitrary code execution should be assumed to be possible; all that remains is fitting the pieces together.","vulnerability_information_html":"\u003cp\u003eHello Dovecot devs, this is a report from Nick Roessler and Rafi Rubin. We are researchers at the University of Pennsylvania. We’ve been fuzzing Dovecot and have triggered some memory errors---this one is the most serious, and can be used for controlled indirect out-of-bounds writes into heap memory.\u003c/p\u003e\n\n\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eThe imap_parser_read_string() function inside imap-parser.c sets the parser -\u0026gt; str_first_escape field equal to the index of the first ‘\\’ escape character found when parsing the input data. However, it does not check for a null byte (end of string) when scanning that data. As a result, if a ‘\\’ is placed \u003cu\u003eafter\u003c/u\u003e a null byte in an input data, then the str_first_escape index may be larger than the strlen() of the actual data, which leads to out of bounds heap memory accesses (both reads and writes).\u003c/p\u003e\n\n\u003cp\u003eOn line 266 of imap-parser.c, a new string is allocated from the memory pool of the parser, and a copy of the input data is copied there using p_strndup():\u003c/p\u003e\n\n\u003cp\u003estr = p_strndup(parser-\u0026gt;pool, data+1, size-1);\u003c/p\u003e\n\n\u003cp\u003ep_strndup() computes the \u003cu\u003elength\u003c/u\u003e of the original string (distance to first null byte), allocates that many bytes, and then copies that many bytes into the allocated buffer. Several lines later the program calls str_unescape() on the shorter copied string using the original offset parser -\u0026gt; str_first_escape:\u003c/p\u003e\n\n\u003cp\u003e(void)str_unescape(str + parser-\u0026gt;str_first_escape-1);\u003c/p\u003e\n\n\u003cp\u003eAs noted, we can create inputs in which str_first_escape will have a larger value than the actual length of the string, thus driving str out of bounds in the input to str_unescape(). The p_strndup() allocates its memory from the parser memory pool; with an appropriate arrangement of the pool, this could be made to allocate from a block with a higher address than the data; because the distance between the ‘\\’ and the null byte can be controlled by an attacker and is only constrained by the length of a line, the pointer can thus be set to a controlled value outside of the memory pool. str_unescape() performs writes, which could be used to corrupt arbitrary heap memory that is allocated after the pool, thus providing realistic footing for exploitation. Attached to this report are two screenshots from Address Sanitizer that show the state of the call stack and the detected out-of-bounds writes to heap objects.\u003c/p\u003e\n\n\u003ch2 id=\"releases-affected\"\u003eReleases Affected:\u003c/h2\u003e\n\n\u003cp\u003eThe affected code has not been touched since 2003 and the vulnerability may be older than that.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eCompile Dovecot with ASAN to detect memory errors, or add the assertion “i_assert(strlen(str) \u0026gt;= parser-\u0026gt;str_first_escape);” after line 270 in imap-parser.c to detect violations of that logical invariant.\u003c/li\u003e\n\u003cli\u003eInsert a ‘\\0’ before the first ‘\\’ in a string that will be parsed by imap-parser.c --- example IMAP session provided below \u003c/li\u003e\n\u003cli\u003eRun session\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eExample session:\u003cbr\u003e\na0000 AUTHENTICATE PLAIN xxxxxxxxxxxxx\u003cbr\u003e\na0001 CAPABILITY\u003cbr\u003e\na0002 LIST \u0026quot;0\\A\u0026quot; “”\u003cbr\u003e\na0006 CLOSE\u003cbr\u003e\na0007 LOGOUT\u003c/p\u003e\n\n\u003cp\u003eNote the 0 before “\\A” would be an actual null byte not \\x30.\u003c/p\u003e\n\n\u003ch2 id=\"fixing-the-vulnerability\"\u003eFixing the vulnerability\u003c/h2\u003e\n\n\u003cp\u003eThe offset of the first escape should not be set higher than the offset of the null byte.  This could be achieved either by setting str_first_escape if it has not been set when the first ‘\\0’ is encountered, or by terminating the processing (and maybe dropping the ill-behaved client) on that first ‘\\0’ and leaving str_first_escape unset.  Given that we are not experts on this code and the nuances of the IMAP syntax, we can’t say which is more appropriate.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eThis report includes two screenshots of Address Sanitizer reported out-of-bounds writes.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability allows for out-of-bounds writes to objects stored on the heap. One of the attached screenshots shows an ASAN report from a null byte write from line 76 of strescape.c; this alone can feasibly lead to arbitrary code execution, for example: \u003ca title=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=96\" href=\"/redirect?url=https%3A%2F%2Fbugs.chromium.org%2Fp%2Fproject-zero%2Fissues%2Fdetail%3Fid%3D96\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.chromium.org/p/project-zero/issues/detail?id=96\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this particular case, the attacker capabilities are much greater than a single null byte overflow. Not only can the write be controlled to skip over memory and write to an offset of the attacker’s choosing, but if heap memory contains ‘\\’ bytes (which can be prepared by an attacker through previous IMAP session operations), then they will cause str_unescape() to perform a repeated series of writes as dictated by the logic of the function; attached is a screenshot showing out-of-bounds writes from line 73. Furthermore, this vulnerability can be triggered repeatedly within a single IMAP session, thus allowing quite sophisticated manipulation of heap memory. Once the state of memory can be corrupted this way in a complex program, arbitrary code execution should be assumed to be possible; all that remains is fitting the pieces together.\u003c/p\u003e\n","bounty_amount":"5000.0","formatted_bounty":"$5,000","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":468178,"file_name":"strescape_oob_write_line_73.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/468/178/c3eefaf72b2afa5ffe71d5fde915a6e7f9f773db/strescape_oob_write_line_73.png?response-content-disposition=attachment%3B%20filename%3D%22strescape_oob_write_line_73.png%22%3B%20filename%2A%3DUTF-8%27%27strescape_oob_write_line_73.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRVDVIAIN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061605Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCIE32Mqh2tZr%2BOU5TpCkMAcCIP7cUR4Cmx6knF0aE1pAIhANosl%2BxHV6Q%2F51LP%2Fec3HeAsrkcv3Oonagtggk2l2fcHKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyvivkNb%2F%2FihtanvJsqkQOxVl0vet745bZV8lQI5KYtwTWpcIFAsML7JxymD3vn9i8QCWhlYeT2MW%2B9baTQMb%2BdveMhrdwbKcBh3ip%2ByweQnVl9ueQzetzoXpB5k2WZrDCF3m0PA%2BCv6ox3XmJRewIkURiq4Ztl%2BHyUPdAtuOYZDYkHGUB8OqZgDmy0YoWLDqNPzGZK7dX7v62QUuo2TiCO%2BWHnWiVN2sIAHkLQ1c0cRYR2hre0%2FHfkXdHak9EM%2FJlTAH%2BQnt3DZGo6v788Hni0I1X%2F70QyGnfzTEgA8%2Fvb6vKESyULs14SrfKtlo9En1u2T1%2B79JNxVdhJNX%2BfERg06V3dMkcO%2BhECVPAWHzRrJ3bTOIIfgttUE3yW5ViJmecveb28ezf1szEuiXvW%2BZQUdTtFctgvSq22L57hu2QitzJ%2F7EFXuPPyfSKn70goiFML2nsYjayzP2jOzI85Wf0PZwwCg%2BTr7Ldre4VPxLs2y%2BAhqKPahi9iLDrk5IVFZPWBWrmRjgRlhjIP7aYZzYQEoqoD%2F3susXDMHlsiMv8yoDDN6ar%2FBTrqAdSZzhKXhWU9aDM9pF9urQto0LgyoOSxshu8McAhBrfa%2FReNxxcISybiMxPssa8oRShR7XUSBWuVRE7CnX5MQKY6UeaUB8HDokdym3sz7IA0tuq64XmfywVqSVqOZTRnXaNG%2BObO1m4FlOQ%2FC4n%2Fbe50N8rAEPnkWd81lyuaeMezjo4O%2BlEpCZ%2ByBXnfl88Bjx8KUaMIVJ5VHQ8J6PBiG%2FjOWow2rty2SDO%2BTqlQJxjPwbenYT7WUyEPOBmi%2FZgSy9qD6EP%2B5GMYGk0q2R6LmuTGm6QPTGNHaZ%2BHqK3PMyvOo0eC1hMcq6KJ8g%3D%3D\u0026X-Amz-Signature=dedf19d7f40c47432351e0345f038262d8b9a6d2088a990355505527e6899622","file_size":190780,"type":"image/png"},{"id":468179,"file_name":"strescape_oob_write_line_76.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/468/179/6ae6fc9f707f5bee64a405a4febf89e67d1df745/strescape_oob_write_line_76.png?response-content-disposition=attachment%3B%20filename%3D%22strescape_oob_write_line_76.png%22%3B%20filename%2A%3DUTF-8%27%27strescape_oob_write_line_76.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRVDVIAIN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061605Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCIE32Mqh2tZr%2BOU5TpCkMAcCIP7cUR4Cmx6knF0aE1pAIhANosl%2BxHV6Q%2F51LP%2Fec3HeAsrkcv3Oonagtggk2l2fcHKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgyvivkNb%2F%2FihtanvJsqkQOxVl0vet745bZV8lQI5KYtwTWpcIFAsML7JxymD3vn9i8QCWhlYeT2MW%2B9baTQMb%2BdveMhrdwbKcBh3ip%2ByweQnVl9ueQzetzoXpB5k2WZrDCF3m0PA%2BCv6ox3XmJRewIkURiq4Ztl%2BHyUPdAtuOYZDYkHGUB8OqZgDmy0YoWLDqNPzGZK7dX7v62QUuo2TiCO%2BWHnWiVN2sIAHkLQ1c0cRYR2hre0%2FHfkXdHak9EM%2FJlTAH%2BQnt3DZGo6v788Hni0I1X%2F70QyGnfzTEgA8%2Fvb6vKESyULs14SrfKtlo9En1u2T1%2B79JNxVdhJNX%2BfERg06V3dMkcO%2BhECVPAWHzRrJ3bTOIIfgttUE3yW5ViJmecveb28ezf1szEuiXvW%2BZQUdTtFctgvSq22L57hu2QitzJ%2F7EFXuPPyfSKn70goiFML2nsYjayzP2jOzI85Wf0PZwwCg%2BTr7Ldre4VPxLs2y%2BAhqKPahi9iLDrk5IVFZPWBWrmRjgRlhjIP7aYZzYQEoqoD%2F3susXDMHlsiMv8yoDDN6ar%2FBTrqAdSZzhKXhWU9aDM9pF9urQto0LgyoOSxshu8McAhBrfa%2FReNxxcISybiMxPssa8oRShR7XUSBWuVRE7CnX5MQKY6UeaUB8HDokdym3sz7IA0tuq64XmfywVqSVqOZTRnXaNG%2BObO1m4FlOQ%2FC4n%2Fbe50N8rAEPnkWd81lyuaeMezjo4O%2BlEpCZ%2ByBXnfl88Bjx8KUaMIVJ5VHQ8J6PBiG%2FjOWow2rty2SDO%2BTqlQJxjPwbenYT7WUyEPOBmi%2FZgSy9qD6EP%2B5GMYGk0q2R6LmuTGm6QPTGNHaZ%2BHqK3PMyvOo0eC1hMcq6KJ8g%3D%3D\u0026X-Amz-Signature=b744e79fb42b7a6d4e54044508c837533d4ee0333a11280e9d49c8e42fc8c733","file_size":198260,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":46,"voters":["spam404","sameerphad72","mygf","0xd0m7","0-1","masonhck357","unreleased","splint3rsec","yyakovliev02","smodnix","and 36 more..."],"severity":{"rating":"high","score":8.1,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":42899,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4555222,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2019-04-13T20:21:26.540Z","updated_at":"2019-04-13T20:21:26.540Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"email":"ra****************om","genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4555622,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-13T21:54:06.167Z","updated_at":"2019-04-13T21:54:06.167Z","actor":{"username":"rafiy","cleared":false,"url":"/rafiy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4556576,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi! Thank you for your bug report, we will look into it as soon as possible.","markdown_message":"\u003cp\u003eHi! Thank you for your bug report, we will look into it as soon as possible.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-14T07:20:57.358Z","updated_at":"2019-04-14T07:20:57.358Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4557411,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You mentioned that this is one most serious. Can we get the rest of the bugs too? ","markdown_message":"\u003cp\u003eYou mentioned that this is one most serious. Can we get the rest of the bugs too? \u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-14T12:13:21.004Z","updated_at":"2019-04-14T12:13:21.004Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4558714,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great! \nAnd yes, we will submit the rest as well! We are still analyzing them. We will try to write them up soon.","markdown_message":"\u003cp\u003eGreat! \u003cbr\u003e\nAnd yes, we will submit the rest as well! We are still analyzing them. We will try to write them up soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-14T18:33:56.929Z","updated_at":"2019-04-14T18:33:56.929Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4560054,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-15T06:22:07.259Z","updated_at":"2019-04-15T06:22:07.259Z","additional_data":{"old_severity":"High","new_severity":"Critical (9.8)","old_severity_id":346101,"new_severity_id":346822},"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4560075,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"If it's OK for you, we would really like to publish all the vulns together. Can we wait with this until you people have reported all of them?","markdown_message":"\u003cp\u003eIf it\u0026#39;s OK for you, we would really like to publish all the vulns together. Can we wait with this until you people have reported all of them?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-15T06:35:51.607Z","updated_at":"2019-04-15T06:35:51.607Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4560076,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-15T06:35:56.648Z","updated_at":"2019-04-15T06:35:56.648Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4583080,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@nick_roessler ping?","markdown_message":"\u003cp\u003e\u003ca href=\"/nick_roessler\"\u003e@nick_roessler\u003c/a\u003e ping?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-17T11:17:13.293Z","updated_at":"2019-04-17T11:17:13.293Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4588258,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Sorry Aki! I'm a full time grad student too.\nI think we're happy to wait until they're all reported, but the soonest I'll have time to work on this again will probably be this weekend. I'll stay in touch. Thanks for your time!","markdown_message":"\u003cp\u003eSorry Aki! I\u0026#39;m a full time grad student too.\u003cbr\u003e\nI think we\u0026#39;re happy to wait until they\u0026#39;re all reported, but the soonest I\u0026#39;ll have time to work on this again will probably be this weekend. I\u0026#39;ll stay in touch. Thanks for your time!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-18T01:12:29.790Z","updated_at":"2019-04-18T01:12:29.790Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4623315,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Aki, we have submitted the other two errors in another report. Thank you for your patience!","markdown_message":"\u003cp\u003eAki, we have submitted the other two errors in another report. Thank you for your patience!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-23T05:09:24.752Z","updated_at":"2019-04-23T05:09:24.752Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4623405,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-23T05:34:18.217Z","updated_at":"2019-04-23T05:34:18.217Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4623421,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you! We are not able to see the reports however?","markdown_message":"\u003cp\u003eThank you! We are not able to see the reports however?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-23T05:37:40.489Z","updated_at":"2019-04-23T05:37:40.489Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4623433,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah, yeah I think it's pending approval because my HackerOne account is new. It says \"Dovecot is using Human Augmented Signal. Your report was flagged by our algorithms, and must first be validated by a HackerOne Security Analyst.\"","markdown_message":"\u003cp\u003eAh, yeah I think it\u0026#39;s pending approval because my HackerOne account is new. It says \u0026quot;Dovecot is using Human Augmented Signal. Your report was flagged by our algorithms, and must first be validated by a HackerOne Security Analyst.\u0026quot;\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-23T05:42:06.253Z","updated_at":"2019-04-23T05:42:06.253Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4623436,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok!","markdown_message":"\u003cp\u003eOk!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-23T05:43:29.281Z","updated_at":"2019-04-23T05:43:29.281Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4631520,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-24T06:14:41.950Z","updated_at":"2019-04-24T06:14:41.950Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"rafiy","url":"/rafiy"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4631521,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-24T06:14:42.513Z","updated_at":"2019-04-24T06:14:42.513Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"nick_roessler","url":"/nick_roessler"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4632696,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you.","markdown_message":"\u003cp\u003eThank you.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-24T08:39:52.253Z","updated_at":"2019-04-24T08:39:52.253Z","actor":{"username":"rafiy","cleared":false,"url":"/rafiy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4864484,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi!\n\nWe are currently in process of producing fixes for the issue. When we release the fixes, is there any preference on how we attribute this to you in commits and release notes?","markdown_message":"\u003cp\u003eHi!\u003c/p\u003e\n\n\u003cp\u003eWe are currently in process of producing fixes for the issue. When we release the fixes, is there any preference on how we attribute this to you in commits and release notes?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-17T07:42:45.540Z","updated_at":"2019-05-17T07:42:45.540Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4875818,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great to hear! We have no special preferences, just our names is great. Thank you!","markdown_message":"\u003cp\u003eGreat to hear! We have no special preferences, just our names is great. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-19T14:47:27.761Z","updated_at":"2019-05-19T14:47:27.761Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5180197,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Update to let you know that we are aiming to go public with this issue during August 2019.","markdown_message":"\u003cp\u003eUpdate to let you know that we are aiming to go public with this issue during August 2019.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T17:12:57.883Z","updated_at":"2019-06-24T17:12:57.883Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5214382,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for keeping us in the loop! Do you plan on getting this a CVE?","markdown_message":"\u003cp\u003eThanks for keeping us in the loop! Do you plan on getting this a CVE?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-28T13:47:02.332Z","updated_at":"2019-06-28T13:47:02.332Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5214423,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It has CVE-2019-11500","markdown_message":"\u003cp\u003eIt has CVE-2019-11500\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-28T13:55:08.867Z","updated_at":"2019-06-28T13:55:08.867Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5563232,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-13T10:47:11.946Z","updated_at":"2019-08-13T10:47:11.946Z","additional_data":{"old_severity":"Critical (9.8)","new_severity":"High (8.1)","old_severity_id":346822,"new_severity_id":491175},"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5563236,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We are going to go public with this issue by end of month.","markdown_message":"\u003cp\u003eWe are going to go public with this issue by end of month.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-13T10:48:10.664Z","updated_at":"2019-08-13T10:48:10.664Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"nick_roessler","url":"/nick_roessler"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5682690,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-28T12:33:48.679Z","updated_at":"2019-08-28T12:33:48.679Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6122288,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-24T06:38:32.885Z","updated_at":"2019-10-24T06:38:32.885Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}