{"id":264919,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNjQ5MTk=","url":"https://hackerone.com/reports/264919","title":"[www.zomato.com] IDOR - Delete/Deactivate any special menu of any Restaurants from Zomato","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2017-08-31T08:20:57.090Z","submitted_at":"2017-08-31T08:20:57.090Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"prateek_0490","url":"/prateek_0490","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/038/091/1ed302e84de48e3400ace67b5ea3928fb3c9d68e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":2943,"url":"https://hackerone.com/zomato","handle":"zomato","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Zomato","twitter_handle":"Zomato","website":"https://www.zomato.com","about":"The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"no-content","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-11-28T11:44:47.477Z","bug_reporter_agreed_on_going_public_at":"2017-10-29T11:44:42.688Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"","vulnerability_information_html":"","bounty_amount":"100.0","formatted_bounty":"$100","weakness":{"id":55,"name":"Insecure Direct Object Reference (IDOR)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-11-28T11:44:42.796Z","allow_singular_disclosure_after":-97349523.41325209,"singular_disclosure_allowed":true,"vote_count":15,"voters":["jensec","bogdantcaciuc","gerben_javado","prateek_0490","cuso4","vijay_kumar","eveeez","paresh_parmar","enginiku","japz","and 5 more..."],"structured_scope":{"databaseId":383,"asset_type":"URL","asset_identifier":"*.zomato.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1968327,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2017-08-31T10:06:06.812Z","updated_at":"2017-08-31T10:06:06.812Z","actor":{"username":"chicken-tikka","cleared":false,"url":"/chicken-tikka","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/059/568/cdbb30fd8932f00a06868a737ab5bdc5c57e5f00_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1993176,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-13T06:25:21.160Z","updated_at":"2017-09-13T06:25:21.160Z","actor":{"username":"prateek_0490","cleared":true,"url":"/prateek_0490","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/091/1ed302e84de48e3400ace67b5ea3928fb3c9d68e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2000924,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-16T06:16:51.374Z","updated_at":"2017-09-16T06:16:51.374Z","actor":{"username":"prateek_0490","cleared":true,"url":"/prateek_0490","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/091/1ed302e84de48e3400ace67b5ea3928fb3c9d68e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2002691,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-18T04:59:44.629Z","updated_at":"2017-09-18T04:59:44.629Z","actor":{"username":"chicken-tikka","cleared":false,"url":"/chicken-tikka","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/059/568/cdbb30fd8932f00a06868a737ab5bdc5c57e5f00_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"prateek_0490","url":"/prateek_0490"},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2013452,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-22T05:18:47.045Z","updated_at":"2017-09-22T05:18:47.045Z","actor":{"url":"/zomato","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Zomato"}},"bounty_amount":"100.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"zomato","collaborator":{"username":"prateek_0490","url":"/prateek_0490"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2111196,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-29T11:44:42.725Z","updated_at":"2017-10-29T11:44:42.725Z","first_to_agree":true,"actor":{"username":"prateek_0490","cleared":true,"url":"/prateek_0490","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/091/1ed302e84de48e3400ace67b5ea3928fb3c9d68e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2142187,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-08T07:19:45.975Z","updated_at":"2017-11-08T07:19:45.975Z","actor":{"username":"prateek_0490","cleared":true,"url":"/prateek_0490","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/091/1ed302e84de48e3400ace67b5ea3928fb3c9d68e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2186201,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-28T11:44:47.504Z","updated_at":"2017-11-28T11:44:47.504Z","actor":{"url":"/zomato","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Zomato"}},"genius_execution_id":null,"team_handle":"zomato","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":5973,"category":"team","content":"@prateek_0490 was able to delete and deactivate special menu of any restaurant using IDOR","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003e\u003ca href=\"/prateek_0490\"\u003e@prateek_0490\u003c/a\u003e was able to delete and deactivate special menu of any restaurant using IDOR\u003c/p\u003e\n"},{"id":5704,"category":"researcher","content":"Going through the JS, I found another cool function which looked interesting and vulnerable and indeed it was vulnerable -\n\n```\n{var a={request_type:\"deactivate-special-menu\",user_id:USER_ID,menu_set_id:e};$.post(\"XXX/XXXXXX)\"\n```\n\nIt asked for a lot of information, and it required a lots of research/recon to actually achieve this but since after getting a feel for couple of weeks on Zomato's application I found a way to break this feature, I was able to delete/deactivate any/all special menus of any restaurant doesn't matter if I owned that restaurant or not.\n\nI did try out to find a way to figure out the menu_set_id and moreover since I didn't wanted to test on any of @zomato's production users/customers/clients, I also had to find one of the test restaurants owned by Zomato on which I can replicate this, however during testing it was indeed found that there are lot's and lot's of restaurants who have these special menus, this would have lead to delete/deactivate all of them in One Go. I went ahead and deactivated a Special Menu of @zomato's internal testing restaurant_id XXXXXX with menu_set_id\":XXXX which was active till 24th September. I apologised for the same to the team :(\n\n# POC\n\n- An attacker first needs to figure out these information like user_id, menu_set_id before deactivating any menus. For that we can issue a Post Request with correct var at\n\n\u003e Request\n\n```\nPOST /XX/XXXXX?res_id=XXXXX HTTP/1.1\nHost: api.zomato.com\nX-Device-Is-Rooted: 0\nCookie: \u003cCOOKIES\u003e\nContent-Type: application/x-www-form-urlencoded\n\naccess_token=\u003cyour token\u003e\u0026client_id=zomato_ios_v2\n```\n\n- Since there was no restriction or a check to see if we actually hold that restaurant it leaked lots and lot's of useful stuff which was then chained with deleting the special menus of any restaurants.\n\n- Now using all this information, an attacker makes a Post Request at -\n\n\u003e Request\n\n`XXX/XXXXX.php`\n\nwith var as `user_id=XXXX\u0026type=SPECIAL\u0026request_type=get-special-menus\u0026res_id=XXXXX`\n\nthis gave some more useful information.\n\n- Now the final request was made by changing the request_type in the Post Parameters, since I obtained the menu_set_id in our above requests, I made a final request to deactivate/delete that from the restaurants.\n\nIn case you have any questions, please feel free to reach me on [Twitter] (https://twitter.com/prateek_0490). :)\n\nBest Regards,\nPrateek Tiwari","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eGoing through the JS, I found another cool function which looked interesting and vulnerable and indeed it was vulnerable -\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{var a={request_type:\u0026quot;deactivate-special-menu\u0026quot;,user_id:USER_ID,menu_set_id:e};$.post(\u0026quot;XXX/XXXXXX)\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt asked for a lot of information, and it required a lots of research/recon to actually achieve this but since after getting a feel for couple of weeks on Zomato\u0026#39;s application I found a way to break this feature, I was able to delete/deactivate any/all special menus of any restaurant doesn\u0026#39;t matter if I owned that restaurant or not.\u003c/p\u003e\n\n\u003cp\u003eI did try out to find a way to figure out the menu_set_id and moreover since I didn\u0026#39;t wanted to test on any of \u003ca href=\"/zomato\"\u003e@zomato\u003c/a\u003e\u0026#39;s production users/customers/clients, I also had to find one of the test restaurants owned by Zomato on which I can replicate this, however during testing it was indeed found that there are lot\u0026#39;s and lot\u0026#39;s of restaurants who have these special menus, this would have lead to delete/deactivate all of them in One Go. I went ahead and deactivated a Special Menu of \u003ca href=\"/zomato\"\u003e@zomato\u003c/a\u003e\u0026#39;s internal testing restaurant_id XXXXXX with menu_set_id\u0026quot;:XXXX which was active till 24th September. I apologised for the same to the team :(\u003c/p\u003e\n\n\u003ch1 id=\"poc\"\u003ePOC\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eAn attacker first needs to figure out these information like user_id, menu_set_id before deactivating any menus. For that we can issue a Post Request with correct var at\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRequest\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /XX/XXXXX?res_id=XXXXX HTTP/1.1\nHost: api.zomato.com\nX-Device-Is-Rooted: 0\nCookie: \u0026lt;COOKIES\u0026gt;\nContent-Type: application/x-www-form-urlencoded\n\naccess_token=\u0026lt;your token\u0026gt;\u0026amp;client_id=zomato_ios_v2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eSince there was no restriction or a check to see if we actually hold that restaurant it leaked lots and lot\u0026#39;s of useful stuff which was then chained with deleting the special menus of any restaurants.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNow using all this information, an attacker makes a Post Request at -\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRequest\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003eXXX/XXXXX.php\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ewith var as \u003ccode\u003euser_id=XXXX\u0026amp;type=SPECIAL\u0026amp;request_type=get-special-menus\u0026amp;res_id=XXXXX\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis gave some more useful information.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNow the final request was made by changing the request_type in the Post Parameters, since I obtained the menu_set_id in our above requests, I made a final request to deactivate/delete that from the restaurants.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn case you have any questions, please feel free to reach me on \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fprateek_0490\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTwitter\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. :)\u003c/p\u003e\n\n\u003cp\u003eBest Regards,\u003cbr\u003e\nPrateek Tiwari\u003c/p\u003e\n"}]}