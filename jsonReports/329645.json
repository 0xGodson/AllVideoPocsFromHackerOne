{"id":329645,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMjk2NDU=","url":"https://hackerone.com/reports/329645","title":"Silent omission of certificate hostname verification in LibreSSL and BoringSSL","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2018-03-25T12:36:24.157Z","submitted_at":"2018-03-25T12:36:24.157Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"tiran","url":"/tiran","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":20,"url":"https://hackerone.com/internet","handle":"internet","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"The Internet","twitter_handle":null,"website":"","about":"Hack all the things."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2018-8970"],"singular_disclosure_disabled":false,"disclosed_at":"2019-09-26T20:38:28.174Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-08-27T20:38:25.916Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Abstract\n\nLibreSSL and BoringSSL implemented ``X509_VERIFY_PARAM_set1_host`` differently than OpenSSL. All applications that use the preferred and documented way to configure a TLS connection for hostname validation, silently neglect to perform hostname validation at all. As a consequence, they are vulnerable to MitM attacks.\n\n## Description\n\nOpenSSL 1.0.2 introduced the function [X509_VERIFY_PARAM_set1_host](https://www.openssl.org/docs/man1.0.2/crypto/X509_VERIFY_PARAM_set1_host.html). It sets the expected DNS hostname for a TLS connection. During the handshake, OpenSSL verifies, that the hostname matches one of the DNS names in the subject alternative name extension of the server's X.509 certificate. It's a critical step to authenticate the identity of a TLS server. A client **must** properly validate the server's DNS name.\n\nThe ``X509_VERIFY_PARAM_set1_host`` function takes three parameters. The second parameter is the expected host name, the third parameter is the length of the host name. OpenSSL allows the caller to pass in ``0`` as namelen. It indicates that the server name is a NULL terminated C string. It's documented in the man page for the function and used as example on OpenSSL's [wiki page](https://wiki.openssl.org/index.php/Hostname_validation) about hostname validation. The wiki page is the top hit for a Google search for \"openssl hostname validation\".\n\nLibreSSL and BoringSSL implement the same function. LibreSSL release 2.7.0 added ``X509_VERIFY_PARAM_set1_host`` just a few days ago. However both libraries behave differently in very subtle but critical way. Their implementation of ``X509_VERIFY_PARAM_set1_host(param, \"hostname\", 0)`` does **not** configure the TLS/SSL connection to validate the hostname. Instead the call only clears any previously configured hostname and returns success. As a consequence, LibreSSL and BoringSSL do **not** perform any hostname validation and except just any arbitrary certificate for any hostname as long as the certificate is generally trusted. Since the function call returns success, the application never sees an error, too.\n\nThe man page for LibreSSL 2.7.0 even documented to support the calling convention. The release took the divergent implementation from BoringSSL but the documentation from OpenSSL.\n\n## Demo\n\nThe attached files and https://github.com/tiran/CVE-2018-8970 are a demo for the bug. WIth OpenSSL the command fails as expected with a hostname mismatch error:\n\n```\n$ make\n...\nError connecting to server\n140678245971584:error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed:ssl/statem/statem_clnt.c:1230:\nX509 verify error: Hostname mismatch\n```\n\nWith LibreSSL 2.7.0 the command does not fail\n\n```\n$ make SSL_BASEDIR=/path/to/libressl/2.7.0\n...\n./cve2018_8970_demo\nHTTP/1.1 200 OK\nServer: nginx\nContent-Type: text/plain\nX-Frame-Options: SAMEORIGIN\nx-xss-protection: 1; mode=block\nX-Clacks-Overhead: GNU Terry Pratchett\nVia: 1.1 varnish\nContent-Length: 539\nAccept-Ranges: bytes\nDate: Sun, 25 Mar 2018 12:30:49 GMT\n...\nCVE2018-8970: Expected a hostname mismatch error\n```\n\n## Resources\n\n* LibreSSL CVE https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8970\n* LibreSSL 2.7.1 fix https://github.com/libressl-portable/openbsd/commit/0654414afcce51a16d35d05060190a3ec4618d42\n* BoringSSL ticket https://bugs.chromium.org/p/chromium/issues/detail?id=824799\n* BoringSSL fix https://boringssl.googlesource.com/boringssl/+/e759a9cd84198613199259dbed401f4951747cff\n\n## Impact\n\nThe silent omission of hostname verification completely breaks confidence of TLS/SSL protocol.  It consequently allows man-in-the-middle attackers to spoof servers and obtain sensitive information via any  certificate. An attacker can use any trusted certificate from any CA and pretend to be any website. For example a malicious Wifi provider could use a Lets Encrypt cert to spoof a user to be Apple, Google, or Facebook.\n\n## CPython\nCPython's [ssl module](https://github.com/python/cpython/blob/4ca0739c9d97ac7cd45499e0d31be68dc659d0e1/Modules/_ssl.c#L855) was directly affected by the bug. Since Python 3.7 the module uses ``X509_VERIFY_PARAM_set1_host(param, server_hostname, 0)`` to match the server's hostname against the certificate.\n\n## Mongo DB\nMongo DB's [C driver](https://github.com/mongodb/mongo-c-driver/blob/9163c64753f9f2d358a7203ce95741f87061f6b4/src/mongoc/mongoc-stream-tls-openssl.c#L687) also uses ``X509_VERIFY_PARAM_set1_host`` with namelen=0. The code segment is currently disabled for LibreSSL because it hasn't been ported to LibreSSL 2.7 yet. With high probability they would have been vulnerable, too.\n\n## More\nI suspect that more application are vulnerable to the bug. OpenSSL's wiki page https://wiki.openssl.org/index.php/Hostname_validation recommends ``X509_VERIFY_PARAM_set1_host(param, servername, 0);`` as preferred way to enable hostname verification. The namelen=0 is also explicitly mentioned in the documentation and man page for [X509_VERIFY_PARAM_set1_host](https://www.openssl.org/docs/man1.0.2/crypto/X509_VERIFY_PARAM_set1_host.html) since OpenSSL 1.0.2 and LibreSSL 2.7.0.","vulnerability_information_html":"\u003ch2 id=\"abstract\"\u003eAbstract\u003c/h2\u003e\n\n\u003cp\u003eLibreSSL and BoringSSL implemented \u003ccode\u003eX509_VERIFY_PARAM_set1_host\u003c/code\u003e differently than OpenSSL. All applications that use the preferred and documented way to configure a TLS connection for hostname validation, silently neglect to perform hostname validation at all. As a consequence, they are vulnerable to MitM attacks.\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eOpenSSL 1.0.2 introduced the function \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.openssl.org%2Fdocs%2Fman1.0.2%2Fcrypto%2FX509_VERIFY_PARAM_set1_host.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eX509_VERIFY_PARAM_set1_host\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. It sets the expected DNS hostname for a TLS connection. During the handshake, OpenSSL verifies, that the hostname matches one of the DNS names in the subject alternative name extension of the server\u0026#39;s X.509 certificate. It\u0026#39;s a critical step to authenticate the identity of a TLS server. A client \u003cstrong\u003emust\u003c/strong\u003e properly validate the server\u0026#39;s DNS name.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eX509_VERIFY_PARAM_set1_host\u003c/code\u003e function takes three parameters. The second parameter is the expected host name, the third parameter is the length of the host name. OpenSSL allows the caller to pass in \u003ccode\u003e0\u003c/code\u003e as namelen. It indicates that the server name is a NULL terminated C string. It\u0026#39;s documented in the man page for the function and used as example on OpenSSL\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Fwiki.openssl.org%2Findex.php%2FHostname_validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewiki page\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e about hostname validation. The wiki page is the top hit for a Google search for \u0026quot;openssl hostname validation\u0026quot;.\u003c/p\u003e\n\n\u003cp\u003eLibreSSL and BoringSSL implement the same function. LibreSSL release 2.7.0 added \u003ccode\u003eX509_VERIFY_PARAM_set1_host\u003c/code\u003e just a few days ago. However both libraries behave differently in very subtle but critical way. Their implementation of \u003ccode\u003eX509_VERIFY_PARAM_set1_host(param, \u0026quot;hostname\u0026quot;, 0)\u003c/code\u003e does \u003cstrong\u003enot\u003c/strong\u003e configure the TLS/SSL connection to validate the hostname. Instead the call only clears any previously configured hostname and returns success. As a consequence, LibreSSL and BoringSSL do \u003cstrong\u003enot\u003c/strong\u003e perform any hostname validation and except just any arbitrary certificate for any hostname as long as the certificate is generally trusted. Since the function call returns success, the application never sees an error, too.\u003c/p\u003e\n\n\u003cp\u003eThe man page for LibreSSL 2.7.0 even documented to support the calling convention. The release took the divergent implementation from BoringSSL but the documentation from OpenSSL.\u003c/p\u003e\n\n\u003ch2 id=\"demo\"\u003eDemo\u003c/h2\u003e\n\n\u003cp\u003eThe attached files and \u003ca title=\"https://github.com/tiran/CVE-2018-8970\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ftiran%2FCVE-2018-8970\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/tiran/CVE-2018-8970\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e are a demo for the bug. WIth OpenSSL the command fails as expected with a hostname mismatch error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ make\n...\nError connecting to server\n140678245971584:error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed:ssl/statem/statem_clnt.c:1230:\nX509 verify error: Hostname mismatch\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith LibreSSL 2.7.0 the command does not fail\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ make SSL_BASEDIR=/path/to/libressl/2.7.0\n...\n./cve2018_8970_demo\nHTTP/1.1 200 OK\nServer: nginx\nContent-Type: text/plain\nX-Frame-Options: SAMEORIGIN\nx-xss-protection: 1; mode=block\nX-Clacks-Overhead: GNU Terry Pratchett\nVia: 1.1 varnish\nContent-Length: 539\nAccept-Ranges: bytes\nDate: Sun, 25 Mar 2018 12:30:49 GMT\n...\nCVE2018-8970: Expected a hostname mismatch error\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"resources\"\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eLibreSSL CVE \u003ca title=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8970\" href=\"/redirect?url=https%3A%2F%2Fcve.mitre.org%2Fcgi-bin%2Fcvename.cgi%3Fname%3DCVE-2018-8970\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8970\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eLibreSSL 2.7.1 fix \u003ca title=\"https://github.com/libressl-portable/openbsd/commit/0654414afcce51a16d35d05060190a3ec4618d42\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Flibressl-portable%2Fopenbsd%2Fcommit%2F0654414afcce51a16d35d05060190a3ec4618d42\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/libressl-portable/openbsd/commit/0654414afcce51a16d35d05060190a3ec4618d42\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eBoringSSL ticket \u003ca title=\"https://bugs.chromium.org/p/chromium/issues/detail?id=824799\" href=\"/redirect?url=https%3A%2F%2Fbugs.chromium.org%2Fp%2Fchromium%2Fissues%2Fdetail%3Fid%3D824799\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.chromium.org/p/chromium/issues/detail?id=824799\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eBoringSSL fix \u003ca title=\"https://boringssl.googlesource.com/boringssl/+/e759a9cd84198613199259dbed401f4951747cff\" href=\"/redirect?url=https%3A%2F%2Fboringssl.googlesource.com%2Fboringssl%2F%2B%2Fe759a9cd84198613199259dbed401f4951747cff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://boringssl.googlesource.com/boringssl/+/e759a9cd84198613199259dbed401f4951747cff\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe silent omission of hostname verification completely breaks confidence of TLS/SSL protocol.  It consequently allows man-in-the-middle attackers to spoof servers and obtain sensitive information via any  certificate. An attacker can use any trusted certificate from any CA and pretend to be any website. For example a malicious Wifi provider could use a Lets Encrypt cert to spoof a user to be Apple, Google, or Facebook.\u003c/p\u003e\n\n\u003ch2 id=\"cpython\"\u003eCPython\u003c/h2\u003e\n\n\u003cp\u003eCPython\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpython%2Fcpython%2Fblob%2F4ca0739c9d97ac7cd45499e0d31be68dc659d0e1%2FModules%2F_ssl.c%23L855\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003essl module\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e was directly affected by the bug. Since Python 3.7 the module uses \u003ccode\u003eX509_VERIFY_PARAM_set1_host(param, server_hostname, 0)\u003c/code\u003e to match the server\u0026#39;s hostname against the certificate.\u003c/p\u003e\n\n\u003ch2 id=\"mongo-db\"\u003eMongo DB\u003c/h2\u003e\n\n\u003cp\u003eMongo DB\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmongodb%2Fmongo-c-driver%2Fblob%2F9163c64753f9f2d358a7203ce95741f87061f6b4%2Fsrc%2Fmongoc%2Fmongoc-stream-tls-openssl.c%23L687\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eC driver\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e also uses \u003ccode\u003eX509_VERIFY_PARAM_set1_host\u003c/code\u003e with namelen=0. The code segment is currently disabled for LibreSSL because it hasn\u0026#39;t been ported to LibreSSL 2.7 yet. With high probability they would have been vulnerable, too.\u003c/p\u003e\n\n\u003ch2 id=\"more\"\u003eMore\u003c/h2\u003e\n\n\u003cp\u003eI suspect that more application are vulnerable to the bug. OpenSSL\u0026#39;s wiki page \u003ca title=\"https://wiki.openssl.org/index.php/Hostname_validation\" href=\"/redirect?url=https%3A%2F%2Fwiki.openssl.org%2Findex.php%2FHostname_validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wiki.openssl.org/index.php/Hostname_validation\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e recommends \u003ccode\u003eX509_VERIFY_PARAM_set1_host(param, servername, 0);\u003c/code\u003e as preferred way to enable hostname verification. The namelen=0 is also explicitly mentioned in the documentation and man page for \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.openssl.org%2Fdocs%2Fman1.0.2%2Fcrypto%2FX509_VERIFY_PARAM_set1_host.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eX509_VERIFY_PARAM_set1_host\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e since OpenSSL 1.0.2 and LibreSSL 2.7.0.\u003c/p\u003e\n","weakness":{"id":28,"name":"Improper Certificate Validation"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":278445,"file_name":"Makefile","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/278/445/bbebdeb4022af7260e8a3efd9613df38b18da607/Makefile?response-content-disposition=attachment%3B%20filename%3D%22Makefile%22%3B%20filename%2A%3DUTF-8%27%27Makefile\u0026response-content-type=text%2Fx-makefile\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T053624Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=ddd9f0c2a6ed7a84c698976445ffea15784414766c11353ba19d418c1f832652","file_size":307,"type":"text/x-makefile"},{"id":278446,"file_name":"cve2018_8970_demo.c","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/278/446/591d0d5a333e60000ab472b94326ec017a208834/cve2018_8970_demo.c?response-content-disposition=attachment%3B%20filename%3D%22cve2018_8970_demo.c%22%3B%20filename%2A%3DUTF-8%27%27cve2018_8970_demo.c\u0026response-content-type=text%2Fx-c\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T053624Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=4cec3a864fe275a6825aaad1ede83615f6c679bc4d5074bb2c284c4da32ce383","file_size":3079,"type":"text/x-c"}],"allow_singular_disclosure_at":"2019-09-26T20:38:26.042Z","allow_singular_disclosure_after":-39689878.78541663,"singular_disclosure_allowed":true,"vote_count":3,"voters":["sameerphad72","01739091183","royal_rajput"],"severity":{"rating":"critical","score":9.1,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2528573,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I forgot to mention, the bug would have impacted all users and applications running under Python 3.7 on Alpine Linux, OpenBSD, DragonFly BSD and any other distribution and vendor that uses LibreSSL.","markdown_message":"\u003cp\u003eI forgot to mention, the bug would have impacted all users and applications running under Python 3.7 on Alpine Linux, OpenBSD, DragonFly BSD and any other distribution and vendor that uses LibreSSL.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-25T12:39:14.676Z","updated_at":"2018-03-25T12:39:14.676Z","actor":{"username":"tiran","cleared":false,"url":"/tiran","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2614836,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @tiran,\n\nApologies for the delay and thank you for your report! I have sent a note to the IBB panel to discuss if this will qualify for a bounty or not, as soon as we have come to a conclusion I will provide you with an update here.\n\n\\- @thefrog","markdown_message":"\u003cp\u003eHi \u003ca href=\"/tiran\"\u003e@tiran\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eApologies for the delay and thank you for your report! I have sent a note to the IBB panel to discuss if this will qualify for a bounty or not, as soon as we have come to a conclusion I will provide you with an update here.\u003c/p\u003e\n\n\u003cp\u003e- \u003ca href=\"/thefrog\"\u003e@thefrog\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-15T09:03:11.073Z","updated_at":"2018-04-15T09:03:11.073Z","actor":{"username":"thefrog","cleared":false,"url":"/thefrog","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/246/015/2eead02646771af4df7aa20c21edb7d5dc99d3da_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2625788,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @thefrog ,\n\nThanks for getting back to me! It's fine, we are all volunteers and all busy people. I asked Paul to get in contact with somebody, because I wasn't sure if my inquiry got lost in the mail. :)\n\nI have some updates that you might be interested in:\n\n* The Chromium bug report https://bugs.chromium.org/p/chromium/issues/detail?id=824799 has been made public. * Adam Langley has updated OpenSSL's wiki and replaced the example with a better one. The new version no longer uses namelen 0 and has proper error checking. https://wiki.openssl.org/index.php?title=Hostname_validation\u0026type=revision\u0026diff=2645\u0026oldid=2552\n* I have hardened CPython's implementation and replaced namelen 0 with strlen() of the second parameter.\n* My mail https://mail.python.org/pipermail/python-dev/2018-April/152624.html to the public Python developer mailing list explains the issue in a slightly different angle.\n\nRegards,\nChristian","markdown_message":"\u003cp\u003eHi \u003ca href=\"/thefrog\"\u003e@thefrog\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eThanks for getting back to me! It\u0026#39;s fine, we are all volunteers and all busy people. I asked Paul to get in contact with somebody, because I wasn\u0026#39;t sure if my inquiry got lost in the mail. :)\u003c/p\u003e\n\n\u003cp\u003eI have some updates that you might be interested in:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe Chromium bug report \u003ca title=\"https://bugs.chromium.org/p/chromium/issues/detail?id=824799\" href=\"/redirect?url=https%3A%2F%2Fbugs.chromium.org%2Fp%2Fchromium%2Fissues%2Fdetail%3Fid%3D824799\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.chromium.org/p/chromium/issues/detail?id=824799\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e has been made public. * Adam Langley has updated OpenSSL\u0026#39;s wiki and replaced the example with a better one. The new version no longer uses namelen 0 and has proper error checking. \u003ca title=\"https://wiki.openssl.org/index.php?title=Hostname_validation\u0026amp;type=revision\u0026amp;diff=2645\u0026amp;oldid=2552\" href=\"/redirect?url=https%3A%2F%2Fwiki.openssl.org%2Findex.php%3Ftitle%3DHostname_validation%26type%3Drevision%26diff%3D2645%26oldid%3D2552\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wiki.openssl.org/index.php?title=Hostname_validation\u0026amp;type=revision\u0026amp;diff=2645\u0026amp;oldid=2552\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eI have hardened CPython\u0026#39;s implementation and replaced namelen 0 with strlen() of the second parameter.\u003c/li\u003e\n\u003cli\u003eMy mail \u003ca title=\"https://mail.python.org/pipermail/python-dev/2018-April/152624.html\" href=\"/redirect?url=https%3A%2F%2Fmail.python.org%2Fpipermail%2Fpython-dev%2F2018-April%2F152624.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://mail.python.org/pipermail/python-dev/2018-April/152624.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to the public Python developer mailing list explains the issue in a slightly different angle.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\nChristian\u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-17T19:29:41.842Z","updated_at":"2018-04-17T19:29:41.842Z","actor":{"username":"tiran","cleared":false,"url":"/tiran","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3372054,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @thefrog, I haven't heard back from you in a while. Is my vulerability report still under consideration?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/thefrog\"\u003e@thefrog\u003c/a\u003e, I haven\u0026#39;t heard back from you in a while. Is my vulerability report still under consideration?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-22T06:37:37.277Z","updated_at":"2018-09-22T06:37:37.277Z","actor":{"username":"tiran","cleared":false,"url":"/tiran","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4922553,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, the bug has been in triage state for a year. Is anybody still looking into it?","markdown_message":"\u003cp\u003eHi, the bug has been in triage state for a year. Is anybody still looking into it?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-25T09:53:15.544Z","updated_at":"2019-05-25T09:53:15.544Z","actor":{"username":"tiran","cleared":false,"url":"/tiran","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5678454,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"Part of the IBB's charter (https://internetbugbounty.org/charter.html) includes \"Mind the Gap\":\n\n\u003e In order to most efficiently allocate funds, the Panel should be cognizant of what software is already covered by other efforts, and how. For example, if another organization rewards for providing patches to open source projects or funds secure development, the IBB should not duplicate this effort, but instead serve in a complementary fashion by rewarding researchers that identify and disclose vulnerabilities to the maintainers. The IBB should proactively identify software that has a gap in rewards for vulnerability research; in conjunction with other criteria, this is a good indicator that the software should be moved into scope.\n\nI did bring this to the attention to the Panel, and we agreed that the Mind the Gap rule applies here, as Google paid $500 for this vulnerability. As such, we will not be awarding a bounty. Thank you though for your research, and good luck on your future bug hunting!","markdown_message":"\u003cp\u003ePart of the IBB\u0026#39;s charter (\u003ca title=\"https://internetbugbounty.org/charter.html\" href=\"/redirect?url=https%3A%2F%2Finternetbugbounty.org%2Fcharter.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://internetbugbounty.org/charter.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) includes \u0026quot;Mind the Gap\u0026quot;:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn order to most efficiently allocate funds, the Panel should be cognizant of what software is already covered by other efforts, and how. For example, if another organization rewards for providing patches to open source projects or funds secure development, the IBB should not duplicate this effort, but instead serve in a complementary fashion by rewarding researchers that identify and disclose vulnerabilities to the maintainers. The IBB should proactively identify software that has a gap in rewards for vulnerability research; in conjunction with other criteria, this is a good indicator that the software should be moved into scope.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI did bring this to the attention to the Panel, and we agreed that the Mind the Gap rule applies here, as Google paid $500 for this vulnerability. As such, we will not be awarding a bounty. Thank you though for your research, and good luck on your future bug hunting!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-27T20:37:46.771Z","updated_at":"2019-08-27T20:37:46.771Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5678461,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-27T20:38:08.096Z","updated_at":"2019-08-27T20:38:08.096Z","cve_ids":["CVE-2018-8970"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5678464,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-27T20:38:20.161Z","updated_at":"2019-08-27T20:38:20.161Z","actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"tiran","url":"/tiran"},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5678465,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-27T20:38:25.940Z","updated_at":"2019-08-27T20:38:25.940Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5899314,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-26T20:38:28.213Z","updated_at":"2019-09-26T20:38:28.213Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}