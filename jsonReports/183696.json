{"id":183696,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODM2OTY=","url":"https://hackerone.com/reports/183696","title":"Invalid memory access while freeing memory, caused by invalid type passed to mrb_ary_unshift","state":"Closed","substate":"duplicate","readable_substate":"Duplicate","created_at":"2016-11-21T04:57:52.137Z","submitted_at":"2016-11-21T04:57:52.137Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"haquaman","url":"/haquaman","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-12-17T20:51:10.069Z","bug_reporter_agreed_on_going_public_at":"2016-12-17T20:16:27.760Z","team_member_agreed_on_going_public_at":"2016-12-17T20:51:10.024Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\n\nPhew, this was a tricky one as the cause wasn't next door to where the dereference happened!\n\nThe file causing this is:\n```\na *case\n  when nil\n  redo\nend\n```\n\n```\n$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n```\n\n```\n$ ./dev/bin/mruby crash.rb\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\nSegmentation fault: 11\n```\n\n```\n(lldb) target create \"./dev/bin/mruby\"\nCurrent executable set to './dev/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 47144 launched: './dev/bin/mruby' (x86_64)\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n\t[0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\nProcess 47144 stopped\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n    frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\nmruby`kh_destroy_iv:\n-\u003e  0x100037533 \u003c+35\u003e: movq   0x18(%rax), %rax\n    0x100037537 \u003c+39\u003e: movq   %rax, %rsi\n    0x10003753a \u003c+42\u003e: callq  0x100017740               ; mrb_free\n    0x10003753f \u003c+47\u003e: movq   -0x8(%rbp), %rdi\n(lldb) bt\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n  * frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\n    frame #1: 0x0000000100037d9d mruby`iv_free + 29\n    frame #2: 0x0000000100037e90 mruby`mrb_gc_free_iv + 48\n    frame #3: 0x0000000100017a76 mruby`obj_free + 86\n    frame #4: 0x00000001000179e7 mruby`free_heap + 135\n    frame #5: 0x0000000100017dfd mruby`mrb_gc_destroy + 29\n    frame #6: 0x000000010002b2a2 mruby`mrb_close + 210\n    frame #7: 0x0000000100001475 mruby`cleanup + 133\n    frame #8: 0x0000000100000e6b mruby`main + 1147\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000001\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000006\n       rdx = 0x0000000100017a66  mruby`obj_free + 70\n       rdi = 0x0000000100300390\n       rsi = 0x0000000000000001\n       rbp = 0x00007fff5fbfd870\n       rsp = 0x00007fff5fbfd860\n        r8 = 0x000000000000000d\n        r9 = 0x000000010030f950\n       r10 = 0x00000000013292e2\n       r11 = 0x0000000100300000\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100037533  mruby`kh_destroy_iv + 35\n    rflags = 0x0000000000010202\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n```\n\nThe cause for this was that a non-array type was getting passed to `mrb_ary_unshift`, which then treated it like an `RArray` struct, and incremented the `len`, which accidentally incremented the `iv` field on the `RObject` struct it actually was. This was then used when trying to free the object in `mrb_gc_free_iv`, which just checks `if (obj-\u003eiv)` (`src/variable.c:435`), which is true (it is `0x01`), so calls `iv_free` (`src/variable.c:385`), which dereferences the table which is an invalid memory address of `0x01`.\n\nTo show this in action, here is a gdb output with symbols (on a different system). I started the program and ran til the crash, then went up the stack until we could see the parent `obj` struct, then set a watchpoint on the `iv` field. Restarted, then continued until the `iv` field was set to `0x0` again, then set a breakpoint for `mrb_ary_unshift`. Stepped through until the `a` variable wasn't \"optimized out\" (happens on my fuzzing box due to setup), and then set a watchpoint on `a-\u003elen`, then continued. It stops showing both the `iv` and the `len` value changes to 1 at the same time showing the bug.\n\n```\n$ gdb --args ./bin/mruby crash.rb\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e.\nFind the GDB manual and other documentation resources online at:\n\u003chttp://www.gnu.org/software/gdb/documentation/\u003e.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) up\n#1  iv_free (t=0x1, mrb=0x602e0001fc60) at /root/mruby-fixes/src/variable.c:387\n387       kh_destroy(iv, mrb, \u0026t-\u003eh);\n(gdb)\n#2  mrb_gc_free_iv (mrb=0x602e0001fc60, obj=0x609a00007870)\n    at /root/mruby-fixes/src/variable.c:436\n436         iv_free(mrb, obj-\u003eiv);\n(gdb) watch -location obj-\u003eiv\nHardware watchpoint 1: -location obj-\u003eiv\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\n\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nHardware watchpoint 1: -location obj-\u003eiv\n\nOld value = \u003cunreadable\u003e\nNew value = (struct iv_tbl *) 0x0\nmemset () at ../sysdeps/x86_64/memset.S:94\n94      ../sysdeps/x86_64/memset.S: No such file or directory.\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u003eiv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x609a00007840\nadd_heap (gc=0x602e0001fd38, mrb=0x609a00000400) at /root/mruby-fixes/src/gc.c:328\n328       for (p = objects(page), e=p+MRB_HEAP_PAGE_SIZE; p\u003ce; p++) {\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u003eiv\n\nOld value = (struct iv_tbl *) 0x609a00007840\nNew value = (struct iv_tbl *) 0x0\nmrb_obj_alloc (mrb=mrb@entry=0x602e0001fc60, ttype=ttype@entry=MRB_TT_OBJECT,\n    cls=0x609a0000c3d0) at /root/mruby-fixes/src/gc.c:500\n500       *(RVALUE *)p = RVALUE_zero;\n(gdb) break mrb_ary_unshift\nBreakpoint 2 at 0x41e000: file /root/mruby-fixes/src/array.c, line 485.\n(gdb) c\nContinuing.\ncrash.rb:1:3: '*' interpreted as argument prefix\n\nBreakpoint 2, mrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:485\n485     {\n(gdb) n\n\u003csnip while getting to a point where a isn't \"optimized out\"\u003e\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:496\n496         if (a-\u003eaux.capa \u003c a-\u003elen + 1)\n(gdb) p *a\n$1 = {tt = MRB_TT_OBJECT, color = 1, flags = 0, c = 0x609a00007840,\n  gcnext = 0x609a0000c3d0, len = 0, aux = {capa = 0, shared = 0x0}, ptr = 0x0}\n(gdb) watch -location a-\u003elen\nHardware watchpoint 3: -location a-\u003elen\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u003eiv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x1\nHardware watchpoint 3: -location a-\u003elen\n\nOld value = 0\nNew value = 1\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:502\n502       mrb_field_write_barrier_value(mrb, (struct RBasic*)a, item);\n(gdb) d br\nDelete all breakpoints? (y or n) y\n(gdb) c\nContinuing.\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 31010] will be killed.\n\nQuit anyway? (y or n) y\n\n```\n\nA fix for this would be similar as follows:\n\n```\ndiff --git a/src/array.c b/src/array.c\nindex 838f6e4..bd44c7f 100644\n--- a/src/array.c\n+++ b/src/array.c\n@@ -483,6 +483,11 @@ mrb_ary_shift(mrb_state *mrb, mrb_value self)\n MRB_API mrb_value\n mrb_ary_unshift(mrb_state *mrb, mrb_value self, mrb_value item)\n {\n+  if (!mrb_array_p(self)) {\n+    mrb_raisef(mrb, E_TYPE_ERROR, \"expecting Array, got %S\", mrb_obj_value(mrb_obj_class(mrb, self)));\n+    return mrb_nil_value();\n+  }\n+\n   struct RArray *a = mrb_ary_ptr(self);\n \n   if (ARY_SHARED_P(a)\n```\n\nAs mentioned above, this affects mruby-engine:\n\n```\n./bin/sandbox:20:in `sandbox_eval': undefined method 'a' for main (MRubyEngine::EngineRuntimeError)\n\tfrom ./bin/sandbox:20:in `\u003cmain\u003e'\n./bin/sandbox: [BUG] Segmentation fault at 0x00000000000019\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon't forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0001 p:0000 s:0002 E:0013d0 (none) [FINISH]\n\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000108 rbx: 0x0000000000000001 rcx: 0x00000001017eca32\n rdx: 0x00000001017ecbe0 rdi: 0x00000001018fc440 rsi: 0x0000000101903d30\n rbp: 0x00007fff5ed50660 rsp: 0x00007fff5ed50650  r8: 0x0000000101929e70\n  r9: 0x000000010191cad0 r10: 0x000000010191c830 r11: 0x00007fd4ad300000\n r12: 0x0000000101903d30 r13: 0x0000000000000000 r14: 0x00000001018fc440\n r15: 0x00000001018fc920 rip: 0x00000001018034f3 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010104c5d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100eee023 rb_bug_context + 483\n2   ruby                                0x0000000100fc1653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001018034f3 mrb_gc_free_iv + 19\n5   ???                                 0x0000000101903d30 0x0 + 4321197360\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n\u003csnip various gems\u003e\n  185 /Users/\u003csnip\u003e/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/\u003csnip\u003e/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\n```\n\nApplying the patch above to `ext/mruby_engine/mruby` and recompiling fixes the issue.\n\n```\n$ ./bin/mruby ../crash.rb\n../crash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] ../crash.rb:3\nTypeError: expecting Array, got Object\n```\n\n```\n$ ./bin/sandbox crash.rb\n./bin/sandbox:20:in `sandbox_eval': expecting Array, got Object (MRubyEngine::EngineRuntimeError)\n        from ./bin/sandbox:20:in `\u003cmain\u003e'\n```\n\nCheers,\n\nHugh","vulnerability_information_html":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003ePhew, this was a tricky one as the cause wasn\u0026#39;t next door to where the dereference happened!\u003c/p\u003e\n\n\u003cp\u003eThe file causing this is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ea *case\n  when nil\n  redo\nend\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ./dev/bin/mruby crash.rb\ncrash.rb:1:3: \u0026#39;*\u0026#39; interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method \u0026#39;a\u0026#39; for main (NoMethodError)\nSegmentation fault: 11\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e(lldb) target create \u0026quot;./dev/bin/mruby\u0026quot;\nCurrent executable set to \u0026#39;./dev/bin/mruby\u0026#39; (x86_64).\n(lldb) settings set -- target.run-args  \u0026quot;crash.rb\u0026quot;\n(lldb) r\nProcess 47144 launched: \u0026#39;./dev/bin/mruby\u0026#39; (x86_64)\ncrash.rb:1:3: \u0026#39;*\u0026#39; interpreted as argument prefix\ntrace:\n    [0] crash.rb:3\ncrash.rb:3: undefined method \u0026#39;a\u0026#39; for main (NoMethodError)\nProcess 47144 stopped\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = \u0026#39;com.apple.main-thread\u0026#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n    frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\nmruby`kh_destroy_iv:\n-\u0026gt;  0x100037533 \u0026lt;+35\u0026gt;: movq   0x18(%rax), %rax\n    0x100037537 \u0026lt;+39\u0026gt;: movq   %rax, %rsi\n    0x10003753a \u0026lt;+42\u0026gt;: callq  0x100017740               ; mrb_free\n    0x10003753f \u0026lt;+47\u0026gt;: movq   -0x8(%rbp), %rdi\n(lldb) bt\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = \u0026#39;com.apple.main-thread\u0026#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n  * frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\n    frame #1: 0x0000000100037d9d mruby`iv_free + 29\n    frame #2: 0x0000000100037e90 mruby`mrb_gc_free_iv + 48\n    frame #3: 0x0000000100017a76 mruby`obj_free + 86\n    frame #4: 0x00000001000179e7 mruby`free_heap + 135\n    frame #5: 0x0000000100017dfd mruby`mrb_gc_destroy + 29\n    frame #6: 0x000000010002b2a2 mruby`mrb_close + 210\n    frame #7: 0x0000000100001475 mruby`cleanup + 133\n    frame #8: 0x0000000100000e6b mruby`main + 1147\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000001\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000006\n       rdx = 0x0000000100017a66  mruby`obj_free + 70\n       rdi = 0x0000000100300390\n       rsi = 0x0000000000000001\n       rbp = 0x00007fff5fbfd870\n       rsp = 0x00007fff5fbfd860\n        r8 = 0x000000000000000d\n        r9 = 0x000000010030f950\n       r10 = 0x00000000013292e2\n       r11 = 0x0000000100300000\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100037533  mruby`kh_destroy_iv + 35\n    rflags = 0x0000000000010202\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe cause for this was that a non-array type was getting passed to \u003ccode\u003emrb_ary_unshift\u003c/code\u003e, which then treated it like an \u003ccode\u003eRArray\u003c/code\u003e struct, and incremented the \u003ccode\u003elen\u003c/code\u003e, which accidentally incremented the \u003ccode\u003eiv\u003c/code\u003e field on the \u003ccode\u003eRObject\u003c/code\u003e struct it actually was. This was then used when trying to free the object in \u003ccode\u003emrb_gc_free_iv\u003c/code\u003e, which just checks \u003ccode\u003eif (obj-\u0026gt;iv)\u003c/code\u003e (\u003ccode\u003esrc/variable.c:435\u003c/code\u003e), which is true (it is \u003ccode\u003e0x01\u003c/code\u003e), so calls \u003ccode\u003eiv_free\u003c/code\u003e (\u003ccode\u003esrc/variable.c:385\u003c/code\u003e), which dereferences the table which is an invalid memory address of \u003ccode\u003e0x01\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo show this in action, here is a gdb output with symbols (on a different system). I started the program and ran til the crash, then went up the stack until we could see the parent \u003ccode\u003eobj\u003c/code\u003e struct, then set a watchpoint on the \u003ccode\u003eiv\u003c/code\u003e field. Restarted, then continued until the \u003ccode\u003eiv\u003c/code\u003e field was set to \u003ccode\u003e0x0\u003c/code\u003e again, then set a breakpoint for \u003ccode\u003emrb_ary_unshift\u003c/code\u003e. Stepped through until the \u003ccode\u003ea\u003c/code\u003e variable wasn\u0026#39;t \u0026quot;optimized out\u0026quot; (happens on my fuzzing box due to setup), and then set a watchpoint on \u003ccode\u003ea-\u0026gt;len\u003c/code\u003e, then continued. It stops showing both the \u003ccode\u003eiv\u003c/code\u003e and the \u003ccode\u003elen\u003c/code\u003e value changes to 1 at the same time showing the bug.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ gdb --args ./bin/mruby crash.rb\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u0026lt;http://gnu.org/licenses/gpl.html\u0026gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \u0026quot;show copying\u0026quot;\nand \u0026quot;show warranty\u0026quot; for details.\nThis GDB was configured as \u0026quot;x86_64-linux-gnu\u0026quot;.\nType \u0026quot;show configuration\u0026quot; for configuration details.\nFor bug reporting instructions, please see:\n\u0026lt;http://www.gnu.org/software/gdb/bugs/\u0026gt;.\nFind the GDB manual and other documentation resources online at:\n\u0026lt;http://www.gnu.org/software/gdb/documentation/\u0026gt;.\nFor help, type \u0026quot;help\u0026quot;.\nType \u0026quot;apropos word\u0026quot; to search for commands related to \u0026quot;word\u0026quot;...\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \u0026quot;/lib/x86_64-linux-gnu/libthread_db.so.1\u0026quot;.\ncrash.rb:1:3: \u0026#39;*\u0026#39; interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method \u0026#39;a\u0026#39; for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) up\n#1  iv_free (t=0x1, mrb=0x602e0001fc60) at /root/mruby-fixes/src/variable.c:387\n387       kh_destroy(iv, mrb, \u0026amp;t-\u0026gt;h);\n(gdb)\n#2  mrb_gc_free_iv (mrb=0x602e0001fc60, obj=0x609a00007870)\n    at /root/mruby-fixes/src/variable.c:436\n436         iv_free(mrb, obj-\u0026gt;iv);\n(gdb) watch -location obj-\u0026gt;iv\nHardware watchpoint 1: -location obj-\u0026gt;iv\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\n\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \u0026quot;/lib/x86_64-linux-gnu/libthread_db.so.1\u0026quot;.\nHardware watchpoint 1: -location obj-\u0026gt;iv\n\nOld value = \u0026lt;unreadable\u0026gt;\nNew value = (struct iv_tbl *) 0x0\nmemset () at ../sysdeps/x86_64/memset.S:94\n94      ../sysdeps/x86_64/memset.S: No such file or directory.\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u0026gt;iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x609a00007840\nadd_heap (gc=0x602e0001fd38, mrb=0x609a00000400) at /root/mruby-fixes/src/gc.c:328\n328       for (p = objects(page), e=p+MRB_HEAP_PAGE_SIZE; p\u0026lt;e; p++) {\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u0026gt;iv\n\nOld value = (struct iv_tbl *) 0x609a00007840\nNew value = (struct iv_tbl *) 0x0\nmrb_obj_alloc (mrb=mrb@entry=0x602e0001fc60, ttype=ttype@entry=MRB_TT_OBJECT,\n    cls=0x609a0000c3d0) at /root/mruby-fixes/src/gc.c:500\n500       *(RVALUE *)p = RVALUE_zero;\n(gdb) break mrb_ary_unshift\nBreakpoint 2 at 0x41e000: file /root/mruby-fixes/src/array.c, line 485.\n(gdb) c\nContinuing.\ncrash.rb:1:3: \u0026#39;*\u0026#39; interpreted as argument prefix\n\nBreakpoint 2, mrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:485\n485     {\n(gdb) n\n\u0026lt;snip while getting to a point where a isn\u0026#39;t \u0026quot;optimized out\u0026quot;\u0026gt;\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:496\n496         if (a-\u0026gt;aux.capa \u0026lt; a-\u0026gt;len + 1)\n(gdb) p *a\n$1 = {tt = MRB_TT_OBJECT, color = 1, flags = 0, c = 0x609a00007840,\n  gcnext = 0x609a0000c3d0, len = 0, aux = {capa = 0, shared = 0x0}, ptr = 0x0}\n(gdb) watch -location a-\u0026gt;len\nHardware watchpoint 3: -location a-\u0026gt;len\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-\u0026gt;iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x1\nHardware watchpoint 3: -location a-\u0026gt;len\n\nOld value = 0\nNew value = 1\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:502\n502       mrb_field_write_barrier_value(mrb, (struct RBasic*)a, item);\n(gdb) d br\nDelete all breakpoints? (y or n) y\n(gdb) c\nContinuing.\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method \u0026#39;a\u0026#39; for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 31010] will be killed.\n\nQuit anyway? (y or n) y\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA fix for this would be similar as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/src/array.c b/src/array.c\nindex 838f6e4..bd44c7f 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/src/array.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/src/array.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -483,6 +483,11 @@\u003c/span\u003e mrb_ary_shift(mrb_state *mrb, mrb_value self)\n MRB_API mrb_value\n mrb_ary_unshift(mrb_state *mrb, mrb_value self, mrb_value item)\n {\n\u003cspan class=\"gi\"\u003e+  if (!mrb_array_p(self)) {\n+    mrb_raisef(mrb, E_TYPE_ERROR, \u0026quot;expecting Array, got %S\u0026quot;, mrb_obj_value(mrb_obj_class(mrb, self)));\n+    return mrb_nil_value();\n+  }\n+\n\u003c/span\u003e   struct RArray *a = mrb_ary_ptr(self);\n\n   if (ARY_SHARED_P(a)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs mentioned above, this affects mruby-engine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e./bin/sandbox:20:in `sandbox_eval\u0026#39;: undefined method \u0026#39;a\u0026#39; for main (MRubyEngine::EngineRuntimeError)\n    from ./bin/sandbox:20:in `\u0026lt;main\u0026gt;\u0026#39;\n./bin/sandbox: [BUG] Segmentation fault at 0x00000000000019\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon\u0026#39;t forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0001 p:0000 s:0002 E:0013d0 (none) [FINISH]\n\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000108 rbx: 0x0000000000000001 rcx: 0x00000001017eca32\n rdx: 0x00000001017ecbe0 rdi: 0x00000001018fc440 rsi: 0x0000000101903d30\n rbp: 0x00007fff5ed50660 rsp: 0x00007fff5ed50650  r8: 0x0000000101929e70\n  r9: 0x000000010191cad0 r10: 0x000000010191c830 r11: 0x00007fd4ad300000\n r12: 0x0000000101903d30 r13: 0x0000000000000000 r14: 0x00000001018fc440\n r15: 0x00000001018fc920 rip: 0x00000001018034f3 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010104c5d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100eee023 rb_bug_context + 483\n2   ruby                                0x0000000100fc1653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001018034f3 mrb_gc_free_iv + 19\n5   ???                                 0x0000000101903d30 0x0 + 4321197360\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n\u0026lt;snip various gems\u0026gt;\n  185 /Users/\u0026lt;snip\u0026gt;/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/\u0026lt;snip\u0026gt;/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eApplying the patch above to \u003ccode\u003eext/mruby_engine/mruby\u003c/code\u003e and recompiling fixes the issue.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ./bin/mruby ../crash.rb\n../crash.rb:1:3: \u0026#39;*\u0026#39; interpreted as argument prefix\ntrace:\n        [0] ../crash.rb:3\nTypeError: expecting Array, got Object\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ ./bin/sandbox crash.rb\n./bin/sandbox:20:in `sandbox_eval\u0026#39;: expecting Array, got Object (MRubyEngine::EngineRuntimeError)\n        from ./bin/sandbox:20:in `\u0026lt;main\u0026gt;\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003eHugh\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":181232,"original_report_url":"https://hackerone.com/reports/181232","attachments":[],"allow_singular_disclosure_at":null,"vote_count":2,"voters":["eveeez","spetr0x"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1309097,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Added patch and crashfile.","markdown_message":"\u003cp\u003eAdded patch and crashfile.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-21T04:58:43.896Z","updated_at":"2016-11-21T04:58:43.896Z","actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":135711,"filename":"crash-183696.rb","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/711/6e6a264a5a3fcce853239a6452274e13e8000c87/crash-183696.rb?response-content-disposition=attachment%3B%20filename%3D%22crash-183696.rb%22%3B%20filename%2A%3DUTF-8%27%27crash-183696.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSFCZ3AEE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044635Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJFMEMCIHWigdtf4V6jrDm66WbPrvAwAjkDkGwq6jJxHgkhTBQkAh8Pm59QJ1DW90Nm%2BqUZrqPeSIGh%2B3OcvgtVLmg10uTMKrQDCFQQARoMMDEzNjE5Mjc0ODQ5IgwfS9%2FiGaxXJhRExaMqkQM%2FioQKCRd2GEb49HBlLXjeVg1H%2FoNlCjm1k0hMZ2xM%2B0x4lmIPMnshxiw4gyq5WOKYTVNGzovcoxlJKVWJ0J8ot8jIAdBOEwL1e8YBnNwskpBMy96aUxeRhk0v3RC6PmoKg5jI4Qx3q41XFLoVNJzGZBMLXknGm%2FL%2F3r3TBQO0a%2Bho9Lw4jX%2FmwWvHj8d64twZuZ4naqUS%2FC5%2FMe%2BCb7di7nj2LrLyNCU3mwVZhuZqaKYU7%2BmpmzDXhPe6vg3i0Ag1ETmf%2B4HHFKIzD1arTf4NVMuk53Qk2BUuVm8UMmZQPvicVaLBXLt7ccHpSlZil%2FS4s09xyNkmhqsb4joFjYvki4ZCYJgj6f2HgZ9j5I5jB%2BkNBEx91sV072LTXsJZGus5vwgFqmgq6%2FLSGoCBv5WZ1%2FGuoZfgjyzvsmoBX8uKpu1MK2cCSfK2OOw%2BdQcJ893qtedMSb3E%2FljNUxJf3ge6DsNwKlGjDwu7tV2CwK5eoC8nnGnfgTFitfIQRa0%2BQ7r2Yiwaq1V%2FfpNlnllKKKKFFDD1uar%2FBTrtAcWSVbs%2BpUxv20hwqIlkNrNvMi6wkgf%2BLXOkTSYmrhZJiEvr012n0TMdj9Lpp5lSBvt%2BFmQOWfNxpY3OJBDwcWAiZ%2F2ed9lHQZ21qGQ3nsQfbuRvBliy0SDSXu3rFk%2F2YIvbptRB1WpaAx7N%2FhS0S%2Bs17TOirrod7lqA3UzbN3XBtY1r%2BegR7%2FcG%2BpTuKL1SZFmW4odML8bsKnPb2rSlOtAfW6UI5KEpZRuNPIpftSdXrAErjdLnGLehSWx7Q2Iysd3y2wS8%2BnA6TfU%2Fr7xOl0wvkOaOhwXKDLm%2BA5oHA3Mxg%2F%2FTNCq8BPNgEALt%2FQ%3D%3D\u0026X-Amz-Signature=1cf7e9567192d538e95ff08568db5fce2619e3709012da79f1d36bb341f9d0f6"},{"id":135710,"filename":"bug-183696.patch","type":"text/x-diff","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/710/c35e6c4b91c143ff999f9beeb049aa21c38e3187/bug-183696.patch?response-content-disposition=attachment%3B%20filename%3D%22bug-183696.patch%22%3B%20filename%2A%3DUTF-8%27%27bug-183696.patch\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSFCZ3AEE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044635Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJFMEMCIHWigdtf4V6jrDm66WbPrvAwAjkDkGwq6jJxHgkhTBQkAh8Pm59QJ1DW90Nm%2BqUZrqPeSIGh%2B3OcvgtVLmg10uTMKrQDCFQQARoMMDEzNjE5Mjc0ODQ5IgwfS9%2FiGaxXJhRExaMqkQM%2FioQKCRd2GEb49HBlLXjeVg1H%2FoNlCjm1k0hMZ2xM%2B0x4lmIPMnshxiw4gyq5WOKYTVNGzovcoxlJKVWJ0J8ot8jIAdBOEwL1e8YBnNwskpBMy96aUxeRhk0v3RC6PmoKg5jI4Qx3q41XFLoVNJzGZBMLXknGm%2FL%2F3r3TBQO0a%2Bho9Lw4jX%2FmwWvHj8d64twZuZ4naqUS%2FC5%2FMe%2BCb7di7nj2LrLyNCU3mwVZhuZqaKYU7%2BmpmzDXhPe6vg3i0Ag1ETmf%2B4HHFKIzD1arTf4NVMuk53Qk2BUuVm8UMmZQPvicVaLBXLt7ccHpSlZil%2FS4s09xyNkmhqsb4joFjYvki4ZCYJgj6f2HgZ9j5I5jB%2BkNBEx91sV072LTXsJZGus5vwgFqmgq6%2FLSGoCBv5WZ1%2FGuoZfgjyzvsmoBX8uKpu1MK2cCSfK2OOw%2BdQcJ893qtedMSb3E%2FljNUxJf3ge6DsNwKlGjDwu7tV2CwK5eoC8nnGnfgTFitfIQRa0%2BQ7r2Yiwaq1V%2FfpNlnllKKKKFFDD1uar%2FBTrtAcWSVbs%2BpUxv20hwqIlkNrNvMi6wkgf%2BLXOkTSYmrhZJiEvr012n0TMdj9Lpp5lSBvt%2BFmQOWfNxpY3OJBDwcWAiZ%2F2ed9lHQZ21qGQ3nsQfbuRvBliy0SDSXu3rFk%2F2YIvbptRB1WpaAx7N%2FhS0S%2Bs17TOirrod7lqA3UzbN3XBtY1r%2BegR7%2FcG%2BpTuKL1SZFmW4odML8bsKnPb2rSlOtAfW6UI5KEpZRuNPIpftSdXrAErjdLnGLehSWx7Q2Iysd3y2wS8%2BnA6TfU%2Fr7xOl0wvkOaOhwXKDLm%2BA5oHA3Mxg%2F%2FTNCq8BPNgEALt%2FQ%3D%3D\u0026X-Amz-Signature=2b10c891e33f460ed7477fa99b2cb863fb8c140234993d0389163614e1c917d8"}],"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1309893,"is_internal":false,"editable":false,"type":"Activities::BugDuplicate","message":"Thank you for your report.\n\nEven though the crash is in a different place, this issue has the same root cause as #181232 and #183667 (a bug in the code generator), and our patch for that issue fixed all three crashes. Thus, I'm closing this as a duplicate.","markdown_message":"\u003cp\u003eThank you for your report.\u003c/p\u003e\n\n\u003cp\u003eEven though the crash is in a different place, this issue has the same root cause as \u003ca href=\"/reports/181232\"\u003e#181232\u003c/a\u003e and \u003ca href=\"/reports/183667\"\u003e#183667\u003c/a\u003e (a bug in the code generator), and our patch for that issue fixed all three crashes. Thus, I\u0026#39;m closing this as a duplicate.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-21T15:18:53.412Z","updated_at":"2016-11-21T15:18:53.412Z","original_report_id":181232,"actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1310557,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah yeh, so you fixed it in the parser. Do you mind sharing the patch you applied so i can apply that to my fuzzing?","markdown_message":"\u003cp\u003eAh yeh, so you fixed it in the parser. Do you mind sharing the patch you applied so i can apply that to my fuzzing?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-21T19:52:25.751Z","updated_at":"2016-11-21T19:52:25.751Z","actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1310619,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The patch we ended up going with is this:\n```patch\ndiff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 744b2fd..2a5b10a 100644\n--- a/mrbgems/mruby-compiler/core/codegen.c\n+++ b/mrbgems/mruby-compiler/core/codegen.c\n@@ -2025,6 +2025,7 @@ codegen(codegen_scope *s, node *tree, int val)\n       }\n       genop(s, MKOP_sBx(OP_JMP, s-\u003eloop-\u003epc2 - s-\u003epc));\n     }\n+    if (val) push();\n     break;\n \n   case NODE_RETRY:\n@@ -2059,6 +2060,7 @@ codegen(codegen_scope *s, node *tree, int val)\n           genop(s, MKOP_sBx(OP_JMP, lp-\u003epc1 - s-\u003epc));\n         }\n       }\n+      if (val) push();\n     }\n     break;\n \ndiff --git a/test/t/codegen.rb b/test/t/codegen.rb\nindex 99d6dbe..d28d339 100644\n--- a/test/t/codegen.rb\n+++ b/test/t/codegen.rb\n@@ -4,3 +4,21 @@\n assert('empty condition in ternary expression parses correctly') do\n   assert_equal () ? 1 : 2, 2\n end\n+\n+assert('codegen absorbs arguments to redo and retry if they are the argument of a call') do\n+  assert_nothing_raised do\n+    a=*\"1\", case nil\n+    when 1\n+      redo |\n+      1\n+    end\n+  end\n+\n+  assert_nothing_raised do\n+    a=*\"1\", case nil\n+    when 1\n+      retry |\n+      1\n+    end\n+  end\n+end\n ```","markdown_message":"\u003cp\u003eThe patch we ended up going with is this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 744b2fd..2a5b10a 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/mrbgems/mruby-compiler/core/codegen.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/mrbgems/mruby-compiler/core/codegen.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -2025,6 +2025,7 @@\u003c/span\u003e codegen(codegen_scope *s, node *tree, int val)\n       }\n       genop(s, MKOP_sBx(OP_JMP, s-\u0026gt;loop-\u0026gt;pc2 - s-\u0026gt;pc));\n     }\n\u003cspan class=\"gi\"\u003e+    if (val) push();\n\u003c/span\u003e     break;\n\n   case NODE_RETRY:\n\u003cspan class=\"p\"\u003e@@ -2059,6 +2060,7 @@\u003c/span\u003e codegen(codegen_scope *s, node *tree, int val)\n           genop(s, MKOP_sBx(OP_JMP, lp-\u0026gt;pc1 - s-\u0026gt;pc));\n         }\n       }\n\u003cspan class=\"gi\"\u003e+      if (val) push();\n\u003c/span\u003e     }\n     break;\n\ndiff --git a/test/t/codegen.rb b/test/t/codegen.rb\n\u003cspan class=\"gh\"\u003eindex 99d6dbe..d28d339 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/test/t/codegen.rb\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/test/t/codegen.rb\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -4,3 +4,21 @@\u003c/span\u003e\n assert(\u0026#39;empty condition in ternary expression parses correctly\u0026#39;) do\n   assert_equal () ? 1 : 2, 2\n end\n\u003cspan class=\"gi\"\u003e+\n+assert(\u0026#39;codegen absorbs arguments to redo and retry if they are the argument of a call\u0026#39;) do\n+  assert_nothing_raised do\n+    a=*\u0026quot;1\u0026quot;, case nil\n+    when 1\n+      redo |\n+      1\n+    end\n+  end\n+\n+  assert_nothing_raised do\n+    a=*\u0026quot;1\u0026quot;, case nil\n+    when 1\n+      retry |\n+      1\n+    end\n+  end\n+end\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2016-11-21T20:05:47.944Z","updated_at":"2016-11-21T20:05:47.944Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1310658,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks! Would have never tried anything in the code gen. Will test later tonight some of my backlog to avoid more dups","markdown_message":"\u003cp\u003eThanks! Would have never tried anything in the code gen. Will test later tonight some of my backlog to avoid more dups\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-21T20:20:27.814Z","updated_at":"2016-11-21T20:20:27.814Z","actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1314376,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cool, the top of my backlog isn't fixed by this, so will send through some more reports in the next few days.\n\nCheers,\n\nHugh","markdown_message":"\u003cp\u003eCool, the top of my backlog isn\u0026#39;t fixed by this, so will send through some more reports in the next few days.\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003eHugh\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-23T01:48:25.271Z","updated_at":"2016-11-23T01:48:25.271Z","actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1314391,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For future reports, would you prefer a fix in the codegen like yours, or in the code raising an error like mine?","markdown_message":"\u003cp\u003eFor future reports, would you prefer a fix in the codegen like yours, or in the code raising an error like mine?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-23T02:04:31.513Z","updated_at":"2016-11-23T02:04:31.513Z","actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1314461,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We're trying to fix the root cause and not the symptoms; but not all bugs will have their root  cause in codegen.","markdown_message":"\u003cp\u003eWe\u0026#39;re trying to fix the root cause and not the symptoms; but not all bugs will have their root  cause in codegen.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-23T03:45:54.077Z","updated_at":"2016-11-23T03:45:54.077Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1371671,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Care to disclose?","markdown_message":"\u003cp\u003eCare to disclose?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-17T20:16:27.778Z","updated_at":"2016-12-17T20:16:27.778Z","first_to_agree":true,"actor":{"username":"haquaman","cleared":false,"url":"/haquaman","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1371708,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-17T20:51:10.050Z","updated_at":"2016-12-17T20:51:10.050Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1371709,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-17T20:51:10.094Z","updated_at":"2016-12-17T20:51:10.094Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}