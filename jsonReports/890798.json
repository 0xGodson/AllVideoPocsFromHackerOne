{"id":890798,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTA3OTg=","url":"https://hackerone.com/reports/890798","title":"Panic in file smtp-address.c: line 684 (smtp_address_write): assertion failed: (smtp_char_is_qpair(*p))","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2020-06-04T13:27:52.165Z","submitted_at":"2020-06-04T13:27:52.165Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"catenacyber","url":"/catenacyber","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-06-22T08:53:12.622Z","bug_reporter_agreed_on_going_public_at":"2020-06-22T08:53:12.545Z","team_member_agreed_on_going_public_at":"2020-06-22T08:32:08.524Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Reproducer is running test suite against file crash2.txt\nand getting following output :\n```\n./src/testsuite/testsuite crash2.txt \nTest case: crash2.txt:\n\ntestsuite(catena): Panic: file smtp-address.c: line 684 (smtp_address_write): assertion failed: (smtp_char_is_qpair(*p))\nAbort trap: 6\n```\n\nContent or crash2.txt is \n```\nrequire \"vnd.dovecot.testsuite\";\nrequire \"encoded-character\";\nrequire \"vacation\";\n\n/*\n * Subject - explicit\n */\n\ntest_set \"message\" text:\nFrom: stephan@example.org\nSubject: No subject of discussion\nTo: nicëøôçêè—öxample.org\n\nFrop\n.\n;\n\ntest_result_reset;\ntest \"Subject - explicit\" {\n\tvacation :subject \"Tulips\" \"I am not in today!\";\n\n\tif not test_result_execute {\n\t\ttest_fail \"execution of result failed\";\n\t}\n\n}\n```\n\nStack trace is\n```\n    #9 0x11129284f in i_panic failures.c:523\n    #10 0x1111ebb94 in smtp_address_write smtp-address.c:684\n    #11 0x1111eb771 in smtp_address_encode smtp-address.c:719\n    #12 0x110da498a in act_vacation_commit cmd-vacation.c:1516\n    #13 0x110d539b1 in sieve_result_action_commit sieve-result.c:1237\n    #14 0x110d534f0 in sieve_result_action_commit_or_rollback sieve-result.c:1313\n    #15 0x110d4f76f in sieve_result_transaction_commit_or_rollback sieve-result.c:1390\n    #16 0x110d4e6a2 in sieve_result_execute sieve-result.c:1472\n    #17 0x10f9f0ae1 in testsuite_result_execute testsuite-result.c:92\n    #18 0x10f9ff77a in tst_test_result_execute_operation_execute tst-test-result-execute.c:80\n    #19 0x110d4337d in sieve_interpreter_operation_execute sieve-interpreter.c:860\n    #20 0x110d42d8e in sieve_interpreter_continue sieve-interpreter.c:901\n    #21 0x110d43966 in sieve_interpreter_start sieve-interpreter.c:973\n    #22 0x110d43b49 in sieve_interpreter_run sieve-interpreter.c:984\n```\n\n## Impact\n\nI am not sure of the impact of this as it could be a bug in the test framework, or as there will be a filter to prevent such a recipient to reach this piece of code, but I report it to be safer.","vulnerability_information_html":"\u003cp\u003eReproducer is running test suite against file crash2.txt\u003cbr\u003e\nand getting following output :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e./src/testsuite/testsuite crash2.txt \nTest case: crash2.txt:\n\ntestsuite(catena): Panic: file smtp-address.c: line 684 (smtp_address_write): assertion failed: (smtp_char_is_qpair(*p))\nAbort trap: 6\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eContent or crash2.txt is \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003erequire \u0026quot;vnd.dovecot.testsuite\u0026quot;;\nrequire \u0026quot;encoded-character\u0026quot;;\nrequire \u0026quot;vacation\u0026quot;;\n\n/*\n * Subject - explicit\n */\n\ntest_set \u0026quot;message\u0026quot; text:\nFrom: stephan@example.org\nSubject: No subject of discussion\nTo: nicëøôçêè—öxample.org\n\nFrop\n.\n;\n\ntest_result_reset;\ntest \u0026quot;Subject - explicit\u0026quot; {\n    vacation :subject \u0026quot;Tulips\u0026quot; \u0026quot;I am not in today!\u0026quot;;\n\n    if not test_result_execute {\n        test_fail \u0026quot;execution of result failed\u0026quot;;\n    }\n\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eStack trace is\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    #9 0x11129284f in i_panic failures.c:523\n    #10 0x1111ebb94 in smtp_address_write smtp-address.c:684\n    #11 0x1111eb771 in smtp_address_encode smtp-address.c:719\n    #12 0x110da498a in act_vacation_commit cmd-vacation.c:1516\n    #13 0x110d539b1 in sieve_result_action_commit sieve-result.c:1237\n    #14 0x110d534f0 in sieve_result_action_commit_or_rollback sieve-result.c:1313\n    #15 0x110d4f76f in sieve_result_transaction_commit_or_rollback sieve-result.c:1390\n    #16 0x110d4e6a2 in sieve_result_execute sieve-result.c:1472\n    #17 0x10f9f0ae1 in testsuite_result_execute testsuite-result.c:92\n    #18 0x10f9ff77a in tst_test_result_execute_operation_execute tst-test-result-execute.c:80\n    #19 0x110d4337d in sieve_interpreter_operation_execute sieve-interpreter.c:860\n    #20 0x110d42d8e in sieve_interpreter_continue sieve-interpreter.c:901\n    #21 0x110d43966 in sieve_interpreter_start sieve-interpreter.c:973\n    #22 0x110d43b49 in sieve_interpreter_run sieve-interpreter.c:984\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eI am not sure of the impact of this as it could be a bug in the test framework, or as there will be a filter to prevent such a recipient to reach this piece of code, but I report it to be safer.\u003c/p\u003e\n","bounty_amount":"50.0","formatted_bounty":"$50","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":6,"voters":["brahim_boufakri01","mygf","b69fb2ebda43240ece9dbeb","themagicnacho","alexisyadiel15","yoggek"],"severity":{"rating":"none","author_type":"Team"},"structured_scope":{"databaseId":42900,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/pigeonhole","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8200409,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Can you reproduce this so that it crashes something else than test framework?","markdown_message":"\u003cp\u003eCan you reproduce this so that it crashes something else than test framework?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-04T13:30:37.465Z","updated_at":"2020-06-04T13:30:37.465Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8200468,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Can you help me with this ?\nIs there a tool I can tun with this `vacation`script and this mail ?","markdown_message":"\u003cp\u003eCan you help me with this ?\u003cbr\u003e\nIs there a tool I can tun with this \u003ccode\u003evacation\u003c/code\u003escript and this mail ?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-04T13:37:43.440Z","updated_at":"2020-06-04T13:37:43.440Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8200477,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"By the way, I have another one, a null pointer dereference, but we can first see how we deal with these first 2 examples","markdown_message":"\u003cp\u003eBy the way, I have another one, a null pointer dereference, but we can first see how we deal with these first 2 examples\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-04T13:39:10.961Z","updated_at":"2020-06-04T13:39:10.961Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8200494,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There is `sieve-test` utility","markdown_message":"\u003cp\u003eThere is \u003ccode\u003esieve-test\u003c/code\u003e utility\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-04T13:40:58.268Z","updated_at":"2020-06-04T13:40:58.268Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8201562,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think this happens because testsuite grabs the envelope-sender address from the To header without checking if it's valid. Normally when running Sieve scripts this comes from the LMTP MAIL FROM or dovecot-lda -f parameter, which handle these invalid addresses already.","markdown_message":"\u003cp\u003eI think this happens because testsuite grabs the envelope-sender address from the To header without checking if it\u0026#39;s valid. Normally when running Sieve scripts this comes from the LMTP MAIL FROM or dovecot-lda -f parameter, which handle these invalid addresses already.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-04T14:48:03.024Z","updated_at":"2020-06-04T14:48:03.024Z","actor":{"username":"tss","cleared":false,"url":"/tss","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8202488,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"sieve-test uses `smtp_address_parse_mailbox` which seems to check for this `smtp_char_is_qpair` when testsuite uses `message_address_parse` and then `smtp_address_create_temp` (which does not check the same thing)\n\nSo, it seems to me that this is not bug reachable yet for Dovecot, but this is a dangerous coding pattern for future and that `smtp_address_create_temp` should add a check (or at some other place in the code)\n\nFor instance, a patch could be\n```\ndiff --git a/src/testsuite/testsuite-message.c b/src/testsuite/testsuite-message.c\nindex c04ab344..7e2cec39 100644\n--- a/src/testsuite/testsuite-message.c\n+++ b/src/testsuite/testsuite-message.c\n@@ -47,17 +47,16 @@ static char *testsuite_msg_id = NULL;\n static const struct smtp_address *\n testsuite_message_get_address(struct mail *mail, const char *header)\n {\n-       struct message_address *addr;\n+       struct smtp_address *addr = NULL;\n        const char *str;\n \n        if (mail_get_first_header(mail, header, \u0026str) \u003c= 0)\n                return NULL;\n-       addr = message_address_parse(pool_datastack_create(),\n-                                    (const unsigned char *)str,\n-                                    strlen(str), 1, 0);\n-       if (addr == NULL || addr-\u003emailbox == NULL || *addr-\u003emailbox == '\\0')\n-               return NULL;\n-       return smtp_address_create_temp(addr-\u003emailbox, addr-\u003edomain);\n+    if (smtp_address_parse_mailbox(\n+                                   pool_datastack_create(), str,\n+                                   0, \u0026addr, NULL) \u003c 0)\n+        return NULL;\n+    return addr;\n }\n```","markdown_message":"\u003cp\u003esieve-test uses \u003ccode\u003esmtp_address_parse_mailbox\u003c/code\u003e which seems to check for this \u003ccode\u003esmtp_char_is_qpair\u003c/code\u003e when testsuite uses \u003ccode\u003emessage_address_parse\u003c/code\u003e and then \u003ccode\u003esmtp_address_create_temp\u003c/code\u003e (which does not check the same thing)\u003c/p\u003e\n\n\u003cp\u003eSo, it seems to me that this is not bug reachable yet for Dovecot, but this is a dangerous coding pattern for future and that \u003ccode\u003esmtp_address_create_temp\u003c/code\u003e should add a check (or at some other place in the code)\u003c/p\u003e\n\n\u003cp\u003eFor instance, a patch could be\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/src/testsuite/testsuite-message.c b/src/testsuite/testsuite-message.c\nindex c04ab344..7e2cec39 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/src/testsuite/testsuite-message.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/src/testsuite/testsuite-message.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -47,17 +47,16 @@\u003c/span\u003e static char *testsuite_msg_id = NULL;\n static const struct smtp_address *\n testsuite_message_get_address(struct mail *mail, const char *header)\n {\n\u003cspan class=\"gd\"\u003e-       struct message_address *addr;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+       struct smtp_address *addr = NULL;\n\u003c/span\u003e        const char *str;\n\n        if (mail_get_first_header(mail, header, \u0026amp;str) \u0026lt;= 0)\n                return NULL;\n\u003cspan class=\"gd\"\u003e-       addr = message_address_parse(pool_datastack_create(),\n-                                    (const unsigned char *)str,\n-                                    strlen(str), 1, 0);\n-       if (addr == NULL || addr-\u0026gt;mailbox == NULL || *addr-\u0026gt;mailbox == \u0026#39;\\0\u0026#39;)\n-               return NULL;\n-       return smtp_address_create_temp(addr-\u0026gt;mailbox, addr-\u0026gt;domain);\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    if (smtp_address_parse_mailbox(\n+                                   pool_datastack_create(), str,\n+                                   0, \u0026amp;addr, NULL) \u0026lt; 0)\n+        return NULL;\n+    return addr;\n\u003c/span\u003e }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-06-04T15:31:46.350Z","updated_at":"2020-06-04T15:31:46.350Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8240803,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Replacing smtp_address_create_temp() with smtp_address_create_from_msg_temp() in the testsuite. Possibly removing smtp_address_create_temp() entirely, not sure yet. In any case this is a testsuite-only bug.","markdown_message":"\u003cp\u003eReplacing smtp_address_create_temp() with smtp_address_create_from_msg_temp() in the testsuite. Possibly removing smtp_address_create_temp() entirely, not sure yet. In any case this is a testsuite-only bug.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-09T09:29:16.593Z","updated_at":"2020-06-09T09:29:16.593Z","actor":{"username":"tss","cleared":false,"url":"/tss","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8366819,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-22T08:25:11.761Z","updated_at":"2020-06-22T08:25:11.761Z","additional_data":{"old_severity":"Medium (4.2)","new_severity":"None","old_severity_id":740670,"new_severity_id":756922},"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8366824,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"This is not security issue as it only affects the testsuite.","markdown_message":"\u003cp\u003eThis is not security issue as it only affects the testsuite.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-22T08:25:29.384Z","updated_at":"2020-06-22T08:25:29.384Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"catenacyber","url":"/catenacyber"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8366842,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-22T08:27:31.081Z","updated_at":"2020-06-22T08:27:31.081Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"0.0","bounty_currency":"usd","bonus_amount":"50.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"catenacyber","url":"/catenacyber"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8366910,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-22T08:32:08.541Z","updated_at":"2020-06-22T08:32:08.541Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8367172,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-22T08:53:12.574Z","updated_at":"2020-06-22T08:53:12.574Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8367173,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-22T08:53:12.653Z","updated_at":"2020-06-22T08:53:12.653Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}