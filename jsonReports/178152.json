{"id":178152,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzgxNTI=","url":"https://hackerone.com/reports/178152","title":"Read files on application server, leads to RCE","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2016-10-26T04:30:29.824Z","submitted_at":"2016-10-26T04:30:29.824Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2016-9086"],"singular_disclosure_disabled":true,"disclosed_at":"2016-11-03T00:35:28.706Z","bug_reporter_agreed_on_going_public_at":"2016-11-02T18:37:40.826Z","team_member_agreed_on_going_public_at":"2016-11-03T00:35:28.669Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The GitLab export upload feature contains a vulnerability that allows an attacker to read arbitrary files on a GitLab instance. This vulnerability is caused by the behaviour of `JSON.parse`, your error handling, and the possibility to reference a symbolic link in a GitLab export. When I started looking into this functionality, I created a demo repository and created a GitLab export through the project's admin panel. GitLab exports can be imported when creating a new project, for example at https://gitlab.com/projects/new (click GitLab export). Anyway, a simple, extracted GitLab export file contains the following files:\n\n```\nexport $ ls -lash\ntotal 48\n 8 -rw-r--r--@   1 jobert  staff     5B Oct 25 19:52 VERSION\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json\n```\n\nWhen the export file is uploaded again, a few things happen. The first three are, in this order: it waits until the file has been written to disk (for big repositories), a version check based on the `VERSION` file, and creating a new `Project` model instance based on `project.json`. The first step isn't important. Lets look at the code that's being executed for the second step (line 12-18 from `Gitlab::ImportExport::VersionChecker`):\n\n```ruby\ndef check!\n  version = File.open(version_file, \u0026:readline)\n  verify_version!(version)\nrescue =\u003e e\n  shared.error(e)\n  false\nend\n```\n\nPay attention to line 13. It will open the file and call the method `readline`, which will return the first line of the file. Now, on line 16 any exception is caught and the message is pushed onto the `errors` array. All these errors are returned to the frontend. Take a look at line 27-31 of the same file:\n\n```ruby\nif Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)\n  raise Gitlab::ImportExport::Error.new(\"Import version mismatch: Required #{Gitlab::ImportExport.version} but was #{version}\")\nelse\n  true\nend\n```\n\nThis means if the version isn't correct, an exception is returned that contains the provided version from the GitLab export. Lets untar the GitLab export, replace the `VERSION` file with a symbolic link, and tar the GitLab export again. The structure of the tar will look like this:\n\n```\nexport $ ls -lash\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 VERSION -\u003e /etc/passwd\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json\n```\n\nAfter creating a new GitLab export (run `tar -czvf test.tar.gz .` in the export directory), the new GitLab export can be uploaded. By doing so, the GitLab instance will return the first line of the error because the version matcher raises an exception:\n\n{F130235}\n\nHowever, with this only the first line of a file can be read. This is interesting, but much harder to exploit than if an entire file can be read. I kept digging to see if there was a way to read an entire file. Like I pointed out earlier, the third step in the import process is creating a new instance of the `Project` model. It executes the following code (line 11-22 from `Gitlab::ImportExport::ProjectTreeRestorer`):\n\n```ruby\ndef restore\n  json = IO.read(@path)\n  tree_hash = ActiveSupport::JSON.decode(json)\n  project_members = tree_hash.delete('project_members')\n\n  ActiveRecord::Base.no_touching do\n    create_relations\n  end\nrescue =\u003e e\n  shared.error(e)\n  false\nend\n```\n\nA similar code structure as the version check is implemented: any exception that is thrown in line 13-18 is caught and the error message is pushed onto the errors array. It isn't immediately clear from the code, but the ActiveSupport implementation of JSON decoding uses `JSON.parse`, which returns the contents of the entire string to be decoded in the error message when it fails to decode. This means that if we can let the decoder raise an exception, we can read the contents of a file. This isn't so hard. Consider this file structure:\n\n```\nexport $ ls -lash\n 8 -rw-r--r--@   1 jobert  staff    11B Oct 25 20:43 VERSION\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json -\u003e /etc/passwd\n```\n\nIn this example, the `project.json` file is a symlink to `/etc/passwd`. The `IO.read` call on line 14 will follow a symlink to read the contents of a file. Obviously, the `/etc/passwd` file doesn't contain valid JSON, thus it will result in an exception with the contents of `/etc/passwd`. Use tar to compress the files again to prepare it for upload. An example file is attached: F130233. When this file gets imported, it'll show the contents of the linked file in the error message:\n\n{F130234}\n\nTo proof that this isn't my own `/etc/passwd` file that was accidentally compressed with the file, here are the last 5 lines of the `/etc/passwd` of gitlab.com.\n\n```\nalejandro:x:1117:1117::/home/alejandro:/bin/bash\nprometheus:x:999:999::/opt/prometheus:/bin/false\ngitlab-monitor:x:998:998::/opt/gitlab-monitor:/bin/false\npostgres:x:116:121:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\nbrian:x:1118:1118::/home/brian:/bin/bash\n```\n\nWith this issue, the secrets of the GitLab rails project can be read, too. This results in an RCE because cookies can be marshalled and resigned again. It seems to also give access to the internal GitLab shell tokens, which give access to all repositories.\n\nLet me know if you need any more information!","vulnerability_information_html":"\u003cp\u003eThe GitLab export upload feature contains a vulnerability that allows an attacker to read arbitrary files on a GitLab instance. This vulnerability is caused by the behaviour of \u003ccode\u003eJSON.parse\u003c/code\u003e, your error handling, and the possibility to reference a symbolic link in a GitLab export. When I started looking into this functionality, I created a demo repository and created a GitLab export through the project\u0026#39;s admin panel. GitLab exports can be imported when creating a new project, for example at \u003ca title=\"https://gitlab.com/projects/new\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fprojects%2Fnew\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/projects/new\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (click GitLab export). Anyway, a simple, extracted GitLab export file contains the following files:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport $ ls -lash\ntotal 48\n 8 -rw-r--r--@   1 jobert  staff     5B Oct 25 19:52 VERSION\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the export file is uploaded again, a few things happen. The first three are, in this order: it waits until the file has been written to disk (for big repositories), a version check based on the \u003ccode\u003eVERSION\u003c/code\u003e file, and creating a new \u003ccode\u003eProject\u003c/code\u003e model instance based on \u003ccode\u003eproject.json\u003c/code\u003e. The first step isn\u0026#39;t important. Lets look at the code that\u0026#39;s being executed for the second step (line 12-18 from \u003ccode\u003eGitlab::ImportExport::VersionChecker\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echeck!\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eversion_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"ss\"\u003e:readline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003everify_version!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePay attention to line 13. It will open the file and call the method \u003ccode\u003ereadline\u003c/code\u003e, which will return the first line of the file. Now, on line 16 any exception is caught and the message is pushed onto the \u003ccode\u003eerrors\u003c/code\u003e array. All these errors are returned to the frontend. Take a look at line 27-31 of the same file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"no\"\u003eGem\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003eGem\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eGitlab\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eImportExport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"no\"\u003eGitlab\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eImportExport\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Import version mismatch: Required \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"no\"\u003eGitlab\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eImportExport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eversion\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e but was \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means if the version isn\u0026#39;t correct, an exception is returned that contains the provided version from the GitLab export. Lets untar the GitLab export, replace the \u003ccode\u003eVERSION\u003c/code\u003e file with a symbolic link, and tar the GitLab export again. The structure of the tar will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport $ ls -lash\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 VERSION -\u0026gt; /etc/passwd\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter creating a new GitLab export (run \u003ccode\u003etar -czvf test.tar.gz .\u003c/code\u003e in the export directory), the new GitLab export can be uploaded. By doing so, the GitLab instance will return the first line of the error because the version matcher raises an exception:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screen_Shot_2016-10-25_at_19.28.51.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/235/eda5af808482da6f95d04416ba92d08c11f516d1/Screen_Shot_2016-10-25_at_19.28.51.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_19.28.51.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_19.28.51.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T044357Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026amp;X-Amz-Signature=3451d08a5ce6c0d42c232edea07bb6853abd986492f0d0241a77cd7ae53059f3\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/235/eda5af808482da6f95d04416ba92d08c11f516d1/Screen_Shot_2016-10-25_at_19.28.51.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_19.28.51.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_19.28.51.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T044357Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026amp;X-Amz-Signature=3451d08a5ce6c0d42c232edea07bb6853abd986492f0d0241a77cd7ae53059f3\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHowever, with this only the first line of a file can be read. This is interesting, but much harder to exploit than if an entire file can be read. I kept digging to see if there was a way to read an entire file. Like I pointed out earlier, the third step in the import process is creating a new instance of the \u003ccode\u003eProject\u003c/code\u003e model. It executes the following code (line 11-22 from \u003ccode\u003eGitlab::ImportExport::ProjectTreeRestorer\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erestore\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eIO\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vi\"\u003e@path\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etree_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveSupport\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eproject_members\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etree_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;project_members\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n  \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eno_touching\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_relations\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA similar code structure as the version check is implemented: any exception that is thrown in line 13-18 is caught and the error message is pushed onto the errors array. It isn\u0026#39;t immediately clear from the code, but the ActiveSupport implementation of JSON decoding uses \u003ccode\u003eJSON.parse\u003c/code\u003e, which returns the contents of the entire string to be decoded in the error message when it fails to decode. This means that if we can let the decoder raise an exception, we can read the contents of a file. This isn\u0026#39;t so hard. Consider this file structure:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport $ ls -lash\n 8 -rw-r--r--@   1 jobert  staff    11B Oct 25 20:43 VERSION\n 8 -rw-r--r--@   1 jobert  staff   341B Oct 25 19:53 project.bundle\n 8 lrwxr-xr-x    1 jobert  staff    11B Oct 25 20:43 project.json -\u0026gt; /etc/passwd\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this example, the \u003ccode\u003eproject.json\u003c/code\u003e file is a symlink to \u003ccode\u003e/etc/passwd\u003c/code\u003e. The \u003ccode\u003eIO.read\u003c/code\u003e call on line 14 will follow a symlink to read the contents of a file. Obviously, the \u003ccode\u003e/etc/passwd\u003c/code\u003e file doesn\u0026#39;t contain valid JSON, thus it will result in an exception with the contents of \u003ccode\u003e/etc/passwd\u003c/code\u003e. Use tar to compress the files again to prepare it for upload. An example file is attached: \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"test.tar.gz\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/233/1a62bf87c15a273b1ff8f5a5b257169a8e44e88e/test.tar.gz?response-content-disposition=attachment%3B%20filename%3D%22test.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27test.tar.gz\u0026amp;response-content-type=application%2Fgzip\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T044357Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026amp;X-Amz-Signature=a8a373caafef875a3842b6f30e76ff66b30b1cd5283a59b9f0294b6bb5781108\" data-attachment-type=\"application/gzip\"\u003etest.tar.gz (F130233)\u003c/a\u003e. When this file gets imported, it\u0026#39;ll show the contents of the linked file in the error message:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screen_Shot_2016-10-25_at_20.55.36.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/234/3835c6918f985b21fee93e9f9c3401a399c0fd06/Screen_Shot_2016-10-25_at_20.55.36.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_20.55.36.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_20.55.36.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T044357Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026amp;X-Amz-Signature=7c50ff8d2efc109194a9a90b9d0a0ee3a929a451e9cde2f1b54a9b3359c4df3a\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/234/3835c6918f985b21fee93e9f9c3401a399c0fd06/Screen_Shot_2016-10-25_at_20.55.36.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_20.55.36.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_20.55.36.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T044357Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026amp;X-Amz-Signature=7c50ff8d2efc109194a9a90b9d0a0ee3a929a451e9cde2f1b54a9b3359c4df3a\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTo proof that this isn\u0026#39;t my own \u003ccode\u003e/etc/passwd\u003c/code\u003e file that was accidentally compressed with the file, here are the last 5 lines of the \u003ccode\u003e/etc/passwd\u003c/code\u003e of gitlab.com.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ealejandro:x:1117:1117::/home/alejandro:/bin/bash\nprometheus:x:999:999::/opt/prometheus:/bin/false\ngitlab-monitor:x:998:998::/opt/gitlab-monitor:/bin/false\npostgres:x:116:121:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\nbrian:x:1118:1118::/home/brian:/bin/bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this issue, the secrets of the GitLab rails project can be read, too. This results in an RCE because cookies can be marshalled and resigned again. It seems to also give access to the internal GitLab shell tokens, which give access to all repositories.\u003c/p\u003e\n\n\u003cp\u003eLet me know if you need any more information!\u003c/p\u003e\n","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":130233,"file_name":"test.tar.gz","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/233/1a62bf87c15a273b1ff8f5a5b257169a8e44e88e/test.tar.gz?response-content-disposition=attachment%3B%20filename%3D%22test.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27test.tar.gz\u0026response-content-type=application%2Fgzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044357Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=a8a373caafef875a3842b6f30e76ff66b30b1cd5283a59b9f0294b6bb5781108","file_size":746,"type":"application/gzip"},{"id":130234,"file_name":"Screen_Shot_2016-10-25_at_20.55.36.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/234/3835c6918f985b21fee93e9f9c3401a399c0fd06/Screen_Shot_2016-10-25_at_20.55.36.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_20.55.36.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_20.55.36.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044357Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=7c50ff8d2efc109194a9a90b9d0a0ee3a929a451e9cde2f1b54a9b3359c4df3a","file_size":102437,"type":"image/png"},{"id":130235,"file_name":"Screen_Shot_2016-10-25_at_19.28.51.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/130/235/eda5af808482da6f95d04416ba92d08c11f516d1/Screen_Shot_2016-10-25_at_19.28.51.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-10-25_at_19.28.51.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-10-25_at_19.28.51.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044357Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=3451d08a5ce6c0d42c232edea07bb6853abd986492f0d0241a77cd7ae53059f3","file_size":33247,"type":"image/png"}],"allow_singular_disclosure_at":"2016-12-02T18:37:40.852Z","allow_singular_disclosure_after":-128513176.8679223,"singular_disclosure_allowed":true,"vote_count":108,"voters":["zhchbin","b1ngz","lukasreschke","philip","tomdev","derision","d1m0ck","smiegles","michiel","suv","and 98 more..."],"severity":{"rating":"critical","score":9.0,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"required","scope":"changed","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1269201,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"@jobert Thanks for the detailed report. We opened an internal issue earlier today to discuss it, and a fix is in the works. We'll keep you updated here on the progress as always.","markdown_message":"\u003cp\u003e\u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e Thanks for the detailed report. We opened an internal issue earlier today to discuss it, and a fix is in the works. We\u0026#39;ll keep you updated here on the progress as always.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-26T18:46:43.261Z","updated_at":"2016-10-26T18:46:43.261Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1279180,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"A fix has gone through review and been merged into the stable branches for 8.9 through 8.13. We're currently building packages for each version and if everything goes well, we plan to release all patches on Wednesday November 2, 2016 at 4:59pm PDT (23:59 GMT).\n\nWe've been assigned CVE-2016-9086 for this issue. A pre-disclosure announcement was sent to our security newsletter and [posted on our blog](https://about.gitlab.com/2016/10/31/gitlab-major-security-update-for-cve-2016-9086/).","markdown_message":"\u003cp\u003eA fix has gone through review and been merged into the stable branches for 8.9 through 8.13. We\u0026#39;re currently building packages for each version and if everything goes well, we plan to release all patches on Wednesday November 2, 2016 at 4:59pm PDT (23:59 GMT).\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ve been assigned CVE-2016-9086 for this issue. A pre-disclosure announcement was sent to our security newsletter and \u003ca href=\"/redirect?url=https%3A%2F%2Fabout.gitlab.com%2F2016%2F10%2F31%2Fgitlab-major-security-update-for-cve-2016-9086%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eposted on our blog\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-01T19:55:15.661Z","updated_at":"2016-11-01T19:55:15.661Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1279216,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Below is (the relevant part of) the fix we've applied, if you'd like to verify it:\n\n```\ndiff --git a/lib/gitlab/import_export/file_importer.rb b/lib/gitlab/import_export/file_importer.rb\nindex 113895b..ffd1711 100644\n--- a/lib/gitlab/import_export/file_importer.rb\n+++ b/lib/gitlab/import_export/file_importer.rb\n@@ -43,6 +43,14 @@ module Gitlab\n \n         raise Projects::ImportService::Error.new(\"Unable to decompress #{@archive_file} into #{@shared.export_path}\") unless result\n \n+        remove_symlinks!\n+      end\n+\n+      def remove_symlinks!\n+        Dir[\"#{@shared.export_path}/**/*\"].each do |path|\n+          FileUtils.rm(path) if File.lstat(path).symlink?\n+        end\n+\n         true\n       end\n     end\ndiff --git a/lib/gitlab/import_export/project_tree_restorer.rb b/lib/gitlab/import_export/project_tree_restorer.rb\nindex 7cdba88..c551321 100644\n--- a/lib/gitlab/import_export/project_tree_restorer.rb\n+++ b/lib/gitlab/import_export/project_tree_restorer.rb\n@@ -9,8 +9,14 @@ module Gitlab\n       end\n \n       def restore\n-        json = IO.read(@path)\n-        @tree_hash = ActiveSupport::JSON.decode(json)\n+        begin\n+          json = IO.read(@path)\n+          @tree_hash = ActiveSupport::JSON.decode(json)\n+        rescue =\u003e e\n+          Rails.logger.error(\"Import/Export error: #{e.message}\")\n+          raise Gitlab::ImportExport::Error.new('Incorrect JSON format')\n+        end\n+\n         @project_members = @tree_hash.delete('project_members')\n \n         ActiveRecord::Base.no_touching do\ndiff --git a/lib/gitlab/import_export/version_checker.rb b/lib/gitlab/import_export/version_checker.rb\nindex fc08082..bd3c3ee 100644\n--- a/lib/gitlab/import_export/version_checker.rb\n+++ b/lib/gitlab/import_export/version_checker.rb\n@@ -24,12 +24,19 @@ module Gitlab\n       end\n \n       def verify_version!(version)\n-        if Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)\n+        if different_version?(version)\n           raise Gitlab::ImportExport::Error.new(\"Import version mismatch: Required #{Gitlab::ImportExport.version} but was #{version}\")\n         else\n           true\n         end\n       end\n+\n+      def different_version?(version)\n+        Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)\n+      rescue =\u003e e\n+        Rails.logger.error(\"Import/Export error: #{e.message}\")\n+        raise Gitlab::ImportExport::Error.new('Incorrect VERSION format')\n+      end\n     end\n   end\n end\n```","markdown_message":"\u003cp\u003eBelow is (the relevant part of) the fix we\u0026#39;ve applied, if you\u0026#39;d like to verify it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/lib/gitlab/import_export/file_importer.rb b/lib/gitlab/import_export/file_importer.rb\nindex 113895b..ffd1711 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/lib/gitlab/import_export/file_importer.rb\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/lib/gitlab/import_export/file_importer.rb\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -43,6 +43,14 @@\u003c/span\u003e module Gitlab\n\n         raise Projects::ImportService::Error.new(\u0026quot;Unable to decompress #{@archive_file} into #{@shared.export_path}\u0026quot;) unless result\n\n+        remove_symlinks!\n\u003cspan class=\"gi\"\u003e+      end\n+\n+      def remove_symlinks!\n+        Dir[\u0026quot;#{@shared.export_path}/**/*\u0026quot;].each do |path|\n+          FileUtils.rm(path) if File.lstat(path).symlink?\n+        end\n+\n\u003c/span\u003e         true\n       end\n     end\n\u003cspan class=\"gh\"\u003ediff --git a/lib/gitlab/import_export/project_tree_restorer.rb b/lib/gitlab/import_export/project_tree_restorer.rb\nindex 7cdba88..c551321 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/lib/gitlab/import_export/project_tree_restorer.rb\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/lib/gitlab/import_export/project_tree_restorer.rb\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -9,8 +9,14 @@\u003c/span\u003e module Gitlab\n       end\n\n       def restore\n\u003cspan class=\"gd\"\u003e-        json = IO.read(@path)\n-        @tree_hash = ActiveSupport::JSON.decode(json)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        begin\n+          json = IO.read(@path)\n+          @tree_hash = ActiveSupport::JSON.decode(json)\n+        rescue =\u0026gt; e\n+          Rails.logger.error(\u0026quot;Import/Export error: #{e.message}\u0026quot;)\n+          raise Gitlab::ImportExport::Error.new(\u0026#39;Incorrect JSON format\u0026#39;)\n+        end\n+\n\u003c/span\u003e         @project_members = @tree_hash.delete(\u0026#39;project_members\u0026#39;)\n\n         ActiveRecord::Base.no_touching do\n\u003cspan class=\"gh\"\u003ediff --git a/lib/gitlab/import_export/version_checker.rb b/lib/gitlab/import_export/version_checker.rb\nindex fc08082..bd3c3ee 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/lib/gitlab/import_export/version_checker.rb\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/lib/gitlab/import_export/version_checker.rb\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -24,12 +24,19 @@\u003c/span\u003e module Gitlab\n       end\n\n       def verify_version!(version)\n\u003cspan class=\"gd\"\u003e-        if Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if different_version?(version)\n\u003c/span\u003e           raise Gitlab::ImportExport::Error.new(\u0026quot;Import version mismatch: Required #{Gitlab::ImportExport.version} but was #{version}\u0026quot;)\n         else\n           true\n         end\n       end\n\u003cspan class=\"gi\"\u003e+\n+      def different_version?(version)\n+        Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)\n+      rescue =\u0026gt; e\n+        Rails.logger.error(\u0026quot;Import/Export error: #{e.message}\u0026quot;)\n+        raise Gitlab::ImportExport::Error.new(\u0026#39;Incorrect VERSION format\u0026#39;)\n+      end\n\u003c/span\u003e     end\n   end\n end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2016-11-01T20:12:38.521Z","updated_at":"2016-11-01T20:12:38.521Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1279280,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks, @rspeicher! With the upcoming security release, I wanted to document a few more problems that will be addressed. There are two more restore scripts that have similar problems, namely the avatar restorer and the uploads restorer.\n\nThe likelihood of exploiting the avatar restore script is limited, because the project avatar is being validated before it's saved. This means that it can only be used to copy potentially confidential files on the application server, but only when it's a valid image. Because the entropy of the uploads directories in other namespaces, this is less likely to be exploited. Because you're using bare repositories, files from other repositories cannot be extracted.\n\nThe similar vulnerability in the upload restorer is more severe. When the tar file contains an `uploads` directory, its subdirectories will be copied to the new namespace. This will copy the symlink to the attacker's namespace. When that happens, the linked file can be obtained through two ways. The attacker can download the original file by simply downloading the file through the web application, but it can also be obtained by downloading a new GitLab export. The export feature will copy the linked file to the tar instead of the symlink itself.\n\nThe proposed fix seems to take care of all vulnerabilities pointed out in this report so far. I'm looking forward to the release. Thanks again, @rspeicher!","markdown_message":"\u003cp\u003eThanks, \u003ca href=\"/rspeicher\"\u003e@rspeicher\u003c/a\u003e! With the upcoming security release, I wanted to document a few more problems that will be addressed. There are two more restore scripts that have similar problems, namely the avatar restorer and the uploads restorer.\u003c/p\u003e\n\n\u003cp\u003eThe likelihood of exploiting the avatar restore script is limited, because the project avatar is being validated before it\u0026#39;s saved. This means that it can only be used to copy potentially confidential files on the application server, but only when it\u0026#39;s a valid image. Because the entropy of the uploads directories in other namespaces, this is less likely to be exploited. Because you\u0026#39;re using bare repositories, files from other repositories cannot be extracted.\u003c/p\u003e\n\n\u003cp\u003eThe similar vulnerability in the upload restorer is more severe. When the tar file contains an \u003ccode\u003euploads\u003c/code\u003e directory, its subdirectories will be copied to the new namespace. This will copy the symlink to the attacker\u0026#39;s namespace. When that happens, the linked file can be obtained through two ways. The attacker can download the original file by simply downloading the file through the web application, but it can also be obtained by downloading a new GitLab export. The export feature will copy the linked file to the tar instead of the symlink itself.\u003c/p\u003e\n\n\u003cp\u003eThe proposed fix seems to take care of all vulnerabilities pointed out in this report so far. I\u0026#39;m looking forward to the release. Thanks again, \u003ca href=\"/rspeicher\"\u003e@rspeicher\u003c/a\u003e!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-01T20:41:07.896Z","updated_at":"2016-11-01T20:41:07.896Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1280398,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Minor update: the fix did not apply cleanly to 8.9 due to a number of changes in the Import/Export code since that version's release. Because the import feature requires administrator access in that version, we feel the exploit is less severe and will only be releasing patches for 8.10 through 8.13.\n\nVersions 8.10 through 8.12 also had the administrator requirement, but because the patch applied cleanly we plan to release patches for those versions as an extra precaution.","markdown_message":"\u003cp\u003eMinor update: the fix did not apply cleanly to 8.9 due to a number of changes in the Import/Export code since that version\u0026#39;s release. Because the import feature requires administrator access in that version, we feel the exploit is less severe and will only be releasing patches for 8.10 through 8.13.\u003c/p\u003e\n\n\u003cp\u003eVersions 8.10 through 8.12 also had the administrator requirement, but because the patch applied cleanly we plan to release patches for those versions as an extra precaution.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-02T13:54:29.509Z","updated_at":"2016-11-02T13:54:29.509Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1280524,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To clarify, the required administrator access is that the import of GitLab export files has to be enabled on the GitLab instance by an administrator. Once that has been done, anyone that can create a project can exploit the reported vulnerabilities. The recommendation you could give to people using 8.9 is to disable the ability to import GitLab exports for now.","markdown_message":"\u003cp\u003eTo clarify, the required administrator access is that the import of GitLab export files has to be enabled on the GitLab instance by an administrator. Once that has been done, anyone that can create a project can exploit the reported vulnerabilities. The recommendation you could give to people using 8.9 is to disable the ability to import GitLab exports for now.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-02T15:26:11.085Z","updated_at":"2016-11-02T15:26:11.085Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1280662,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jobert The *import* controller actually performs an admin check itself before any action. We added this as a precaution against the second part of your report in #158330 and only disabled the check going into 8.13's release.\n\n- https://gitlab.com/gitlab-org/gitlab-ce/blob/8-9-stable/app/controllers/import/gitlab_projects_controller.rb#L3\n- https://gitlab.com/gitlab-org/gitlab-ce/blob/8-10-stable/app/controllers/import/gitlab_projects_controller.rb#L3\n- https://gitlab.com/gitlab-org/gitlab-ce/blob/8-11-stable/app/controllers/import/gitlab_projects_controller.rb#L3 \n- https://gitlab.com/gitlab-org/gitlab-ce/blob/8-12-stable/app/controllers/import/gitlab_projects_controller.rb#L3","markdown_message":"\u003cp\u003e\u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e The \u003cem\u003eimport\u003c/em\u003e controller actually performs an admin check itself before any action. We added this as a precaution against the second part of your report in \u003ca href=\"/reports/158330\"\u003e#158330\u003c/a\u003e and only disabled the check going into 8.13\u0026#39;s release.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/blob/8-9-stable/app/controllers/import/gitlab_projects_controller.rb#L3\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fblob%2F8-9-stable%2Fapp%2Fcontrollers%2Fimport%2Fgitlab_projects_controller.rb%23L3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/blob/8-9-stable/app/controllers/import/gitlab_projects_controller.rb#L3\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/blob/8-10-stable/app/controllers/import/gitlab_projects_controller.rb#L3\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fblob%2F8-10-stable%2Fapp%2Fcontrollers%2Fimport%2Fgitlab_projects_controller.rb%23L3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/blob/8-10-stable/app/controllers/import/gitlab_projects_controller.rb#L3\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/blob/8-11-stable/app/controllers/import/gitlab_projects_controller.rb#L3\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fblob%2F8-11-stable%2Fapp%2Fcontrollers%2Fimport%2Fgitlab_projects_controller.rb%23L3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/blob/8-11-stable/app/controllers/import/gitlab_projects_controller.rb#L3\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/blob/8-12-stable/app/controllers/import/gitlab_projects_controller.rb#L3\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fblob%2F8-12-stable%2Fapp%2Fcontrollers%2Fimport%2Fgitlab_projects_controller.rb%23L3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/blob/8-12-stable/app/controllers/import/gitlab_projects_controller.rb#L3\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2016-11-02T16:25:04.758Z","updated_at":"2016-11-02T16:56:00.970Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1280896,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"@jobert Going to mark this as resolved. You can request disclosure (and on #158330 as well) and we'll approve both once our blog post for the patch releases is live.\n\nThanks again!","markdown_message":"\u003cp\u003e\u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e Going to mark this as resolved. You can request disclosure (and on \u003ca href=\"/reports/158330\"\u003e#158330\u003c/a\u003e as well) and we\u0026#39;ll approve both once our blog post for the patch releases is live.\u003c/p\u003e\n\n\u003cp\u003eThanks again!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-02T18:33:17.841Z","updated_at":"2016-11-02T18:33:17.841Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1280903,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-02T18:37:40.840Z","updated_at":"2016-11-02T18:37:40.840Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1281491,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Our patch and security announcement have gone live! \n\nhttps://about.gitlab.com/2016/11/02/cve-2016-9086-patches/\n\nThanks so much, Jobert.","markdown_message":"\u003cp\u003eOur patch and security announcement have gone live! \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://about.gitlab.com/2016/11/02/cve-2016-9086-patches/\" href=\"/redirect?url=https%3A%2F%2Fabout.gitlab.com%2F2016%2F11%2F02%2Fcve-2016-9086-patches%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://about.gitlab.com/2016/11/02/cve-2016-9086-patches/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThanks so much, Jobert.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-03T00:35:28.684Z","updated_at":"2016-11-03T00:35:28.684Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1281492,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-03T00:35:28.722Z","updated_at":"2016-11-03T00:35:28.722Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":2869,"category":"researcher","content":"GitLab CE/EE versions 8.9, 8.10, 8.11, 8.12, and 8.13 are vulnerable to an arbitrary file read vulnerability. The vulnerability could be exploited to gain access to the application's secrets. These secrets could be used to gain command execution access on the application server. \n\nThe CVSS for the vulnerability in versions 8.9, 8.10, 8.11, and 8.12 is determined to be 8.4 (CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H). The CVSS for the same vulnerability in version 8.13 was determined to be 9.0, because the admin privilege was not necessary anymore to exploit the vulnerability (CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H). For all scenarios, the GitLab instance needs to have the import feature of GitLab export files enabled.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eGitLab CE/EE versions 8.9, 8.10, 8.11, 8.12, and 8.13 are vulnerable to an arbitrary file read vulnerability. The vulnerability could be exploited to gain access to the application\u0026#39;s secrets. These secrets could be used to gain command execution access on the application server. \u003c/p\u003e\n\n\u003cp\u003eThe CVSS for the vulnerability in versions 8.9, 8.10, 8.11, and 8.12 is determined to be 8.4 (CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H). The CVSS for the same vulnerability in version 8.13 was determined to be 9.0, because the admin privilege was not necessary anymore to exploit the vulnerability (CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H). For all scenarios, the GitLab instance needs to have the import feature of GitLab export files enabled.\u003c/p\u003e\n"}]}