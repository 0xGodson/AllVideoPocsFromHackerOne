{"id":489146,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80ODkxNDY=","url":"https://hackerone.com/reports/489146","title":"Confidential data of users and limited metadata of programs and reports accessible via GraphQL","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2019-01-31T15:32:20.974Z","submitted_at":"2019-01-31T15:32:20.974Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"yashrs","url":"/yashrs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-02-03T10:57:19.220Z","bug_reporter_agreed_on_going_public_at":"2019-02-03T10:57:19.106Z","team_member_agreed_on_going_public_at":"2019-02-03T10:36:46.940Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nThe GraphQL endpoint doesn't have access controls implemented properly.\n\n**Description:**\nAny attacker can get personally identifiable information of users of Hackerone such as email address, backup hash codes, facebook_user_id, account_recovery_phone_number_verified_at, totp_enabled, etc.\n\nThese are just some examples of fields which are getting leaked directly from GraphQL.\n\nThis is the request sent to GraphQL:\n\n```\n{\n  id\n  users()\n  {\n    total_count \n    nodes\n    {\n      _id\n      name\n      username\n      email\n      account_recovery_phone_number\n      account_recovery_unverified_phone_number\n      bounties\n      {\n        total_amount\n      }\n      otp_backup_codes\n      i_can_update_username\n      location\n      year_in_review_published_at\n      anc_triager\n      blacklisted_from_hacker_publish\n      calendar_token\n      vpn_credentials\n      {\n        name\n      }\n      account_recovery_phone_number_sent_at\n      account_recovery_phone_number_verified_at\n      swag\n      {\n        total_count\n      }\n      totp_enabled\n      subscribed_for_team_messages\n      subscribed_for_monthly_digest\n      sessions\n      {\n        total_count\n      }\n      facebook_user_id\n      unconfirmed_email\n    }\n  }\n```\n\nSample Response:\n█████████\n\nPlease fix it.\n\nThanks,\nYash :)\n\n## Impact\n\nThis could potentially leak many users' info","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003cbr\u003e\nThe GraphQL endpoint doesn\u0026#39;t have access controls implemented properly.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003cbr\u003e\nAny attacker can get personally identifiable information of users of Hackerone such as email address, backup hash codes, facebook_user_id, account_recovery_phone_number_verified_at, totp_enabled, etc.\u003c/p\u003e\n\n\u003cp\u003eThese are just some examples of fields which are getting leaked directly from GraphQL.\u003c/p\u003e\n\n\u003cp\u003eThis is the request sent to GraphQL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  id\n  users()\n  {\n    total_count \n    nodes\n    {\n      _id\n      name\n      username\n      email\n      account_recovery_phone_number\n      account_recovery_unverified_phone_number\n      bounties\n      {\n        total_amount\n      }\n      otp_backup_codes\n      i_can_update_username\n      location\n      year_in_review_published_at\n      anc_triager\n      blacklisted_from_hacker_publish\n      calendar_token\n      vpn_credentials\n      {\n        name\n      }\n      account_recovery_phone_number_sent_at\n      account_recovery_phone_number_verified_at\n      swag\n      {\n        total_count\n      }\n      totp_enabled\n      subscribed_for_team_messages\n      subscribed_for_monthly_digest\n      sessions\n      {\n        total_count\n      }\n      facebook_user_id\n      unconfirmed_email\n    }\n  }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSample Response:\u003cbr\u003e\n█████████\u003c/p\u003e\n\n\u003cp\u003ePlease fix it.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nYash :)\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis could potentially leak many users\u0026#39; info\u003c/p\u003e\n","bounty_amount":"20000.0","formatted_bounty":"$20,000","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-03-05T10:36:47.124Z","allow_singular_disclosure_after":-57439795.75922645,"singular_disclosure_allowed":true,"vote_count":937,"voters":["delimitry","mirchr","poutine_hero","ikuamike","pajoda","13c50k4","rioru","0x541","san1t1z3r","dullink","and 927 more..."],"severity":{"rating":"critical","score":9.3,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":3,"asset_type":"URL","asset_identifier":"https://hackerone.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4071989,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"After further research, we also found the following:\n\n- User email addresses also leak the private program information\n- Duplicate users can give info about actual users. For example:  (jobert -\u003e ███████, Michiel -\u003e ██████████)\n██████\n\n- Invitation preference:\n█████████\n\n- T_shirt size\n- edit_unclaimed_profiles(true/false)\n- Lufthansa account(what is it?)\n- Next username update date\n\nSimilarly, the total count on Users is ███, so we are able to extract information for any user and also for all if an attacker wants to.\n\nThanks,\nYash","markdown_message":"\u003cp\u003eAfter further research, we also found the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser email addresses also leak the private program information\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDuplicate users can give info about actual users. For example:  (jobert -\u0026gt; ███████, Michiel -\u0026gt; ██████████)\u003cbr\u003e\n██████\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInvitation preference:\u003cbr\u003e\n█████████\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eT_shirt size\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eedit_unclaimed_profiles(true/false)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLufthansa account(what is it?)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNext username update date\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSimilarly, the total count on Users is ███, so we are able to extract information for any user and also for all if an attacker wants to.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nYash\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-31T16:30:59.149Z","updated_at":"2019-02-03T08:16:31.699Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4071997,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorInvited","message":null,"markdown_message":"","automated_response":false,"created_at":"2019-01-31T16:32:16.231Z","updated_at":"2019-01-31T16:32:16.231Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"email":"pandaonair","genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4072002,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-31T16:32:39.853Z","updated_at":"2019-01-31T16:32:39.853Z","actor":{"username":"pandaonair","cleared":true,"url":"/pandaonair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/zEjReSt2jjFjUkaw2dGL8xTC/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4072033,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For instance, we are able to extact information about a hackerone staff member @still by using the feature of graphql, **after cursor**,` users(after:\"MzY4MDYw\")`. \n\n**P.S We haven't saved any other information other than mentioned here.**\n```\n{\n id\n {\n   id\n   team\n   {\n     _id\n     about\n   }\n   uuid\n }\n me{    \n   _id #388246\n   id  #gid://hackerone/User/388246\n }\n   users(after:\"MzY4MDYw\")\n {\ntotal_count \n   pageInfo\n   {\n     hasNextPage\n     endCursor\n     startCursor\n   }\n   nodes()\n   {\n     _id\n     name\n     username\n     hackerone_triager\n     email\n     authentication_service\n     created_at\n     duplicate_users\n     {\n       total_count\n       nodes\n       {\n         _id\n         name\n         username\n         bio\n         bounties\n         {\n           average_amount\n         }\n         account_recovery_phone_number\n         hackerone_triager\n       }\n     }\naccount_recovery_phone_number\n     account_recovery_unverified_phone_number\n     bounties\n     {\n       total_amount\n     }\n     otp_backup_codes\n     i_can_update_username\n     location\n     #year_in_review_published_at\n     anc_triager\n     #blacklisted_from_hacker_publish\n     calendar_token\n     facebook_user_id\n   }\n }\n}\n```\n\n████\n\n","markdown_message":"\u003cp\u003eFor instance, we are able to extact information about a hackerone staff member \u003ca href=\"/still\"\u003e@still\u003c/a\u003e by using the feature of graphql, \u003cstrong\u003eafter cursor\u003c/strong\u003e,\u003ccode\u003eusers(after:\u0026quot;MzY4MDYw\u0026quot;)\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eP.S We haven\u0026#39;t saved any other information other than mentioned here.\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n id\n {\n   id\n   team\n   {\n     _id\n     about\n   }\n   uuid\n }\n me{    \n   _id #388246\n   id  #gid://hackerone/User/388246\n }\n   users(after:\u0026quot;MzY4MDYw\u0026quot;)\n {\ntotal_count \n   pageInfo\n   {\n     hasNextPage\n     endCursor\n     startCursor\n   }\n   nodes()\n   {\n     _id\n     name\n     username\n     hackerone_triager\n     email\n     authentication_service\n     created_at\n     duplicate_users\n     {\n       total_count\n       nodes\n       {\n         _id\n         name\n         username\n         bio\n         bounties\n         {\n           average_amount\n         }\n         account_recovery_phone_number\n         hackerone_triager\n       }\n     }\naccount_recovery_phone_number\n     account_recovery_unverified_phone_number\n     bounties\n     {\n       total_amount\n     }\n     otp_backup_codes\n     i_can_update_username\n     location\n     #year_in_review_published_at\n     anc_triager\n     #blacklisted_from_hacker_publish\n     calendar_token\n     facebook_user_id\n   }\n }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e████\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-31T16:39:41.250Z","updated_at":"2019-02-01T20:37:40.349Z","actor":{"username":"pandaonair","cleared":true,"url":"/pandaonair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/zEjReSt2jjFjUkaw2dGL8xTC/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4075707,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @yashrs and @milind1997 - thanks for this. We're looking into this now and we'll keep you posted.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and \u003ca href=\"/milind1997\"\u003e@milind1997\u003c/a\u003e - thanks for this. We\u0026#39;re looking into this now and we\u0026#39;ll keep you posted.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T03:16:02.463Z","updated_at":"2019-02-01T03:16:02.463Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075714,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Nice, we were able to reproduce the vulnerability you described. We'll jump on it right away!","markdown_message":"\u003cp\u003eNice, we were able to reproduce the vulnerability you described. We\u0026#39;ll jump on it right away!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T03:22:45.872Z","updated_at":"2019-02-01T03:22:45.872Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075854,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Additionally, we found out that `teams()` was also affected. So this further widens the impact and attack surface of this report.\n\nThe **triage_note** shouldn't be visible to anyone. It reveals information like test accounts for hackers, SAML credentials and other sensitive information that should be only visible to HackerOne Team.\n██████████\n\nAlso, as seen in the above screenshot, other information like `max_number_of_team_mediation_requests`, `last_invitation_accepted_at_for_user`, etc. were found. There maybe more to this, but we haven't investigated 100%.\n\nThanks,\nYash :)","markdown_message":"\u003cp\u003eAdditionally, we found out that \u003ccode\u003eteams()\u003c/code\u003e was also affected. So this further widens the impact and attack surface of this report.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cstrong\u003etriage_note\u003c/strong\u003e shouldn\u0026#39;t be visible to anyone. It reveals information like test accounts for hackers, SAML credentials and other sensitive information that should be only visible to HackerOne Team.\u003cbr\u003e\n██████████\u003c/p\u003e\n\n\u003cp\u003eAlso, as seen in the above screenshot, other information like \u003ccode\u003emax_number_of_team_mediation_requests\u003c/code\u003e, \u003ccode\u003elast_invitation_accepted_at_for_user\u003c/code\u003e, etc. were found. There maybe more to this, but we haven\u0026#39;t investigated 100%.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nYash :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T05:29:16.310Z","updated_at":"2019-02-01T20:38:31.602Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4075862,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @yashrs and @milind1997 - thanks for continuing to look into this. We're aware that this exposes more data that you initially reported. We will follow up with the data that was possible to be queried in a post mortem. We'd kindly like to ask to stop testing right now. Thanks for your cooperation!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and \u003ca href=\"/milind1997\"\u003e@milind1997\u003c/a\u003e - thanks for continuing to look into this. We\u0026#39;re aware that this exposes more data that you initially reported. We will follow up with the data that was possible to be queried in a post mortem. We\u0026#39;d kindly like to ask to stop testing right now. Thanks for your cooperation!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T05:31:22.693Z","updated_at":"2019-02-01T05:31:22.693Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075866,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @jobert, \n\nThanks for your quick response. We were just assessing the attack surface searching for worst case scenarios. But, now that you are aware about all the risks, we will stop. \n\nThanks\n-Yash :) ","markdown_message":"\u003cp\u003eHello \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eThanks for your quick response. We were just assessing the attack surface searching for worst case scenarios. But, now that you are aware about all the risks, we will stop. \u003c/p\u003e\n\n\u003cp\u003eThanks\u003cbr\u003e\n-Yash :) \u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T05:36:07.072Z","updated_at":"2019-02-01T05:36:07.072Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4075905,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @yashrs and @milind1997 - thanks again! We just deployed a fix for the vulnerability you discovered. Can you confirm the fix? We are continuing with our investigation to determine whether this has been abused. Thanks!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and \u003ca href=\"/milind1997\"\u003e@milind1997\u003c/a\u003e - thanks again! We just deployed a fix for the vulnerability you discovered. Can you confirm the fix? We are continuing with our investigation to determine whether this has been abused. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T06:22:52.195Z","updated_at":"2019-02-01T06:22:52.195Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075922,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-01T06:26:32.473Z","updated_at":"2019-02-01T06:26:32.473Z","additional_data":{"old_severity":"High (8.8)","new_severity":"Critical (9.3)","old_severity_id":289939,"new_severity_id":290375},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075925,"is_internal":false,"editable":false,"type":"Activities::ReportVulnerabilityTypesUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-01T06:27:47.188Z","updated_at":"2019-02-01T06:27:47.188Z","additional_data":{"added_weaknesses":[{"id":18,"name":"Information Disclosure"}],"removed_weaknesses":[{"id":46,"name":"Privacy Violation"}]},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075935,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can confirm that it is fixed. I get an error from GraphQL now. That was quick :) ","markdown_message":"\u003cp\u003eI can confirm that it is fixed. I get an error from GraphQL now. That was quick :) \u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T06:33:54.363Z","updated_at":"2019-02-01T06:33:54.363Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4075943,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks for confirming, it's much appreciated! We'll wrap up our investigation, provide a summary in this report with our root cause analysis, and award a bounty soon.\n\nUnrelated to the vulnerability itself: we noticed that you're both collaborators on this report and we want to make sure that the weights are set correctly. Can you confirm this?","markdown_message":"\u003cp\u003eThanks for confirming, it\u0026#39;s much appreciated! We\u0026#39;ll wrap up our investigation, provide a summary in this report with our root cause analysis, and award a bounty soon.\u003c/p\u003e\n\n\u003cp\u003eUnrelated to the vulnerability itself: we noticed that you\u0026#39;re both collaborators on this report and we want to make sure that the weights are set correctly. Can you confirm this?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T06:39:39.385Z","updated_at":"2019-02-01T06:39:39.385Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"yashrs","url":"/yashrs"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4075955,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e Thanks for confirming, it's much appreciated! We'll wrap up our investigation, provide a summary in this report with our root cause analysis, and award a bounty soon.\n\nThanks, that is much appreciated :) I'm so excited, it's my first accepted bug on Hackerone\n\n\u003e Unrelated to the vulnerability itself: we noticed that you're both collaborators on this report and we want to make sure that the weights are set correctly. Can you confirm this?\n\nThanks for noticing that @jobert, but yes I can confirm that it's correctly set.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eThanks for confirming, it\u0026#39;s much appreciated! We\u0026#39;ll wrap up our investigation, provide a summary in this report with our root cause analysis, and award a bounty soon.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThanks, that is much appreciated :) I\u0026#39;m so excited, it\u0026#39;s my first accepted bug on Hackerone\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUnrelated to the vulnerability itself: we noticed that you\u0026#39;re both collaborators on this report and we want to make sure that the weights are set correctly. Can you confirm this?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThanks for noticing that \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e, but yes I can confirm that it\u0026#39;s correctly set.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-01T06:45:20.092Z","updated_at":"2019-02-01T06:45:20.092Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082575,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Hi @yashrs and @milindpurswani - thanks again for bringing this to our attention, this was an amazing finding! We've added a post mortem at the top of the report to prepare this to be publicly disclosed. This includes how we decided on the bounty amount. We've redacted the screenshots you provided us. We look forward to receiving vulnerabilities from both of you in the future!\n\nHappy hacking!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and \u003ca href=\"/milindpurswani\"\u003e@milindpurswani\u003c/a\u003e - thanks again for bringing this to our attention, this was an amazing finding! We\u0026#39;ve added a post mortem at the top of the report to prepare this to be publicly disclosed. This includes how we decided on the bounty amount. We\u0026#39;ve redacted the screenshots you provided us. We look forward to receiving vulnerabilities from both of you in the future!\u003c/p\u003e\n\n\u003cp\u003eHappy hacking!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T00:18:40.284Z","updated_at":"2019-02-02T00:18:40.284Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"bounty_amount":"2000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"security","collaborator":{"username":"pandaonair","url":"/pandaonair"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4082576,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Hi @yashrs and @milindpurswani - thanks again for bringing this to our attention, this was an amazing finding! We've added a post mortem at the top of the report to prepare this to be publicly disclosed. This includes how we decided on the bounty amount. We've redacted the screenshots you provided us. We look forward to receiving vulnerabilities from both of you in the future!\n\nHappy hacking!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and \u003ca href=\"/milindpurswani\"\u003e@milindpurswani\u003c/a\u003e - thanks again for bringing this to our attention, this was an amazing finding! We\u0026#39;ve added a post mortem at the top of the report to prepare this to be publicly disclosed. This includes how we decided on the bounty amount. We\u0026#39;ve redacted the screenshots you provided us. We look forward to receiving vulnerabilities from both of you in the future!\u003c/p\u003e\n\n\u003cp\u003eHappy hacking!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T00:18:41.408Z","updated_at":"2019-02-02T00:18:41.408Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"bounty_amount":"18000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"security","collaborator":{"username":"yashrs","url":"/yashrs"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4082598,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-02T00:35:42.197Z","updated_at":"2019-02-02T00:35:42.197Z","additional_data":{"old_title":"User Information Leakage through GRAPHQL","new_title":"User Information Leakage through GraphQL"},"actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4082625,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-02T00:48:10.686Z","updated_at":"2019-02-02T00:48:10.686Z","additional_data":{"old_title":"User Information Leakage through GraphQL","new_title":"Confidential data of users and limited metadata of programs and reports accessible via GraphQL"},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4082700,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We are glad we could help make Hackerone more secure. ","markdown_message":"\u003cp\u003eWe are glad we could help make Hackerone more secure. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T01:42:49.410Z","updated_at":"2019-02-02T01:42:49.410Z","actor":{"username":"pandaonair","cleared":true,"url":"/pandaonair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/zEjReSt2jjFjUkaw2dGL8xTC/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082702,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you so much @jobert and @hackerone team for fixing this so quickly and awarding the bounty :D\n\nDo you think we are eligible for some swag? Would love to have one!","markdown_message":"\u003cp\u003eThank you so much \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e and @hackerone team for fixing this so quickly and awarding the bounty :D\u003c/p\u003e\n\n\u003cp\u003eDo you think we are eligible for some swag? Would love to have one!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T01:44:54.538Z","updated_at":"2019-02-02T01:44:54.538Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082703,"is_internal":false,"editable":false,"type":"Activities::SwagAwarded","message":"Of course! Happy to send you some swag for such a great find. :-)","markdown_message":"\u003cp\u003eOf course! Happy to send you some swag for such a great find. :-)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T01:46:47.485Z","updated_at":"2019-02-02T01:46:47.485Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"HackerOne"}},"reporter":{"username":"yashrs","url":"/yashrs"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082714,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello team, \nTwo researchers collaborated, so do you think that the other researcher is also eligible for some swag? ","markdown_message":"\u003cp\u003eHello team, \u003cbr\u003e\nTwo researchers collaborated, so do you think that the other researcher is also eligible for some swag? \u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T01:52:23.287Z","updated_at":"2019-02-02T01:52:23.287Z","actor":{"username":"pandaonair","cleared":true,"url":"/pandaonair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/zEjReSt2jjFjUkaw2dGL8xTC/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jobert @security \nSlightly related to this vuln: The user himself is able to read the otp_backup_codes hashes. I know this doesn't cause any harm in general but just wanted to confirm if it's intended before this report is disclosed\n```\n{\n me{    \n    _id #388246\n    id  #gid://hackerone/User/388246\n    otp_backup_codes\n    username   \n  }\n}\n```\nResp:\n{F416558}\n\n\nThanks,\nYash :)","markdown_message":"\u003cp\u003e\u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e \u003ca href=\"/security\"\u003e@security\u003c/a\u003e \u003cbr\u003e\nSlightly related to this vuln: The user himself is able to read the otp_backup_codes hashes. I know this doesn\u0026#39;t cause any harm in general but just wanted to confirm if it\u0026#39;s intended before this report is disclosed\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n me{    \n    _id #388246\n    id  #gid://hackerone/User/388246\n    otp_backup_codes\n    username   \n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eResp:\u003cbr\u003e\n{F416558}\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nYash :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T03:28:02.477Z","updated_at":"2019-02-02T03:28:02.477Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4082814,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also, just curious: What is the difference between edges[node] and nodes.. why are there two fields which do the same thing?","markdown_message":"\u003cp\u003eAlso, just curious: What is the difference between edges[node] and nodes.. why are there two fields which do the same thing?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T03:31:13.830Z","updated_at":"2019-02-02T03:31:13.830Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4085101,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e Two researchers collaborated, so do you think that the other researcher is also eligible for some swag?\n\nYes, we'll make sure to send both of you swag.\n\n\u003e The user himself is able to read the otp_backup_codes hashes. I know this doesn't cause any harm in general but just wanted to confirm if it's intended before this report is disclosed\n\nThanks for asking! It is currently intentional, but when we worked on this incident we noticed that this could be implemented in a different way. We'll likely remove it from the schema in some time.\n\n\u003e What is the difference between edges[node] and nodes.. why are there two fields which do the same thing?\n\nGreat question! From what I could see [in the commit history of the gem](https://github.com/rmosolgo/graphql-ruby/commit/cc6ce94032f49b8d732a4a134d7ea484e86d9d05#diff-9d2aa305e6bee5b203288ca963d6d4d4), it is simply a shorthand for `edges { node }`. It wasn't supposed to be added by default though, and so for compatibility the maintainer later accepted [a pull request](https://github.com/rmosolgo/graphql-ruby/pull/1693) to make it configurable.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eTwo researchers collaborated, so do you think that the other researcher is also eligible for some swag?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYes, we\u0026#39;ll make sure to send both of you swag.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe user himself is able to read the otp_backup_codes hashes. I know this doesn\u0026#39;t cause any harm in general but just wanted to confirm if it\u0026#39;s intended before this report is disclosed\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThanks for asking! It is currently intentional, but when we worked on this incident we noticed that this could be implemented in a different way. We\u0026#39;ll likely remove it from the schema in some time.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWhat is the difference between edges[node] and nodes.. why are there two fields which do the same thing?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eGreat question! From what I could see \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Frmosolgo%2Fgraphql-ruby%2Fcommit%2Fcc6ce94032f49b8d732a4a134d7ea484e86d9d05%23diff-9d2aa305e6bee5b203288ca963d6d4d4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ein the commit history of the gem\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, it is simply a shorthand for \u003ccode\u003eedges { node }\u003c/code\u003e. It wasn\u0026#39;t supposed to be added by default though, and so for compatibility the maintainer later accepted \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Frmosolgo%2Fgraphql-ruby%2Fpull%2F1693\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ea pull request\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to make it configurable.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-02T18:24:43.950Z","updated_at":"2019-02-02T18:24:43.950Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4086971,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-03T10:36:47.001Z","updated_at":"2019-02-03T10:36:47.001Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4086977,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @reed, please redact the last screenshot posted by @yashrs. Then we can disclose it.\n\nThanks\n\n-Milind","markdown_message":"\u003cp\u003eHello \u003ca href=\"/reed\"\u003e@reed\u003c/a\u003e, please redact the last screenshot posted by \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e. Then we can disclose it.\u003c/p\u003e\n\n\u003cp\u003eThanks\u003c/p\u003e\n\n\u003cp\u003e-Milind\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-03T10:39:07.064Z","updated_at":"2019-02-03T10:39:07.064Z","actor":{"username":"pandaonair","cleared":true,"url":"/pandaonair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/zEjReSt2jjFjUkaw2dGL8xTC/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4086989,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@milindpurswani done! Please accept disclosure. :-)","markdown_message":"\u003cp\u003e\u003ca href=\"/milindpurswani\"\u003e@milindpurswani\u003c/a\u003e done! Please accept disclosure. :-)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-03T10:44:52.310Z","updated_at":"2019-02-03T10:44:52.310Z","actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4087002,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Here we go!!\n{F417233}","markdown_message":"\u003cp\u003eHere we go!!\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"done.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/417/233/ab7a16e547c22fe6370456818f7682788d458ff0/done.jpg?response-content-disposition=attachment%3B%20filename%3D%22done.jpg%22%3B%20filename%2A%3DUTF-8%27%27done.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQYENXQUKC%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T060643Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHXwr%2Bz%2B7j54GXjIZDeFjE7V4KhtcLVpveDKyRp%2FgHMpAiEA%2FzBLaI4tlPUnNvgzY0X8n68OkDDLSfCBmjTZSd2A%2BM8qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDOLyu53NKIhzdiDnLyqRA1YiznmwUquOZL6cfEwHlrCEbfV1uip5mxrCKpzmpc9DKyYejzEqNMg8%2Fo1XQZiQbQ9Mn8QGMjtqUBvpzsRmfLsdw4KO6Yix26%2Foq9H6jcEfUIX3EyFaY0ofGk42HT5lnakJ%2FUAtv5lyqirA3laDcoq6u60WpxBZh0jLi92Ajs9kGkzDbgWJPXMK2%2FlVglZWa%2BjQNhDftrEqJh4ZV%2FIwfbcJ6s89eju9B4Xkun1IUiVjrUtA5LTMlkDAEwqtGdl3pucepUSB2hZBvbqUfgiT65T%2BpLDNg0LFqEXPPPqqyrYG3%2BqTXIZxR1FfbdXOQjx1UoPwboCHOwSOpOKGaPs6TEM2o6Sg2U%2BGvuy3dMdtNBCfH4SIfBdeUa84eWUftCR4OwBiC0F1Cl6iPIZXa92zkJSAVTz9swPvr%2BghYLYGIjX%2F8jqVGlADsLB1sl%2BqlNRFkwYrvTDOWwnYmDuvQmmhpAQ6Mg%2Fp05v07WKHRsbG%2BAUzVJ3M02i0HIdWCGKjqKXgGZi%2FLBrHUEV9bzaVWmpeFEE3MObUqv8FOusBMEus3670kEKa62xVKQkID%2Fav5Xylzf384wPv9i4fBKmwghqKR67wSDPkErUtnTlN6wJNos0uBd5jibop6zjPh%2BDMaeI%2Bt4z0CbNpMS83WKn2xS%2FvSK0QFyg217PkDWCKklNPmbumtDteHdU2qRRX%2BQwVoTBmoRFgs97OyKXEz2rc7ZIcHuDnAibsNVPNZEuX9m%2B04KKBBkwdIr0sY3zEiVHvTVxPYBSsKfBPuZwzi6W3T3aq%2BF9l860FnFBaV964%2BlbASqZkuTd4cEZ8C2GJad6RyY164GfHgpKnmQ6aYbLhiDTz0xF3adlmhg%3D%3D\u0026amp;X-Amz-Signature=68b9a068a45b734d60951dcf643b4a90eb551512d582b54722010d118724e419\" data-attachment-type=\"image/jpeg\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/417/233/ab7a16e547c22fe6370456818f7682788d458ff0/done.jpg?response-content-disposition=attachment%3B%20filename%3D%22done.jpg%22%3B%20filename%2A%3DUTF-8%27%27done.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQYENXQUKC%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T060643Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHXwr%2Bz%2B7j54GXjIZDeFjE7V4KhtcLVpveDKyRp%2FgHMpAiEA%2FzBLaI4tlPUnNvgzY0X8n68OkDDLSfCBmjTZSd2A%2BM8qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDOLyu53NKIhzdiDnLyqRA1YiznmwUquOZL6cfEwHlrCEbfV1uip5mxrCKpzmpc9DKyYejzEqNMg8%2Fo1XQZiQbQ9Mn8QGMjtqUBvpzsRmfLsdw4KO6Yix26%2Foq9H6jcEfUIX3EyFaY0ofGk42HT5lnakJ%2FUAtv5lyqirA3laDcoq6u60WpxBZh0jLi92Ajs9kGkzDbgWJPXMK2%2FlVglZWa%2BjQNhDftrEqJh4ZV%2FIwfbcJ6s89eju9B4Xkun1IUiVjrUtA5LTMlkDAEwqtGdl3pucepUSB2hZBvbqUfgiT65T%2BpLDNg0LFqEXPPPqqyrYG3%2BqTXIZxR1FfbdXOQjx1UoPwboCHOwSOpOKGaPs6TEM2o6Sg2U%2BGvuy3dMdtNBCfH4SIfBdeUa84eWUftCR4OwBiC0F1Cl6iPIZXa92zkJSAVTz9swPvr%2BghYLYGIjX%2F8jqVGlADsLB1sl%2BqlNRFkwYrvTDOWwnYmDuvQmmhpAQ6Mg%2Fp05v07WKHRsbG%2BAUzVJ3M02i0HIdWCGKjqKXgGZi%2FLBrHUEV9bzaVWmpeFEE3MObUqv8FOusBMEus3670kEKa62xVKQkID%2Fav5Xylzf384wPv9i4fBKmwghqKR67wSDPkErUtnTlN6wJNos0uBd5jibop6zjPh%2BDMaeI%2Bt4z0CbNpMS83WKn2xS%2FvSK0QFyg217PkDWCKklNPmbumtDteHdU2qRRX%2BQwVoTBmoRFgs97OyKXEz2rc7ZIcHuDnAibsNVPNZEuX9m%2B04KKBBkwdIr0sY3zEiVHvTVxPYBSsKfBPuZwzi6W3T3aq%2BF9l860FnFBaV964%2BlbASqZkuTd4cEZ8C2GJad6RyY164GfHgpKnmQ6aYbLhiDTz0xF3adlmhg%3D%3D\u0026amp;X-Amz-Signature=68b9a068a45b734d60951dcf643b4a90eb551512d582b54722010d118724e419\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-03T10:57:19.143Z","updated_at":"2019-02-03T10:57:19.143Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":417233,"filename":"done.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/417/233/ab7a16e547c22fe6370456818f7682788d458ff0/done.jpg?response-content-disposition=attachment%3B%20filename%3D%22done.jpg%22%3B%20filename%2A%3DUTF-8%27%27done.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYENXQUKC%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T060643Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHXwr%2Bz%2B7j54GXjIZDeFjE7V4KhtcLVpveDKyRp%2FgHMpAiEA%2FzBLaI4tlPUnNvgzY0X8n68OkDDLSfCBmjTZSd2A%2BM8qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDOLyu53NKIhzdiDnLyqRA1YiznmwUquOZL6cfEwHlrCEbfV1uip5mxrCKpzmpc9DKyYejzEqNMg8%2Fo1XQZiQbQ9Mn8QGMjtqUBvpzsRmfLsdw4KO6Yix26%2Foq9H6jcEfUIX3EyFaY0ofGk42HT5lnakJ%2FUAtv5lyqirA3laDcoq6u60WpxBZh0jLi92Ajs9kGkzDbgWJPXMK2%2FlVglZWa%2BjQNhDftrEqJh4ZV%2FIwfbcJ6s89eju9B4Xkun1IUiVjrUtA5LTMlkDAEwqtGdl3pucepUSB2hZBvbqUfgiT65T%2BpLDNg0LFqEXPPPqqyrYG3%2BqTXIZxR1FfbdXOQjx1UoPwboCHOwSOpOKGaPs6TEM2o6Sg2U%2BGvuy3dMdtNBCfH4SIfBdeUa84eWUftCR4OwBiC0F1Cl6iPIZXa92zkJSAVTz9swPvr%2BghYLYGIjX%2F8jqVGlADsLB1sl%2BqlNRFkwYrvTDOWwnYmDuvQmmhpAQ6Mg%2Fp05v07WKHRsbG%2BAUzVJ3M02i0HIdWCGKjqKXgGZi%2FLBrHUEV9bzaVWmpeFEE3MObUqv8FOusBMEus3670kEKa62xVKQkID%2Fav5Xylzf384wPv9i4fBKmwghqKR67wSDPkErUtnTlN6wJNos0uBd5jibop6zjPh%2BDMaeI%2Bt4z0CbNpMS83WKn2xS%2FvSK0QFyg217PkDWCKklNPmbumtDteHdU2qRRX%2BQwVoTBmoRFgs97OyKXEz2rc7ZIcHuDnAibsNVPNZEuX9m%2B04KKBBkwdIr0sY3zEiVHvTVxPYBSsKfBPuZwzi6W3T3aq%2BF9l860FnFBaV964%2BlbASqZkuTd4cEZ8C2GJad6RyY164GfHgpKnmQ6aYbLhiDTz0xF3adlmhg%3D%3D\u0026X-Amz-Signature=68b9a068a45b734d60951dcf643b4a90eb551512d582b54722010d118724e419"}],"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4087003,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-02-03T10:57:19.243Z","updated_at":"2019-02-03T10:57:19.243Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4087016,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also, shoutout to @milindpurswani for being cool and helping me out on this report! Thanks again!","markdown_message":"\u003cp\u003eAlso, shoutout to \u003ca href=\"/milindpurswani\"\u003e@milindpurswani\u003c/a\u003e for being cool and helping me out on this report! Thanks again!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-03T11:07:32.647Z","updated_at":"2019-02-03T11:07:32.647Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4325157,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @security team, \n\nI was just wondering if both the swag packs were sent from your end. I am asking because we haven't received the swag and nor have I received any email regarding that.\n\nThanks,\nYash :)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/security\"\u003e@security\u003c/a\u003e team, \u003c/p\u003e\n\n\u003cp\u003eI was just wondering if both the swag packs were sent from your end. I am asking because we haven\u0026#39;t received the swag and nor have I received any email regarding that.\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003cbr\u003e\nYash :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-14T19:21:06.292Z","updated_at":"2019-03-14T19:21:35.919Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4334841,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Lemme check @yashrs and I'll get back to you.","markdown_message":"\u003cp\u003eLemme check \u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e and I\u0026#39;ll get back to you.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-16T00:47:57.543Z","updated_at":"2019-03-16T00:47:57.543Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4348022,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@yashrs can you email us at support@hackerone.com so we can discuss this? I'll give the support team a heads up.","markdown_message":"\u003cp\u003e\u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e can you email us at \u003ca title=\"support@hackerone.com\" href=\"mailto:support@hackerone.com\" rel=\"nofollow noopener noreferrer\"\u003esupport@hackerone.com\u003c/a\u003e so we can discuss this? I\u0026#39;ll give the support team a heads up.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-18T18:01:02.323Z","updated_at":"2019-03-18T18:01:02.323Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4348059,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bencode, thanks for looking into this. I have mailed the support team.\n\nRegards,\n@yashrs","markdown_message":"\u003cp\u003e\u003ca href=\"/bencode\"\u003e@bencode\u003c/a\u003e, thanks for looking into this. I have mailed the support team.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/yashrs\"\u003e@yashrs\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-18T18:07:29.731Z","updated_at":"2019-03-18T18:07:29.731Z","actor":{"username":"yashrs","cleared":true,"url":"/yashrs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/S9WnJuUrpWvxZ6iM38qL2HE4/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":14009,"category":"team","content":"On January 31st, 2019 at 7:16pm PST, HackerOne confirmed that two reporters were able to query confidential data through a GraphQL endpoint. This vulnerability was introduced on December 17th, 2018 and was caused by a backend migration to a class-based implementation of GraphQL types, mutations, and connections. The [class-based implementation introduced](http://graphql-ruby.org/schema/class_based_api) the `nodes` field by default on all connections. The `nodes` field, in contrast with `edges`, didn’t leverage any of the defenses HackerOne has implemented to mitigate the exposure of sensitive information.\n\nOur investigation concluded that malicious actors did not exploit the vulnerability. No confidential data was compromised. A short-term fix was released on January 31st, 2019 at 9:46 PM, a little over 2 hours after the vulnerability was reproduced.\n\n# Timeline\n\n| **Date** | **Time (PST)** | **Action** |\n|-------------|----------------|------------------------------------------------------------------------------------------------------------------|\n| 2018-12-17 | 9:07 AM | Software containing bug deployed to production. |\n| 2019-01-31 | 7:32 AM | Vulnerability submitted to HackerOne’s bug bounty program. |\n| 2019-01-31 | 7:21 PM | HackerOne validated the report and started incident response. |\n| 2019-01-31 | 8:25 PM | HackerOne identified which code change introduced the security vulnerability and started work on a patch. |\n| 2019-01-31 | 9:46 PM | A patch was released mitigating the identified vulnerability. |\n| 2019-01-31 | 11:46 PM | HackerOne confirmed the vulnerability was not abused by any malicious actors. |\n| 2019-02-01 | 6:18 AM | The root cause of the vulnerability was identified and a long term mitigation was proposed. |\n| 2019-02-01 | 5:08 PM | Long term mitigation was deployed to production. |\n| 2019-02-03 | 2:34 AM | Impacted users were alerted that their information was exposed to the reporters who submitted the vulnerability. |\n\n# Root Cause\nHackerOne has a number of defenses in place to reduce the risk of over-exposing data through our GraphQL layer. The first notable defense is a separate database schema that limits the set of rows a user can query based on their current role. This significantly reduces the impact in case, for example, the result of `Report.all`, would be serialized and returned to the user. The second notable defense is attribute-level authorization depending on the role of the requester. This makes sure that when an object is serialized, for example a publicly disclosed report, the user is not able to obtain internal metadata of the report.\n\n*Why upgrade?*\nOn December 17th, when the code change was put up for review, engineers noticed the addition of the `nodes` field. An assumption was made that the field behaved like a shortcut for `edges { node }` — which, in hindsight, was not the case. No manual testing was performed to make sure that the authorization model for `nodes` was similar to other connection types.\n\nHackerOne’s engineering team decided to upgrade to the class-based implementation of `graphql-ruby` because the old .define-based implementation was lazy-loaded. This caused problems when hot reloading pieces of code in a development environment. The class-based implementation also performs better in most situations. The .define-style implementation is also deprecated by the maintainers of the gem (to be removed with GraphQL 2.0).\n\n*Why didn’t we notice?*\nThe `nodes` field is a helper field for Relay, which is used by the frontend. Even though the field was introduced, HackerOne engineers hadn’t started using this in our frontend. This caused the addition to fly under the radar of other engineers. The go-to way to query data through connection types at HackerOne is to go through the `edges` field. Because engineers outside of the specific team who upgraded to the class-based implementation did not deem the change important enough, there was no communication to other engineering teams.\n\n*Why was it exploitable?*\nWhen a GraphQL query is deconstructed and turned into one or multiple SQL queries, it will cast the result of it into an array of stale objects and use the attribute-level authorization to scrub all data the current user isn’t authorized to see. Root cause analysis showed that this code path was only followed when the nodes were queried through the `edges` field.\n\n**Query that followed the expected code path**\n```\nquery {\n  users() {\n    edges {\n      node {\n        email\n      }\n    }\n  }\n}\n```\n\nDuring the GraphQL gem upgrade on December 17th, all GraphQL types, connections, and mutations were rewritten to a class-based implementation. This introduced the `nodes` field on every connection type [in HackerOne’s GraphQL schema](https://github.com/arkadiyt/bounty-targets-data/commit/cc4ce27dc1c92996191374f46312e4da5b7099c0#diff-8f06618eaa831640dfc824ff0cc29ebd). Instead of casting the result to an array with stale objects, the `nodes` field would result in an `ActiveRecord::Relation` object. The attribute-level authorization instrumentation would then incorrectly assume that the result was safe to be serialized, as it assumes the parent of the GraphQL field had already been scrubbed.\n\n**Query that followed the unexpected code path**\n```\nquery {\n  users() {\n    nodes {\n      email\n    }\n  }\n}\n```\n\nIn the team’s investigation to determine whether this was exploited by malicious actors, the team concluded that the current logging level enabled them to answer two crucial questions: which GraphQL queries were executed and what information was transferred to the people proving the security vulnerability in the first place. These questions confirmed it was not exploited.\n\n# Resolution and Recovery\nAt 7:21 PM PST, HackerOne successfully reproduced the vulnerability as described by the reporter. The responding team identified the code change that introduced the vulnerability and started working on a short-term mitigation at 8:25 PM. This mitigation was released at 9:46 PM. The short-term mitigation was to disable the `nodes` field [from every connection type](https://github.com/arkadiyt/bounty-targets-data/commit/dd90f110609bff572f15b62d29701195a3c2b3bf#diff-8f06618eaa831640dfc824ff0cc29ebd). An internal code rule was deployed to alert the incident responders in case a new connection type was added that had the `nodes` field enabled. At the time, the root cause of the vulnerability was still unclear.\n\nOn February 1st at 6:18 AM, the team concluded the root cause analysis of the identified vulnerability. A long-term fix was put up for discussion. This fix addressed the underlying problem of the lack of attribute-level protection for the `nodes` field. Going forward any connection type that is introduced will either be sanitized through the attribute-level authorization or will stop processing the request in case of an unexpected object to be returned.\n\nThe minimum bounty award for a critical vulnerability on hackerone.com is currently set to $15,000. Even though this vulnerability exposed confidential information, it was limited to user information and metadata of programs and reports. None of the exposed information could have led to the compromise of confidential vulnerability information. It did, however, allow actors to query a significant amount of information. Because of that, the team decided to award the reporters with $20,000 for uncovering this vulnerability and working with us throughout the process.\n\n# Vulnerability Impact on Data\nSensitive information of multiple objects was exposed. Due to the two notable defenses as described in the Root Cause section, the scope of the information that was exposed was limited. Below is an overview of the objects and the confidential data that a user was able to access.\n\n*Connection: users*\nThe GraphQL schema enables anyone to query the users on the platform. This is an intentional design decision. However, because every User object could be accessed, a significant amount of confidential information was accessible.\n\nBelow is an overview of all sensitive attributes that could be queried for every user on hackerone.com.\n\n| **Sensitive attribute** | **Note** |\n|------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| account_recovery_phone_number | The last two digits of a verified account recovery phone number. |\n| account_recovery_unverified_phone_number | The complete unverified account recovery phone number. |\n| address | Accessible when swag was awarded for a report the authenticated user had access to, regardless of their role (e.g. publicly disclosed report). |\n| calendar_token | The secret calendar token that exposes when HackerOne challenges were scheduled for the user. [This does not expose customer names](https://hackerone.com/reports/488643). |\n| duplicate_users | An array of possible duplicate accounts based on platform behavior. |\n| email | The email address. |\n| otp_backup_codes | An array of bcrypt-hashed OTP backup codes. |\n| payout_preferences | A connection of the user’s payout preferences. This does **not** include bank account details. |\n| reports | See Report connection for the scope and attributes that were exposed. |\n| unconfirmed_email | The unconfirmed email address. |\n\n*Connection: teams*\nThe secure database schema, by default, allows any user to query public programs (teams) and public external programs. Because of the relationship between external programs and HackerOne programs, this data set includes programs who may be running a private program. This means it was possible to obtain internal triage notes and the policy of a select number of private programs the user did not have access to. The reporters queried partial program information, but they did not obtain any sensitive information that warranted HackerOne to reach out to any customers.\n\n| **Sensitive attribute** | **Note** |\n|-----------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| average_bounty_lower_amount | The lower bound of the average bounty range. |\n| average_bounty_upper_amount | The higher bound of the average bounty range. |\n| base_bounty | The minimum bounty of a program. |\n| bounties_total | The sum of awarded bounties in the entire lifetime of the program. |\n| bug_count | The total number of resolved reports. |\n| child_teams | A connection containing the hierarchy of teams. |\n| first_response_time | A float containing the average time to first response. |\n| goal_valid_reports | The goal of valid vulnerabilities per month the program set. |\n| grace_period_remaining_in_days | The number of days the program has to recover from too many SLA failures to avoid their program being taken off HackerOne. |\n| new_staleness_threshold | The internal SLA until a report is marked as an SLA miss when it hasn’t received a first response. |\n| new_staleness_threshold_limit | The internal SLA until a report is marked as an SLA fail when it hasn’t received a first response. |\n| policy | The program policy in raw markdown. |\n| policy_html | The rendered program policy. |\n| product_edition | The product edition the program uses. |\n| report_submission_form_intro | The submission form introduction in raw markdown. |\n| report_submission_form_intro_html | The rendered submission form introduction. |\n| report_template | The default report template in raw markdown. |\n| reporters | An array of user objects who have reporter access to the program. |\n| resolution_time | A float containing the average time to resolution. |\n| resolved_staleness_threshold | The internal SLA until a report is marked as an SLA miss when it hasn’t been resolved. |\n| sla_failed_count | The number of reports failing the internal SLA. |\n| structured_policy | A structured representation of the program policy. |\n| structured_scopes | A connection that only disclosed an internal `reference` in case the user was authorized to see the structured scopes on the program page. |\n| target_signal | A float representing the targeted signal of the program. |\n| triage_bounty_management | A text field containing instructions for HackerOne’s triage team on how to handle bounty payments. |\n| triage_enabled | A boolean field indicating whether the program uses HackerOne’s triage services. |\n| triage_note | Internal triage notes in raw markdown. |\n| triage_note_html | The rendered triage notes. |\n| triage_time | A float containing the average time to triage. |\n| triaged_staleness_threshold | The internal SLA until a report is marked as an SLA miss when it hasn’t been triaged. |\n| triaged_staleness_threshold_limit | The internal SLA until a report is marked as an SLA fail when it hasn’t been triaged. |\n| whitelisted_hackers | See `reporters`. |\n\n*Connection: reports*\nThe reports data hasn’t been fully migrated to the secure database schema yet, which means that at the time the vulnerability was reported, only fully publicly disclosed and all reports the user participated in were accessible. This significantly reduced the number of report information that was exposed.\n\n| **Sensitive attribute** | **Note** |\n|-----------------------------|-----------------------------------------------------------------------------------------------|\n| anc_reasons | An array of strings containing flags why the report was submitted to the HackerOne Human-Augmented Signal queue. |\n| mediation_requested_at | A date/time field when mediation was requested. |\n| pre_submission_review_state | A flag representing how Human-Augmented Signal responded to the report. |\n| reference | An optional internal reference. |\n| reference_link | An optional link to an internal ticket. |\n\nEven though the reporters confirmed that they did not query more information than necessary to prove the vulnerability and that they have deleted the information, HackerOne has reached out to the people for which sensitive information was downloaded by the reporters.\n\n**If your data was accessed during this incident, you have received a separate notification from HackerOne.**\n\n# Preventative Measures\nAs part of our incident response process, we are conducting an internal review and analysis of the incident. We are taking the following actions to address the underlying causes of issues and to help prevent future occurrence:\n* Consider leveraging the `graphql-ruby` gem hooks for built-in authorization callbacks to catch more edge cases\n* Break the execution flow when an unexpected object is returned in the resolution of a connection field\n* Reduce the complexity of connection type resolution\n","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eOn January 31st, 2019 at 7:16pm PST, HackerOne confirmed that two reporters were able to query confidential data through a GraphQL endpoint. This vulnerability was introduced on December 17th, 2018 and was caused by a backend migration to a class-based implementation of GraphQL types, mutations, and connections. The \u003ca href=\"/redirect?url=http%3A%2F%2Fgraphql-ruby.org%2Fschema%2Fclass_based_api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eclass-based implementation introduced\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e the \u003ccode\u003enodes\u003c/code\u003e field by default on all connections. The \u003ccode\u003enodes\u003c/code\u003e field, in contrast with \u003ccode\u003eedges\u003c/code\u003e, didn’t leverage any of the defenses HackerOne has implemented to mitigate the exposure of sensitive information.\u003c/p\u003e\n\n\u003cp\u003eOur investigation concluded that malicious actors did not exploit the vulnerability. No confidential data was compromised. A short-term fix was released on January 31st, 2019 at 9:46 PM, a little over 2 hours after the vulnerability was reproduced.\u003c/p\u003e\n\n\u003ch1 id=\"timeline\"\u003eTimeline\u003c/h1\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003eDate\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003eTime (PST)\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003eAction\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e2018-12-17\u003c/td\u003e\n\u003ctd\u003e9:07 AM\u003c/td\u003e\n\u003ctd\u003eSoftware containing bug deployed to production.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-01-31\u003c/td\u003e\n\u003ctd\u003e7:32 AM\u003c/td\u003e\n\u003ctd\u003eVulnerability submitted to HackerOne’s bug bounty program.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-01-31\u003c/td\u003e\n\u003ctd\u003e7:21 PM\u003c/td\u003e\n\u003ctd\u003eHackerOne validated the report and started incident response.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-01-31\u003c/td\u003e\n\u003ctd\u003e8:25 PM\u003c/td\u003e\n\u003ctd\u003eHackerOne identified which code change introduced the security vulnerability and started work on a patch.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-01-31\u003c/td\u003e\n\u003ctd\u003e9:46 PM\u003c/td\u003e\n\u003ctd\u003eA patch was released mitigating the identified vulnerability.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-01-31\u003c/td\u003e\n\u003ctd\u003e11:46 PM\u003c/td\u003e\n\u003ctd\u003eHackerOne confirmed the vulnerability was not abused by any malicious actors.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-02-01\u003c/td\u003e\n\u003ctd\u003e6:18 AM\u003c/td\u003e\n\u003ctd\u003eThe root cause of the vulnerability was identified and a long term mitigation was proposed.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-02-01\u003c/td\u003e\n\u003ctd\u003e5:08 PM\u003c/td\u003e\n\u003ctd\u003eLong term mitigation was deployed to production.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019-02-03\u003c/td\u003e\n\u003ctd\u003e2:34 AM\u003c/td\u003e\n\u003ctd\u003eImpacted users were alerted that their information was exposed to the reporters who submitted the vulnerability.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch1 id=\"root-cause\"\u003eRoot Cause\u003c/h1\u003e\n\n\u003cp\u003eHackerOne has a number of defenses in place to reduce the risk of over-exposing data through our GraphQL layer. The first notable defense is a separate database schema that limits the set of rows a user can query based on their current role. This significantly reduces the impact in case, for example, the result of \u003ccode\u003eReport.all\u003c/code\u003e, would be serialized and returned to the user. The second notable defense is attribute-level authorization depending on the role of the requester. This makes sure that when an object is serialized, for example a publicly disclosed report, the user is not able to obtain internal metadata of the report.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eWhy upgrade?\u003c/em\u003e\u003cbr\u003e\nOn December 17th, when the code change was put up for review, engineers noticed the addition of the \u003ccode\u003enodes\u003c/code\u003e field. An assumption was made that the field behaved like a shortcut for \u003ccode\u003eedges { node }\u003c/code\u003e — which, in hindsight, was not the case. No manual testing was performed to make sure that the authorization model for \u003ccode\u003enodes\u003c/code\u003e was similar to other connection types.\u003c/p\u003e\n\n\u003cp\u003eHackerOne’s engineering team decided to upgrade to the class-based implementation of \u003ccode\u003egraphql-ruby\u003c/code\u003e because the old .define-based implementation was lazy-loaded. This caused problems when hot reloading pieces of code in a development environment. The class-based implementation also performs better in most situations. The .define-style implementation is also deprecated by the maintainers of the gem (to be removed with GraphQL 2.0).\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eWhy didn’t we notice?\u003c/em\u003e\u003cbr\u003e\nThe \u003ccode\u003enodes\u003c/code\u003e field is a helper field for Relay, which is used by the frontend. Even though the field was introduced, HackerOne engineers hadn’t started using this in our frontend. This caused the addition to fly under the radar of other engineers. The go-to way to query data through connection types at HackerOne is to go through the \u003ccode\u003eedges\u003c/code\u003e field. Because engineers outside of the specific team who upgraded to the class-based implementation did not deem the change important enough, there was no communication to other engineering teams.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eWhy was it exploitable?\u003c/em\u003e\u003cbr\u003e\nWhen a GraphQL query is deconstructed and turned into one or multiple SQL queries, it will cast the result of it into an array of stale objects and use the attribute-level authorization to scrub all data the current user isn’t authorized to see. Root cause analysis showed that this code path was only followed when the nodes were queried through the \u003ccode\u003eedges\u003c/code\u003e field.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eQuery that followed the expected code path\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003equery {\n  users() {\n    edges {\n      node {\n        email\n      }\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDuring the GraphQL gem upgrade on December 17th, all GraphQL types, connections, and mutations were rewritten to a class-based implementation. This introduced the \u003ccode\u003enodes\u003c/code\u003e field on every connection type \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Farkadiyt%2Fbounty-targets-data%2Fcommit%2Fcc4ce27dc1c92996191374f46312e4da5b7099c0%23diff-8f06618eaa831640dfc824ff0cc29ebd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ein HackerOne’s GraphQL schema\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Instead of casting the result to an array with stale objects, the \u003ccode\u003enodes\u003c/code\u003e field would result in an \u003ccode\u003eActiveRecord::Relation\u003c/code\u003e object. The attribute-level authorization instrumentation would then incorrectly assume that the result was safe to be serialized, as it assumes the parent of the GraphQL field had already been scrubbed.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eQuery that followed the unexpected code path\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003equery {\n  users() {\n    nodes {\n      email\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the team’s investigation to determine whether this was exploited by malicious actors, the team concluded that the current logging level enabled them to answer two crucial questions: which GraphQL queries were executed and what information was transferred to the people proving the security vulnerability in the first place. These questions confirmed it was not exploited.\u003c/p\u003e\n\n\u003ch1 id=\"resolution-and-recovery\"\u003eResolution and Recovery\u003c/h1\u003e\n\n\u003cp\u003eAt 7:21 PM PST, HackerOne successfully reproduced the vulnerability as described by the reporter. The responding team identified the code change that introduced the vulnerability and started working on a short-term mitigation at 8:25 PM. This mitigation was released at 9:46 PM. The short-term mitigation was to disable the \u003ccode\u003enodes\u003c/code\u003e field \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Farkadiyt%2Fbounty-targets-data%2Fcommit%2Fdd90f110609bff572f15b62d29701195a3c2b3bf%23diff-8f06618eaa831640dfc824ff0cc29ebd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efrom every connection type\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. An internal code rule was deployed to alert the incident responders in case a new connection type was added that had the \u003ccode\u003enodes\u003c/code\u003e field enabled. At the time, the root cause of the vulnerability was still unclear.\u003c/p\u003e\n\n\u003cp\u003eOn February 1st at 6:18 AM, the team concluded the root cause analysis of the identified vulnerability. A long-term fix was put up for discussion. This fix addressed the underlying problem of the lack of attribute-level protection for the \u003ccode\u003enodes\u003c/code\u003e field. Going forward any connection type that is introduced will either be sanitized through the attribute-level authorization or will stop processing the request in case of an unexpected object to be returned.\u003c/p\u003e\n\n\u003cp\u003eThe minimum bounty award for a critical vulnerability on hackerone.com is currently set to $15,000. Even though this vulnerability exposed confidential information, it was limited to user information and metadata of programs and reports. None of the exposed information could have led to the compromise of confidential vulnerability information. It did, however, allow actors to query a significant amount of information. Because of that, the team decided to award the reporters with $20,000 for uncovering this vulnerability and working with us throughout the process.\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability-impact-on-data\"\u003eVulnerability Impact on Data\u003c/h1\u003e\n\n\u003cp\u003eSensitive information of multiple objects was exposed. Due to the two notable defenses as described in the Root Cause section, the scope of the information that was exposed was limited. Below is an overview of the objects and the confidential data that a user was able to access.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eConnection: users\u003c/em\u003e\u003cbr\u003e\nThe GraphQL schema enables anyone to query the users on the platform. This is an intentional design decision. However, because every User object could be accessed, a significant amount of confidential information was accessible.\u003c/p\u003e\n\n\u003cp\u003eBelow is an overview of all sensitive attributes that could be queried for every user on hackerone.com.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003eSensitive attribute\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eaccount_recovery_phone_number\u003c/td\u003e\n\u003ctd\u003eThe last two digits of a verified account recovery phone number.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eaccount_recovery_unverified_phone_number\u003c/td\u003e\n\u003ctd\u003eThe complete unverified account recovery phone number.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eaddress\u003c/td\u003e\n\u003ctd\u003eAccessible when swag was awarded for a report the authenticated user had access to, regardless of their role (e.g. publicly disclosed report).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ecalendar_token\u003c/td\u003e\n\u003ctd\u003eThe secret calendar token that exposes when HackerOne challenges were scheduled for the user. \u003ca href=\"https://hackerone.com/reports/488643\"\u003eThis does not expose customer names\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eduplicate_users\u003c/td\u003e\n\u003ctd\u003eAn array of possible duplicate accounts based on platform behavior.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eemail\u003c/td\u003e\n\u003ctd\u003eThe email address.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eotp_backup_codes\u003c/td\u003e\n\u003ctd\u003eAn array of bcrypt-hashed OTP backup codes.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epayout_preferences\u003c/td\u003e\n\u003ctd\u003eA connection of the user’s payout preferences. This does \u003cstrong\u003enot\u003c/strong\u003e include bank account details.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereports\u003c/td\u003e\n\u003ctd\u003eSee Report connection for the scope and attributes that were exposed.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eunconfirmed_email\u003c/td\u003e\n\u003ctd\u003eThe unconfirmed email address.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cem\u003eConnection: teams\u003c/em\u003e\u003cbr\u003e\nThe secure database schema, by default, allows any user to query public programs (teams) and public external programs. Because of the relationship between external programs and HackerOne programs, this data set includes programs who may be running a private program. This means it was possible to obtain internal triage notes and the policy of a select number of private programs the user did not have access to. The reporters queried partial program information, but they did not obtain any sensitive information that warranted HackerOne to reach out to any customers.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003eSensitive attribute\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eaverage_bounty_lower_amount\u003c/td\u003e\n\u003ctd\u003eThe lower bound of the average bounty range.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eaverage_bounty_upper_amount\u003c/td\u003e\n\u003ctd\u003eThe higher bound of the average bounty range.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebase_bounty\u003c/td\u003e\n\u003ctd\u003eThe minimum bounty of a program.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebounties_total\u003c/td\u003e\n\u003ctd\u003eThe sum of awarded bounties in the entire lifetime of the program.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebug_count\u003c/td\u003e\n\u003ctd\u003eThe total number of resolved reports.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003echild_teams\u003c/td\u003e\n\u003ctd\u003eA connection containing the hierarchy of teams.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efirst_response_time\u003c/td\u003e\n\u003ctd\u003eA float containing the average time to first response.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egoal_valid_reports\u003c/td\u003e\n\u003ctd\u003eThe goal of valid vulnerabilities per month the program set.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egrace_period_remaining_in_days\u003c/td\u003e\n\u003ctd\u003eThe number of days the program has to recover from too many SLA failures to avoid their program being taken off HackerOne.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003enew_staleness_threshold\u003c/td\u003e\n\u003ctd\u003eThe internal SLA until a report is marked as an SLA miss when it hasn’t received a first response.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003enew_staleness_threshold_limit\u003c/td\u003e\n\u003ctd\u003eThe internal SLA until a report is marked as an SLA fail when it hasn’t received a first response.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epolicy\u003c/td\u003e\n\u003ctd\u003eThe program policy in raw markdown.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epolicy_html\u003c/td\u003e\n\u003ctd\u003eThe rendered program policy.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eproduct_edition\u003c/td\u003e\n\u003ctd\u003eThe product edition the program uses.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereport_submission_form_intro\u003c/td\u003e\n\u003ctd\u003eThe submission form introduction in raw markdown.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereport_submission_form_intro_html\u003c/td\u003e\n\u003ctd\u003eThe rendered submission form introduction.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereport_template\u003c/td\u003e\n\u003ctd\u003eThe default report template in raw markdown.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereporters\u003c/td\u003e\n\u003ctd\u003eAn array of user objects who have reporter access to the program.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresolution_time\u003c/td\u003e\n\u003ctd\u003eA float containing the average time to resolution.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresolved_staleness_threshold\u003c/td\u003e\n\u003ctd\u003eThe internal SLA until a report is marked as an SLA miss when it hasn’t been resolved.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esla_failed_count\u003c/td\u003e\n\u003ctd\u003eThe number of reports failing the internal SLA.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estructured_policy\u003c/td\u003e\n\u003ctd\u003eA structured representation of the program policy.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estructured_scopes\u003c/td\u003e\n\u003ctd\u003eA connection that only disclosed an internal \u003ccode\u003ereference\u003c/code\u003e in case the user was authorized to see the structured scopes on the program page.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etarget_signal\u003c/td\u003e\n\u003ctd\u003eA float representing the targeted signal of the program.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriage_bounty_management\u003c/td\u003e\n\u003ctd\u003eA text field containing instructions for HackerOne’s triage team on how to handle bounty payments.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriage_enabled\u003c/td\u003e\n\u003ctd\u003eA boolean field indicating whether the program uses HackerOne’s triage services.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriage_note\u003c/td\u003e\n\u003ctd\u003eInternal triage notes in raw markdown.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriage_note_html\u003c/td\u003e\n\u003ctd\u003eThe rendered triage notes.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriage_time\u003c/td\u003e\n\u003ctd\u003eA float containing the average time to triage.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriaged_staleness_threshold\u003c/td\u003e\n\u003ctd\u003eThe internal SLA until a report is marked as an SLA miss when it hasn’t been triaged.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etriaged_staleness_threshold_limit\u003c/td\u003e\n\u003ctd\u003eThe internal SLA until a report is marked as an SLA fail when it hasn’t been triaged.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ewhitelisted_hackers\u003c/td\u003e\n\u003ctd\u003eSee \u003ccode\u003ereporters\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cem\u003eConnection: reports\u003c/em\u003e\u003cbr\u003e\nThe reports data hasn’t been fully migrated to the secure database schema yet, which means that at the time the vulnerability was reported, only fully publicly disclosed and all reports the user participated in were accessible. This significantly reduced the number of report information that was exposed.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003eSensitive attribute\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eanc_reasons\u003c/td\u003e\n\u003ctd\u003eAn array of strings containing flags why the report was submitted to the HackerOne Human-Augmented Signal queue.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emediation_requested_at\u003c/td\u003e\n\u003ctd\u003eA date/time field when mediation was requested.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epre_submission_review_state\u003c/td\u003e\n\u003ctd\u003eA flag representing how Human-Augmented Signal responded to the report.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereference\u003c/td\u003e\n\u003ctd\u003eAn optional internal reference.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ereference_link\u003c/td\u003e\n\u003ctd\u003eAn optional link to an internal ticket.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eEven though the reporters confirmed that they did not query more information than necessary to prove the vulnerability and that they have deleted the information, HackerOne has reached out to the people for which sensitive information was downloaded by the reporters.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf your data was accessed during this incident, you have received a separate notification from HackerOne.\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch1 id=\"preventative-measures\"\u003ePreventative Measures\u003c/h1\u003e\n\n\u003cp\u003eAs part of our incident response process, we are conducting an internal review and analysis of the incident. We are taking the following actions to address the underlying causes of issues and to help prevent future occurrence:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eConsider leveraging the \u003ccode\u003egraphql-ruby\u003c/code\u003e gem hooks for built-in authorization callbacks to catch more edge cases\u003c/li\u003e\n\u003cli\u003eBreak the execution flow when an unexpected object is returned in the resolution of a connection field\u003c/li\u003e\n\u003cli\u003eReduce the complexity of connection type resolution\u003c/li\u003e\n\u003c/ul\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}