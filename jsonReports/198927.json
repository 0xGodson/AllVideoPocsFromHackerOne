{"id":198927,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTg5Mjc=","url":"https://hackerone.com/reports/198927","title":"Parsing invalid unicode codepoints using json c extension (2.0.1+) triggers a segfault","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2017-01-17T06:15:41.770Z","submitted_at":"2017-01-17T06:15:41.770Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dgollahon","url":"/dgollahon","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7724,"url":"https://hackerone.com/ruby","handle":"ruby","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Ruby","twitter_handle":"","website":"https://www.ruby-lang.org","about":"A Programmer's Best Friend"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-10-25T13:57:33.611Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2017-09-25T13:57:21.249Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Using the default `json` library packaged with ruby, one can trigger a segmentation fault by submitting a string with a unicode escape sequence in the range between ` \\ud800-\\udbff` (https://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF).\n\nThis is can lead to a denial of service attack by segmentation fault and could be a possible point of memory corruption or remote code execution. Any program that calls `JSON.parse` on untrusted input (which is, of course, exceedingly common in web APIs/apps) is affected. I have also reproduced this bug on a private API server I control.\n\nMinimal reproduction:\n```ruby\nrequire 'json'; JSON.parse('\"\\ud800\"')\n```\n\nThe resulting segfault output and crash report are attached.\n\nTested in 2.3.3 and 2.4.0. Does NOT occur in 2.2.5.\n\nIn 2.3.3 and 2.4.0, if `json/pure` is required, an error is raised instead of a segmentation fault.\n\n```ruby\nrequire 'json/pure'; JSON.parse('\"\\ud800\"') # =\u003e JSON::ParserError: Caught Encoding::InvalidByteSequenceError at '': incomplete \"\\xD8\\x00\" on UTF-16BE\n```\nAdditionally, if you append 6 valid characters after the escape sequence, the escaped value is replaced with '?' and the following character is destroyed (surprising behavior, but no segfault).\n\n```ruby\nrequire 'json';\nJSON.parse('\"\\ud800123456\"') #  =\u003e \"?23456\"\n2.3.3 :006 \u003e JSON.parse('\"\\ud800\\ud800123456\"') # =\u003e \"êÄÄ123456\"\n2.3.3 :007 \u003e JSON.parse('\"\\ud800\\ud800\\ud800123456\"') # =\u003e \"êÄÄ?23456\"\n```\n\nIn 2.2.5, bare values are not accepted so testing this requires using a key or string value inside a json object as shown below:\n```ruby\nrequire \"json\"; p JSON.parse(\"{\\\"key\\\":\\\"#{\"\\\\u\" + format(\"%.04x\", 56296)}\\\"}\") # =\u003e {\"key\"=\u003enil}\n```\nIn this case the result is `nil`. Instead, it should likely be an encoding error.\n\nScript I used to iterate over all the codepoints in the range to verify it was not only a handful of specific values:\n```ruby\n# gem 'json', '2.0.1'\n# gem 'json', '2.0.2'\n# gem 'json', '2.0.3'\nrequire 'json'\n\n# or 0...1\u003c\u003c16 to explore the entire range\n(0xd800..0xdbff).each do |i|\n  uni = '\\u' + format(\"%.04x\", i)\n\n  program = \"require 'json'; JSON.parse('\\\\\\\"#{uni}\\\\\\\"')\"\n  system(\"ruby -e \\\"#{program}\\\"\")\n\n  status = $?.to_i\n  if status != 0\n    puts \"#{uni} -\u003e exit status #{status}\"\n  end\nend\n```","vulnerability_information_html":"\u003cp\u003eUsing the default \u003ccode\u003ejson\u003c/code\u003e library packaged with ruby, one can trigger a segmentation fault by submitting a string with a unicode escape sequence in the range between \u003ccode\u003e\\ud800-\\udbff\u003c/code\u003e (\u003ca title=\"https://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF\" href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FUTF-16%23U.2BD800_to_U.2BDFFF\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eThis is can lead to a denial of service attack by segmentation fault and could be a possible point of memory corruption or remote code execution. Any program that calls \u003ccode\u003eJSON.parse\u003c/code\u003e on untrusted input (which is, of course, exceedingly common in web APIs/apps) is affected. I have also reproduced this bug on a private API server I control.\u003c/p\u003e\n\n\u003cp\u003eMinimal reproduction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;\\ud800\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe resulting segfault output and crash report are attached.\u003c/p\u003e\n\n\u003cp\u003eTested in 2.3.3 and 2.4.0. Does NOT occur in 2.2.5.\u003c/p\u003e\n\n\u003cp\u003eIn 2.3.3 and 2.4.0, if \u003ccode\u003ejson/pure\u003c/code\u003e is required, an error is raised instead of a segmentation fault.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;json/pure\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;\\ud800\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# =\u0026gt; JSON::ParserError: Caught Encoding::InvalidByteSequenceError at \u0026#39;\u0026#39;: incomplete \u0026quot;\\xD8\\x00\u0026quot; on UTF-16BE\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdditionally, if you append 6 valid characters after the escape sequence, the escaped value is replaced with \u0026#39;?\u0026#39; and the following character is destroyed (surprising behavior, but no segfault).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;\\ud800123456\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#  =\u0026gt; \u0026quot;?23456\u0026quot;\u003c/span\u003e\n\u003cspan class=\"mf\"\u003e2.3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mo\"\u003e006\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;\\ud800\\ud800123456\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# =\u0026gt; \u0026quot;êÄÄ123456\u0026quot;\u003c/span\u003e\n\u003cspan class=\"mf\"\u003e2.3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mo\"\u003e007\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;\\ud800\\ud800\\ud800123456\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# =\u0026gt; \u0026quot;êÄÄ?23456\u0026quot;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn 2.2.5, bare values are not accepted so testing this requires using a key or string value inside a json object as shown below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;json\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003ep\u003c/span\u003e \u003cspan class=\"no\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ekey\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003eu\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;%.04x\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e56296\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e}\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# =\u0026gt; {\u0026quot;key\u0026quot;=\u0026gt;nil}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case the result is \u003ccode\u003enil\u003c/code\u003e. Instead, it should likely be an encoding error.\u003c/p\u003e\n\n\u003cp\u003eScript I used to iterate over all the codepoints in the range to verify it was not only a handful of specific values:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# gem \u0026#39;json\u0026#39;, \u0026#39;2.0.1\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem \u0026#39;json\u0026#39;, \u0026#39;2.0.2\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# gem \u0026#39;json\u0026#39;, \u0026#39;2.0.3\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;json\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# or 0...1\u0026lt;\u0026lt;16 to explore the entire range\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mh\"\u003e0xd800\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mh\"\u003e0xdbff\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eeach\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euni\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\u\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;%.04x\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eprogram\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;require \u0026#39;json\u0026#39;; JSON.parse(\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003euni\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;)\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esystem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;ruby -e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003eprogram\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"vg\"\u003e$?\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_i\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003euni\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -\u0026gt; exit status \u003c/span\u003e\u003cspan class=\"si\"\u003e#{\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":152894,"file_name":"segfault.txt","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/152/894/8950add2270b5705bff848e67b79fc422bdaeb3b/segfault.txt?response-content-disposition=attachment%3B%20filename%3D%22segfault.txt%22%3B%20filename%2A%3DUTF-8%27%27segfault.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045240Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=92f45ef99b75835929f6906c41a043c91f5f6d1bc0893a65dfab1766bd11d580","file_size":7208,"type":"text/plain"},{"id":152915,"file_name":"ruby_2017-01-16-165949_Daniels-MacBook-Pro.crash","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/152/915/a1ceef83ec5711f87ec8b4b350ab45a979c2c6ee/ruby_2017-01-16-165949_Daniels-MacBook-Pro.crash?response-content-disposition=attachment%3B%20filename%3D%22ruby_2017-01-16-165949_Daniels-MacBook-Pro.crash%22%3B%20filename%2A%3DUTF-8%27%27ruby_2017-01-16-165949_Daniels-MacBook-Pro.crash\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXIKMJWH3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T045240Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHST0svsvt2laJhuwhvtFHhDNQQ1aKmdn3kMewysqUdFAiEAulql%2B612sAbGAOHB%2F14rmdeeoxU5d8%2BAmcu4RPg%2BHwYqtAMIUhABGgwwMTM2MTkyNzQ4NDkiDCOZXQ8CegoYVtnSUSqRAzpFu%2FKSCAPO9FvY239VSQoXSErgwDzOUTpVgc827sUNqeCED0HHoCoUKyy9kO1lyu0kSFcQXf%2BvW4%2FHwxvZX6%2BphIjx2iPQX6fNNwXKcgYQYxZ8Yx%2BGm7ZXLO%2Bu7Mdu4Fn%2B9TpJQODzePG4VEMMVtb0e6FjQNUF4kQegXC133f3aM6cYX7uAbjyFy7JY7I765EFvdZteqLx2HbWaDGqldcnvslHjs3kmodLKwk9H0Ue0DoWQaLX8Vd2A0w%2FRaO%2FD7%2FQ8PGTn1qam8KaVgzORyAVZ6DxjOPjltRKnxLgyDYBYkhJ4QrBrnmUJPgQMGGWlKZ9SGJYACF0xI0BTQYivNwVfXoTMKUGwE35iziKLaZ5lyBmkqGem%2B%2FfByDZktR%2BpZGSBgSAr1UOE7ov9eb7NhNIuMzcYuOJ1sDR5pR5AlZ4GHJ8eFAlsbYZ1%2B%2F1eXzICdlYRCTp7FQRaLOJji%2BGrr7%2BDGcfEbEP64XGp9sIHjMhhaQcRwVNC6OPA5jdwFCmOnkfeeCoszPtP9ulj%2BvRBs4QMJSFqv8FOusBWzRAvPHoeI1kjG3%2Bj8jYuqVFp2PPU1q0JXR0Ajo08RGvNLJbNpVdip6BBBoiu8PCrCZDZIOwjGA3KcL5o1c4azKc2WVxPog81MB%2FMbDqzX0ad%2FLlmri78RdsSnSIX3Tn18ZdjfTGjol%2FjXedojL6GsI5pB1YlY0EqbQvBnSvbUvPa2Yr7haLR%2FQ%2FG8J8lEfc9mqMV9Imaj1ospS%2BNuCXAlVOb%2F0ya3%2BR4cs2EQotvOugeHotyPJlDfJL6Pqjp0Z9ECJu9QNa4Vn1w2ANPlIUFD2oD6RnsM%2BFR3kpEUChJsMjzZDlljBwhF14Ww%3D%3D\u0026X-Amz-Signature=dc7a6a3f3ab05c1ce7032f3386fb527013a6521dcd15494589e669c5622647e8","file_size":14862,"type":"text/plain"}],"allow_singular_disclosure_at":"2017-10-25T13:57:21.322Z","allow_singular_disclosure_after":-100277719.03913756,"singular_disclosure_allowed":true,"vote_count":4,"voters":["yassinek3ch","eveeez","spetr0x","b4155f7c29acd42c27d007a"],"severity":{"rating":"none","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1452903,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any update on this?","markdown_message":"\u003cp\u003eAny update on this?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-30T23:11:13.984Z","updated_at":"2017-01-30T23:11:13.984Z","actor":{"username":"dgollahon","cleared":false,"url":"/dgollahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1453024,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I escalated this report to JSON upstream author named flori. but we have no response.\n\nNote: upstream is here. https://github.com/flori/json","markdown_message":"\u003cp\u003eI escalated this report to JSON upstream author named flori. but we have no response.\u003c/p\u003e\n\n\u003cp\u003eNote: upstream is here. \u003ca title=\"https://github.com/flori/json\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fflori%2Fjson\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/flori/json\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-01-31T00:18:01.421Z","updated_at":"2017-01-31T00:18:01.421Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1466845,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any word from flori yet?","markdown_message":"\u003cp\u003eAny word from flori yet?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-06T21:42:55.432Z","updated_at":"2017-02-06T21:42:55.432Z","actor":{"username":"dgollahon","cleared":false,"url":"/dgollahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1467229,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Nothing. He is not ruby core member.","markdown_message":"\u003cp\u003eNothing. He is not ruby core member.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-07T00:09:05.967Z","updated_at":"2017-02-07T00:09:05.967Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1467271,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah, that's unfortunate. Let me know when you hear back.\n\nI think it's a shame that the default json library can trigger a segfault so easily.","markdown_message":"\u003cp\u003eAh, that\u0026#39;s unfortunate. Let me know when you hear back.\u003c/p\u003e\n\n\u003cp\u003eI think it\u0026#39;s a shame that the default json library can trigger a segfault so easily.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-02-07T00:40:26.353Z","updated_at":"2017-02-07T00:40:26.353Z","actor":{"username":"dgollahon","cleared":false,"url":"/dgollahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1515395,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-02T11:31:50.642Z","updated_at":"2017-03-02T11:31:50.642Z","actor":{"username":"flori","cleared":false,"url":"/flori","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/146/939/ee67845a5dccc4fa09224b37b830c8e215173fa0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1589725,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@flori, @hsbt: Any progress on this?","markdown_message":"\u003cp\u003e\u003ca href=\"/flori\"\u003e@flori\u003c/a\u003e, \u003ca href=\"/hsbt\"\u003e@hsbt\u003c/a\u003e: Any progress on this?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-07T17:11:22.489Z","updated_at":"2017-04-07T17:11:22.489Z","actor":{"username":"dgollahon","cleared":false,"url":"/dgollahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1604434,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have released a fix in version 2.0.4.","markdown_message":"\u003cp\u003eI have released a fix in version 2.0.4.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-11T10:46:07.663Z","updated_at":"2017-04-11T10:46:07.663Z","actor":{"username":"flori","cleared":false,"url":"/flori","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/146/939/ee67845a5dccc4fa09224b37b830c8e215173fa0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1605410,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great!","markdown_message":"\u003cp\u003eGreat!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-11T18:07:31.394Z","updated_at":"2017-04-11T18:07:31.394Z","actor":{"username":"dgollahon","cleared":false,"url":"/dgollahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1613530,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"I think we can close this now that it's fixed (though maybe we still need to import the gem to ruby-core).  @dgollahon thank you for reporting this!","markdown_message":"\u003cp\u003eI think we can close this now that it\u0026#39;s fixed (though maybe we still need to import the gem to ruby-core).  \u003ca href=\"/dgollahon\"\u003e@dgollahon\u003c/a\u003e thank you for reporting this!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-15T23:03:38.053Z","updated_at":"2017-04-15T23:03:38.053Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dgollahon","url":"/dgollahon"},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2019712,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-25T08:29:21.967Z","updated_at":"2017-09-25T08:29:21.967Z","additional_data":{"old_severity":"High","new_severity":"None","old_severity_id":19901,"new_severity_id":77902},"actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2020665,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"We decide to not handle this issue for vulnerability. It's a normal bug.","markdown_message":"\u003cp\u003eWe decide to not handle this issue for vulnerability. It\u0026#39;s a normal bug.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-09-25T13:57:13.092Z","updated_at":"2017-09-25T13:57:13.092Z","actor":{"url":"/ruby","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ruby"}},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2020666,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-09-25T13:57:21.282Z","updated_at":"2017-09-25T13:57:21.282Z","first_to_agree":true,"actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/808/c3eeedf7f0d1a3c3eead4e0106bbcc4441e0d9f5_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2101797,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-25T13:57:33.634Z","updated_at":"2017-10-25T13:57:33.634Z","actor":{"url":"/ruby","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Ruby"}},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}