{"id":219499,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTk0OTk=","url":"https://hackerone.com/reports/219499","title":"POODLE SSLv3.0","state":"Closed","substate":"informative","severity_rating":"none","readable_substate":"Informative","created_at":"2017-04-08T11:56:25.675Z","submitted_at":"2017-04-08T11:56:25.675Z","is_member_of_team?":false,"reporter":{"disabled":true,"username":"wazehell","url":"/wazehell","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":1868,"url":"https://hackerone.com/gratipay","handle":"gratipay","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"disabled","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Gratipay","twitter_handle":"Gratipay","website":"https://gratipay.com/","about":"Gratitude? Gratipay! The easiest way for your company to pay for open source."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-04-09T09:05:38.371Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2017-04-08T14:07:56.195Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"gratipay.com:443 SSLv3 [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol\nversion (_ssl.c:590)\n\n\njust check it :] ","vulnerability_information_html":"\u003cp\u003egratipay.com:443 SSLv3 [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol\u003cbr\u003e\nversion (_ssl.c:590)\u003c/p\u003e\n\n\u003cp\u003ejust check it :] \u003c/p\u003e\n","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":1,"voters":["spetr0x"],"severity":{"rating":"none","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1590773,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nThank you for your report, the receipt of which we herewith confirm. We are currently verifying the issue you reported.\n\nPlease expect additional feedback from us within the next couple of days. The \"INFORMATION SECURITY\" section of the following page has additional, useful information regarding our platform's security: http://inside.gratipay.com/howto/manage-risk\n\nWe appreciate your interest in securing our platform and look forward to working with you.\n\nYours sincerely,\nThe Gratipay Security Team","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eThank you for your report, the receipt of which we herewith confirm. We are currently verifying the issue you reported.\u003c/p\u003e\n\n\u003cp\u003ePlease expect additional feedback from us within the next couple of days. The \u0026quot;INFORMATION SECURITY\u0026quot; section of the following page has additional, useful information regarding our platform\u0026#39;s security: \u003ca title=\"http://inside.gratipay.com/howto/manage-risk\" href=\"/redirect?url=http%3A%2F%2Finside.gratipay.com%2Fhowto%2Fmanage-risk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://inside.gratipay.com/howto/manage-risk\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe appreciate your interest in securing our platform and look forward to working with you.\u003c/p\u003e\n\n\u003cp\u003eYours sincerely,\u003cbr\u003e\nThe Gratipay Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2017-04-08T11:56:27.006Z","updated_at":"2017-04-08T11:56:27.006Z","actor":{"url":"/gratipay","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Gratipay"}},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1590867,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Hi @wazehell,\n\nThis is an unusual report, since you marked the issue severity as `None`. I have decided to close this report as `Informative` rather than `N/A`, because I do not want to discourage you from reporting in the future. I will also give you a brief overview of what the POODLE vulnerability is and demonstrate why gratipay.com is not vulnerable to POODLE attacks. This will hopefully help you with reports in the future. ðŸ˜Š\n\n# What is the POODLE attack?\n---\n\nPadding Oracle On Downgraded Legacy Encryption (POODLE) is an issue that affects SSL 3.0. If an adversary can modify network transmissions between the client and the server they can downgrade the SSL connection to SSL 3.0 and tamper with/decrypt data in transmission.\n\nThe actual problem stems from the fact that the block cipher padding in CBC encryption in SSL 3.0 is not fully verified during the decryption process.\n\n[CBC](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29) works as follows:\n\n~~~\nPi = DK(Ci) âŠ• Ci-1\nC0 = IV\n~~~\n\nDuring the decryption process in SSL 3.0, the recipient checks the padding length byte [1], then checks the padding blocks and finally reaches the MAC value.\n\n| Body | MAC | Padding | Padding length byte |\n|------|-----|---------|---------------------|\n|   ...    |     ...      |      ...       |               7 |\n\nAll the attacker has to do is replace the last block of the ciphertext by a copy of a ciphertext block `Ci`. If the final byte is correct the ciphertext will be accepted. This is where the padding oracle attack takes place, basically the attacker iterates through the different possibilities [2] until the ciphertext is accepted.\n\nThis vulnerability could allow attackers to steal session cookies and the only way to solve this issue is by disabling SSL 3.0.\n\n# Is gratipay.com vulnerable to POODLE?\n---\n\nSSL 3.0 is disabled on gratipay.com so this issue does not affect us.\n\n~~~~\n$ openssl s_client -connect gratipay.com:443 -ssl3\n...\n8636:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:s3_pkt.c:1472:SSL alert number 70\n8636:error:1409E0E5:SSL routines:ssl3_write_bytes:ssl handshake failure:s3_pkt.c:656:\n~~~\n\nI hope this explanation helps you with future research and I wish you the best of luck!\n\nBest regards,\nEd\n\n---\n\n[1]: For instance, let's say that the block size is 8 bytes. If there is a full block of padding the last byte will be 7.\n[2]: There is a total of 256 different possibilities in our case.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/wazehell\"\u003e@wazehell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThis is an unusual report, since you marked the issue severity as \u003ccode\u003eNone\u003c/code\u003e. I have decided to close this report as \u003ccode\u003eInformative\u003c/code\u003e rather than \u003ccode\u003eN/A\u003c/code\u003e, because I do not want to discourage you from reporting in the future. I will also give you a brief overview of what the POODLE vulnerability is and demonstrate why gratipay.com is not vulnerable to POODLE attacks. This will hopefully help you with reports in the future. ðŸ˜Š\u003c/p\u003e\n\n\u003ch1 id=\"what-is-the-poodle-attack\"\u003eWhat is the POODLE attack?\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003ePadding Oracle On Downgraded Legacy Encryption (POODLE) is an issue that affects SSL 3.0. If an adversary can modify network transmissions between the client and the server they can downgrade the SSL connection to SSL 3.0 and tamper with/decrypt data in transmission.\u003c/p\u003e\n\n\u003cp\u003eThe actual problem stems from the fact that the block cipher padding in CBC encryption in SSL 3.0 is not fully verified during the decryption process.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FBlock_cipher_mode_of_operation%23Cipher_Block_Chaining_.28CBC.29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCBC\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e works as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePi = DK(Ci) âŠ• Ci-1\nC0 = IV\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDuring the decryption process in SSL 3.0, the recipient checks the padding length byte [1], then checks the padding blocks and finally reaches the MAC value.\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eBody\u003c/th\u003e\n\u003cth\u003eMAC\u003c/th\u003e\n\u003cth\u003ePadding\u003c/th\u003e\n\u003cth\u003ePadding length byte\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e...\u003c/td\u003e\n\u003ctd\u003e...\u003c/td\u003e\n\u003ctd\u003e...\u003c/td\u003e\n\u003ctd\u003e7\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eAll the attacker has to do is replace the last block of the ciphertext by a copy of a ciphertext block \u003ccode\u003eCi\u003c/code\u003e. If the final byte is correct the ciphertext will be accepted. This is where the padding oracle attack takes place, basically the attacker iterates through the different possibilities [2] until the ciphertext is accepted.\u003c/p\u003e\n\n\u003cp\u003eThis vulnerability could allow attackers to steal session cookies and the only way to solve this issue is by disabling SSL 3.0.\u003c/p\u003e\n\n\u003ch1 id=\"is-gratipay-com-vulnerable-to-poodle\"\u003eIs gratipay.com vulnerable to POODLE?\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eSSL 3.0 is disabled on gratipay.com so this issue does not affect us.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ openssl s_client -connect gratipay.com:443 -ssl3\n...\n8636:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:s3_pkt.c:1472:SSL alert number 70\n8636:error:1409E0E5:SSL routines:ssl3_write_bytes:ssl handshake failure:s3_pkt.c:656:\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI hope this explanation helps you with future research and I wish you the best of luck!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e[1]: For instance, let\u0026#39;s say that the block size is 8 bytes. If there is a full block of padding the last byte will be 7.\u003cbr\u003e\n[2]: There is a total of 256 different possibilities in our case.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-08T14:06:57.591Z","updated_at":"2017-04-08T14:06:57.591Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1590868,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-04-08T14:07:56.211Z","updated_at":"2017-04-08T14:07:56.211Z","first_to_agree":true,"actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1600678,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"I am going to publicly disclose this report in order to inform fellow researchers.","markdown_message":"\u003cp\u003eI am going to publicly disclose this report in order to inform fellow researchers.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-04-09T09:05:38.333Z","updated_at":"2017-04-09T09:05:38.333Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}