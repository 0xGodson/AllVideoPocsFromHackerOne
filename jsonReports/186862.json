{"id":186862,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODY4NjI=","url":"https://hackerone.com/reports/186862","title":"Order-phishing via Payment ID URL","state":"Closed","substate":"informative","severity_rating":"low","readable_substate":"Informative","created_at":"2016-11-30T13:21:13.847Z","submitted_at":"2016-11-30T13:21:13.847Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"sp1d3rs","url":"/sp1d3rs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15252,"url":"https://hackerone.com/portswigger","handle":"portswigger","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/252/60e8778f4f1fee57ea2b164a7d2ec1e2d2dd7bc8_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/252/60e8778f4f1fee57ea2b164a7d2ec1e2d2dd7bc8_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PortSwigger Web Security","twitter_handle":"Burp_Suite","website":"https://portswigger.net","about":"Burp Suite is the leading software for web security testing"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-11-30T20:14:33.226Z","bug_reporter_agreed_on_going_public_at":"2016-11-30T19:43:47.306Z","team_member_agreed_on_going_public_at":"2016-11-30T20:14:33.195Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello. I discovered the endpoint, which allows the attacker conduct the fishing attack to other users and they can pay for attacker's order.\nWhy this can happen? \nOn the site, order id parameter sends to the https://portswigger.net/CCPayment.aspx as POST, but attacker can append it as GET and it will works:\n\nExample:\nhttps://portswigger.net/CCPayment.aspx?id=DD6BE85CDD50DC829C0354F83E5C67\n\nSteps to reproduce:\n1) Go to the https://portswigger.net/buy/ and fill the form.\n2) Click \"Confirm details\".\n3) Click \"Pay by credit card\".\n4) Catch the POST request from 小小payment.aspx with order id:\n\nPOST /CCPayment.aspx HTTP/1.1\n[...Headers...]\n\nid=05BC4BF36F9BB32E80F4B581BF4859\n\n5) Now append the id as GET parameter. You will have link like https://portswigger.net/CCPayment.aspx?id=05BC4BF36F9BB32E80F4B581BF4859\n6) Now you can conduct phishing attack with this link, and users can pay for your order.","vulnerability_information_html":"\u003cp\u003eHello. I discovered the endpoint, which allows the attacker conduct the fishing attack to other users and they can pay for attacker\u0026#39;s order.\u003cbr\u003e\nWhy this can happen? \u003cbr\u003e\nOn the site, order id parameter sends to the \u003ca title=\"https://portswigger.net/CCPayment.aspx\" href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2FCCPayment.aspx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://portswigger.net/CCPayment.aspx\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e as POST, but attacker can append it as GET and it will works:\u003c/p\u003e\n\n\u003cp\u003eExample:\u003cbr\u003e\n\u003ca title=\"https://portswigger.net/CCPayment.aspx?id=DD6BE85CDD50DC829C0354F83E5C67\" href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2FCCPayment.aspx%3Fid%3DDD6BE85CDD50DC829C0354F83E5C67\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://portswigger.net/CCPayment.aspx?id=DD6BE85CDD50DC829C0354F83E5C67\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSteps to reproduce:\u003cbr\u003e\n1) Go to the \u003ca title=\"https://portswigger.net/buy/\" href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2Fbuy%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://portswigger.net/buy/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and fill the form.\u003cbr\u003e\n2) Click \u0026quot;Confirm details\u0026quot;.\u003cbr\u003e\n3) Click \u0026quot;Pay by credit card\u0026quot;.\u003cbr\u003e\n4) Catch the POST request from 小小payment.aspx with order id:\u003c/p\u003e\n\n\u003cp\u003ePOST /CCPayment.aspx HTTP/1.1\u003cbr\u003e\n[...Headers...]\u003c/p\u003e\n\n\u003cp\u003eid=05BC4BF36F9BB32E80F4B581BF4859\u003c/p\u003e\n\n\u003cp\u003e5) Now append the id as GET parameter. You will have link like \u003ca title=\"https://portswigger.net/CCPayment.aspx?id=05BC4BF36F9BB32E80F4B581BF4859\" href=\"/redirect?url=https%3A%2F%2Fportswigger.net%2FCCPayment.aspx%3Fid%3D05BC4BF36F9BB32E80F4B581BF4859\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://portswigger.net/CCPayment.aspx?id=05BC4BF36F9BB32E80F4B581BF4859\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n6) Now you can conduct phishing attack with this link, and users can pay for your order.\u003c/p\u003e\n","weakness":{"id":45,"name":"Cross-Site Request Forgery (CSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":6,"voters":["pekafat","shepard","spetr0x","cr4zyrud","smither","thejaguar"],"severity":{"rating":"low","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1329657,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for your report. This is kinda cool but I'm not entirely convinced it has any real security impact, since it heavily relies on social engineering. I wouldn't class it as CSRF since the user clicking the link doesn't actually do anything. I'll see what the rest of the team thinks and get back to you.","markdown_message":"\u003cp\u003eThanks for your report. This is kinda cool but I\u0026#39;m not entirely convinced it has any real security impact, since it heavily relies on social engineering. I wouldn\u0026#39;t class it as CSRF since the user clicking the link doesn\u0026#39;t actually do anything. I\u0026#39;ll see what the rest of the team thinks and get back to you.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-30T13:31:05.571Z","updated_at":"2016-11-30T13:31:05.571Z","actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1329703,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, thank you for the quick response! Basically it is not usual CSRF, but modified kind of CSRF (with GET scenario, since the POST scenario not works due to X-Frame-Options set to SAMEORIGIN) on Pay by credit card button form action (see below - the user may not know about order form, or this button, and the result of using this CSRF is redirect to credit card payment for order, created by any user), and yes, for successful attack we need some social engineering.\n\n\u003cform action=\"/CCPayment.aspx\" method=\"post\"\u003e\n\u003cinput type=\"submit\" value=\"Pay by credit card\"\u003e\n\u003cdiv id=\"ccformdata\"\u003e\u003cinput type=\"hidden\" name=\"id\" value=\"31EA501493F46AC44CDC00231A3A90\"\u003e\u003c/div\u003e\n\u003c/form\u003e\n\nThe solution is pretty simple - just disable possibility to append id as GET parameter.","markdown_message":"\u003cp\u003eHi, thank you for the quick response! Basically it is not usual CSRF, but modified kind of CSRF (with GET scenario, since the POST scenario not works due to X-Frame-Options set to SAMEORIGIN) on Pay by credit card button form action (see below - the user may not know about order form, or this button, and the result of using this CSRF is redirect to credit card payment for order, created by any user), and yes, for successful attack we need some social engineering.\u003c/p\u003e\n\n\u003cp\u003e\u0026lt;form action=\u0026quot;/CCPayment.aspx\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\u003cbr\u003e\n\u0026lt;input type=\u0026quot;submit\u0026quot; value=\u0026quot;Pay by credit card\u0026quot;\u0026gt;\u003cbr\u003e\n\u0026lt;div id=\u0026quot;ccformdata\u0026quot;\u0026gt;\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;id\u0026quot; value=\u0026quot;31EA501493F46AC44CDC00231A3A90\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\u003cbr\u003e\n\u0026lt;/form\u0026gt;\u003c/p\u003e\n\n\u003cp\u003eThe solution is pretty simple - just disable possibility to append id as GET parameter.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-30T13:57:17.778Z","updated_at":"2016-11-30T14:04:37.114Z","actor":{"username":"sp1d3rs","cleared":true,"url":"/sp1d3rs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1329742,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-30T14:17:59.759Z","updated_at":"2016-11-30T14:17:59.759Z","additional_data":{"old_title":"CSRF in the https://portswigger.net/CCPayment.aspx","new_title":"Order-phishing via Payment ID URL"},"actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1329746,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-30T14:18:33.062Z","updated_at":"2016-11-30T14:18:33.062Z","additional_data":{"old_severity":"Medium","new_severity":"Low","old_severity_id":10482,"new_severity_id":10493},"actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1329749,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"I've discussed this further and we've decided it's ultimately a social engineering issue. In the unlikely event that someone were to successfully exploit this, we would be able to cancel the order anyway. Thanks again for the report, this was an interesting one.","markdown_message":"\u003cp\u003eI\u0026#39;ve discussed this further and we\u0026#39;ve decided it\u0026#39;s ultimately a social engineering issue. In the unlikely event that someone were to successfully exploit this, we would be able to cancel the order anyway. Thanks again for the report, this was an interesting one.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-30T14:19:06.598Z","updated_at":"2016-11-30T14:19:06.598Z","actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1329787,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you, no problem:)","markdown_message":"\u003cp\u003eThank you, no problem:)\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-30T14:35:44.528Z","updated_at":"2016-11-30T14:35:44.528Z","actor":{"username":"sp1d3rs","cleared":true,"url":"/sp1d3rs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1331032,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-30T19:43:47.334Z","updated_at":"2016-11-30T19:43:47.334Z","first_to_agree":true,"actor":{"username":"sp1d3rs","cleared":true,"url":"/sp1d3rs","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1331164,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-30T20:14:33.211Z","updated_at":"2016-11-30T20:14:33.211Z","actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1331165,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-30T20:14:33.239Z","updated_at":"2016-11-30T20:14:33.239Z","actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"portswigger","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":3684,"category":"researcher","content":"The issue discovered was trivial, and did not present much security impact (as the form was available for anonymous users). However, i decided to notify the team about order-phishing possibility using order id parameter manipulation. \n\nIt was one of the my early reports here (1st week on H1), with a lot of technical mistakes, so enjoy the reading :D.\nHere is the best funny quote:\n```\nBasically it is not usual CSRF, but modified kind of CSRF (with GET scenario, since the POST scenario not works due to X-Frame-Options set to SAMEORIGIN)\n```","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThe issue discovered was trivial, and did not present much security impact (as the form was available for anonymous users). However, i decided to notify the team about order-phishing possibility using order id parameter manipulation. \u003c/p\u003e\n\n\u003cp\u003eIt was one of the my early reports here (1st week on H1), with a lot of technical mistakes, so enjoy the reading :D.\u003cbr\u003e\nHere is the best funny quote:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eBasically it is not usual CSRF, but modified kind of CSRF (with GET scenario, since the POST scenario not works due to X-Frame-Options set to SAMEORIGIN)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"}]}