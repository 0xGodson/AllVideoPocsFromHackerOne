{"id":134894,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzQ4OTQ=","url":"https://hackerone.com/reports/134894","title":"The Anti-CSRF Library fails to restrict token to a particular IP address when being behind a reverse-proxy/WAF","state":"Closed","substate":"informative","readable_substate":"Informative","created_at":"2016-04-27T00:19:53.388Z","submitted_at":"2016-04-27T00:19:53.388Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"sc0","url":"/sc0","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8539,"url":"https://hackerone.com/paragonie","handle":"paragonie","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Paragon Initiative Enterprises","twitter_handle":"ParagonIE","website":"https://github.com/paragonie","about":"Cryptography and Application Security Consultants - We Produce Various Open Source Libraries"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-04-27T09:16:17.545Z","bug_reporter_agreed_on_going_public_at":"2016-04-27T09:16:17.490Z","team_member_agreed_on_going_public_at":"2016-04-27T00:24:53.267Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The Anti-CSRF Library provides the ability to restrict token to a particular IP address using the variable \"$hmac_ip\". \n\nWhen \"$hmac_ip\" is set to \"true\", the token is generated using the predefined variable \"$_SERVER['REMOTE_ADDR']\" which gives the IP address of the client. However, when the web server is behind a reverse-proxy/WAF/Load-balancer/whatever, which is nowadays often the case, this variable will always return the IP address of the reverse-proxy/WAF/Load-balancer/whatever, failing to restrict the token to the client real IP address.\n\nIn order to restrict the token to the user real IP address, the Anti-CSRF Library should also check for the X-Forwared-For HTTP header. However, be advised this header can easily be spoofed. To my knowledge, one cannot ensure a client real IP address.\n\nBoth version 1.0.0 and 2.0.0 are affected.","vulnerability_information_html":"\u003cp\u003eThe Anti-CSRF Library provides the ability to restrict token to a particular IP address using the variable \u0026quot;$hmac_ip\u0026quot;. \u003c/p\u003e\n\n\u003cp\u003eWhen \u0026quot;$hmac_ip\u0026quot; is set to \u0026quot;true\u0026quot;, the token is generated using the predefined variable \u0026quot;$_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]\u0026quot; which gives the IP address of the client. However, when the web server is behind a reverse-proxy/WAF/Load-balancer/whatever, which is nowadays often the case, this variable will always return the IP address of the reverse-proxy/WAF/Load-balancer/whatever, failing to restrict the token to the client real IP address.\u003c/p\u003e\n\n\u003cp\u003eIn order to restrict the token to the user real IP address, the Anti-CSRF Library should also check for the X-Forwared-For HTTP header. However, be advised this header can easily be spoofed. To my knowledge, one cannot ensure a client real IP address.\u003c/p\u003e\n\n\u003cp\u003eBoth version 1.0.0 and 2.0.0 are affected.\u003c/p\u003e\n","weakness":{"id":45,"name":"Cross-Site Request Forgery (CSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-05-27T00:24:53.328Z","allow_singular_disclosure_after":-144907260.0660895,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":929540,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"\u003e However, when the web server is behind a reverse-proxy/WAF/Load-balancer/whatever, which is nowadays often the case, this variable will always return the IP address of the reverse-proxy/WAF/Load-balancer/whatever, failing to restrict the token to the client real IP address.\n\nRight. We don't rely on this feature in any of our projects, we rely on HTTPS to keep the session secured, which is in and of itself adequate.\n\n\u003e In order to restrict the token to the user real IP address, the Anti-CSRF Library should also check for the X-Forwared-For HTTP header. **However, be advised this header can easily be spoofed. To my knowledge, one cannot ensure a client real IP address.**\n\nI'd rather not do that. [This has proven error-prone in the past](https://wordpress.org/support/topic/sql-injection-vulnerability-9?replies=9). I discourage the use of the $hmac_ip feature as it causes severe misery for mobile/Tor users.\n\nThanks for looking at our code, but I don't think this is anything to be worried about.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eHowever, when the web server is behind a reverse-proxy/WAF/Load-balancer/whatever, which is nowadays often the case, this variable will always return the IP address of the reverse-proxy/WAF/Load-balancer/whatever, failing to restrict the token to the client real IP address.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eRight. We don\u0026#39;t rely on this feature in any of our projects, we rely on HTTPS to keep the session secured, which is in and of itself adequate.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn order to restrict the token to the user real IP address, the Anti-CSRF Library should also check for the X-Forwared-For HTTP header. \u003cstrong\u003eHowever, be advised this header can easily be spoofed. To my knowledge, one cannot ensure a client real IP address.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI\u0026#39;d rather not do that. \u003ca href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fsupport%2Ftopic%2Fsql-injection-vulnerability-9%3Freplies%3D9\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eThis has proven error-prone in the past\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. I discourage the use of the $hmac_ip feature as it causes severe misery for mobile/Tor users.\u003c/p\u003e\n\n\u003cp\u003eThanks for looking at our code, but I don\u0026#39;t think this is anything to be worried about.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-04-27T00:24:45.504Z","updated_at":"2016-04-27T00:24:45.504Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":929541,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-27T00:24:53.291Z","updated_at":"2016-04-27T00:24:53.291Z","first_to_agree":true,"actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":929974,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-27T09:16:17.508Z","updated_at":"2016-04-27T09:16:17.508Z","actor":{"username":"sc0","cleared":true,"url":"/sc0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":929975,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-04-27T09:16:17.567Z","updated_at":"2016-04-27T09:16:17.567Z","actor":{"username":"sc0","cleared":true,"url":"/sc0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}