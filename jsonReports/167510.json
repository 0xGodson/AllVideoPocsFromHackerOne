{"id":167510,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc1MTA=","url":"https://hackerone.com/reports/167510","title":"CVE-2016-5157 OpenJPEG opj_dwt_interleave_v Out-of-Bounds Write Vulnerability","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-09-11T06:05:15.356Z","submitted_at":"2016-09-11T06:05:15.356Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"hacker2nd","url":"/hacker2nd","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":20,"url":"https://hackerone.com/internet","handle":"internet","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"The Internet","twitter_handle":null,"website":"","about":"Hack all the things."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T23:54:34.366Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T23:54:29.928Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# OpenJPEG opj_dwt_interleave_v Out-of-Bounds Write Vulnerability\n\n## 1. About OpenJPEG\nOpenJPEG is an open-source JPEG 2000 codec written in C language. It's widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at [GitHub](https://github.com/uclouvain/openjpeg).\n\n## 2. Credit\nThis vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.\n\n## 3. Testing Environments\n+ **OS**: Ubuntu\n+ **OpenJPEG**: [4a2a869](https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip) (Master version before Aug/6/2016)\n+ **Compiler**: Clang\n+ **CFLAGS**: ``-g -O0 -fsanitize=address``\n\n## 4. Reproduce Steps\nPlease copy file ``poc.jp2`` to directory ``openjpeg/bin`` before executing ``opj_decompress``.\n```\nwget https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nunzip -q 4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nmv openjpeg-4a2a8693e5a02207a8813b02a375abdc4e43c49b openjpeg\ncd openjpeg\nexport CC='/usr/bin/clang -g -O0 -fsanitize=address'\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n```\n\n## 5. Vulnerability Details\nThis is a heap buffer overflow vulnerability. AddressSanitizer output the following exception information.\n```\n==38575==ERROR: AddressSanitizer: heap-buffer-overflow on address\n    0x619000001e7c at pc 0x7f3ab84a5a57 bp 0x7ffc2a7f1c50 sp 0x7ffc2a7f1c48\nWRITE of size 4 at 0x619000001e7c thread T0\n    #0 0x7f3ab84a5a56 in opj_dwt_interleave_v openjpeg/src/lib/openjp2/dwt.c:268:11\n    #1 0x7f3ab849ddca in opj_dwt_decode_tile openjpeg/src/lib/openjp2/dwt.c:609:4\n    #2 0x7f3ab849d101 in opj_dwt_decode openjpeg/src/lib/openjp2/dwt.c:477:9\n    #3 0x7f3ab8574f5e in opj_tcd_dwt_decode openjpeg/src/lib/openjp2/tcd.c:1619:31\n    #4 0x7f3ab85747ea in opj_tcd_decode_tile openjpeg/src/lib/openjp2/tcd.c:1306:20\n    #5 0x7f3ab84c2deb in opj_j2k_decode_tile openjpeg/src/lib/openjp2/j2k.c:8134:15\n    #6 0x7f3ab84f0b44 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9761:23\n    #7 0x7f3ab84b98dd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7350:41\n    #8 0x7f3ab84cc9ae in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9959:15\n    #9 0x7f3ab8507cae in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1492:8\n    #10 0x7f3ab8524976 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #11 0x4f166f in main openjpeg/src/bin/jp2/opj_decompress.c:1332:10\n    #12 0x7f3ab6c8182f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #13 0x41a978 in _start (openjpeg/bin/opj_decompress+0x41a978)\n\n0x619000001e7c is located 4 bytes to the left of 1028-byte region [0x619000001e80,0x619000002284)\nallocated by thread T0 here:\n    #0 0x4bb380 in __interceptor_posix_memalign (openjpeg/bin/opj_decompress+0x4bb380)\n    #1 0x7f3ab857e0a0 in opj_aligned_alloc_n openjpeg/src/lib/openjp2/opj_malloc.c:61:7\n    #2 0x7f3ab857df0e in opj_aligned_malloc openjpeg/src/lib/openjp2/opj_malloc.c:208:10\n    #3 0x7f3ab849d55e in opj_dwt_decode_tile openjpeg/src/lib/openjp2/dwt.c:576:22\n    #4 0x7f3ab849d101 in opj_dwt_decode openjpeg/src/lib/openjp2/dwt.c:477:9\n    #5 0x7f3ab8574f5e in opj_tcd_dwt_decode openjpeg/src/lib/openjp2/tcd.c:1619:31\n    #6 0x7f3ab85747ea in opj_tcd_decode_tile openjpeg/src/lib/openjp2/tcd.c:1306:20\n    #7 0x7f3ab84c2deb in opj_j2k_decode_tile openjpeg/src/lib/openjp2/j2k.c:8134:15\n    #8 0x7f3ab84f0b44 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9761:23\n    #9 0x7f3ab84b98dd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7350:41\n    #10 0x7f3ab84cc9ae in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9959:15\n    #11 0x7f3ab8507cae in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1492:8\n    #12 0x7f3ab8524976 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #13 0x4f166f in main openjpeg/src/bin/jp2/opj_decompress.c:1332:10\n    #14 0x7f3ab6c8182f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow\n    openjpeg/src/lib/openjp2/dwt.c:268:11 in opj_dwt_interleave_v\nShadow bytes around the buggy address:\n  0x0c327fff8370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff8380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff8390: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff83a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff83b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=\u003e0x0c327fff83c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]\n  0x0c327fff83d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff83e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff83f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff8400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff8410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==38575==ABORTING\n```\n\n## 6. Timeline\n+ 2016.07.31 - Found\n+ 2016.08.24 - Reported to OpenJPEG via info@openjpeg.org\n+ 2016.09.08 - Fixed\n+ 2016.09.08 - Publicly disclosed\n\n## 7. References\n+ [OpenJPEG Patch](https://github.com/uclouvain/openjpeg/commit/e078172b1c3f98d2219c37076b238fb759c751ea)\n+ [oss-sec CVE Request](http://seclists.org/oss-sec/2016/q3/438)\n\n## 8. Remarks\nI found this issue independently but Google Chrome also got a report of this issue from another security researcher. So the CVE number was the same as CVE-2016-5157 which was issued for Google Chrome. However, I found and reported this issue to OpenJPEG before Google released a security advisory.\n","vulnerability_information_html":"\u003ch1 id=\"openjpeg-opj_dwt_interleave_v-out-of-bounds-write-vulnerability\"\u003eOpenJPEG opj_dwt_interleave_v Out-of-Bounds Write Vulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"1-about-openjpeg\"\u003e1. About OpenJPEG\u003c/h2\u003e\n\n\u003cp\u003eOpenJPEG is an open-source JPEG 2000 codec written in C language. It\u0026#39;s widely used in lots of Linux OSes such as Ubuntu, RedHat, Debian, Fedora, and so on. The official repository of the OpenJPEG project is available at \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eGitHub\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"2-credit\"\u003e2. Credit\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability was discovered by Ke Liu of Tencent\u0026#39;s Xuanwu LAB.\u003c/p\u003e\n\n\u003ch2 id=\"3-testing-environments\"\u003e3. Testing Environments\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOS\u003c/strong\u003e: Ubuntu\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eOpenJPEG\u003c/strong\u003e: \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Farchive%2F4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e4a2a869\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (Master version before Aug/6/2016)\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCompiler\u003c/strong\u003e: Clang\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCFLAGS\u003c/strong\u003e: \u003ccode\u003e-g -O0 -fsanitize=address\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"4-reproduce-steps\"\u003e4. Reproduce Steps\u003c/h2\u003e\n\n\u003cp\u003ePlease copy file \u003ccode\u003epoc.jp2\u003c/code\u003e to directory \u003ccode\u003eopenjpeg/bin\u003c/code\u003e before executing \u003ccode\u003eopj_decompress\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewget https://github.com/uclouvain/openjpeg/archive/4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nunzip -q 4a2a8693e5a02207a8813b02a375abdc4e43c49b.zip\nmv openjpeg-4a2a8693e5a02207a8813b02a375abdc4e43c49b openjpeg\ncd openjpeg\nexport CC=\u0026#39;/usr/bin/clang -g -O0 -fsanitize=address\u0026#39;\ncmake .\nmake\n\ncd bin\n./opj_decompress -o image.pgm -i poc.jp2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"5-vulnerability-details\"\u003e5. Vulnerability Details\u003c/h2\u003e\n\n\u003cp\u003eThis is a heap buffer overflow vulnerability. AddressSanitizer output the following exception information.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==38575==ERROR: AddressSanitizer: heap-buffer-overflow on address\n    0x619000001e7c at pc 0x7f3ab84a5a57 bp 0x7ffc2a7f1c50 sp 0x7ffc2a7f1c48\nWRITE of size 4 at 0x619000001e7c thread T0\n    #0 0x7f3ab84a5a56 in opj_dwt_interleave_v openjpeg/src/lib/openjp2/dwt.c:268:11\n    #1 0x7f3ab849ddca in opj_dwt_decode_tile openjpeg/src/lib/openjp2/dwt.c:609:4\n    #2 0x7f3ab849d101 in opj_dwt_decode openjpeg/src/lib/openjp2/dwt.c:477:9\n    #3 0x7f3ab8574f5e in opj_tcd_dwt_decode openjpeg/src/lib/openjp2/tcd.c:1619:31\n    #4 0x7f3ab85747ea in opj_tcd_decode_tile openjpeg/src/lib/openjp2/tcd.c:1306:20\n    #5 0x7f3ab84c2deb in opj_j2k_decode_tile openjpeg/src/lib/openjp2/j2k.c:8134:15\n    #6 0x7f3ab84f0b44 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9761:23\n    #7 0x7f3ab84b98dd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7350:41\n    #8 0x7f3ab84cc9ae in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9959:15\n    #9 0x7f3ab8507cae in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1492:8\n    #10 0x7f3ab8524976 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #11 0x4f166f in main openjpeg/src/bin/jp2/opj_decompress.c:1332:10\n    #12 0x7f3ab6c8182f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #13 0x41a978 in _start (openjpeg/bin/opj_decompress+0x41a978)\n\n0x619000001e7c is located 4 bytes to the left of 1028-byte region [0x619000001e80,0x619000002284)\nallocated by thread T0 here:\n    #0 0x4bb380 in __interceptor_posix_memalign (openjpeg/bin/opj_decompress+0x4bb380)\n    #1 0x7f3ab857e0a0 in opj_aligned_alloc_n openjpeg/src/lib/openjp2/opj_malloc.c:61:7\n    #2 0x7f3ab857df0e in opj_aligned_malloc openjpeg/src/lib/openjp2/opj_malloc.c:208:10\n    #3 0x7f3ab849d55e in opj_dwt_decode_tile openjpeg/src/lib/openjp2/dwt.c:576:22\n    #4 0x7f3ab849d101 in opj_dwt_decode openjpeg/src/lib/openjp2/dwt.c:477:9\n    #5 0x7f3ab8574f5e in opj_tcd_dwt_decode openjpeg/src/lib/openjp2/tcd.c:1619:31\n    #6 0x7f3ab85747ea in opj_tcd_decode_tile openjpeg/src/lib/openjp2/tcd.c:1306:20\n    #7 0x7f3ab84c2deb in opj_j2k_decode_tile openjpeg/src/lib/openjp2/j2k.c:8134:15\n    #8 0x7f3ab84f0b44 in opj_j2k_decode_tiles openjpeg/src/lib/openjp2/j2k.c:9761:23\n    #9 0x7f3ab84b98dd in opj_j2k_exec openjpeg/src/lib/openjp2/j2k.c:7350:41\n    #10 0x7f3ab84cc9ae in opj_j2k_decode openjpeg/src/lib/openjp2/j2k.c:9959:15\n    #11 0x7f3ab8507cae in opj_jp2_decode openjpeg/src/lib/openjp2/jp2.c:1492:8\n    #12 0x7f3ab8524976 in opj_decode openjpeg/src/lib/openjp2/openjpeg.c:412:10\n    #13 0x4f166f in main openjpeg/src/bin/jp2/opj_decompress.c:1332:10\n    #14 0x7f3ab6c8182f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow\n    openjpeg/src/lib/openjp2/dwt.c:268:11 in opj_dwt_interleave_v\nShadow bytes around the buggy address:\n  0x0c327fff8370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff8380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff8390: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff83a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fff83b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=\u0026gt;0x0c327fff83c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]\n  0x0c327fff83d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff83e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff83f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff8400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fff8410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==38575==ABORTING\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"6-timeline\"\u003e6. Timeline\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2016.07.31 - Found\u003c/li\u003e\n\u003cli\u003e2016.08.24 - Reported to OpenJPEG via \u003ca title=\"info@openjpeg.org\" href=\"mailto:info@openjpeg.org\" rel=\"nofollow noopener noreferrer\"\u003einfo@openjpeg.org\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2016.09.08 - Fixed\u003c/li\u003e\n\u003cli\u003e2016.09.08 - Publicly disclosed\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"7-references\"\u003e7. References\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fuclouvain%2Fopenjpeg%2Fcommit%2Fe078172b1c3f98d2219c37076b238fb759c751ea\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eOpenJPEG Patch\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/redirect?url=http%3A%2F%2Fseclists.org%2Foss-sec%2F2016%2Fq3%2F438\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eoss-sec CVE Request\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"8-remarks\"\u003e8. Remarks\u003c/h2\u003e\n\n\u003cp\u003eI found this issue independently but Google Chrome also got a report of this issue from another security researcher. So the CVE number was the same as CVE-2016-5157 which was issued for Google Chrome. However, I found and reported this issue to OpenJPEG before Google released a security advisory.\u003c/p\u003e\n","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":118977,"file_name":"poc.jp2","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/118/977/61f480e0191dcf631ee04d445c11c75edf5a73ed/poc.jp2?response-content-disposition=attachment%3B%20filename%3D%22poc.jp2%22%3B%20filename%2A%3DUTF-8%27%27poc.jp2\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQTGH7D7G4%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043936Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIF3bZwIuJVbBath9RBAagycfg6N290U9MaBDwIhhNMqjAiEA5QJFTUjUu%2BelINQ8mBSRMtPAJunx%2FkQdIQYoGvxoAn0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDKWCtAdrSoxlUzEo5CqRA2KbCK2gb0cQjXvMxG7rxH%2BqkR2WSbvaIs%2FZazFNKw1eZW2WrZTy5Q04uSJp6R8rbsBzRSLIFhyP9QTQMq5P15qLdwXnZbOxNVoADzWwgfUfGt%2BOwI%2BEjM3ovXNd1aGU0Ee1TBGk3LBN3uQ8ppV7Xii57PrmCtM4dm9usXbAaaa8f8QiQFPH1YTkHf%2FPe1cgMlFNJFqSrmu3ZMinUb9pxpphywkYT29wP%2Fak4Sy9A3St63iqnDzi8wrdG9%2FGdB7M03pSeaVTcH99G5j%2FqMpFpJxYN8TNlglA1OWgt7QlVOqnq65zCp4szGmwzF1FrjkS%2Bp3wB27lGxlw0v79ozRdwRBFBFvrSgSeToK8vpEBIlnO4uogSsVneM6zoYfyQw3%2F6HqcPg9mVWJmJS4QLMpQTMd%2FMeYn%2F%2Ffl2Vt%2Bb0X2rNtQPeWMGpzHpq6XAiCjZ%2F33fJuN%2B3j9Lmo023GSXKu%2B%2FkZTBp3waVREDqE%2BNeB30X8ZT5%2BW0bqtpGbJe8ig5jtSZzprCWg9v84Utvz3uaa%2Bcjz7MJPPqv8FOusBEHCYkRstnRk5lzIXoX3CRWjAJcL61b1gmhmecG%2Fow23IgJkGaQ5%2B%2FkCWvGrt4rLn9BlUKR84X6ifbCLPwMQevITvtVqg1wdT%2FzOjUyHnqnZVOyLFoqLXk9MNjw1VTb%2FmSNp%2Bd5NsBD5KiAAd50U1%2F1jl5yoSrl0DpEi6Yzv0bFigmUQPNRZeTImBJ2V75RxXBbDSoevWuBT70W%2F8%2BsoyTMqti7McilmsidA1BnI1f8HDTyMQGIoexlo%2BO7e5AiNtCUboKL2ZiertWXe5cEVF9mAVgHpVtz7pIIElyyZjsKslJzP%2B5WRhYUkMYg%3D%3D\u0026X-Amz-Signature=c121dc60e542b575a1236bc9bd8cf4762a7b88422970212eb5cf753df2678b53","file_size":182,"type":"application/octet-stream"}],"allow_singular_disclosure_at":"2019-11-12T23:54:29.998Z","allow_singular_disclosure_after":-35613906.704235695,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1205871,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"Thank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.","markdown_message":"\u003cp\u003eThank you for finding and reporting this! Unfortunately, OpenJPEG is not in scope for the IBB at this time.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-09-20T05:15:21.449Z","updated_at":"2016-09-20T05:15:21.449Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1205873,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T05:15:26.373Z","updated_at":"2016-09-20T05:15:26.373Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"hacker2nd","url":"/hacker2nd"},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6028971,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T23:54:29.945Z","updated_at":"2019-10-13T23:54:29.945Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6293189,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T23:54:34.384Z","updated_at":"2019-11-12T23:54:34.384Z","actor":{"url":"/internet","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/e3e1c58882b2645d9108ec102731a354cbf5852e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"The Internet"}},"genius_execution_id":null,"team_handle":"internet","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}