{"id":633231,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MzMyMzE=","url":"https://hackerone.com/reports/633231","title":"pre-auth Stored XSS in comments via javascript: url when administrator edits user supplied comment","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-07-01T15:53:12.245Z","submitted_at":"2019-07-01T15:53:12.245Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"simonscannell","url":"/simonscannell","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":55,"url":"https://hackerone.com/wordpress","handle":"wordpress","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"WordPress","twitter_handle":"wordpress","website":"https://wordpress.org/","about":"Beautiful sites of any kind."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-08-18T18:01:25.262Z","bug_reporter_agreed_on_going_public_at":"2020-07-19T18:01:23.660Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"When a comment is submitted, it is filtered via `wp_rel_nofollow_callback()`, which adds the `rel` attribute to `\u003ca\u003e` tags within the anchor:\n\n```\nfunction wp_rel_nofollow_callback( $matches ) {\n\t$text = $matches[1];\n\t$atts = shortcode_parse_atts( $matches[1] );\n\t$rel  = 'nofollow';\n\n\tif ( ! empty( $atts['href'] ) ) {\n\t\tif ( in_array( strtolower( wp_parse_url( $atts['href'], PHP_URL_SCHEME ) ), array( 'http', 'https' ), true ) ) {\n\t\t\tif ( strtolower( wp_parse_url( $atts['href'], PHP_URL_HOST ) ) === strtolower( wp_parse_url( home_url(), PHP_URL_HOST ) ) ) {\n\t\t\t\treturn \"\u003ca $text\u003e\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! empty( $atts['rel'] ) ) {\n\t\t$parts = array_map( 'trim', explode( ' ', $atts['rel'] ) );\n\t\tif ( false === array_search( 'nofollow', $parts ) ) {\n\t\t\t$parts[] = 'nofollow';\n\t\t}\n\t\t$rel = implode( ' ', $parts );\n\t\tunset( $atts['rel'] );\n\n\t\t$html = '';\n\t\tforeach ( $atts as $name =\u003e $value ) {\n\t\t\t$html .= \"{$name}=\\\"\" .  $value . '\" ';\n\t\t}\n\t\t$text = trim( $html );\n\t}\n\treturn \"\u003ca $text rel=\\\"\" . esc_attr( $rel ) . '\"\u003e';\n}\n```\n\nif the `rel` attribute is already set, the `\u003ca\u003e` tag is built back together with the values returned by `shortcode_parse_atts()`.  This is problematic, since `shortcode_parse_atts()` calls `stripcslashes()` on the attribute values, which for example allows turning `\\x3a` into `:`. \n\nTherefor the `esc_url()` function can be bypassed by:\n1. using a URL such as `javascript\\x3aalert(1);` \n2. getting an admin to edit and update the comment containing the XSS payload\n3. done\n\nI recommend moving away from `shortcode_parse_atts()` because of side effects like these. I also got close to a XSS without user interaction through the same mechanisms but it fails luckily.\n\n### PoC:\n\n1. As an unauthenticated user, create a comment with the following content:\n```\nHi!\nI really enjoy your work. We've also written a blog post about it here: http://dummysite.com/awesome-blogpost. Feel free to check it out!\n\u003ca href=\"javascript\\x3aalert(1);\"\u003eVisit my web page\u003c/a\u003e\n```\n\n2. create a second comment with the content:\n```\nI just noticed a typo in the URL! Could you please change it from dummysite.com to dummysite2.com? Thank you so much\n```\n3. Log in as an admin, go to the comments section and edit the comment and click save\n4. View the comment on the post, click the \"Visit my web page\" URL and see the alert() box popping up.\n\n## Impact\n\nThrough the XSS, RCE can be gained. Obviously a lot of user interaction is required but yeah, it is a super easy to copy \u0026 paste payload that could be used against non technical users. The XSS could then also be triggered via clickjacking.","vulnerability_information_html":"\u003cp\u003eWhen a comment is submitted, it is filtered via \u003ccode\u003ewp_rel_nofollow_callback()\u003c/code\u003e, which adds the \u003ccode\u003erel\u003c/code\u003e attribute to \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tags within the anchor:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction wp_rel_nofollow_callback( $matches ) {\n    $text = $matches[1];\n    $atts = shortcode_parse_atts( $matches[1] );\n    $rel  = \u0026#39;nofollow\u0026#39;;\n\n    if ( ! empty( $atts[\u0026#39;href\u0026#39;] ) ) {\n        if ( in_array( strtolower( wp_parse_url( $atts[\u0026#39;href\u0026#39;], PHP_URL_SCHEME ) ), array( \u0026#39;http\u0026#39;, \u0026#39;https\u0026#39; ), true ) ) {\n            if ( strtolower( wp_parse_url( $atts[\u0026#39;href\u0026#39;], PHP_URL_HOST ) ) === strtolower( wp_parse_url( home_url(), PHP_URL_HOST ) ) ) {\n                return \u0026quot;\u0026lt;a $text\u0026gt;\u0026quot;;\n            }\n        }\n    }\n\n    if ( ! empty( $atts[\u0026#39;rel\u0026#39;] ) ) {\n        $parts = array_map( \u0026#39;trim\u0026#39;, explode( \u0026#39; \u0026#39;, $atts[\u0026#39;rel\u0026#39;] ) );\n        if ( false === array_search( \u0026#39;nofollow\u0026#39;, $parts ) ) {\n            $parts[] = \u0026#39;nofollow\u0026#39;;\n        }\n        $rel = implode( \u0026#39; \u0026#39;, $parts );\n        unset( $atts[\u0026#39;rel\u0026#39;] );\n\n        $html = \u0026#39;\u0026#39;;\n        foreach ( $atts as $name =\u0026gt; $value ) {\n            $html .= \u0026quot;{$name}=\\\u0026quot;\u0026quot; .  $value . \u0026#39;\u0026quot; \u0026#39;;\n        }\n        $text = trim( $html );\n    }\n    return \u0026quot;\u0026lt;a $text rel=\\\u0026quot;\u0026quot; . esc_attr( $rel ) . \u0026#39;\u0026quot;\u0026gt;\u0026#39;;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eif the \u003ccode\u003erel\u003c/code\u003e attribute is already set, the \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e tag is built back together with the values returned by \u003ccode\u003eshortcode_parse_atts()\u003c/code\u003e.  This is problematic, since \u003ccode\u003eshortcode_parse_atts()\u003c/code\u003e calls \u003ccode\u003estripcslashes()\u003c/code\u003e on the attribute values, which for example allows turning \u003ccode\u003e\\x3a\u003c/code\u003e into \u003ccode\u003e:\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eTherefor the \u003ccode\u003eesc_url()\u003c/code\u003e function can be bypassed by:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eusing a URL such as \u003ccode\u003ejavascript\\x3aalert(1);\u003c/code\u003e \u003c/li\u003e\n\u003cli\u003egetting an admin to edit and update the comment containing the XSS payload\u003c/li\u003e\n\u003cli\u003edone\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI recommend moving away from \u003ccode\u003eshortcode_parse_atts()\u003c/code\u003e because of side effects like these. I also got close to a XSS without user interaction through the same mechanisms but it fails luckily.\u003c/p\u003e\n\n\u003ch3 id=\"poc\"\u003ePoC:\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eAs an unauthenticated user, create a comment with the following content:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHi!\nI really enjoy your work. We\u0026#39;ve also written a blog post about it here: http://dummysite.com/awesome-blogpost. Feel free to check it out!\n\u0026lt;a href=\u0026quot;javascript\\x3aalert(1);\u0026quot;\u0026gt;Visit my web page\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ecreate a second comment with the content:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eI just noticed a typo in the URL! Could you please change it from dummysite.com to dummysite2.com? Thank you so much\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLog in as an admin, go to the comments section and edit the comment and click save\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eView the comment on the post, click the \u0026quot;Visit my web page\u0026quot; URL and see the alert() box popping up.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThrough the XSS, RCE can be gained. Obviously a lot of user interaction is required but yeah, it is a super easy to copy \u0026amp; paste payload that could be used against non technical users. The XSS could then also be triggered via clickjacking.\u003c/p\u003e\n","bounty_amount":"650.0","formatted_bounty":"$650","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-08-18T18:01:23.746Z","allow_singular_disclosure_after":-11449820.277835105,"singular_disclosure_allowed":true,"vote_count":10,"voters":["foobar7","mashoud1122","mygf","sibwtf","jesuser14","paqman","silverdel","mr0kalash","zzero","nekoneko000"],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":2750,"asset_type":"SOURCE_CODE","asset_identifier":"WordPress Core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5285680,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey Simon,\n\nInteresting POC you have provided here. I'm sharing with the team, and we will be evaluating further. We will be in touch.\n\nCheers,\n\n@whyisjake","markdown_message":"\u003cp\u003eHey Simon,\u003c/p\u003e\n\n\u003cp\u003eInteresting POC you have provided here. I\u0026#39;m sharing with the team, and we will be evaluating further. We will be in touch.\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-09T23:33:33.812Z","updated_at":"2019-07-09T23:33:33.812Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5285699,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-09T23:38:49.699Z","updated_at":"2019-07-09T23:38:49.699Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5560483,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey there @simonscannell,\n\nI think we have a fix for this issue and were wondering if you could confirm with this patch. \n\nThanks!\n\n@whyisjake","markdown_message":"\u003cp\u003eHey there \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI think we have a fix for this issue and were wondering if you could confirm with this patch. \u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-12T23:53:17.604Z","updated_at":"2019-08-12T23:53:17.604Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":553935,"filename":"633231.diff","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fb5h46tfYKGFAMJDJLueHVbi?response-content-disposition=attachment%3B%20filename%3D%22633231.diff%22%3B%20filename%2A%3DUTF-8%27%27633231.diff\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063144Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=4c270b89423727060e1b222a763d6ee221bd04edbe0433659eafd34c14c81122"}],"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5566746,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Jake,\n\nSorry for my late reply. The patch seems effective!","markdown_message":"\u003cp\u003eHi Jake,\u003c/p\u003e\n\n\u003cp\u003eSorry for my late reply. The patch seems effective!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-13T17:24:28.962Z","updated_at":"2019-08-13T17:24:28.962Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5678745,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @simonscannell,\n\nWe are looking to release the fix for this issue too, how would you like to be credited?\n\nCheers,\n\n@whyisjake\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe are looking to release the fix for this issue too, how would you like to be credited?\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-27T21:15:38.124Z","updated_at":"2019-08-27T21:15:38.124Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5685363,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Jake,\n\nSorry for late response on my part, I had no signal the last couple days. If you could say \"Simon Scannell of both RIPS Technologies\" on bothbissues, that would be amazing, thanks!\n\nBest,\nSimon","markdown_message":"\u003cp\u003eHi Jake,\u003c/p\u003e\n\n\u003cp\u003eSorry for late response on my part, I had no signal the last couple days. If you could say \u0026quot;Simon Scannell of both RIPS Technologies\u0026quot; on bothbissues, that would be amazing, thanks!\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nSimon\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-28T17:52:17.557Z","updated_at":"2019-08-28T17:52:17.557Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5743807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @simonscannell,\n\nThanks for your work in this security disclosure. As you have seen, we released 5.2.3 with a fix for this issue.\n\nhttps://wordpress.org/news/2019/09/wordpress-5-2-3-security-and-maintenance-release/\n\nWe would like to thank you for your contributions. This is being moved over to the bounty queue.\n\nCheers,\n\n@whyisjake","markdown_message":"\u003cp\u003eHey \u003ca href=\"/simonscannell\"\u003e@simonscannell\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your work in this security disclosure. As you have seen, we released 5.2.3 with a fix for this issue.\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://wordpress.org/news/2019/09/wordpress-5-2-3-security-and-maintenance-release/\" href=\"/redirect?url=https%3A%2F%2Fwordpress.org%2Fnews%2F2019%2F09%2Fwordpress-5-2-3-security-and-maintenance-release%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://wordpress.org/news/2019/09/wordpress-5-2-3-security-and-maintenance-release/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe would like to thank you for your contributions. This is being moved over to the bounty queue.\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whyisjake\"\u003e@whyisjake\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-06T03:41:21.301Z","updated_at":"2019-09-06T03:41:21.301Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5743810,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-06T03:42:26.257Z","updated_at":"2019-09-06T03:42:26.257Z","actor":{"username":"whyisjake","cleared":false,"url":"/whyisjake","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/499/942/de8d53f71535e9531105209e14875727a9e88cfe_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"simonscannell","url":"/simonscannell"},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5747054,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-06T13:41:55.514Z","updated_at":"2019-09-06T13:41:55.514Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"bounty_amount":"650.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"wordpress","collaborator":{"username":"simonscannell","url":"/simonscannell"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5757789,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you!","markdown_message":"\u003cp\u003eThank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-08T20:58:12.066Z","updated_at":"2019-09-08T20:58:12.066Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8646776,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Requesting disclosure for completeness. Thank you!","markdown_message":"\u003cp\u003eRequesting disclosure for completeness. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-19T18:01:23.687Z","updated_at":"2020-07-19T18:01:23.687Z","first_to_agree":true,"actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8971457,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-18T18:01:25.424Z","updated_at":"2020-08-18T18:01:25.424Z","actor":{"url":"/wordpress","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"WordPress"}},"genius_execution_id":null,"team_handle":"wordpress","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}