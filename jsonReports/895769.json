{"id":895769,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTU3Njk=","url":"https://hackerone.com/reports/895769","title":"[3DS][SSL] Use of uninitialized class member leads to RCE in eShop movie player","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2020-06-11T02:27:42.395Z","submitted_at":"2020-06-11T02:27:42.395Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"mrnbayoh","url":"/mrnbayoh","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/189/059/1c4c4bf47adafcca63b8256be5721d27653948a2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":16634,"url":"https://hackerone.com/nintendo","handle":"nintendo","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Nintendo","twitter_handle":"","website":"http://www.nintendo.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"no-content","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-12-18T12:11:56.566Z","bug_reporter_agreed_on_going_public_at":"2020-12-18T09:53:32.075Z","team_member_agreed_on_going_public_at":"2020-12-18T12:11:56.484Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"","vulnerability_information_html":"","bounty_amount":"3200.0","formatted_bounty":"$3,200","weakness":{"id":50,"name":"Use After Free"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":36,"voters":["dee-see","prophet","mrnbayoh","rahsec","mygf","powerjacobb1","reemer","exploit_db","f_m","owneip","and 26 more..."],"severity":{"rating":"high","score":8.6,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"low","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8259963,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-11T06:47:38.578Z","updated_at":"2020-06-11T06:47:38.578Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8269736,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-12T07:12:19.537Z","updated_at":"2020-06-12T07:12:19.537Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8271369,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-12T09:44:30.697Z","updated_at":"2020-06-12T09:45:27.534Z","actor":{"username":"mrnbayoh","cleared":false,"url":"/mrnbayoh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/189/059/1c4c4bf47adafcca63b8256be5721d27653948a2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8301627,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-16T04:01:14.421Z","updated_at":"2020-06-16T04:01:14.421Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8302560,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-16T06:32:06.361Z","updated_at":"2020-06-16T06:32:06.361Z","actor":{"username":"mrnbayoh","cleared":false,"url":"/mrnbayoh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/189/059/1c4c4bf47adafcca63b8256be5721d27653948a2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8341311,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T10:08:37.765Z","updated_at":"2020-06-19T10:08:37.765Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8341322,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-19T10:09:02.427Z","updated_at":"2020-06-19T10:09:02.427Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9526977,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-15T05:14:14.914Z","updated_at":"2020-10-15T05:14:14.914Z","actor":{"url":"/nintendo","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Nintendo"}},"bounty_amount":"3200.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"nintendo","collaborator":{"username":"mrnbayoh","url":"/mrnbayoh"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9526988,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-15T05:17:42.821Z","updated_at":"2020-10-15T05:17:42.821Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"mrnbayoh","url":"/mrnbayoh"},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9896648,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-23T10:24:17.193Z","updated_at":"2020-11-23T10:24:17.193Z","actor":{"username":"mrnbayoh","cleared":false,"url":"/mrnbayoh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/189/059/1c4c4bf47adafcca63b8256be5721d27653948a2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9968626,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-01T03:03:36.654Z","updated_at":"2020-12-01T03:03:36.654Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10127529,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-17T02:28:01.964Z","updated_at":"2020-12-17T02:28:01.964Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10141727,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-18T09:53:32.109Z","updated_at":"2020-12-18T09:53:32.109Z","first_to_agree":true,"actor":{"username":"mrnbayoh","cleared":false,"url":"/mrnbayoh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/189/059/1c4c4bf47adafcca63b8256be5721d27653948a2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10143067,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-18T12:11:56.502Z","updated_at":"2020-12-18T12:11:56.502Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10143068,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-12-18T12:11:56.587Z","updated_at":"2020-12-18T12:11:56.587Z","actor":{"username":"tattsun","cleared":false,"url":"/tattsun","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nintendo","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":25906,"category":"team","content":"-","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003e-\u003c/p\u003e\n"},{"id":25890,"category":"researcher","content":"#Affected Systems\n- Platform : (New) Nintendo 3DS\n- Region: ALL\n- System version: 11.13 (latest at the time of writing)\n\n#Description\nThe eShop video player does not initialize pointers to some decoder objects when creating a video player object. With a specific audio codec this induces the use of uninitialized data that an attacker can potentially control through heap massaging, allowing to get remote code execution.\n\n#Vulnerability\nThe eShop movie player does not clear pointers to audio decoder objects when initializing a new video player object. This is not an issue when using codecs like fastaudio or imadpcm because a new decoder is allocated and the pointer is overwritten. However when using the raw pcm16 codec, even though there is no need for a decoder, it still tries to initialize a decoder object using the uninitialized `decoder` field:\n```\nvoid create_audio_decoder(u8 codec, ..., audio_decoder** out_decoder) {\n    if(codec == fastaudio) {\n      decoder = create_fastaudio_decoder(...);\n      *out_decoder = decoder;\n    }\n    else if(codec == imadpcm)\n      [...]\n    else if(codec == pcm16)\n      decoder = *out_decoder; // *out_decoder is not initialized!\n\n   if(decoder)\n      decoder-\u003einit(); //if decoder is controlled this gives an arbitrary jump!\n}\n```\nThis function is the first function called in the first virtual method of what seems to be the `Player` class?\n\nIt is possible to massage the heap such that the value of `*out_decoder` is controlled because just before the movie player is loaded, the application frees some JPEG images (the screenshot images displayed on the title information page). Thus one can send some carefully crafted binary files instead of valid screenshots to write controlled values in memory and hopefully writes them where the player object is then allocated.\n\nIf the data actually get written at the right location, we get an arbitrary jump through the virtual function call `decoder-\u003einit()`, which is enough to get remote code execution.\n\n## Impact\n\nBecause of [#894922](https://hackerone.com/reports/894922), anyone can exploit this vulnerability and get remote code execution in usermode under the eShop application.\nMoreover, this could potentially(?) be exploited without any SSL flaw by someone able to submit games to the eShop catalog, however since I don't know the validation process and checks performed, I cannot ensure this is possible.\nNote that one can exploit this vulnerability without any noticeable change to the eShop application behavior, except that the screenshots on the title details page are just not displayed. This means the user has no way to know something bad is happening before launching the video playback.\n","can_view?":true,"can_edit?":false,"content_html":"\u003ch1 id=\"affected-systems\"\u003eAffected Systems\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003ePlatform : (New) Nintendo 3DS\u003c/li\u003e\n\u003cli\u003eRegion: ALL\u003c/li\u003e\n\u003cli\u003eSystem version: 11.13 (latest at the time of writing)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"description\"\u003eDescription\u003c/h1\u003e\n\n\u003cp\u003eThe eShop video player does not initialize pointers to some decoder objects when creating a video player object. With a specific audio codec this induces the use of uninitialized data that an attacker can potentially control through heap massaging, allowing to get remote code execution.\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003cp\u003eThe eShop movie player does not clear pointers to audio decoder objects when initializing a new video player object. This is not an issue when using codecs like fastaudio or imadpcm because a new decoder is allocated and the pointer is overwritten. However when using the raw pcm16 codec, even though there is no need for a decoder, it still tries to initialize a decoder object using the uninitialized \u003ccode\u003edecoder\u003c/code\u003e field:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003evoid create_audio_decoder(u8 codec, ..., audio_decoder** out_decoder) {\n    if(codec == fastaudio) {\n      decoder = create_fastaudio_decoder(...);\n      *out_decoder = decoder;\n    }\n    else if(codec == imadpcm)\n      [...]\n    else if(codec == pcm16)\n      decoder = *out_decoder; // *out_decoder is not initialized!\n\n   if(decoder)\n      decoder-\u0026gt;init(); //if decoder is controlled this gives an arbitrary jump!\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis function is the first function called in the first virtual method of what seems to be the \u003ccode\u003ePlayer\u003c/code\u003e class?\u003c/p\u003e\n\n\u003cp\u003eIt is possible to massage the heap such that the value of \u003ccode\u003e*out_decoder\u003c/code\u003e is controlled because just before the movie player is loaded, the application frees some JPEG images (the screenshot images displayed on the title information page). Thus one can send some carefully crafted binary files instead of valid screenshots to write controlled values in memory and hopefully writes them where the player object is then allocated.\u003c/p\u003e\n\n\u003cp\u003eIf the data actually get written at the right location, we get an arbitrary jump through the virtual function call \u003ccode\u003edecoder-\u0026gt;init()\u003c/code\u003e, which is enough to get remote code execution.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eBecause of \u003ca href=\"https://hackerone.com/reports/894922\"\u003e#894922\u003c/a\u003e, anyone can exploit this vulnerability and get remote code execution in usermode under the eShop application.\u003cbr\u003e\nMoreover, this could potentially(?) be exploited without any SSL flaw by someone able to submit games to the eShop catalog, however since I don\u0026#39;t know the validation process and checks performed, I cannot ensure this is possible.\u003cbr\u003e\nNote that one can exploit this vulnerability without any noticeable change to the eShop application behavior, except that the screenshots on the title details page are just not displayed. This means the user has no way to know something bad is happening before launching the video playback.\u003c/p\u003e\n"}]}