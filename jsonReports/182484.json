{"id":182484,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODI0ODQ=","url":"https://hackerone.com/reports/182484","title":"Broken handling of maximum number of method call arguments leads to segfault","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2016-11-16T10:57:28.825Z","submitted_at":"2016-11-16T10:57:28.825Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dkasak","url":"/dkasak","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-12-21T08:04:12.624Z","bug_reporter_agreed_on_going_public_at":"2016-12-21T08:04:12.561Z","team_member_agreed_on_going_public_at":"2016-12-16T19:56:28.299Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Introduction\n============\n\nImproper logic for handling of maximum number of method call arguments leads to dereferencing an invalid pointer in some cases, which causes a segfault in both mruby and mruby_engine (and the parent MRI).\n\nThe crash only happens when the number of arguments, `n == CALL_MAXARGS`, which is 127. If a larger number of arguments are supplied, mruby doesn't crash but it doesn't appear to work as intended either. The intent of the design seems to had been to support a larger number of arguments than CALL_MAXARGS, but that they should then be passed as an array. However, calls with more than CALL_MAXARGS don't succeed, raising an ArgumentError instead.\n\nProof of Concept\n================\n\ncrash.rb\n--------\n\n    x 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n\nThe above POC is written with line continuations for readability only; the crash doesn't depend on the line continuations, only on there being exactly 127 arguments.\n\n1. Save the above code as crash.rb\n2. Run either:\n   a) mruby crash.rb\n   b) sandbox crash.rb\n3. Both cause a segmentation fault.\n\nDiscussion\n==========\n\nEverything below assumes the latest master of the mruby repository as of Nov 16th, which is commit `1685eff2a5e672173d67916a1c96648df92b7271`.\n\nThe crash happens on line 473 of `ext/mruby_engine/mruby/src/array.c`\n\n    if (ARY_SHARED_P(a)\n\nbecause `a` is a null pointer and the macro `ARY_SHARED_P` tries accessing its `flags` member (`(a)-\u003eflags`).\n\nThe underlying cause is located in `ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c`, in the function `gen_values`. Inside the `while` loop on line 779, there is a special check for handling both array \"splat\" mode and more than 126 arguments. This code creates an array as the first argument of the method call which is supposed to contain all the arguments for a method call with more than 126 arguments. Since the rest of the code expects that the first argument is an array when `n == CALL_MAXARGS`, it is vital for this check to happen.\n\nHowever, when there are exactly 127 arguments, `n` becomes 127 exactly when `t` becomes null at the end of the loop in the assignment `t = t-\u003ecdr`. This is expected, because we have reached the last AST node, but then the loop exits early and the special case never happens. This leads to the rest of the code treating the first argument (a `0` fixnum) as an array, leading to the crash.\n\nAt first it seemed to us that this is a simple botched check and that shuffling things around a bit in this function should fix it, but it seems there is a deeper problem with the design in multiple places. In particular, calling functions with more than 127 arguments doesn't work at all (even though the special case is triggered in those cases and an array is created):\n\nmore_than_127.rb\n----------------\n\n    def x(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16,\n          x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30,\n          x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,\n          x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58,\n          x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72,\n          x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86,\n          x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100,\n          x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112,\n          x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124,\n          x125, x126, x127, x128)\n    end\n\n    x 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n\nThis raises a cryptic error message:\n\n    trace:\n            [1] more_than_127.rb:1:in Object.x\n            [0] more_than_127.rb:20\n    ArgumentError: 'x': wrong number of arguments (-1 for 0)\n\nSolution\n========\n\nBecause of design issues described above, it might be a good idea to patch the security flaw first (if mruby is already deployed somewhere) by limiting the number of arguments to 126:\n\n127_arguments_crash_provisionary.patch\n--------------------------------------\n\n    diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\n    index 9b064b8..36a6d5f 100644\n    --- a/mrbgems/mruby-compiler/core/codegen.c\n    +++ b/mrbgems/mruby-compiler/core/codegen.c\n    @@ -770,6 +770,8 @@ attrsym(codegen_scope *s, mrb_sym a)\n    return mrb_intern(s-\u003emrb, name2, len+1);\n    }\n    \n    +#define CALL_MAXARGS 127\n    +\n    static int\n    gen_values(codegen_scope *s, node *t, int val)\n    {\n    @@ -824,13 +826,15 @@ gen_values(codegen_scope *s, node *t, int val)\n        /* normal (no splat) mode */\n        codegen(s, t-\u003ecar, val);\n        n++;\n    +    if (n \u003e= CALL_MAXARGS-1) {\n    +        raise_error(s, \"Too many arguments\");\n    +        return -1;\n    +    }\n        t = t-\u003ecdr;\n    }\n    return n;\n    }\n    \n    -#define CALL_MAXARGS 127\n    -\n    static void\n    gen_call(codegen_scope *s, node *tree, mrb_sym name, int sp, int val, int safe)\n    {\n\nThis makes one test fail at the moment (\"Array (Longish inline array)\"). We will investigate the issue further and try to come up with a patch that also fixes support for a larger number of arguments.","vulnerability_information_html":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\n\u003cp\u003eImproper logic for handling of maximum number of method call arguments leads to dereferencing an invalid pointer in some cases, which causes a segfault in both mruby and mruby_engine (and the parent MRI).\u003c/p\u003e\n\n\u003cp\u003eThe crash only happens when the number of arguments, \u003ccode\u003en == CALL_MAXARGS\u003c/code\u003e, which is 127. If a larger number of arguments are supplied, mruby doesn\u0026#39;t crash but it doesn\u0026#39;t appear to work as intended either. The intent of the design seems to had been to support a larger number of arguments than CALL_MAXARGS, but that they should then be passed as an array. However, calls with more than CALL_MAXARGS don\u0026#39;t succeed, raising an ArgumentError instead.\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of Concept\u003c/h1\u003e\n\n\u003ch2 id=\"crash-rb\"\u003ecrash.rb\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ex 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe above POC is written with line continuations for readability only; the crash doesn\u0026#39;t depend on the line continuations, only on there being exactly 127 arguments.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSave the above code as crash.rb\u003c/li\u003e\n\u003cli\u003eRun either:\na) mruby crash.rb\nb) sandbox crash.rb\u003c/li\u003e\n\u003cli\u003eBoth cause a segmentation fault.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"discussion\"\u003eDiscussion\u003c/h1\u003e\n\n\u003cp\u003eEverything below assumes the latest master of the mruby repository as of Nov 16th, which is commit \u003ccode\u003e1685eff2a5e672173d67916a1c96648df92b7271\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe crash happens on line 473 of \u003ccode\u003eext/mruby_engine/mruby/src/array.c\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eif (ARY_SHARED_P(a)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebecause \u003ccode\u003ea\u003c/code\u003e is a null pointer and the macro \u003ccode\u003eARY_SHARED_P\u003c/code\u003e tries accessing its \u003ccode\u003eflags\u003c/code\u003e member (\u003ccode\u003e(a)-\u0026gt;flags\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe underlying cause is located in \u003ccode\u003eext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c\u003c/code\u003e, in the function \u003ccode\u003egen_values\u003c/code\u003e. Inside the \u003ccode\u003ewhile\u003c/code\u003e loop on line 779, there is a special check for handling both array \u0026quot;splat\u0026quot; mode and more than 126 arguments. This code creates an array as the first argument of the method call which is supposed to contain all the arguments for a method call with more than 126 arguments. Since the rest of the code expects that the first argument is an array when \u003ccode\u003en == CALL_MAXARGS\u003c/code\u003e, it is vital for this check to happen.\u003c/p\u003e\n\n\u003cp\u003eHowever, when there are exactly 127 arguments, \u003ccode\u003en\u003c/code\u003e becomes 127 exactly when \u003ccode\u003et\u003c/code\u003e becomes null at the end of the loop in the assignment \u003ccode\u003et = t-\u0026gt;cdr\u003c/code\u003e. This is expected, because we have reached the last AST node, but then the loop exits early and the special case never happens. This leads to the rest of the code treating the first argument (a \u003ccode\u003e0\u003c/code\u003e fixnum) as an array, leading to the crash.\u003c/p\u003e\n\n\u003cp\u003eAt first it seemed to us that this is a simple botched check and that shuffling things around a bit in this function should fix it, but it seems there is a deeper problem with the design in multiple places. In particular, calling functions with more than 127 arguments doesn\u0026#39;t work at all (even though the special case is triggered in those cases and an array is created):\u003c/p\u003e\n\n\u003ch2 id=\"more_than_127-rb\"\u003emore_than_127.rb\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edef x(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16,\n      x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30,\n      x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,\n      x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58,\n      x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72,\n      x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86,\n      x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100,\n      x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112,\n      x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124,\n      x125, x126, x127, x128)\nend\n\nx 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, \\\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis raises a cryptic error message:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003etrace:\n        [1] more_than_127.rb:1:in Object.x\n        [0] more_than_127.rb:20\nArgumentError: \u0026#39;x\u0026#39;: wrong number of arguments (-1 for 0)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 id=\"solution\"\u003eSolution\u003c/h1\u003e\n\n\u003cp\u003eBecause of design issues described above, it might be a good idea to patch the security flaw first (if mruby is already deployed somewhere) by limiting the number of arguments to 126:\u003c/p\u003e\n\n\u003ch2 id=\"127_arguments_crash_provisionary-patch\"\u003e127_arguments_crash_provisionary.patch\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 9b064b8..36a6d5f 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/mrbgems/mruby-compiler/core/codegen.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/mrbgems/mruby-compiler/core/codegen.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -770,6 +770,8 @@\u003c/span\u003e attrsym(codegen_scope *s, mrb_sym a)\n\u003cspan class=\"p\"\u003ereturn mrb_intern(s-\u0026gt;mrb, name2, len+1);\n\u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"gi\"\u003e+#define CALL_MAXARGS 127\n+\n\u003c/span\u003e\u003cspan class=\"p\"\u003estatic int\ngen_values(codegen_scope *s, node *t, int val)\n\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e\n@@ -824,13 +826,15 @@ gen_values(codegen_scope *s, node *t, int val)\n    /* normal (no splat) mode */\n    codegen(s, t-\u0026gt;car, val);\n    n++;\n\u003cspan class=\"gi\"\u003e+    if (n \u0026gt;= CALL_MAXARGS-1) {\n+        raise_error(s, \u0026quot;Too many arguments\u0026quot;);\n+        return -1;\n+    }\n\u003c/span\u003e    t = t-\u0026gt;cdr;\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\nreturn n;\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"gd\"\u003e-#define CALL_MAXARGS 127\n-\n\u003c/span\u003e\u003cspan class=\"p\"\u003estatic void\ngen_call(codegen_scope *s, node *tree, mrb_sym name, int sp, int val, int safe)\n\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis makes one test fail at the moment (\u0026quot;Array (Longish inline array)\u0026quot;). We will investigate the issue further and try to come up with a patch that also fixes support for a larger number of arguments.\u003c/p\u003e\n","bounty_amount":"10000.0","formatted_bounty":"$10,000","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":135016,"file_name":"crash.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/016/b5512893a9434b7a4cfa627421e204ec15d9f8a1/crash.rb?response-content-disposition=attachment%3B%20filename%3D%22crash.rb%22%3B%20filename%2A%3DUTF-8%27%27crash.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7CRG7HV6%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044611Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDL%2Fh5fBqFuBTrSaxf4ul00epLofNZKIzXDvPOgqBem3gIgF5Ifd19unBAIXFVhlAdK7Dz%2BXRueBIEefq1h8PnVNUcqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDHq1f4SdtjvvsqEDkiqRA6wce2S%2BY%2BLnEHDBgCnsZfUbiPKecdoCmcNJUJqqppT5i9J8dP%2F2fba5bYABF8ZuzkHl4XJSnFH2owLOqvZ1TrltwAFuY4ncs1Jr6E5dk03Cb7kVB6l0qyffs%2BzhlEPNEglLW14kNtVd7%2FPlxYT3WTnqlpN9WNxZVTKe6nHnIA2rEKe3kzpe7Uj8z2MAyKCT0U3otOG%2BlWHdtt5ig9bMR3SNjGFolrk38P9HhFFgDOcoWubRFYuIxY3W9QlpK6WwMtceMKB2rKybcLy%2FCu7FY6od5U0wD%2BrVaoG8o0hkLqjelXnmG%2BwaXNSJ0zWeBpSbvMIsGklaxmLdMs%2FWfhNO5hltzjw9S8JmXHM5mnEGgpOeyY55xS%2FRF4KXm2vq7P0xIG0N1uySOZyyBiaHvnvBLQAO16HibxSCcvFtjxhoLrPbKokc%2FXlEt7qcOw7yxuuSobEGC3W5Kz7%2FI8BtkRZi8d%2BIdr9n1GExy950JM4hMjf2EPY5H1%2FpDtNFNyjy6q77GO7WdZ9HnxIGGy13hwo1rkv3MJKWqv8FOusB54wjFwD3k86QFrRw4z0edoc8DqEBnoRuycpIArk5pjY7Rir50ajFXpxBXlJZLomTmEFRg3z%2Bmy%2FJDhh9LBMOlFzL6Z9QZyJK7IboUJnUHp5evKkvnsL12d%2FlyOgC5GOic698ipYcjcdl3Cqs%2BqI72pfMuKj3OhKGb76diM%2BGzlaRwzVXzgiScmWRSPJqjLuzqm6lg3royiDSJ1ei3ceKA%2FgDJfJt1bkij5egZ49LCsf1z9jhgyxCgp3pr9%2BgxMe4D7zVwkSKse8Z9ZfkjovaOSPqr3fj4zhDDcfkrqqN8%2FIEgCwrpVkjKTRQ%2FA%3D%3D\u0026X-Amz-Signature=857e0bcdbf07c9fbaa3fed3a0bb3c6d2c7561605103a4697653140a56df21a05","file_size":281,"type":"text/plain"},{"id":135017,"file_name":"more_than_127.rb","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/017/363ec4428db168500f1f8437bf7b94b3577a0d5b/more_than_127.rb?response-content-disposition=attachment%3B%20filename%3D%22more_than_127.rb%22%3B%20filename%2A%3DUTF-8%27%27more_than_127.rb\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7CRG7HV6%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044611Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDL%2Fh5fBqFuBTrSaxf4ul00epLofNZKIzXDvPOgqBem3gIgF5Ifd19unBAIXFVhlAdK7Dz%2BXRueBIEefq1h8PnVNUcqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDHq1f4SdtjvvsqEDkiqRA6wce2S%2BY%2BLnEHDBgCnsZfUbiPKecdoCmcNJUJqqppT5i9J8dP%2F2fba5bYABF8ZuzkHl4XJSnFH2owLOqvZ1TrltwAFuY4ncs1Jr6E5dk03Cb7kVB6l0qyffs%2BzhlEPNEglLW14kNtVd7%2FPlxYT3WTnqlpN9WNxZVTKe6nHnIA2rEKe3kzpe7Uj8z2MAyKCT0U3otOG%2BlWHdtt5ig9bMR3SNjGFolrk38P9HhFFgDOcoWubRFYuIxY3W9QlpK6WwMtceMKB2rKybcLy%2FCu7FY6od5U0wD%2BrVaoG8o0hkLqjelXnmG%2BwaXNSJ0zWeBpSbvMIsGklaxmLdMs%2FWfhNO5hltzjw9S8JmXHM5mnEGgpOeyY55xS%2FRF4KXm2vq7P0xIG0N1uySOZyyBiaHvnvBLQAO16HibxSCcvFtjxhoLrPbKokc%2FXlEt7qcOw7yxuuSobEGC3W5Kz7%2FI8BtkRZi8d%2BIdr9n1GExy950JM4hMjf2EPY5H1%2FpDtNFNyjy6q77GO7WdZ9HnxIGGy13hwo1rkv3MJKWqv8FOusB54wjFwD3k86QFrRw4z0edoc8DqEBnoRuycpIArk5pjY7Rir50ajFXpxBXlJZLomTmEFRg3z%2Bmy%2FJDhh9LBMOlFzL6Z9QZyJK7IboUJnUHp5evKkvnsL12d%2FlyOgC5GOic698ipYcjcdl3Cqs%2BqI72pfMuKj3OhKGb76diM%2BGzlaRwzVXzgiScmWRSPJqjLuzqm6lg3royiDSJ1ei3ceKA%2FgDJfJt1bkij5egZ49LCsf1z9jhgyxCgp3pr9%2BgxMe4D7zVwkSKse8Z9ZfkjovaOSPqr3fj4zhDDcfkrqqN8%2FIEgCwrpVkjKTRQ%2FA%3D%3D\u0026X-Amz-Signature=b82868d02d033d1b4c772583ecbad8d43e451482b7b0a8e9ed861cf43ff21b05","file_size":1018,"type":"text/plain"},{"id":135018,"file_name":"127_arguments_crash_provisionary.patch","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/135/018/ea1b86476ab4d7b9e1e5f2045a72076c1c9ca1e5/127_arguments_crash_provisionary.patch?response-content-disposition=attachment%3B%20filename%3D%22127_arguments_crash_provisionary.patch%22%3B%20filename%2A%3DUTF-8%27%27127_arguments_crash_provisionary.patch\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7CRG7HV6%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044611Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDL%2Fh5fBqFuBTrSaxf4ul00epLofNZKIzXDvPOgqBem3gIgF5Ifd19unBAIXFVhlAdK7Dz%2BXRueBIEefq1h8PnVNUcqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDHq1f4SdtjvvsqEDkiqRA6wce2S%2BY%2BLnEHDBgCnsZfUbiPKecdoCmcNJUJqqppT5i9J8dP%2F2fba5bYABF8ZuzkHl4XJSnFH2owLOqvZ1TrltwAFuY4ncs1Jr6E5dk03Cb7kVB6l0qyffs%2BzhlEPNEglLW14kNtVd7%2FPlxYT3WTnqlpN9WNxZVTKe6nHnIA2rEKe3kzpe7Uj8z2MAyKCT0U3otOG%2BlWHdtt5ig9bMR3SNjGFolrk38P9HhFFgDOcoWubRFYuIxY3W9QlpK6WwMtceMKB2rKybcLy%2FCu7FY6od5U0wD%2BrVaoG8o0hkLqjelXnmG%2BwaXNSJ0zWeBpSbvMIsGklaxmLdMs%2FWfhNO5hltzjw9S8JmXHM5mnEGgpOeyY55xS%2FRF4KXm2vq7P0xIG0N1uySOZyyBiaHvnvBLQAO16HibxSCcvFtjxhoLrPbKokc%2FXlEt7qcOw7yxuuSobEGC3W5Kz7%2FI8BtkRZi8d%2BIdr9n1GExy950JM4hMjf2EPY5H1%2FpDtNFNyjy6q77GO7WdZ9HnxIGGy13hwo1rkv3MJKWqv8FOusB54wjFwD3k86QFrRw4z0edoc8DqEBnoRuycpIArk5pjY7Rir50ajFXpxBXlJZLomTmEFRg3z%2Bmy%2FJDhh9LBMOlFzL6Z9QZyJK7IboUJnUHp5evKkvnsL12d%2FlyOgC5GOic698ipYcjcdl3Cqs%2BqI72pfMuKj3OhKGb76diM%2BGzlaRwzVXzgiScmWRSPJqjLuzqm6lg3royiDSJ1ei3ceKA%2FgDJfJt1bkij5egZ49LCsf1z9jhgyxCgp3pr9%2BgxMe4D7zVwkSKse8Z9ZfkjovaOSPqr3fj4zhDDcfkrqqN8%2FIEgCwrpVkjKTRQ%2FA%3D%3D\u0026X-Amz-Signature=bc435f12276ac749b178ff00dafe0ff7226087621b03b2064cbf1dbee74f7d79","file_size":820,"type":"text/x-diff"}],"allow_singular_disclosure_at":"2017-01-15T19:56:28.356Z","allow_singular_disclosure_after":-124706983.53047608,"singular_disclosure_allowed":true,"vote_count":10,"voters":["dkasak","dgaletic","michiel","dmatrix","eveeez","vraj","japz","spetr0x","pei","quartey"],"severity":{"rating":"high","score":8.6,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1303248,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the issue, and our engineering team is investigating.","markdown_message":"\u003cp\u003eThank you for your report. We\u0026#39;ve reproduced the issue, and our engineering team is investigating.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-16T22:07:43.864Z","updated_at":"2016-11-16T22:07:43.864Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1307408,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi @dkasak, thank you for your report and the patch! We've deployed a fix for this in our production environment as of earlier today.\n\nI'm marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact \u0026 determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/dkasak\"\u003e@dkasak\u003c/a\u003e, thank you for your report and the patch! We\u0026#39;ve deployed a fix for this in our production environment as of earlier today.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact \u0026amp; determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-18T20:42:14.791Z","updated_at":"2016-11-18T20:42:14.791Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dkasak","url":"/dkasak"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1319238,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This has been fixed upstream: https://github.com/mruby/mruby/pull/3283/files","markdown_message":"\u003cp\u003eThis has been fixed upstream: \u003ca title=\"https://github.com/mruby/mruby/pull/3283/files\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3283%2Ffiles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/pull/3283/files\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-25T15:53:33.663Z","updated_at":"2016-11-25T15:53:33.663Z","actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1370054,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify Scripts and the mruby project!","markdown_message":"\u003cp\u003eThanks for helping improve the security of Shopify Scripts and the mruby project!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-16T19:56:21.770Z","updated_at":"2016-12-16T19:56:21.770Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"10000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"dkasak","url":"/dkasak"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1370056,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-16T19:56:28.324Z","updated_at":"2016-12-16T19:56:28.324Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1378801,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-21T08:04:12.584Z","updated_at":"2016-12-21T08:04:12.584Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1378802,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-21T08:04:12.644Z","updated_at":"2016-12-21T08:04:12.644Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1387025,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To Shopify: Feel free to ignore, this is just for documentation purposes.\n\nThis report was created with Damir Jelić.","markdown_message":"\u003cp\u003eTo Shopify: Feel free to ignore, this is just for documentation purposes.\u003c/p\u003e\n\n\u003cp\u003eThis report was created with Damir Jelić.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-27T14:31:54.570Z","updated_at":"2016-12-27T14:31:54.570Z","actor":{"username":"dkasak","cleared":true,"url":"/dkasak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}