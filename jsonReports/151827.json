{"id":151827,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTE4Mjc=","url":"https://hackerone.com/reports/151827","title":"The contribution save option seem to be vulnerable to CSRF","state":"Closed","substate":"informative","severity_rating":"none","readable_substate":"Informative","created_at":"2016-07-16T21:57:46.306Z","submitted_at":"2016-07-16T21:57:46.306Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"roshanpty","url":"/roshanpty","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":1868,"url":"https://hackerone.com/gratipay","handle":"gratipay","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"disabled","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Gratipay","twitter_handle":"Gratipay","website":"https://gratipay.com/","about":"Gratitude? Gratipay! The easiest way for your company to pay for open source."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2016-07-17T15:14:38.881Z","bug_reporter_agreed_on_going_public_at":"2016-07-17T15:14:38.825Z","team_member_agreed_on_going_public_at":"2016-07-17T14:55:44.978Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The application is vulnerable to Cross Site Request Forgery\n====================\n\nDescription\n---------------------\nThe option in the application to save weekly contribution for a project is vulnerable to Cross Site Request forgery. \n**Note:** I am unable to perform the action itself normally. But it is obvious that the application uses no protection against CSRF and the token named **csrf_token** is being passed in the cookie instead of a post parameter or HTTP header. \n\nDetailed Steps:\n---------------------\n**Step 1:** Open a project and modify the weekly contribution for the same. \n{F105367}\n**Step 2:** Send the request to save the modified value.\n{F105368}\n**Step 3:** It can be observed that no kind of CSRF protection is employed and the request can be recreated in the following URL format. If anyone clicks on the link in a browser where they are already logged in to gratipay, the amount will be automatically updated.\nhttps://gratipay.com/\u003cproject\u003e/payment-instruction.json?amount=\u003camount\u003e","vulnerability_information_html":"\u003ch1 id=\"the-application-is-vulnerable-to-cross-site-request-forgery\"\u003eThe application is vulnerable to Cross Site Request Forgery\u003c/h1\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eThe option in the application to save weekly contribution for a project is vulnerable to Cross Site Request forgery. \u003cbr\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e I am unable to perform the action itself normally. But it is obvious that the application uses no protection against CSRF and the token named \u003cstrong\u003ecsrf_token\u003c/strong\u003e is being passed in the cookie instead of a post parameter or HTTP header. \u003c/p\u003e\n\n\u003ch2 id=\"detailed-steps\"\u003eDetailed Steps:\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 1:\u003c/strong\u003e Open a project and modify the weekly contribution for the same. \u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2016-07-16_17_50_20-Passwork_-_Gratipay.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/367/b5b36faede7021f53e9f619c8a2aeea9eb395f32/2016-07-16_17_50_20-Passwork_-_Gratipay.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_50_20-Passwork_-_Gratipay.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_50_20-Passwork_-_Gratipay.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043331Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=116c14dead0b044a76491d6a1c68c290f367aea1369d7d5cee31d59430b3d138\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/367/b5b36faede7021f53e9f619c8a2aeea9eb395f32/2016-07-16_17_50_20-Passwork_-_Gratipay.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_50_20-Passwork_-_Gratipay.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_50_20-Passwork_-_Gratipay.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043331Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=116c14dead0b044a76491d6a1c68c290f367aea1369d7d5cee31d59430b3d138\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003cstrong\u003eStep 2:\u003c/strong\u003e Send the request to save the modified value.\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2016-07-16_17_51_39-Program_Manager.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/368/6870a9bfb4a187a794d76cbdf1c4be7e31780288/2016-07-16_17_51_39-Program_Manager.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_51_39-Program_Manager.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_51_39-Program_Manager.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043331Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=6c7c93f7c7fe007610bdf6ec91ab737cfc804d46a5c1761682d6a807bc681108\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/368/6870a9bfb4a187a794d76cbdf1c4be7e31780288/2016-07-16_17_51_39-Program_Manager.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_51_39-Program_Manager.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_51_39-Program_Manager.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T043331Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026amp;X-Amz-Signature=6c7c93f7c7fe007610bdf6ec91ab737cfc804d46a5c1761682d6a807bc681108\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003cstrong\u003eStep 3:\u003c/strong\u003e It can be observed that no kind of CSRF protection is employed and the request can be recreated in the following URL format. If anyone clicks on the link in a browser where they are already logged in to gratipay, the amount will be automatically updated.\u003cbr\u003e\n\u003ca title=\"https://gratipay.com/\" href=\"/redirect?url=https%3A%2F%2Fgratipay.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gratipay.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;project\u0026gt;/payment-instruction.json?amount=\u0026lt;amount\u0026gt;\u003c/p\u003e\n","weakness":{"id":45,"name":"Cross-Site Request Forgery (CSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":105367,"file_name":"2016-07-16_17_50_20-Passwork_-_Gratipay.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/367/b5b36faede7021f53e9f619c8a2aeea9eb395f32/2016-07-16_17_50_20-Passwork_-_Gratipay.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_50_20-Passwork_-_Gratipay.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_50_20-Passwork_-_Gratipay.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043331Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=116c14dead0b044a76491d6a1c68c290f367aea1369d7d5cee31d59430b3d138","file_size":13098,"type":"image/png"},{"id":105368,"file_name":"2016-07-16_17_51_39-Program_Manager.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/368/6870a9bfb4a187a794d76cbdf1c4be7e31780288/2016-07-16_17_51_39-Program_Manager.png?response-content-disposition=attachment%3B%20filename%3D%222016-07-16_17_51_39-Program_Manager.png%22%3B%20filename%2A%3DUTF-8%27%272016-07-16_17_51_39-Program_Manager.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043331Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=6c7c93f7c7fe007610bdf6ec91ab737cfc804d46a5c1761682d6a807bc681108","file_size":69733,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":3,"voters":["wkcaj","bugdiscloseguys","dyabla"],"severity":{"rating":"none","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1072275,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Just noticed that all actions are likely to be vulnerable to this.","markdown_message":"\u003cp\u003eJust noticed that all actions are likely to be vulnerable to this.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-16T22:03:50.928Z","updated_at":"2016-07-16T22:03:50.928Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072317,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi roshanpty,\n\nThanks for your report. I don't think that your issue is a vulnerability, since [we can see in the code](https://github.com/gratipay/gratipay.com/blob/f211a35bba1f90fb396a242a6dc1c1931f89041d/www/%25team/payment-instruction.json.spt#L29) that you have to pass `amount` by POST to change something. Your PoC shows that you are calling `user.participant.get_payment_instruction(team)` and not `user.participant.set_payment_instruction`. \n\nHowever, the error message you get seems to be erroneous, and I'll dig into it in the next days. \n\nRegarding the CSRF, why do you think there is no [CSRF](https://github.com/gratipay/gratipay.com/blob/master/gratipay/security/csrf.py) [protection](https://github.com/gratipay/gratipay.com/blob/1bb41d3e5cc7de7ef48916eac3581a38d31fe388/gratipay/main.py#L107) in place? Do you think it can be bypassed?\n\nThanks for making Gratipay a safer place!","markdown_message":"\u003cp\u003eHi roshanpty,\u003c/p\u003e\n\n\u003cp\u003eThanks for your report. I don\u0026#39;t think that your issue is a vulnerability, since \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgratipay%2Fgratipay.com%2Fblob%2Ff211a35bba1f90fb396a242a6dc1c1931f89041d%2Fwww%2F%2525team%2Fpayment-instruction.json.spt%23L29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewe can see in the code\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that you have to pass \u003ccode\u003eamount\u003c/code\u003e by POST to change something. Your PoC shows that you are calling \u003ccode\u003euser.participant.get_payment_instruction(team)\u003c/code\u003e and not \u003ccode\u003euser.participant.set_payment_instruction\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eHowever, the error message you get seems to be erroneous, and I\u0026#39;ll dig into it in the next days. \u003c/p\u003e\n\n\u003cp\u003eRegarding the CSRF, why do you think there is no \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgratipay%2Fgratipay.com%2Fblob%2Fmaster%2Fgratipay%2Fsecurity%2Fcsrf.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCSRF\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgratipay%2Fgratipay.com%2Fblob%2F1bb41d3e5cc7de7ef48916eac3581a38d31fe388%2Fgratipay%2Fmain.py%23L107\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eprotection\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in place? Do you think it can be bypassed?\u003c/p\u003e\n\n\u003cp\u003eThanks for making Gratipay a safer place!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-16T23:20:28.140Z","updated_at":"2016-07-16T23:24:07.333Z","actor":{"username":"nashe_","cleared":false,"url":"/nashe_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072336,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@nashe_ I am not really good with code, But on the first look it still seem vulnerable. I will try to explain why. \n\nYou seem to be adding the CSRF protection in the form of a cookie. CSRF happens because browser appends all the cookies related to a domain when a request to a particular domain is being fired from the browser. As an attacker I can perform CSRF on post requests as well.\n\n**How**\n*I create an HTML file with a hidden form with all the parameters for the same request and form action. I will make place the button in such a place that the victim would be lured to click. \n*Once a valid user opens the same HTML file in a browser where he/she is logged in as and click the button, a request is fired. The browser is not aware if the user knowingly fired the request or not. It just knows that the request is to the domain and appends all the cookies automatically. \n*So it is pointless to implement the protection in cookies.  It should either be an HTTP header other than cookie or a POST parameter.\n\nLet me know if my understanding about the implementation is wrong anywhere.\n\nAlso for some mysterious reasons, when I click on save I am getting the same request which I showed in the screenshot. If it is some other request and if you have the format of the POST query, I would be happy to provide you with an HTML file for CSRF.","markdown_message":"\u003cp\u003e\u003ca href=\"/nashe_\"\u003e@nashe_\u003c/a\u003e I am not really good with code, But on the first look it still seem vulnerable. I will try to explain why. \u003c/p\u003e\n\n\u003cp\u003eYou seem to be adding the CSRF protection in the form of a cookie. CSRF happens because browser appends all the cookies related to a domain when a request to a particular domain is being fired from the browser. As an attacker I can perform CSRF on post requests as well.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHow\u003c/strong\u003e\u003cbr\u003e\n*I create an HTML file with a hidden form with all the parameters for the same request and form action. I will make place the button in such a place that the victim would be lured to click. \u003cbr\u003e\n*Once a valid user opens the same HTML file in a browser where he/she is logged in as and click the button, a request is fired. The browser is not aware if the user knowingly fired the request or not. It just knows that the request is to the domain and appends all the cookies automatically. \u003cbr\u003e\n*So it is pointless to implement the protection in cookies.  It should either be an HTTP header other than cookie or a POST parameter.\u003c/p\u003e\n\n\u003cp\u003eLet me know if my understanding about the implementation is wrong anywhere.\u003c/p\u003e\n\n\u003cp\u003eAlso for some mysterious reasons, when I click on save I am getting the same request which I showed in the screenshot. If it is some other request and if you have the format of the POST query, I would be happy to provide you with an HTML file for CSRF.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-16T23:54:29.451Z","updated_at":"2016-07-16T23:54:29.451Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072373,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @nache_\n\nHere is the POC for CSRF for a POST request.  The attached HTML file will fire a POST request for amount update if you open the same in the same browser as the one you are logged in as a valid user in gratipay.\n\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nache_\"\u003e@nache_\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the POC for CSRF for a POST request.  The attached HTML file will fire a POST request for amount update if you open the same in the same browser as the one you are logged in as a valid user in gratipay.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-17T01:19:33.166Z","updated_at":"2016-07-17T01:19:33.166Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":105391,"filename":"Gratipay_CSRF.html","type":"text/html","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/105/391/de64f4b0311e64d0bd78618b608e78e8a8b4c298/Gratipay_CSRF.html?response-content-disposition=attachment%3B%20filename%3D%22Gratipay_CSRF.html%22%3B%20filename%2A%3DUTF-8%27%27Gratipay_CSRF.html\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3ORU3ZNE%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043331Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBDRduU%2FQiKN2Hy3Cc%2BFdvYldnR%2BI9yQ0JWu5Nd0q2n7AiBT09NYT9NM%2FNa1T7X7mPFfQEFunNsAbPoVngTqyDCvlCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIMjho0%2F2dG4425KWNaKpEDfRP2JVIKEZKe%2Fu1DRJDnMt1hodmiYRHSHxVJXvZvnhQp68RTbgsA5dtRAFzhCl2p7oJWn2DfsUhN61oqH1cme2ydNbTr6cDG5AkVoiUMnjHvkMPTgbPahrduPs%2FdXuwFoyZMuPeBtzUlpjssIk0BfcIUtph2FGwzCuy6d0CQhdl914kkFpuTBp69z2htWslZiifdNkKWK0DIJcK%2FrSurcsk8WEaPiZ7tEJAcfYZS4SddR8orMY%2BhEfGsLc5RSVBGXY0UW6zTNw%2BYg82wPCY1Z9kgrjwVLQPpVTje3rfzRO3UEDh0xbd54m7t%2FSL0yItTAuaGshQmPLuW6S%2F5KOdoWWnwCmkruRqE1ZKMsnSko5gBnNELay%2BWeukQAQ6EyIB%2FWB06%2F%2FaYfBiWUzjgZyKRGg99IBpEO3zShFTod3huOdptlvO4PfWBvrB4632o9feKKn5CXqJUOE%2BTT%2BgjHEdWRLP2W3GZAibuc%2FbOIfOwee7%2Bn9cOimwp8NVS4U08VlgiSfhcWXonWb3aOkvnOfX46QkwoP6p%2FwU67AFSjWFI11fWgLkInKyx6Dx9AePw1c4qVefioOdfVonnQ3dNW7fXwjlRC5F1185jkAwhyCARy9%2F7sIPFHaI%2FEID5osYCwdvVwv0O6pPIknWS%2FVG7rXxUIgYk0xp3ln2eURcIkz%2F20YEsL73kMrgQLn%2BEd3AiGH%2F9wW5PEZOVPNqagqBYtUSWzNl9%2BrKCkhyVg8k79SdRjUkvdYLXtvxU1m6oAu2IjxFOCgwXqn1jFH1Lloh4Gp%2Fkq68ckYZB67%2B%2FdOzejM9ofYNi%2BpJRLwSwwu22w857sj9E%2BbC8Ei9i7KZOZGBCWe81d9lycwAH6Q%3D%3D\u0026X-Amz-Signature=f7b47a4b105eebbc62c3b317c20b9d3b2dc9523473fa1802bb046c7be53acce6"}],"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072574,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for trying to explain everything, this is definitely a very nice report, even if I was not able to reproduce the vulnerability ;-)\n\nLet me explain what I tried, don't hesitate to correct me if you think I have something wrong.  Using your PoC gets me a 403, telling me the CSRF cookie is wrong. Why?\n- There is no header `X-CSRF-Token` present in the request. It's not possible to \"craft\" one, we would need to do an request *via* AJAX for this. Fortunately, it's not possible to do it, due to the [Same-domain policy](https://en.wikipedia.org/wiki/Same-origin_policy).\n- We can use an hidden field in the form, called `csrf_token`, since it's what the CSRF check permits. However, we'll have to make it match the value of the cookie `csrf_token`: there is no way to guess it without stealing the cookie of the user (which would require a XSS) or finding a bypass (we had a [creative use of a CRLF injection](https://github.com/gratipay/security-flh0cu/issues/1) to create a Cookie of an arbitrary value and submitting a `csrf_token` value matching).\n- Removing the header and not supplying a `csrf_token` will make the middleware try to match the value of the cookie with nothing, making it fail. \n\nThe idea behind using Cookies is that it's easy to [implement and get it working with forms and AJAX requests](http://stackoverflow.com/questions/20504846/why-is-it-common-to-put-csrf-prevention-tokens-in-cookies) and that an attacked will never know the value inside, making him impossible to \"craft\" requests, since he'll always miss the right header / the right value to POST.","markdown_message":"\u003cp\u003eThanks for trying to explain everything, this is definitely a very nice report, even if I was not able to reproduce the vulnerability ;-)\u003c/p\u003e\n\n\u003cp\u003eLet me explain what I tried, don\u0026#39;t hesitate to correct me if you think I have something wrong.  Using your PoC gets me a 403, telling me the CSRF cookie is wrong. Why?\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThere is no header \u003ccode\u003eX-CSRF-Token\u003c/code\u003e present in the request. It\u0026#39;s not possible to \u0026quot;craft\u0026quot; one, we would need to do an request \u003cem\u003evia\u003c/em\u003e AJAX for this. Fortunately, it\u0026#39;s not possible to do it, due to the \u003ca href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSame-origin_policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eSame-domain policy\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eWe can use an hidden field in the form, called \u003ccode\u003ecsrf_token\u003c/code\u003e, since it\u0026#39;s what the CSRF check permits. However, we\u0026#39;ll have to make it match the value of the cookie \u003ccode\u003ecsrf_token\u003c/code\u003e: there is no way to guess it without stealing the cookie of the user (which would require a XSS) or finding a bypass (we had a \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgratipay%2Fsecurity-flh0cu%2Fissues%2F1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecreative use of a CRLF injection\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to create a Cookie of an arbitrary value and submitting a \u003ccode\u003ecsrf_token\u003c/code\u003e value matching).\u003c/li\u003e\n\u003cli\u003eRemoving the header and not supplying a \u003ccode\u003ecsrf_token\u003c/code\u003e will make the middleware try to match the value of the cookie with nothing, making it fail. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe idea behind using Cookies is that it\u0026#39;s easy to \u003ca href=\"/redirect?url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F20504846%2Fwhy-is-it-common-to-put-csrf-prevention-tokens-in-cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eimplement and get it working with forms and AJAX requests\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and that an attacked will never know the value inside, making him impossible to \u0026quot;craft\u0026quot; requests, since he\u0026#39;ll always miss the right header / the right value to POST.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-17T09:18:48.392Z","updated_at":"2016-07-17T09:18:48.392Z","actor":{"username":"nashe_","cleared":false,"url":"/nashe_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072614,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In addition, I suggest you to read [Django documentation about this subject](https://docs.djangoproject.com/en/1.9/ref/csrf/).","markdown_message":"\u003cp\u003eIn addition, I suggest you to read \u003ca href=\"/redirect?url=https%3A%2F%2Fdocs.djangoproject.com%2Fen%2F1.9%2Fref%2Fcsrf%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eDjango documentation about this subject\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-17T10:52:10.330Z","updated_at":"2016-07-17T10:52:10.330Z","actor":{"username":"nashe_","cleared":false,"url":"/nashe_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072720,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Wierdly enough, I realise that I have contributed this report to hackerone noise :D\nThe site wasn't loading properly yesterday and there was no X-CSRF header in the requests which made me doubt about CSRF. As you detailed, I verified the same now. Apologies for wasting your time on a false positive.","markdown_message":"\u003cp\u003eWierdly enough, I realise that I have contributed this report to hackerone noise :D\u003cbr\u003e\nThe site wasn\u0026#39;t loading properly yesterday and there was no X-CSRF header in the requests which made me doubt about CSRF. As you detailed, I verified the same now. Apologies for wasting your time on a false positive.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-17T14:39:04.322Z","updated_at":"2016-07-17T14:39:04.322Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072726,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Your report was well written and was trying to describe to steps that made you think that there is a vulnerability in Gratipay, so it's not really noise. We all make mistakes, no worries ;-)\n\nI plan to use to report as \"base\" for duplicates we may receive in the future concerning CSRFs: I'll close it as \"Informative\" (resulting in no reputation loss for you) and [request its public disclosure](http://inside.gratipay.com/howto/handle-security-issues).\n\nHave a nice day!","markdown_message":"\u003cp\u003eYour report was well written and was trying to describe to steps that made you think that there is a vulnerability in Gratipay, so it\u0026#39;s not really noise. We all make mistakes, no worries ;-)\u003c/p\u003e\n\n\u003cp\u003eI plan to use to report as \u0026quot;base\u0026quot; for duplicates we may receive in the future concerning CSRFs: I\u0026#39;ll close it as \u0026quot;Informative\u0026quot; (resulting in no reputation loss for you) and \u003ca href=\"/redirect?url=http%3A%2F%2Finside.gratipay.com%2Fhowto%2Fhandle-security-issues\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003erequest its public disclosure\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHave a nice day!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-07-17T14:55:35.650Z","updated_at":"2016-07-17T14:55:35.650Z","actor":{"username":"nashe_","cleared":false,"url":"/nashe_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072727,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-17T14:55:45.017Z","updated_at":"2016-07-17T14:55:45.017Z","first_to_agree":true,"actor":{"username":"nashe_","cleared":false,"url":"/nashe_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072731,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-17T15:14:38.853Z","updated_at":"2016-07-17T15:14:38.853Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1072732,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-17T15:14:38.906Z","updated_at":"2016-07-17T15:14:38.906Z","actor":{"username":"roshanpty","cleared":false,"url":"/roshanpty","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/050/237/ea48df82ad7c243880d400d7a2e0b6585b6f526f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1340071,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-04T18:33:33.684Z","updated_at":"2016-12-04T18:33:33.684Z","additional_data":{"old_severity":null,"new_severity":"None","old_severity_id":null,"new_severity_id":11532},"actor":{"username":"dmk246","cleared":false,"url":"/dmk246","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gratipay","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":2230,"category":"researcher","content":"Gratipay validates an X-CSRF header to prevent CSRF attacks. During my tests it weirdly did not append those headers and I presumed that it could be an implementation flaw which can further be leveraged to perform CSRF attacks. This was a false positive. Thanks to @nache_ for rightly pointing it out.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eGratipay validates an X-CSRF header to prevent CSRF attacks. During my tests it weirdly did not append those headers and I presumed that it could be an implementation flaw which can further be leveraged to perform CSRF attacks. This was a false positive. Thanks to \u003ca href=\"/nache_\"\u003e@nache_\u003c/a\u003e for rightly pointing it out.\u003c/p\u003e\n"}]}