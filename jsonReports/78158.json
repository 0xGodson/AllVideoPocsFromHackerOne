{"id":78158,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODE1OA==","url":"https://hackerone.com/reports/78158","title":"Wrong Handling of Content-Type allows Flash injection and Rosseta flash patch bypass","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-07-23T13:03:39.060Z","submitted_at":"2015-07-23T13:03:39.060Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"benhayak","url":"/benhayak","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/012/819/62326816f8e0976154dae1540a4ccdf5a949fbcd_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46,"url":"https://hackerone.com/ibb-flash","handle":"ibb-flash","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"disabled","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Flash (IBB)","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:43:40.625Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:43:36.591Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hey, \r\nI spent some time reversing the mitigation of Rosetta Flash. This research helped me to discover a very interesting bug:\r\n\r\nAdobe Flash player uses \"string searching\" (similar to indexOf) over the entire response's \"Content-Type\" header value to match the \"application/x-shockwave-flash\" string. Once matched, the flash player will skip all checks/restrictions and render the file as a valid Flash file. Therefore responses which will include this string *anywhere* within the content header will allow the execution of various file types as flash applications (such files types may be images,videos,css,text files, and so on) - MIME Sniffing. This bug will also fully bypass an existing nosniff header: X-Content-Type-Options: nosniff. \r\n\r\nExample vulnerable response header:\r\nContent-Type: text/plain; lang=application/x-shockwave-flash\r\n\r\nSome web applications allow user data inside the content-type header. Such header injection can include \"language\" , \"encoding type\"(UTF-8,ISO.) etc or response splitting (vulnerable in Chrome).\r\n\r\n\r\nThere are two main case scenarios: \r\n\r\nClassic MIME Sniffing - Rendering Images/text/media as Flash:\r\n1. The web application allows uploading an image file.\r\n2. Viewing the uploaded image is served through an Servlet that accepts encoding/language parameter.\r\n3. The attacker uploads a malicious flash file as an Image: \"flashsniff.png\"\r\n4. The attacker forge a malicious web page with the following payload\r\n\u003cobject type=\"application/x-shockwave-flash\"\r\ndata=\"http://vulnerable-site.com/RenderImageServlet.php?imgId=1234\u0026lang=application/x-shockwave-flash\"\u003e\r\n\u003cparam name=\"AllowScriptAccess\" value=\"always\"\u003e\r\n\u003c/object\u003e\r\n\r\n4. The hosting server will respond with the following headers:\r\nHTTP/1.1 200 OK\r\n....\r\nX-Content-Type-Options: nosniff\r\n....\r\nContent-Length: 733\r\nContent-Type: image/png; charset=utf-8; lang=application/x-shockwave-flash\r\n\r\nIn this case Flash will execute malicious file types as flash applications even when X-Content-Type-Options: nosniff is on.\r\nPoC (Rendering Images as FLASH Files) \r\n\r\nhttp://poc.benhayak.com/Flash/SniffingFlash.html\r\nHere I just present an alert as a PoC but this could've been a flash that will leak information via SOP bypass.\r\n\r\n\r\nRosetta Flash patch bypass using only alpha numeric flash:\r\nBrilliant Michele Spagnuolo made an amazing research and discovered the possibility to make execute flash files using only alphanumeric charset via jsonp endpoints: https://miki.it/blog/2014/7/8/abusing-jsonp-with-rosetta-flash/\r\n\r\nA mitigation was implemented to avoid this risk by:\r\n1. If content-type is application/x-shockwave-flash, execute the flash. (string search!)\r\n2. Verify there's at least 1 non alphanumeric character which is not a valid UTF-8 in the incoming string.\r\n\r\nSince flash will ignore anything but the \"application/x-shockwave-flash\" value in the content-type string. using this bug will bypass the rosseta flash patch and allow executing Flash applications via jsonp endpoints once again!\r\n\r\nPoC: (LOOK at the network panel for \"attacker.com/crossdomain.xml\" to see a SOP bypass via Michele's techinique)\r\n\r\n http://poc.benhayak.com/Flash/rossetabypass.html\r\n\r\n\r\nRegards,\r\nBen Hayak\r\n","vulnerability_information_html":"\u003cp\u003eHey, \u003cbr\u003e\nI spent some time reversing the mitigation of Rosetta Flash. This research helped me to discover a very interesting bug:\u003c/p\u003e\n\n\u003cp\u003eAdobe Flash player uses \u0026quot;string searching\u0026quot; (similar to indexOf) over the entire response\u0026#39;s \u0026quot;Content-Type\u0026quot; header value to match the \u0026quot;application/x-shockwave-flash\u0026quot; string. Once matched, the flash player will skip all checks/restrictions and render the file as a valid Flash file. Therefore responses which will include this string \u003cem\u003eanywhere\u003c/em\u003e within the content header will allow the execution of various file types as flash applications (such files types may be images,videos,css,text files, and so on) - MIME Sniffing. This bug will also fully bypass an existing nosniff header: X-Content-Type-Options: nosniff. \u003c/p\u003e\n\n\u003cp\u003eExample vulnerable response header:\u003cbr\u003e\nContent-Type: text/plain; lang=application/x-shockwave-flash\u003c/p\u003e\n\n\u003cp\u003eSome web applications allow user data inside the content-type header. Such header injection can include \u0026quot;language\u0026quot; , \u0026quot;encoding type\u0026quot;(UTF-8,ISO.) etc or response splitting (vulnerable in Chrome).\u003c/p\u003e\n\n\u003cp\u003eThere are two main case scenarios: \u003c/p\u003e\n\n\u003cp\u003eClassic MIME Sniffing - Rendering Images/text/media as Flash:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe web application allows uploading an image file.\u003c/li\u003e\n\u003cli\u003eViewing the uploaded image is served through an Servlet that accepts encoding/language parameter.\u003c/li\u003e\n\u003cli\u003eThe attacker uploads a malicious flash file as an Image: \u0026quot;flashsniff.png\u0026quot;\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe attacker forge a malicious web page with the following payload\u003cbr\u003e\n\u0026lt;object type=\u0026quot;application/x-shockwave-flash\u0026quot;\u003cbr\u003e\ndata=\u0026quot;http://vulnerable-site.com/RenderImageServlet.php?imgId=1234\u0026amp;lang=application/x-shockwave-flash\u0026quot;\u0026gt;\u003cbr\u003e\n\u0026lt;param name=\u0026quot;AllowScriptAccess\u0026quot; value=\u0026quot;always\u0026quot;\u0026gt;\u003cbr\u003e\n\u0026lt;/object\u0026gt;\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe hosting server will respond with the following headers:\u003cbr\u003e\nHTTP/1.1 200 OK\u003cbr\u003e\n....\u003cbr\u003e\nX-Content-Type-Options: nosniff\u003cbr\u003e\n....\u003cbr\u003e\nContent-Length: 733\u003cbr\u003e\nContent-Type: image/png; charset=utf-8; lang=application/x-shockwave-flash\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIn this case Flash will execute malicious file types as flash applications even when X-Content-Type-Options: nosniff is on.\u003cbr\u003e\nPoC (Rendering Images as FLASH Files) \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://poc.benhayak.com/Flash/SniffingFlash.html\" href=\"/redirect?url=http%3A%2F%2Fpoc.benhayak.com%2FFlash%2FSniffingFlash.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://poc.benhayak.com/Flash/SniffingFlash.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nHere I just present an alert as a PoC but this could\u0026#39;ve been a flash that will leak information via SOP bypass.\u003c/p\u003e\n\n\u003cp\u003eRosetta Flash patch bypass using only alpha numeric flash:\u003cbr\u003e\nBrilliant Michele Spagnuolo made an amazing research and discovered the possibility to make execute flash files using only alphanumeric charset via jsonp endpoints: \u003ca title=\"https://miki.it/blog/2014/7/8/abusing-jsonp-with-rosetta-flash/\" href=\"/redirect?url=https%3A%2F%2Fmiki.it%2Fblog%2F2014%2F7%2F8%2Fabusing-jsonp-with-rosetta-flash%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://miki.it/blog/2014/7/8/abusing-jsonp-with-rosetta-flash/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eA mitigation was implemented to avoid this risk by:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf content-type is application/x-shockwave-flash, execute the flash. (string search!)\u003c/li\u003e\n\u003cli\u003eVerify there\u0026#39;s at least 1 non alphanumeric character which is not a valid UTF-8 in the incoming string.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSince flash will ignore anything but the \u0026quot;application/x-shockwave-flash\u0026quot; value in the content-type string. using this bug will bypass the rosseta flash patch and allow executing Flash applications via jsonp endpoints once again!\u003c/p\u003e\n\n\u003cp\u003ePoC: (LOOK at the network panel for \u0026quot;attacker.com/crossdomain.xml\u0026quot; to see a SOP bypass via Michele\u0026#39;s techinique)\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://poc.benhayak.com/Flash/rossetabypass.html\" href=\"/redirect?url=http%3A%2F%2Fpoc.benhayak.com%2FFlash%2Frossetabypass.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://poc.benhayak.com/Flash/rossetabypass.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\nBen Hayak\u003c/p\u003e\n","bounty_amount":"3000.0","formatted_bounty":"$3,000","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:43:36.677Z","allow_singular_disclosure_after":-35672870.6436036,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":547710,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any updates? ","markdown_message":"\u003cp\u003eAny updates? \u003c/p\u003e\n","automated_response":false,"created_at":"2015-08-13T21:23:41.884Z","updated_at":"2015-08-13T21:23:41.884Z","actor":{"username":"benhayak","cleared":false,"url":"/benhayak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/819/62326816f8e0976154dae1540a4ccdf5a949fbcd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":593974,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://helpx.adobe.com/security/products/flash-player/apsb15-23.html#Acknowledgments\n\nCVE-2015-5571","markdown_message":"\u003cp\u003e\u003ca title=\"https://helpx.adobe.com/security/products/flash-player/apsb15-23.html#Acknowledgments\" href=\"/redirect?url=https%3A%2F%2Fhelpx.adobe.com%2Fsecurity%2Fproducts%2Fflash-player%2Fapsb15-23.html%23Acknowledgments\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://helpx.adobe.com/security/products/flash-player/apsb15-23.html#Acknowledgments\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCVE-2015-5571\u003c/p\u003e\n","automated_response":false,"created_at":"2015-09-21T16:24:11.616Z","updated_at":"2015-09-21T16:24:11.616Z","actor":{"username":"benhayak","cleared":false,"url":"/benhayak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/819/62326816f8e0976154dae1540a4ccdf5a949fbcd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":751328,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-10T06:39:13.732Z","updated_at":"2016-01-10T06:39:13.732Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"benhayak","url":"/benhayak"},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":751329,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-01-10T06:39:21.503Z","updated_at":"2016-01-10T06:39:21.503Z","actor":{"url":"/ibb-flash","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Flash (IBB)"}},"bounty_amount":"3000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-flash","collaborator":{"username":"benhayak","url":"/benhayak"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":751340,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you!","markdown_message":"\u003cp\u003eThank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-01-10T06:43:38.674Z","updated_at":"2016-01-10T06:43:38.674Z","actor":{"username":"benhayak","cleared":false,"url":"/benhayak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/012/819/62326816f8e0976154dae1540a4ccdf5a949fbcd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026626,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:43:36.611Z","updated_at":"2019-10-13T09:43:36.611Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285917,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:43:40.651Z","updated_at":"2019-11-12T09:43:40.651Z","actor":{"url":"/ibb-flash","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/046/1483b151cc84e0ff54b32196809ca3bf945812f2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Flash (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-flash","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}