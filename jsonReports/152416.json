{"id":152416,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTI0MTY=","url":"https://hackerone.com/reports/152416","title":"Lazy Load stored XSS","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-07-20T05:14:23.703Z","submitted_at":"2016-07-20T05:14:23.703Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jouko","url":"/jouko","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":111,"url":"https://hackerone.com/automattic","handle":"automattic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Automattic","twitter_handle":"","website":"https://automattic.com","about":"WordPress.com, VaultPress, Akismet, Gravatar, WooCommerce, Polldaddy, Tumblr and more!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-12-01T13:34:44.899Z","bug_reporter_agreed_on_going_public_at":"2017-11-22T06:45:50.137Z","team_member_agreed_on_going_public_at":"2017-12-01T13:34:44.776Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I noticed a problem with the Lazy Load WordPress plugin. It could be exploited by a lower-level user to gain administrator-level access or server compromise.\n\nI've discussed this by email with Mohammad Jangda who confirmed the issue.\n\nAccording to my tests, this kind of post content leads to JavaScript execution:\n~~~~ html\n\u003cimg src=\"/foo onerror=alert(/xss/) // \" /\u003e\n~~~~\n\nThe problem seems to be this regular expression:\n~~~~ php\n               // This is a pretty simple regex, but it works\n                $content = preg_replace( '#\u003cimg([^\u003e]+?)src=[\\'\"]?([^\\'\"\\s\u003e]+)[\\'\"]?([^\u003e]*)\u003e#', sprintf( '\u003cimg${1}src=\"%s\" data-lazy-src=\"${2}\"${3}\u003e\u003cnoscript\u003e\u003cimg${1}src=\"${2}\"${3}\u003e\u003c/noscript\u003e', $placeholder_image ), $content );\n~~~~\n\nIt doesn't work as intended if there are spaces or mixed single and double quotes inside the image tag. A maliciously formed src attribute can be used to inject any other HTML attributes, like onerror.\n\nWhy this is a problem: normally users without the administrator privilege can't embed JavaScript in posts/pages. A malicious user can inject JS which, when the post is viewed by an administrator, executes administrative functions such as changing passwords, adding users, or editing plugin PHP.\n\n","vulnerability_information_html":"\u003cp\u003eI noticed a problem with the Lazy Load WordPress plugin. It could be exploited by a lower-level user to gain administrator-level access or server compromise.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve discussed this by email with Mohammad Jangda who confirmed the issue.\u003c/p\u003e\n\n\u003cp\u003eAccording to my tests, this kind of post content leads to JavaScript execution:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;/foo onerror=alert(/xss/) // \u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe problem seems to be this regular expression:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e               \u003cspan class=\"c1\"\u003e// This is a pretty simple regex, but it works\u003c/span\u003e\n                \u003cspan class=\"nv\"\u003e$content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003epreg_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;#\u0026lt;img([^\u0026gt;]+?)src=[\\\u0026#39;\u0026quot;]?([^\\\u0026#39;\u0026quot;\\s\u0026gt;]+)[\\\u0026#39;\u0026quot;]?([^\u0026gt;]*)\u0026gt;#\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;img${1}src=\u0026quot;%s\u0026quot; data-lazy-src=\u0026quot;${2}\u0026quot;${3}\u0026gt;\u0026lt;noscript\u0026gt;\u0026lt;img${1}src=\u0026quot;${2}\u0026quot;${3}\u0026gt;\u0026lt;/noscript\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$placeholder_image\u003c/span\u003e \u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nv\"\u003e$content\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt doesn\u0026#39;t work as intended if there are spaces or mixed single and double quotes inside the image tag. A maliciously formed src attribute can be used to inject any other HTML attributes, like onerror.\u003c/p\u003e\n\n\u003cp\u003eWhy this is a problem: normally users without the administrator privilege can\u0026#39;t embed JavaScript in posts/pages. A malicious user can inject JS which, when the post is viewed by an administrator, executes administrative functions such as changing passwords, adding users, or editing plugin PHP.\u003c/p\u003e\n","bounty_amount":"275.0","formatted_bounty":"$275","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-12-22T06:45:50.231Z","allow_singular_disclosure_after":-95291280.35327737,"singular_disclosure_allowed":true,"vote_count":11,"voters":["jr0ch17","asad0x01_","eveeez","r3y","cr4xerbik4sh","zerotoone","japz","spetr0x","dyabla","wolfmastershock","and 1 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1082788,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-22T19:11:52.539Z","updated_at":"2016-07-22T19:11:52.539Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jouko","url":"/jouko"},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1082789,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-07-22T19:12:10.206Z","updated_at":"2016-07-22T19:12:10.206Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Automattic"}},"bounty_amount":"275.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"automattic","collaborator":{"username":"jouko","url":"/jouko"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2175995,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-11-22T06:45:50.175Z","updated_at":"2017-11-22T06:45:50.175Z","first_to_agree":true,"actor":{"username":"jouko","cleared":false,"url":"/jouko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/642/e4fdbdb735ac2b938c6eb072303166bc708a9a50_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2193662,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-01T13:34:44.800Z","updated_at":"2017-12-01T13:34:44.800Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2193663,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-01T13:34:44.923Z","updated_at":"2017-12-01T13:34:44.923Z","actor":{"username":"xknown","cleared":false,"url":"/xknown","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}