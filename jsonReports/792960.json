{"id":792960,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83OTI5NjA=","url":"https://hackerone.com/reports/792960","title":"SSRF - Guard - Unchecked WKS servers","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-02-11T07:04:33.124Z","submitted_at":"2020-02-11T07:04:33.124Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"zhutyra","url":"/zhutyra","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-06-17T15:48:31.039Z","bug_reporter_agreed_on_going_public_at":"2020-06-17T15:48:30.980Z","team_member_agreed_on_going_public_at":"2020-06-17T12:30:48.940Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"#### Note\n\nThis is different vulnerability than HKP lookup #792953, although it does basically same thing and has same problem, these are independent implementations of key lookup and the vulnerable code isn't shared.\n\n## Description\n\nWhen encrypting an email, one of strategies to lookup recipient's encryption key is to contact a WKS keyserver specified in DNS records of recipient's domain.\n\nSpecifically it is `DNS SRV` records for `_openpgpkey._tcp.\u003cdomain\u003e`, which specify hostname and port of the keyserver.\n\nIn source code it is implemented in `WKSRecipKeyLookupStrategy`, `SRVWKSClientService`, `WKSClientImpl`, `WKSClient` classes.\n\nThe keyserver must be on subdomain of the original domain, but as WKS is just HTTP(S) protocol, the WKS server itself can later redirect clients to any other address.\n\n## Attack vectors\n\n* Server user can trigger this directly\n* External attacker can lure a server user to send them an encrypted email\n\n## Steps to reproduce\n\nAttached is a simple program {F712598} which implements DNS and WKS server.\n\nIt may be actually simpler to do it properly but in my testing this is what I did to not need DNSSEC and to be able to use self-signed certificate.\n\nPlease note that this *weakening* is just to simplify testing, it isn't required for the vulnerability or an attacker.\n\n* log in to nameserver for *\u003cyourdomain\u003e*\n* generate new certificate\n\n```\nnameserver# openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem\n...\nCommon Name (e.g. server FQDN or YOUR name) []: wks.\u003cyourdomain\u003e\n```\n* run my DNS/WKS server\n\n```\nnameserver# python3 wks-server.py \u003cns.ip.addr.ess\u003e\n```\n\n* log in to appsuite server\n* retrieve our certificate\n\n```\nappsuite# cd /tmp\nappsuite# echo \"\" | openssl s_client -connect wks.\u003cyourdomain\u003e:443 -showcerts 2\u003e/dev/null | openssl x509 -out certfile.txt\n```\n* import it to Java's trust store, so we can use our self-signed certificate\n\n```\nappsuite# cd /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security  # Debian 9\nappsuite# keytool -import -alias wkstest -file /tmp/certfile.txt -keystore cacerts -storepass changeit\n...\nTrust this certificate? [no]:  yes\n```\n* edit `/opt/open-xchange/etc/guard-core.properties`, so we don't need DNSSEC\n\n```\ncom.openexchange.guard.keySources.trustLevelWKSServer=4 # by default it is 3 and trustThreshold is 4\n```\n* restart open-xchange\n\n```\nappsuite# systemctl restart open-xchange\n```\n* compose new email in OX App Suite\n* enter any address with your domain as recipient's address - *user@\u003cyourdomain\u003e*\n* click on `Enable Encryption` lock icon\n* in terminal on nameserver you should see output like this\n\n```\nDNS _openpgpkey._tcp.\u003cyourdomain\u003e.\n# answer to this ^^ will be wks.\u003cyourdomain\u003e:443\nDNS wks.\u003cyourdomain\u003e.\nGET wks.\u003cyourdomain\u003e:443/.well-known/openpgpkey/hu/864dx8gcr5d5xxxjc4azgzgnw5ckag6b\n# answer to this ^^ will be a redirect to localhost:1234\n```\n* in terminal on appsuite you should see output like this, confirming the SSRF\n\n```http\nGET /badthing HTTP/1.1\nHost: localhost:1234\nConnection: Keep-Alive\nUser-Agent: Apache-HttpClient/4.5.7 (Java/1.8.0_232)\nAccept-Encoding: gzip,deflate\n```\n\n## Impact\n\nAn attacker can trigger requests to internal resources.","vulnerability_information_html":"\u003ch4 id=\"note\"\u003eNote\u003c/h4\u003e\n\n\u003cp\u003eThis is different vulnerability than HKP lookup \u003ca href=\"/reports/792953\"\u003e#792953\u003c/a\u003e, although it does basically same thing and has same problem, these are independent implementations of key lookup and the vulnerable code isn\u0026#39;t shared.\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eWhen encrypting an email, one of strategies to lookup recipient\u0026#39;s encryption key is to contact a WKS keyserver specified in DNS records of recipient\u0026#39;s domain.\u003c/p\u003e\n\n\u003cp\u003eSpecifically it is \u003ccode\u003eDNS SRV\u003c/code\u003e records for \u003ccode\u003e_openpgpkey._tcp.\u0026lt;domain\u0026gt;\u003c/code\u003e, which specify hostname and port of the keyserver.\u003c/p\u003e\n\n\u003cp\u003eIn source code it is implemented in \u003ccode\u003eWKSRecipKeyLookupStrategy\u003c/code\u003e, \u003ccode\u003eSRVWKSClientService\u003c/code\u003e, \u003ccode\u003eWKSClientImpl\u003c/code\u003e, \u003ccode\u003eWKSClient\u003c/code\u003e classes.\u003c/p\u003e\n\n\u003cp\u003eThe keyserver must be on subdomain of the original domain, but as WKS is just HTTP(S) protocol, the WKS server itself can later redirect clients to any other address.\u003c/p\u003e\n\n\u003ch2 id=\"attack-vectors\"\u003eAttack vectors\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eServer user can trigger this directly\u003c/li\u003e\n\u003cli\u003eExternal attacker can lure a server user to send them an encrypted email\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps to reproduce\u003c/h2\u003e\n\n\u003cp\u003eAttached is a simple program \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"wks-server.py\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Wa99gtnjAxdYLi7cQDNfdyGc?response-content-disposition=attachment%3B%20filename%3D%22wks-server.py%22%3B%20filename%2A%3DUTF-8%27%27wks-server.py\u0026amp;response-content-type=text%2Fx-python\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065407Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026amp;X-Amz-Signature=5f416d723acc67f48072c1dba5b37842132841d1719ef1ec258721920462acdc\" data-attachment-type=\"text/x-python\"\u003ewks-server.py (F712598)\u003c/a\u003e which implements DNS and WKS server.\u003c/p\u003e\n\n\u003cp\u003eIt may be actually simpler to do it properly but in my testing this is what I did to not need DNSSEC and to be able to use self-signed certificate.\u003c/p\u003e\n\n\u003cp\u003ePlease note that this \u003cem\u003eweakening\u003c/em\u003e is just to simplify testing, it isn\u0026#39;t required for the vulnerability or an attacker.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003elog in to nameserver for \u003cem\u003e\u0026lt;yourdomain\u0026gt;\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003egenerate new certificate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enameserver# openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem\n...\nCommon Name (e.g. server FQDN or YOUR name) []: wks.\u0026lt;yourdomain\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003erun my DNS/WKS server\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enameserver# python3 wks-server.py \u0026lt;ns.ip.addr.ess\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003elog in to appsuite server\u003c/li\u003e\n\u003cli\u003eretrieve our certificate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eappsuite# cd /tmp\nappsuite# echo \u0026quot;\u0026quot; | openssl s_client -connect wks.\u0026lt;yourdomain\u0026gt;:443 -showcerts 2\u0026gt;/dev/null | openssl x509 -out certfile.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eimport it to Java\u0026#39;s trust store, so we can use our self-signed certificate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eappsuite# cd /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security  # Debian 9\nappsuite# keytool -import -alias wkstest -file /tmp/certfile.txt -keystore cacerts -storepass changeit\n...\nTrust this certificate? [no]:  yes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eedit \u003ccode\u003e/opt/open-xchange/etc/guard-core.properties\u003c/code\u003e, so we don\u0026#39;t need DNSSEC\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecom.openexchange.guard.keySources.trustLevelWKSServer=4 # by default it is 3 and trustThreshold is 4\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003erestart open-xchange\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eappsuite# systemctl restart open-xchange\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003ecompose new email in OX App Suite\u003c/li\u003e\n\u003cli\u003eenter any address with your domain as recipient\u0026#39;s address - \u003cem\u003euser@\u0026lt;yourdomain\u0026gt;\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003eclick on \u003ccode\u003eEnable Encryption\u003c/code\u003e lock icon\u003c/li\u003e\n\u003cli\u003ein terminal on nameserver you should see output like this\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDNS _openpgpkey._tcp.\u0026lt;yourdomain\u0026gt;.\n# answer to this ^^ will be wks.\u0026lt;yourdomain\u0026gt;:443\nDNS wks.\u0026lt;yourdomain\u0026gt;.\nGET wks.\u0026lt;yourdomain\u0026gt;:443/.well-known/openpgpkey/hu/864dx8gcr5d5xxxjc4azgzgnw5ckag6b\n# answer to this ^^ will be a redirect to localhost:1234\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003ein terminal on appsuite you should see output like this, confirming the SSRF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eGET\u003c/span\u003e \u003cspan class=\"nn\"\u003e/badthing\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003elocalhost:1234\u003c/span\u003e\n\u003cspan class=\"na\"\u003eConnection\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eKeep-Alive\u003c/span\u003e\n\u003cspan class=\"na\"\u003eUser-Agent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eApache-HttpClient/4.5.7 (Java/1.8.0_232)\u003c/span\u003e\n\u003cspan class=\"na\"\u003eAccept-Encoding\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003egzip,deflate\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker can trigger requests to internal resources.\u003c/p\u003e\n","bounty_amount":"400.0","formatted_bounty":"$400","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":712598,"file_name":"wks-server.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Wa99gtnjAxdYLi7cQDNfdyGc?response-content-disposition=attachment%3B%20filename%3D%22wks-server.py%22%3B%20filename%2A%3DUTF-8%27%27wks-server.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQSUJSTWNA%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065407Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDC4LZo82wc2eCvBFlhjwE027CwJoHB88%2BMK2v03JEf7AIgTsNTuR7XI5zLkpcU%2F192zliPMALv25wXWHyoW56mHW0qtAMIVRABGgwwMTM2MTkyNzQ4NDkiDDQxd6Ep%2FudaJolhjiqRA%2FV9m3Q5qTHiEf%2B0F56QxIa0FX4xcw3kyVQ754zuEWG6%2FFHm5u50c%2FkjIZTK4iokf%2F5bg8%2F9lzPcfaf%2FlyMeeuZQiIR66c8Q0ZynlQYFFg39COCCRcmQH0rk4Py7SioeZK1WX50szdnMCAEBM0%2FYGIJRFlpJYz5%2BF7cuCEDZDVFz70QPaeLM9Aq2Hp0OWlaD%2BlKU2Ya8oXmKGTVLeV6xTf66mRdzvW8I4qKgZpByKnAcip5WWnkttPjUxPiLaEeZ%2BClnUyHZas2bB1iPmPH0rQXcKWbTOq%2BJJm8xX%2FgqtqSgjGTmncJVZJxe0UaRUPXS%2BxPh0KYERT9Te4D5sREOcmaPJ0lojWm5AuNIxK3S30FeTamdldG5jOgcjm7r6e2HjWcB7yfe4%2BCsYd2eVLbbXk95jZRHQohr%2B7Z9YEqq00TUANe07BXm%2FKoAPBMy0bYQHYmVJaGS31XhmN6DRKUn5mwwU6NQ87eIymigu48swQSaSOa0S3Ve15n99tYKCLxw%2FqcLrXK9DmAPRXyB2cTH85tpMJ7Qqv8FOusB0TY7T%2F8PPlS9Pw17cj5sLPnZSdHFb4OJ7xNuArhvZUxC%2FDdQIpfgbN40hDHy3r94ejzq63ULcWroBoxExSJ8F%2BIqLrT2jEE%2BHYV9rJ3uN20mlrWN07M1wfpVQeu7mZyiWu%2BTKEOjyLznji7d3Efn7A1SwzF%2FWi11RcA9%2BGeNTFCiOeyJRV4JWopx6NNi8TVr6hBraJmZeqXIUCIj4yW%2BvdbZ%2F7b%2BDWNq1S8BMna3Htt9r6lmeANRYdDH%2BkiA2F6n7nJrrrNm3hF7NHjHy1GdUin3XffXKseDfHdRNqxNelH1SrChi2zziLtHrQ%3D%3D\u0026X-Amz-Signature=5f416d723acc67f48072c1dba5b37842132841d1719ef1ec258721920462acdc","file_size":2253,"type":"text/x-python"}],"allow_singular_disclosure_at":null,"vote_count":4,"voters":["secator","brahim_boufakri01","mygf","sl33pyp0t4t0"],"severity":{"rating":"medium","score":5.0,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"low","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":551,"asset_type":"URL","asset_identifier":"sandbox.open-xchange.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7018763,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-11T10:53:27.158Z","updated_at":"2020-02-11T10:53:27.158Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7038134,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-13T07:23:11.176Z","updated_at":"2020-02-13T07:23:11.176Z","additional_data":{"old_severity":"Medium","new_severity":"Medium (5.0)","old_severity_id":629720,"new_severity_id":632321},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7038138,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.","markdown_message":"\u003cp\u003eWe solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-13T07:23:56.003Z","updated_at":"2020-02-13T07:23:56.003Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"zhutyra","url":"/zhutyra"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7038139,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-13T07:24:02.285Z","updated_at":"2020-02-13T07:24:02.285Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"400.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"zhutyra","url":"/zhutyra"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7040254,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much for the bounty.","markdown_message":"\u003cp\u003eThank you very much for the bounty.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-13T09:55:46.535Z","updated_at":"2020-02-13T09:55:46.535Z","actor":{"username":"zhutyra","cleared":false,"url":"/zhutyra","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8319675,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-17T12:30:48.970Z","updated_at":"2020-06-17T12:30:48.970Z","first_to_agree":true,"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8321775,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-17T15:48:31.008Z","updated_at":"2020-06-17T15:48:31.008Z","actor":{"username":"zhutyra","cleared":false,"url":"/zhutyra","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8321776,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-17T15:48:31.074Z","updated_at":"2020-06-17T15:48:31.074Z","actor":{"username":"zhutyra","cleared":false,"url":"/zhutyra","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}