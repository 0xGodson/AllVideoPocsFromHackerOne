{"id":186194,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODYxOTQ=","url":"https://hackerone.com/reports/186194","title":"State filter in IssuableFinder allows attacker to delete all issues and merge requests","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2016-11-28T23:32:53.862Z","submitted_at":"2016-11-28T23:32:53.862Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2016-9469"],"singular_disclosure_disabled":true,"disclosed_at":"2016-12-06T00:57:18.114Z","bug_reporter_agreed_on_going_public_at":"2016-12-06T00:56:29.986Z","team_member_agreed_on_going_public_at":"2016-12-06T00:57:18.072Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Vulnerability details\nThe state filter in the `IssuableFinder` class has the ability to filter issues and merge requests by state. This filter is implemented by calling `public_send` with unfiltered user input. This allows an attacker to call `delete_all` or `destroy_all`. Because the method is called **before** the project / group scope is applied, it deletes all issues and merge requests of the GitLab instance.\n\n# Proof of concept\nCreate two users and a new project for each of them. It doesn't matter if they're private or not. Now create an issue (or merge request) for each project. Now browse to the Issues overview. When clicking All, you'll be redirected to http://gitlab-instance/root/xxxx/issues?scope=all\u0026state=all. Simply substitude `all` with `delete_all` in the URL and ALL issues will be deleted: http://gitlab-instance/root/xxxx/issues?scope=all\u0026state=delete_all. To delete all merge requests, substitude `issues` with `merge_requests`. When requesting the `delete_all` URL, a 500 internal server error will be shown. This is caused by the `delete_all` method returning a boolean instead of an `ActiveRecord::Relation` class. Do **NOT** call this on the GitLab production site.\n\n# Origin\nThe vulnerability comes from the fact that unsanitized user input is passed into a `public_send` call that is being called on `model.all`. Here's the `execute` method of the `IssuableFinder`:\n\n```ruby\ndef execute\n  items = init_collection\n  items = by_scope(items)\n  items = by_state(items)\n  items = by_group(items)\n  items = by_project(items)\n  items = by_search(items)\n  items = by_milestone(items)\n  items = by_assignee(items)\n  items = by_author(items)\n  items = by_label(items)\n  items = by_due_date(items)\n  sort(items)\nend\n```\n\nNow take a look at the `by_state` method:\n\n```ruby\ndef by_state(items)\n  params[:state] ||= 'all'\n\n  if items.respond_to?(params[:state])\n    items.public_send(params[:state])\n  else\n    items\n  end\nend\n```\n\nThe controllers are passing the `state` parameter without any form of sanitization or validation to the finder. Since you're passing around ActiveRecord relations, `delete_all` can be called early on in the relation chain. Since the scope hasn't been applied (the `by_project` is called later), this will affect all issues and merge requests.\n\n# Remediation\nNever pass unsanitized or unvalidated user input to `public_send` or `send`.","vulnerability_information_html":"\u003ch1 id=\"vulnerability-details\"\u003eVulnerability details\u003c/h1\u003e\n\n\u003cp\u003eThe state filter in the \u003ccode\u003eIssuableFinder\u003c/code\u003e class has the ability to filter issues and merge requests by state. This filter is implemented by calling \u003ccode\u003epublic_send\u003c/code\u003e with unfiltered user input. This allows an attacker to call \u003ccode\u003edelete_all\u003c/code\u003e or \u003ccode\u003edestroy_all\u003c/code\u003e. Because the method is called \u003cstrong\u003ebefore\u003c/strong\u003e the project / group scope is applied, it deletes all issues and merge requests of the GitLab instance.\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of concept\u003c/h1\u003e\n\n\u003cp\u003eCreate two users and a new project for each of them. It doesn\u0026#39;t matter if they\u0026#39;re private or not. Now create an issue (or merge request) for each project. Now browse to the Issues overview. When clicking All, you\u0026#39;ll be redirected to \u003ca title=\"http://gitlab-instance/root/xxxx/issues?scope=all\u0026amp;state=all\" href=\"/redirect?url=http%3A%2F%2Fgitlab-instance%2Froot%2Fxxxx%2Fissues%3Fscope%3Dall%26state%3Dall\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gitlab-instance/root/xxxx/issues?scope=all\u0026amp;state=all\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Simply substitude \u003ccode\u003eall\u003c/code\u003e with \u003ccode\u003edelete_all\u003c/code\u003e in the URL and ALL issues will be deleted: \u003ca title=\"http://gitlab-instance/root/xxxx/issues?scope=all\u0026amp;state=delete_all\" href=\"/redirect?url=http%3A%2F%2Fgitlab-instance%2Froot%2Fxxxx%2Fissues%3Fscope%3Dall%26state%3Ddelete_all\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gitlab-instance/root/xxxx/issues?scope=all\u0026amp;state=delete_all\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. To delete all merge requests, substitude \u003ccode\u003eissues\u003c/code\u003e with \u003ccode\u003emerge_requests\u003c/code\u003e. When requesting the \u003ccode\u003edelete_all\u003c/code\u003e URL, a 500 internal server error will be shown. This is caused by the \u003ccode\u003edelete_all\u003c/code\u003e method returning a boolean instead of an \u003ccode\u003eActiveRecord::Relation\u003c/code\u003e class. Do \u003cstrong\u003eNOT\u003c/strong\u003e call this on the GitLab production site.\u003c/p\u003e\n\n\u003ch1 id=\"origin\"\u003eOrigin\u003c/h1\u003e\n\n\u003cp\u003eThe vulnerability comes from the fact that unsanitized user input is passed into a \u003ccode\u003epublic_send\u003c/code\u003e call that is being called on \u003ccode\u003emodel.all\u003c/code\u003e. Here\u0026#39;s the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eIssuableFinder\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eexecute\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einit_collection\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_scope\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_state\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_group\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_project\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_search\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_milestone\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_assignee\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_author\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_label\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eby_due_date\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow take a look at the \u003ccode\u003eby_state\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eby_state\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:state\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;all\u0026#39;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003erespond_to?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:state\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epublic_send\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:state\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eitems\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe controllers are passing the \u003ccode\u003estate\u003c/code\u003e parameter without any form of sanitization or validation to the finder. Since you\u0026#39;re passing around ActiveRecord relations, \u003ccode\u003edelete_all\u003c/code\u003e can be called early on in the relation chain. Since the scope hasn\u0026#39;t been applied (the \u003ccode\u003eby_project\u003c/code\u003e is called later), this will affect all issues and merge requests.\u003c/p\u003e\n\n\u003ch1 id=\"remediation\"\u003eRemediation\u003c/h1\u003e\n\n\u003cp\u003eNever pass unsanitized or unvalidated user input to \u003ccode\u003epublic_send\u003c/code\u003e or \u003ccode\u003esend\u003c/code\u003e.\u003c/p\u003e\n","weakness":{"id":75,"name":"Privilege Escalation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-01-05T00:56:30.016Z","allow_singular_disclosure_after":-125639465.7772294,"singular_disclosure_allowed":true,"vote_count":11,"voters":["michiel","dilawer01","xsam","mpz","eveeez","alfredsaonoy","japz","efernandes","spetr0x","martijn","and 1 more..."],"severity":{"rating":"high","score":8.1,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"high","availability":"high"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1324735,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Confirmed exploitable. I've opened a confidential issue to address the vulnerability. Thanks again, Jobert.\n\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/25064","markdown_message":"\u003cp\u003eConfirmed exploitable. I\u0026#39;ve opened a confidential issue to address the vulnerability. Thanks again, Jobert.\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/25064\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F25064\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/issues/25064\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-28T23:55:09.745Z","updated_at":"2016-11-28T23:55:09.745Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1325067,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"A fix is currently undergoing review and coordination for patch releases has begun.","markdown_message":"\u003cp\u003eA fix is currently undergoing review and coordination for patch releases has begun.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-29T04:21:54.340Z","updated_at":"2016-11-29T04:21:54.340Z","actor":{"username":"rspeicher","cleared":false,"url":"/rspeicher","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/070/800/771703800f32dcb0c5413919f04f19305041dd58_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1343024,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Fix has been rolled out to everyone. Release the CVE!","markdown_message":"\u003cp\u003eFix has been rolled out to everyone. Release the CVE!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-06T00:55:16.283Z","updated_at":"2016-12-06T00:55:16.283Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1343025,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @briann, we'll get that going on our side!","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e, we\u0026#39;ll get that going on our side!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-06T00:56:24.193Z","updated_at":"2016-12-06T00:56:24.193Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1343026,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-06T00:56:30.003Z","updated_at":"2016-12-06T00:56:30.003Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1343028,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-06T00:57:18.089Z","updated_at":"2016-12-06T00:57:18.089Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1343029,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-06T00:57:18.130Z","updated_at":"2016-12-06T00:57:18.130Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":3039,"category":"researcher","content":"Multiple versions of GitLab expose a dangerous method to any authenticated user that could lead to the deletion of all `Issue` and `MergeRequest` objects on a GitLab instance. For GitLab instances with publicly available projects this vulnerability could be exploited by an unauthenticated user. A fix was included in versions 8.14.3, 8.13.8, and 8.12.11, which were released on December 5th 2016 at 3:59 PST. The GitLab versions vulnerable to this are 8.13.0, 8.13.0-ee, 8.13.1, 8.13.1-ee, 8.13.2, 8.13.2-ee, 8.13.3, 8.13.3-ee, 8.13.4, 8.13.4-ee, 8.13.5, 8.13.5-ee, 8.13.6, 8.13.6-ee, 8.13.7, 8.14.0, 8.14.0-ee, 8.14.1, 8.14.2, and 8.14.2-ee.\n\nMore information can be found at https://about.gitlab.com/2016/12/05/cve-2016-9469/.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eMultiple versions of GitLab expose a dangerous method to any authenticated user that could lead to the deletion of all \u003ccode\u003eIssue\u003c/code\u003e and \u003ccode\u003eMergeRequest\u003c/code\u003e objects on a GitLab instance. For GitLab instances with publicly available projects this vulnerability could be exploited by an unauthenticated user. A fix was included in versions 8.14.3, 8.13.8, and 8.12.11, which were released on December 5th 2016 at 3:59 PST. The GitLab versions vulnerable to this are 8.13.0, 8.13.0-ee, 8.13.1, 8.13.1-ee, 8.13.2, 8.13.2-ee, 8.13.3, 8.13.3-ee, 8.13.4, 8.13.4-ee, 8.13.5, 8.13.5-ee, 8.13.6, 8.13.6-ee, 8.13.7, 8.14.0, 8.14.0-ee, 8.14.1, 8.14.2, and 8.14.2-ee.\u003c/p\u003e\n\n\u003cp\u003eMore information can be found at \u003ca title=\"https://about.gitlab.com/2016/12/05/cve-2016-9469/\" href=\"/redirect?url=https%3A%2F%2Fabout.gitlab.com%2F2016%2F12%2F05%2Fcve-2016-9469%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://about.gitlab.com/2016/12/05/cve-2016-9469/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n"}]}