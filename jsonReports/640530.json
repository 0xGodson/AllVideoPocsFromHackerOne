{"id":640530,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NDA1MzA=","url":"https://hackerone.com/reports/640530","title":"Insecure Frame (External)","state":"Closed","substate":"not-applicable","severity_rating":"low","readable_substate":"N/A","created_at":"2019-07-11T16:32:08.993Z","submitted_at":"2019-07-11T16:32:08.993Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"b2x2r","url":"/b2x2r","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":true,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-11-01T09:05:10.832Z","bug_reporter_agreed_on_going_public_at":"2019-10-26T01:15:08.804Z","team_member_agreed_on_going_public_at":"2019-11-01T09:05:10.753Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\n[Insecure Frame (External)]\n\n## Steps To Reproduce:\n[Vulnerability Details\nidentified an external insecure or misconfigured iframe.]\n\nRemedy\nApply sandboxing in inline frame \n\u003ciframe sandbox src=\"framed-page-url\"\u003e\u003c/iframe\u003e\nFor untrusted content, avoid the usage of seamless attribute and allow-top-navigation, allow-popups and allow-scripts in sandbox attribute. \n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\nExternal References\nhttps://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet\n\n## Impact\n\nImpact\nIFrame sandboxing enables a set of additional restrictions for the content within a frame in order to restrict its potentially malicious code from causing harm to the web page that embeds it.\nThe Same Origin Policy (SOP) will prevent JavaScript code from one origin from accessing   properties and functions - as well as HTTP responses - of different origins. The access is only allowed if the protocol, port and also the domain match exactly.\n \nHere is an example, the URLs below all belong to the same origin as http://site.com :        \nhttp://site.com\nhttp://site.com/\nhttp://site.com/my/page.html\n\n\nWhereas the URLs mentioned below aren't from the same origin as http://site.com :          \nhttp://www.site.com  (a sub domain)\nhttp://site.org            (different top level domain)\nhttps://site.com         (different protocol)\nhttp://site.com:8080  (different port)\n\n\nWhen the sandbox attribute is set, the iframe content is treated as being from a unique origin, even if its hostname, port and protocol match exactly. Additionally, sandboxed content is re-hosted in the browser with the following restrictions:\n\nAny kind of plugin, such as ActiveX, Flash, or Silverlight will be disabled for the iframe. \nForms are disabled. The hosted content is not allowed to make forms post back to any target. \nScripts are disabled. JavaScript is disabled and will not execute. \nLinks to other browsing contexts are disabled. An anchor tag targeting different browser levels will not execute. \nUnique origin treatment. All content is treated under a unique origin. The content is not able to traverse the DOM or read cookie information. \n\nWhen the sandbox attribute is not set or not configured correctly, your application might be at risk.\n\nA compromised website that is loaded in such an insecure iframe might affect the parent web application. These are just a few examples of how such an insecure frame might affect its parent:\nIt might trick the user into supplying a username and password to the site loaded inside the iframe. \nIt might navigate the parent window to a phishing page. \nIt might execute untrusted code. \nIt could show a popup, appearing to come from the parent site. \n\nSandbox containing a value of :\nallow-same-origin will not treat it as a unique origin. \nallow-top-navigation will allow code in the iframe to navigate the parent somewhere else, e.g. by changing parent.location. \nallow-forms will allow form submissions from inside the iframe. \nallow-popups will allow popups. \nallow-scripts will allow malicious script execution however it won't allow to create popups.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003e[Insecure Frame (External)]\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003e[Vulnerability Details\u003cbr\u003e\nidentified an external insecure or misconfigured iframe.]\u003c/p\u003e\n\n\u003cp\u003eRemedy\u003cbr\u003e\nApply sandboxing in inline frame \u003cbr\u003e\n\u0026lt;iframe sandbox src=\u0026quot;framed-page-url\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\u003cbr\u003e\nFor untrusted content, avoid the usage of seamless attribute and allow-top-navigation, allow-popups and allow-scripts in sandbox attribute. \u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003e[list any additional material (e.g. screenshots, logs, etc.)]\u003c/p\u003e\n\n\u003cp\u003eExternal References\u003cbr\u003e\n\u003ca title=\"https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet\" href=\"/redirect?url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FHTML5_Security_Cheat_Sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eImpact\u003cbr\u003e\nIFrame sandboxing enables a set of additional restrictions for the content within a frame in order to restrict its potentially malicious code from causing harm to the web page that embeds it.\u003cbr\u003e\nThe Same Origin Policy (SOP) will prevent JavaScript code from one origin from accessing   properties and functions - as well as HTTP responses - of different origins. The access is only allowed if the protocol, port and also the domain match exactly.\u003c/p\u003e\n\n\u003cp\u003eHere is an example, the URLs below all belong to the same origin as \u003ca title=\"http://site.com\" href=\"/redirect?url=http%3A%2F%2Fsite.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e :\u003cbr\u003e\u003cbr\u003e\n\u003ca title=\"http://site.com\" href=\"/redirect?url=http%3A%2F%2Fsite.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"http://site.com/\" href=\"/redirect?url=http%3A%2F%2Fsite.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"http://site.com/my/page.html\" href=\"/redirect?url=http%3A%2F%2Fsite.com%2Fmy%2Fpage.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com/my/page.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhereas the URLs mentioned below aren\u0026#39;t from the same origin as \u003ca title=\"http://site.com\" href=\"/redirect?url=http%3A%2F%2Fsite.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e :\u003cbr\u003e\u003cbr\u003e\n\u003ca title=\"http://www.site.com\" href=\"/redirect?url=http%3A%2F%2Fwww.site.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.site.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e  (a sub domain)\u003cbr\u003e\n\u003ca title=\"http://site.org\" href=\"/redirect?url=http%3A%2F%2Fsite.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.org\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e            (different top level domain)\u003cbr\u003e\n\u003ca title=\"https://site.com\" href=\"/redirect?url=https%3A%2F%2Fsite.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://site.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e         (different protocol)\u003cbr\u003e\n\u003ca title=\"http://site.com:8080\" href=\"/redirect?url=http%3A%2F%2Fsite.com%3A8080\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://site.com:8080\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e  (different port)\u003c/p\u003e\n\n\u003cp\u003eWhen the sandbox attribute is set, the iframe content is treated as being from a unique origin, even if its hostname, port and protocol match exactly. Additionally, sandboxed content is re-hosted in the browser with the following restrictions:\u003c/p\u003e\n\n\u003cp\u003eAny kind of plugin, such as ActiveX, Flash, or Silverlight will be disabled for the iframe. \u003cbr\u003e\nForms are disabled. The hosted content is not allowed to make forms post back to any target. \u003cbr\u003e\nScripts are disabled. JavaScript is disabled and will not execute. \u003cbr\u003e\nLinks to other browsing contexts are disabled. An anchor tag targeting different browser levels will not execute. \u003cbr\u003e\nUnique origin treatment. All content is treated under a unique origin. The content is not able to traverse the DOM or read cookie information. \u003c/p\u003e\n\n\u003cp\u003eWhen the sandbox attribute is not set or not configured correctly, your application might be at risk.\u003c/p\u003e\n\n\u003cp\u003eA compromised website that is loaded in such an insecure iframe might affect the parent web application. These are just a few examples of how such an insecure frame might affect its parent:\u003cbr\u003e\nIt might trick the user into supplying a username and password to the site loaded inside the iframe. \u003cbr\u003e\nIt might navigate the parent window to a phishing page. \u003cbr\u003e\nIt might execute untrusted code. \u003cbr\u003e\nIt could show a popup, appearing to come from the parent site. \u003c/p\u003e\n\n\u003cp\u003eSandbox containing a value of :\u003cbr\u003e\nallow-same-origin will not treat it as a unique origin. \u003cbr\u003e\nallow-top-navigation will allow code in the iframe to navigate the parent somewhere else, e.g. by changing parent.location. \u003cbr\u003e\nallow-forms will allow form submissions from inside the iframe. \u003cbr\u003e\nallow-popups will allow popups. \u003cbr\u003e\nallow-scripts will allow malicious script execution however it won\u0026#39;t allow to create popups.\u003c/p\u003e\n","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":1,"voters":["sameerphad72"],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5301549,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @kazemusic1337, \n\nThank you for the report! Unfortunately, we need a little more information from you before we can fully validate this report. \nPlease provide a detailed proof of concept that includes the following:\n* How to find the vulnerable functionality\n* Steps to reproduce the issue\n* any code snippets/curl commands/request and response headers that will help reproduce the issue\n* Any additional content such as screenshots/videos that will help demonstrate the vulnerability. \n\nProviding this information when submitting new reports will help us to quickly determine the validity of your report. Thank you for your help!\n\nRegards, \n@antenna ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/kazemusic1337\"\u003e@kazemusic1337\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eThank you for the report! Unfortunately, we need a little more information from you before we can fully validate this report. \u003cbr\u003e\nPlease provide a detailed proof of concept that includes the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow to find the vulnerable functionality\u003c/li\u003e\n\u003cli\u003eSteps to reproduce the issue\u003c/li\u003e\n\u003cli\u003eany code snippets/curl commands/request and response headers that will help reproduce the issue\u003c/li\u003e\n\u003cli\u003eAny additional content such as screenshots/videos that will help demonstrate the vulnerability. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eProviding this information when submitting new reports will help us to quickly determine the validity of your report. Thank you for your help!\u003c/p\u003e\n\n\u003cp\u003eRegards, \u003cbr\u003e\n\u003ca href=\"/antenna\"\u003e@antenna\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-11T16:42:37.016Z","updated_at":"2019-07-11T16:42:37.016Z","actor":{"username":"antenna","cleared":false,"url":"/antenna","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/B1a8q5ga9BZjMczKoqAbnMj5/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5547748,"is_internal":false,"editable":false,"type":"Activities::BugInactive","message":"","markdown_message":"","automated_response":true,"created_at":"2019-08-11T03:05:16.647Z","updated_at":"2019-08-11T03:05:16.647Z","actor":null,"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6142213,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-26T01:15:08.820Z","updated_at":"2019-10-26T01:15:08.820Z","first_to_agree":true,"actor":{"username":"b2x2r","cleared":false,"url":"/b2x2r","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6191374,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-01T09:05:10.769Z","updated_at":"2019-11-01T09:05:10.769Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6191375,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-01T09:05:10.847Z","updated_at":"2019-11-01T09:05:10.847Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}