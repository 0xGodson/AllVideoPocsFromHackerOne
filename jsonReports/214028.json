{"id":214028,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTQwMjg=","url":"https://hackerone.com/reports/214028","title":"Race condition in GitLab import, giving access to other people their imports due to filename collision","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2017-03-16T22:30:03.968Z","submitted_at":"2017-03-16T22:30:03.968Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-10-03T19:11:28.808Z","bug_reporter_agreed_on_going_public_at":"2017-10-03T17:46:25.354Z","team_member_agreed_on_going_public_at":"2017-10-03T19:11:28.740Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Vulnerability details\nThere's a race condition in the `Import::GitlabProjectsController#create` endpoint that allows an attacker to gain access to someone else's import file. The race condition happens when there's a collision in two or more file names uploaded at the same time, before the import gets processed by Sidekiq. The person uploading the file for the first time will see the last person's file contents instead.\n\n# Impact\nDepending on the contents of the GitLab import file, this could leak confidential information from other users on the GitLab instance.\n\n# Proof of concept\nThis is hard to reproduce without a good setup, but conceptually it's pretty easy to explain by going through the code. When someone uploads a new file, the following code gets executed:\n\n**app/controllers/import/gitlab_projects_controller.rb** (15-18)\n```ruby\nimport_upload_path = Gitlab::ImportExport.import_upload_path(filename: project_params[:file].original_filename)\n\nFileUtils.mkdir_p(File.dirname(import_upload_path))\nFileUtils.copy_entry(project_params[:file].path, import_upload_path)\n```\n\nThe `Gitlab::ImportExport.import_upload_path` method looks like this:\n\n```ruby\ndef import_upload_path(filename:)\n  File.join(storage_path, 'uploads', filename)\nend\n```\n\nThis means, when a file called `import.tar.gz` would get uploaded, it would copy the temporary file to `/var/opt/gitlab/gitlab-rails/shared/tmp/project_exports/uploads/import.tar.gz`. Next, it'll schedule an async job in Sidekiq that'll take care of unpacking the import file and restore it's contents. However, since there's a delay between when the file gets copied and when the job gets processed (depending on how busy the workers are, etc.), someone else could upload a file with the same filename. If this happens before the import job gets processed, the victim will unknowingly overwrite the attacker's import file. When the attacker's Sidekiq job gets executed, it'll unpack the victim's import file and restore the files in the attacker's repository.\n\nThe entropy of a GitLab export file is decent enough to make this extremely hard to pull off. However, when someone would rename the file to something more common, for example a repository name, project name, or something generic like `import.tar.gz`, the changes of this happening increase.\n\nTo reproduce this vulnerability locally, it is easiest to shutdown the Sidekiq workers and upload two files with the same name under two different accounts. After that, restart the Sidekiq workers. You'll notice that both repositories hold the contents of the last imported file.\n\n# Remediation advice\nGenerate a random filename instead of using the original filename or add the namespace and project URL to avoid file name collisions.","vulnerability_information_html":"\u003ch1 id=\"vulnerability-details\"\u003eVulnerability details\u003c/h1\u003e\n\n\u003cp\u003eThere\u0026#39;s a race condition in the \u003ccode\u003eImport::GitlabProjectsController#create\u003c/code\u003e endpoint that allows an attacker to gain access to someone else\u0026#39;s import file. The race condition happens when there\u0026#39;s a collision in two or more file names uploaded at the same time, before the import gets processed by Sidekiq. The person uploading the file for the first time will see the last person\u0026#39;s file contents instead.\u003c/p\u003e\n\n\u003ch1 id=\"impact\"\u003eImpact\u003c/h1\u003e\n\n\u003cp\u003eDepending on the contents of the GitLab import file, this could leak confidential information from other users on the GitLab instance.\u003c/p\u003e\n\n\u003ch1 id=\"proof-of-concept\"\u003eProof of concept\u003c/h1\u003e\n\n\u003cp\u003eThis is hard to reproduce without a good setup, but conceptually it\u0026#39;s pretty easy to explain by going through the code. When someone uploads a new file, the following code gets executed:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eapp/controllers/import/gitlab_projects_controller.rb\u003c/strong\u003e (15-18)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eimport_upload_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eGitlab\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eImportExport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eimport_upload_path\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003efilename: \u003c/span\u003e\u003cspan class=\"n\"\u003eproject_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:file\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003eoriginal_filename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"no\"\u003eFileUtils\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emkdir_p\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edirname\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimport_upload_path\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"no\"\u003eFileUtils\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecopy_entry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproject_params\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:file\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nf\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimport_upload_path\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003eGitlab::ImportExport.import_upload_path\u003c/code\u003e method looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight ruby\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eimport_upload_path\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e:)\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estorage_path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;uploads\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis means, when a file called \u003ccode\u003eimport.tar.gz\u003c/code\u003e would get uploaded, it would copy the temporary file to \u003ccode\u003e/var/opt/gitlab/gitlab-rails/shared/tmp/project_exports/uploads/import.tar.gz\u003c/code\u003e. Next, it\u0026#39;ll schedule an async job in Sidekiq that\u0026#39;ll take care of unpacking the import file and restore it\u0026#39;s contents. However, since there\u0026#39;s a delay between when the file gets copied and when the job gets processed (depending on how busy the workers are, etc.), someone else could upload a file with the same filename. If this happens before the import job gets processed, the victim will unknowingly overwrite the attacker\u0026#39;s import file. When the attacker\u0026#39;s Sidekiq job gets executed, it\u0026#39;ll unpack the victim\u0026#39;s import file and restore the files in the attacker\u0026#39;s repository.\u003c/p\u003e\n\n\u003cp\u003eThe entropy of a GitLab export file is decent enough to make this extremely hard to pull off. However, when someone would rename the file to something more common, for example a repository name, project name, or something generic like \u003ccode\u003eimport.tar.gz\u003c/code\u003e, the changes of this happening increase.\u003c/p\u003e\n\n\u003cp\u003eTo reproduce this vulnerability locally, it is easiest to shutdown the Sidekiq workers and upload two files with the same name under two different accounts. After that, restart the Sidekiq workers. You\u0026#39;ll notice that both repositories hold the contents of the last imported file.\u003c/p\u003e\n\n\u003ch1 id=\"remediation-advice\"\u003eRemediation advice\u003c/h1\u003e\n\n\u003cp\u003eGenerate a random filename instead of using the original filename or add the namespace and project URL to avoid file name collisions.\u003c/p\u003e\n","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-11-02T17:46:25.398Z","allow_singular_disclosure_after":-99573084.66944043,"singular_disclosure_allowed":true,"vote_count":17,"voters":["sp1d3rs","jensec","bl4de","bughunterninja","fa1rlight","tungpun","gamliel","eveeez","code_monkey","khizer47","and 7 more..."],"severity":{"rating":"low","score":3.7,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"required","scope":"unchanged","confidentiality":"low","integrity":"low","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1547991,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @jobert,\n\nI think the chances of a collision here are relatively high given that so many users are importing their own versions of the same projects and Sidekiq can get overloaded at times. I've opened confidential issue: https://gitlab.com/gitlab-org/gitlab-ce/issues/29652 to discuss a fix. Thanks again for another report!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI think the chances of a collision here are relatively high given that so many users are importing their own versions of the same projects and Sidekiq can get overloaded at times. I\u0026#39;ve opened confidential issue: \u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/29652\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F29652\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/issues/29652\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e to discuss a fix. Thanks again for another report!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-03-17T16:14:58.184Z","updated_at":"2017-03-17T16:14:58.184Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1765524,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @jobert,\n\nI just wanted to let you know this is still waiting for a fix. Hopefully we'll be able to get one out soon. Sorry for the delay!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eI just wanted to let you know this is still waiting for a fix. Hopefully we\u0026#39;ll be able to get one out soon. Sorry for the delay!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-19T15:29:22.186Z","updated_at":"2017-06-19T15:29:22.186Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1766730,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@briann Sounds good. If you need help, let me know. Calling `project_params[:file].tempfile.path` instead of `project_params[:file].original_filename` should add enough entropy to the filename to avoid collisions. You could also specify the project namespace and name to separate the files per project, but I'd still add additional entropy to the filename to avoid collisions. Writing a regression spec is slightly harder, but I'd probably manually copy a file to the `uploads` directory in the spec and then write a controller spec with that exact filename to make sure it isn't overwritten.\n\n```diff\ndiff --git i/app/controllers/import/gitlab_projects_controller.rb w/app/controllers/import/gitlab_projects_controller.rb\nindex 36d246d185..29c6f7431a 100644\n--- i/app/controllers/import/gitlab_projects_controller.rb\n+++ w/app/controllers/import/gitlab_projects_controller.rb\n@@ -12,7 +12,7 @@ class Import::GitlabProjectsController \u003c Import::BaseController\n       return redirect_back_or_default(options: { alert: \"You need to upload a GitLab project export archive.\" })\n     end\n\n-    import_upload_path = Gitlab::ImportExport.import_upload_path(filename: project_params[:file].original_filename)\n+    import_upload_path = Gitlab::ImportExport.import_upload_path(filename: project_params[:file].tempfile.path)\n\n     FileUtils.mkdir_p(File.dirname(import_upload_path))\n     FileUtils.copy_entry(project_params[:file].path, import_upload_path)\n```","markdown_message":"\u003cp\u003e\u003ca href=\"/briann\"\u003e@briann\u003c/a\u003e Sounds good. If you need help, let me know. Calling \u003ccode\u003eproject_params[:file].tempfile.path\u003c/code\u003e instead of \u003ccode\u003eproject_params[:file].original_filename\u003c/code\u003e should add enough entropy to the filename to avoid collisions. You could also specify the project namespace and name to separate the files per project, but I\u0026#39;d still add additional entropy to the filename to avoid collisions. Writing a regression spec is slightly harder, but I\u0026#39;d probably manually copy a file to the \u003ccode\u003euploads\u003c/code\u003e directory in the spec and then write a controller spec with that exact filename to make sure it isn\u0026#39;t overwritten.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git i/app/controllers/import/gitlab_projects_controller.rb w/app/controllers/import/gitlab_projects_controller.rb\nindex 36d246d185..29c6f7431a 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- i/app/controllers/import/gitlab_projects_controller.rb\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ w/app/controllers/import/gitlab_projects_controller.rb\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -12,7 +12,7 @@\u003c/span\u003e class Import::GitlabProjectsController \u0026lt; Import::BaseController\n       return redirect_back_or_default(options: { alert: \u0026quot;You need to upload a GitLab project export archive.\u0026quot; })\n     end\n\n-    import_upload_path = Gitlab::ImportExport.import_upload_path(filename: project_params[:file].original_filename)\n\u003cspan class=\"gi\"\u003e+    import_upload_path = Gitlab::ImportExport.import_upload_path(filename: project_params[:file].tempfile.path)\n\u003c/span\u003e\n     FileUtils.mkdir_p(File.dirname(import_upload_path))\n     FileUtils.copy_entry(project_params[:file].path, import_upload_path)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-06-19T21:19:58.695Z","updated_at":"2017-06-19T21:19:58.695Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1768349,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I appreciate the help. You know how it goes, it's not so much a lack of technical knowledge that keeps these from being patched quickly but rather a lack of time. ","markdown_message":"\u003cp\u003eI appreciate the help. You know how it goes, it\u0026#39;s not so much a lack of technical knowledge that keeps these from being patched quickly but rather a lack of time. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-20T14:08:21.238Z","updated_at":"2017-06-20T14:08:21.238Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1878501,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @jobert,\n\nWe have a fix ready for this. I hope to have it included in our next security release. I'll let you know for sure when it's released.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe have a fix ready for this. I hope to have it included in our next security release. I\u0026#39;ll let you know for sure when it\u0026#39;s released.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-30T22:12:49.895Z","updated_at":"2017-07-30T22:12:49.895Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1967024,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @jobert,\n\nA fix for this will be included in our next security release. Hopefully to be released in a the next day or two. I'll let you know!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eA fix for this will be included in our next security release. Hopefully to be released in a the next day or two. I\u0026#39;ll let you know!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-08-30T18:10:16.629Z","updated_at":"2017-08-30T18:10:16.629Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1984009,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi @jobert,\n\nA patch for this vulnerability was included with our security release today: https://about.gitlab.com/2017/09/07/gitlab-9-dot-5-dot-4-security-release/\n\nThanks again for another report!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/jobert\"\u003e@jobert\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eA patch for this vulnerability was included with our security release today: \u003ca title=\"https://about.gitlab.com/2017/09/07/gitlab-9-dot-5-dot-4-security-release/\" href=\"/redirect?url=https%3A%2F%2Fabout.gitlab.com%2F2017%2F09%2F07%2Fgitlab-9-dot-5-dot-4-security-release%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://about.gitlab.com/2017/09/07/gitlab-9-dot-5-dot-4-security-release/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThanks again for another report!\u003c/p\u003e\n","automated_response":false,"created_at":"2017-09-07T23:02:56.561Z","updated_at":"2017-09-07T23:02:56.561Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2041504,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-03T17:46:25.380Z","updated_at":"2017-10-03T17:46:25.380Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2041795,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-03T19:11:28.768Z","updated_at":"2017-10-03T19:11:28.768Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2041796,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-10-03T19:11:28.856Z","updated_at":"2017-10-03T19:11:28.856Z","actor":{"username":"briann","cleared":false,"url":"/briann","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}