{"id":181210,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODEyMTA=","url":"https://hackerone.com/reports/181210","title":"Incorrect detection of onion URLs","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-11-09T23:10:57.601Z","submitted_at":"2016-11-09T23:10:57.601Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"e3amn2l","url":"/e3amn2l","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8539,"url":"https://hackerone.com/paragonie","handle":"paragonie","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Paragon Initiative Enterprises","twitter_handle":"ParagonIE","website":"https://github.com/paragonie","about":"Cryptography and Application Security Consultants - We Produce Various Open Source Libraries"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-11-13T00:43:42.723Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2016-11-13T00:35:42.848Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Several places have incorrect code to detect if URL point to .onion domain (tor hidden server):\n\nThe following regexes:\n```\n1. #^https://([^/:]+)\\.onion:(?:([0-9]+))#\n2. #^https?://([^/]+)\\.onion#\n```\n\nwhich is used in:\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L223\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L231\n\nwill pass for the following URLs which have example.com as domain and are valid for curl in php (was tested via curl_setopt($ch, CURLOPT_URL, $url))\n```\n1 =\u003e https://example.com?.onion:443\n1 =\u003e https://example.com\u0026.onion:443\n2 =\u003e http://example.com?.onion\n2 -\u003e http://example.com\u0026.onion\n```\n\nwhich is problematic because:\n1. The code in: will not force HTTPS if url passed the above regex. (thus incorrect check = HTTPS not forced for not .onion domain)\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L228-L229\n```\n                // Don't force HTTPS\n                unset($defaults['curl'][CURLOPT_SSLVERSION]);\n```\n\n2. the second regex allow http url (thus incorrect check = HTTP for not .onion domain is vulnerable to MITM)\n3. potential of code reuse by people who read the code and assume it's safe.\n\nThe following code just search for .onion in $url, for example https://domain.onionweb.com/ will pass the check but isn't .onion website.\n\nin:\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L50\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L154\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L239\nhttps://github.com/paragonie/airship/blob/90a8317107ecfdf38be57f36e4a1a81e69280f24/src/Cabin/Bridge/Blueprint/ChannelUpdates.php#L117\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L82\n\n```\n            if (\\strpos($url, '.onion') !== false) {\n```\n\nfix:\n\t1. implement and use across the codebase function such as isUrlOnion($url) which return true if url point to onion domain, and use secure implementation, for example:\n\t\tconsider using something like:\n```\n\t\tfunction isUrlOnion($url) {\n\t\t\t$host = parse_url($url, PHP_URL_HOST);\n\t\t\tif($host != null) {\n\t\t\t\treturn substr_compare($url, '.onion', -strlen('.onion')) === 0;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n```","vulnerability_information_html":"\u003cp\u003eSeveral places have incorrect code to detect if URL point to .onion domain (tor hidden server):\u003c/p\u003e\n\n\u003cp\u003eThe following regexes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e1. #^https://([^/:]+)\\.onion:(?:([0-9]+))#\n2. #^https?://([^/]+)\\.onion#\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewhich is used in:\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L223\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F0e9289553cdc538556d362faaee63be6cc534a0c%2Fsrc%2FEngine%2FHail.php%23L223\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L223\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L231\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F0e9289553cdc538556d362faaee63be6cc534a0c%2Fsrc%2FEngine%2FHail.php%23L231\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L231\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ewill pass for the following URLs which have example.com as domain and are valid for curl in php (was tested via curl_setopt($ch, CURLOPT_URL, $url))\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e1 =\u0026gt; https://example.com?.onion:443\n1 =\u0026gt; https://example.com\u0026amp;.onion:443\n2 =\u0026gt; http://example.com?.onion\n2 -\u0026gt; http://example.com\u0026amp;.onion\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewhich is problematic because:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eThe code in: will not force HTTPS if url passed the above regex. (thus incorrect check = HTTPS not forced for not .onion domain)\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L228-L229\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F0e9289553cdc538556d362faaee63be6cc534a0c%2Fsrc%2FEngine%2FHail.php%23L228-L229\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L228-L229\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e            // Don\u0026#39;t force HTTPS\n            unset($defaults[\u0026#39;curl\u0026#39;][CURLOPT_SSLVERSION]);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ethe second regex allow http url (thus incorrect check = HTTP for not .onion domain is vulnerable to MITM)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003epotential of code reuse by people who read the code and assume it\u0026#39;s safe.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe following code just search for .onion in $url, for example \u003ca title=\"https://domain.onionweb.com/\" href=\"/redirect?url=https%3A%2F%2Fdomain.onionweb.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://domain.onionweb.com/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e will pass the check but isn\u0026#39;t .onion website.\u003c/p\u003e\n\n\u003cp\u003ein:\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L50\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2FEngine%2FKeyggdrasil%2FPeer.php%23L50\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L50\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L154\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F0e9289553cdc538556d362faaee63be6cc534a0c%2Fsrc%2FEngine%2FContinuum%2FChannel.php%23L154\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L154\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L239\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F0e9289553cdc538556d362faaee63be6cc534a0c%2Fsrc%2FEngine%2FContinuum%2FChannel.php%23L239\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L239\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/90a8317107ecfdf38be57f36e4a1a81e69280f24/src/Cabin/Bridge/Blueprint/ChannelUpdates.php#L117\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F90a8317107ecfdf38be57f36e4a1a81e69280f24%2Fsrc%2FCabin%2FBridge%2FBlueprint%2FChannelUpdates.php%23L117\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/90a8317107ecfdf38be57f36e4a1a81e69280f24/src/Cabin/Bridge/Blueprint/ChannelUpdates.php#L117\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L82\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2FEngine%2FKeyggdrasil%2FPeer.php%23L82\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L82\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e            if (\\strpos($url, \u0026#39;.onion\u0026#39;) !== false) {\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003efix:\u003cbr\u003e\n    1. implement and use across the codebase function such as isUrlOnion($url) which return true if url point to onion domain, and use secure implementation, for example:\u003cbr\u003e\n        consider using something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e        function isUrlOnion($url) {\n            $host = parse_url($url, PHP_URL_HOST);\n            if($host != null) {\n                return substr_compare($url, \u0026#39;.onion\u0026#39;, -strlen(\u0026#39;.onion\u0026#39;)) === 0;\n            }\n            return false;\n        }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","bounty_amount":"50.0","formatted_bounty":"$50","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-12-13T00:35:42.886Z","allow_singular_disclosure_after":-127627778.7352986,"singular_disclosure_allowed":true,"vote_count":5,"voters":["eveeez","sumit7","koviri_jagdish","spetr0x","vishnuraj"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1292467,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Good catch! I'll get a patch out ASAP.","markdown_message":"\u003cp\u003eGood catch! I\u0026#39;ll get a patch out ASAP.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-09T23:50:59.333Z","updated_at":"2016-11-09T23:50:59.333Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1296698,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Fixed in v1.x and master:\n\n* https://github.com/paragonie/airship/commit/528a554890262a826ed64c73428659e2d298144b\n* https://github.com/paragonie/airship/commit/2af98122c5dafa127e32e24ab47a945ef6326b67","markdown_message":"\u003cp\u003eFixed in v1.x and master:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/paragonie/airship/commit/528a554890262a826ed64c73428659e2d298144b\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fcommit%2F528a554890262a826ed64c73428659e2d298144b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/commit/528a554890262a826ed64c73428659e2d298144b\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/paragonie/airship/commit/2af98122c5dafa127e32e24ab47a945ef6326b67\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fcommit%2F2af98122c5dafa127e32e24ab47a945ef6326b67\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/paragonie/airship/commit/2af98122c5dafa127e32e24ab47a945ef6326b67\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2016-11-13T00:02:42.906Z","updated_at":"2016-11-13T00:02:42.906Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"e3amn2l","url":"/e3amn2l"},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1296714,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-13T00:35:42.865Z","updated_at":"2016-11-13T00:35:42.865Z","first_to_agree":true,"actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1296725,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2016-11-13T00:43:42.702Z","updated_at":"2016-11-13T00:43:42.702Z","actor":{"username":"paragonie-scott","cleared":false,"url":"/paragonie-scott","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"paragonie","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1653868,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Natively supporting Tor Hidden Services is a little complicated since they don't typically use HTTPS (since Tor provides transport-layer encryption). Allowing corner-cases that silently downgraded requests to use HTTP could result in sensitive data exposure in Airship extensions. Fixing this prevents that concern from biting anyone.","markdown_message":"\u003cp\u003eNatively supporting Tor Hidden Services is a little complicated since they don\u0026#39;t typically use HTTPS (since Tor provides transport-layer encryption). Allowing corner-cases that silently downgraded requests to use HTTP could result in sensitive data exposure in Airship extensions. Fixing this prevents that concern from biting anyone.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-05-04T14:25:28.336Z","updated_at":"2017-05-04T14:25:28.336Z","actor":{"url":"/paragonie","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Paragon Initiative Enterprises"}},"bounty_amount":"50.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"paragonie","collaborator":{"username":"e3amn2l","url":"/e3amn2l"},"actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}