{"id":240958,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNDA5NTg=","url":"https://hackerone.com/reports/240958","title":"Firefly's verify_access_token() function does a byte-by-byte comparison of HMAC values.","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2017-06-17T10:03:52.550Z","submitted_at":"2017-06-17T10:03:52.550Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"edoverflow","url":"/edoverflow","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":545,"url":"https://hackerone.com/yelp","handle":"yelp","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/545/de556165eaf2da7600f9ce75d1179281ee2d538f_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/545/de556165eaf2da7600f9ce75d1179281ee2d538f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Yelp","twitter_handle":"","website":"https://www.yelp.com","about":"Connecting people to great local businesses in communities around the world."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-07-10T16:42:06.997Z","bug_reporter_agreed_on_going_public_at":"2017-07-07T12:43:25.776Z","team_member_agreed_on_going_public_at":"2017-07-10T16:42:06.941Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Dear Yelp bug bounty team,\n\n# Summary\n---\n\n[Firefly](https://github.com/Yelp/firefly) is vulnerable to timing attacks, because the `verify_access_token()` function performs a byte-by-byte comparison, which terminates early when two characters do not match.\n\nTiming attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.\n\n~~~python\ndef verify_access_token(token, key):\n    \"\"\"Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\"\"\"\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n    return signature == expected_signature and int(t) \u003e= int(time.time())\n~~~\n\nThe `==` operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed. An attacker can then create a valid HMAC without knowing the HMAC key.\n\n# How can this be fixed?\n---\n\nYou have already imported the hmac module, so this fix simply consists of changing one line.\n\n~~~diff\ndef verify_access_token(token, key):\n    \"\"\"Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\"\"\"\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n-   return signature == expected_signature and int(t) \u003e= int(time.time())\n+   return hmac.compare_digest(signature, expected_signature) and int(t) \u003e= int(time.time())\n~~~\n\nThe `hmac.compare_digest()` function does not terminate as soon as two bytes are not the same.\n\nIf you would like me to submit a PR to address this issue, I would be more than happy to do that.\n\nBest regards,\nEd","vulnerability_information_html":"\u003cp\u003eDear Yelp bug bounty team,\u003c/p\u003e\n\n\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FYelp%2Ffirefly\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eFirefly\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is vulnerable to timing attacks, because the \u003ccode\u003everify_access_token()\u003c/code\u003e function performs a byte-by-byte comparison, which terminates early when two characters do not match.\u003c/p\u003e\n\n\u003cp\u003eTiming attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003everify_access_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"s\"\u003e\u0026quot;\u0026quot;\u0026quot;Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\u0026quot;\u0026quot;\u0026quot;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esignature\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e:]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eexpected_signature\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehmac\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edigestmod\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ehashlib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esha1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehexdigest\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esignature\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eexpected_signature\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003e==\u003c/code\u003e operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed. An attacker can then create a valid HMAC without knowing the HMAC key.\u003c/p\u003e\n\n\u003ch1 id=\"how-can-this-be-fixed\"\u003eHow can this be fixed?\u003c/h1\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eYou have already imported the hmac module, so this fix simply consists of changing one line.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003edef verify_access_token(token, key):\n\u003c/span\u003e    \u0026quot;\u0026quot;\u0026quot;Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\u0026quot;\u0026quot;\u0026quot;\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n\u003cspan class=\"gd\"\u003e-   return signature == expected_signature and int(t) \u0026gt;= int(time.time())\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+   return hmac.compare_digest(signature, expected_signature) and int(t) \u0026gt;= int(time.time())\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003ehmac.compare_digest()\u003c/code\u003e function does not terminate as soon as two bytes are not the same.\u003c/p\u003e\n\n\u003cp\u003eIf you would like me to submit a PR to address this issue, I would be more than happy to do that.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","weakness":{"id":32,"name":"Cryptographic Issues - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-08-06T12:43:25.820Z","allow_singular_disclosure_after":-107195067.66558258,"singular_disclosure_allowed":true,"vote_count":7,"voters":["jokebookservice1","gerben_javado","eveeez","r3y","khizer47","japz","hacklad"],"severity":{"rating":"none","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1762952,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi there!\n\nThanks for submitting your report to us! Please expect a response within a week.\n\nBest,\nThe Yelp Security Team\n","markdown_message":"\u003cp\u003eHi there!\u003c/p\u003e\n\n\u003cp\u003eThanks for submitting your report to us! Please expect a response within a week.\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nThe Yelp Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2017-06-17T10:03:52.751Z","updated_at":"2017-06-17T10:03:52.751Z","actor":{"url":"/yelp","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/545/de556165eaf2da7600f9ce75d1179281ee2d538f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Yelp"}},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1781540,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @edio,\n\nThanks for submitting your report to us!\n\nThis codebase hasn't been touched in awhile. We'll take a look and get back to you once we have further updates.\n\nBest,\nThe Yelp Security Team","markdown_message":"\u003cp\u003eHello \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for submitting your report to us!\u003c/p\u003e\n\n\u003cp\u003eThis codebase hasn\u0026#39;t been touched in awhile. We\u0026#39;ll take a look and get back to you once we have further updates.\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nThe Yelp Security Team\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-26T17:44:35.623Z","updated_at":"2017-06-26T17:44:35.623Z","actor":{"username":"5a37bf56c8","cleared":false,"url":"/5a37bf56c8","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1788336,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hello @edio,\n\nThanks for your report!\n\nWe don't use this open source project internally, but nonetheless pushed a fix.\n\nBest,\nThe Yelp Security Team","markdown_message":"\u003cp\u003eHello \u003ca href=\"/edio\"\u003e@edio\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your report!\u003c/p\u003e\n\n\u003cp\u003eWe don\u0026#39;t use this open source project internally, but nonetheless pushed a fix.\u003c/p\u003e\n\n\u003cp\u003eBest,\u003cbr\u003e\nThe Yelp Security Team\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-28T19:31:41.502Z","updated_at":"2017-06-28T19:31:41.502Z","actor":{"username":"5a37bf56c8","cleared":false,"url":"/5a37bf56c8","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"edoverflow","url":"/edoverflow"},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1788338,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-28T19:31:53.451Z","updated_at":"2017-06-28T19:31:53.451Z","additional_data":{"old_severity":"Low (3.7)","new_severity":"None","old_severity_id":51911,"new_severity_id":54562},"actor":{"username":"5a37bf56c8","cleared":false,"url":"/5a37bf56c8","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1814023,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-07-07T12:43:25.799Z","updated_at":"2017-07-07T12:43:25.799Z","first_to_agree":true,"actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1819437,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @5a37bf56c8,\n\nCan we disclose this report publicly?\n\nBest regards,\nEd","markdown_message":"\u003cp\u003eHi \u003ca href=\"/5a37bf56c8\"\u003e@5a37bf56c8\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eCan we disclose this report publicly?\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nEd\u003c/p\u003e\n","automated_response":false,"created_at":"2017-07-10T10:09:07.340Z","updated_at":"2017-07-10T10:09:07.340Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1820941,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","markdown_message":"","automated_response":false,"created_at":"2017-07-10T16:41:50.348Z","updated_at":"2017-07-10T16:41:50.348Z","actor":{"url":"/yelp","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/545/de556165eaf2da7600f9ce75d1179281ee2d538f_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Yelp"}},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1820942,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-07-10T16:42:06.964Z","updated_at":"2017-07-10T16:42:06.964Z","actor":{"username":"5a37bf56c8","cleared":false,"url":"/5a37bf56c8","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1820943,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-07-10T16:42:07.016Z","updated_at":"2017-07-10T16:42:07.016Z","actor":{"username":"5a37bf56c8","cleared":false,"url":"/5a37bf56c8","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"yelp","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}