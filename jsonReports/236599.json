{"id":236599,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMzY1OTk=","url":"https://hackerone.com/reports/236599","title":"Open redirects protection bypass","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-06-05T14:41:19.780Z","submitted_at":"2017-06-05T14:41:19.780Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"strukt","url":"/strukt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/038/303/42cd71a4698d80f88ab65e3117fd9fc401a57048_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":265,"url":"https://hackerone.com/expressionengine","handle":"expressionengine","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/265/25251ba4ab1d0b0304a6c3d197fba5c833c6003e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/265/25251ba4ab1d0b0304a6c3d197fba5c833c6003e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"ExpressionEngine","twitter_handle":"eecms","website":"https://expressionengine.com/","about":"ExpressionEngine is a robust and flexible open-source Content Management System."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-06-16T18:59:16.869Z","bug_reporter_agreed_on_going_public_at":"2017-06-16T18:03:09.640Z","team_member_agreed_on_going_public_at":"2017-06-16T18:59:16.819Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello,\n\nWhen a redirect is to be issue on an ExpressionEngine instance, a request to the following URL is made:\n`http://HOST/PATH_TO_EE/index.php?URL=TARGET_URL`\nWhere `TARGET_URL` is replaced with the actual URL we desire to redirect to. The script `PATH_TO_EE_DIR/system/ee/legacy/libraries/Redirect.php` is the one responsible for making sure that redirects are authorized by checking the value of the Referer header against the hostname where the ExpressionEngine instance is installed. In order to do so, the following code excerpt is performed:\n\n`if ($force_redirect == TRUE OR ( ! isset($_SERVER['HTTP_REFERER']) OR ! stristr($_SERVER['HTTP_REFERER'], $host)))`\n\nIgnoring the very first condition because it is not relevant, and the second because it simply checks if the Referer header is not set in the request, the third condition is the actual problem here. The PHP `stristr` function is used to compare the value of the $host variable, which contains the hostname, to the value of the Referer header. The mentioned function returns TRUE iff the second parameter has been found at least once in the first string parameter, so for example if the actual hostname of the ExpressionEngine instance is http://www.example.com and the Referer header's value is http://evil.com?http://www.example.com, comparing the former and the latter would yield a TRUE return value from the `stristr` function, leaving the check flawed.\n\nI have prepared a live example that shows the issue in action, follow the steps below to reproduce:\n1- Visit http://strukt.tk/pocs/eeredirect.html\n2- Enter your hostname with the `URL` GET parameter set to whatever external page you desire, the supplied URL should look like `http://HOST/PATH_TO_EE/index.php?URL=https://www.example.com`\n3- Click the `Test !!` button and then click the link that will appear below the input box\n4- Notice that you have been redirected directly to the supplied value of the `URL` GET parameter rather than being prompted as usual\n\nRegards,","vulnerability_information_html":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eWhen a redirect is to be issue on an ExpressionEngine instance, a request to the following URL is made:\u003cbr\u003e\n\u003ccode\u003ehttp://HOST/PATH_TO_EE/index.php?URL=TARGET_URL\u003c/code\u003e\u003cbr\u003e\nWhere \u003ccode\u003eTARGET_URL\u003c/code\u003e is replaced with the actual URL we desire to redirect to. The script \u003ccode\u003ePATH_TO_EE_DIR/system/ee/legacy/libraries/Redirect.php\u003c/code\u003e is the one responsible for making sure that redirects are authorized by checking the value of the Referer header against the hostname where the ExpressionEngine instance is installed. In order to do so, the following code excerpt is performed:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eif ($force_redirect == TRUE OR ( ! isset($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;]) OR ! stristr($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;], $host)))\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eIgnoring the very first condition because it is not relevant, and the second because it simply checks if the Referer header is not set in the request, the third condition is the actual problem here. The PHP \u003ccode\u003estristr\u003c/code\u003e function is used to compare the value of the $host variable, which contains the hostname, to the value of the Referer header. The mentioned function returns TRUE iff the second parameter has been found at least once in the first string parameter, so for example if the actual hostname of the ExpressionEngine instance is \u003ca title=\"http://www.example.com\" href=\"/redirect?url=http%3A%2F%2Fwww.example.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.example.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and the Referer header\u0026#39;s value is \u003ca title=\"http://evil.com/?http://www.example.com\" href=\"/redirect?url=http%3A%2F%2Fevil.com%2F%3Fhttp%3A%2F%2Fwww.example.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://evil.com/?http://www.example.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, comparing the former and the latter would yield a TRUE return value from the \u003ccode\u003estristr\u003c/code\u003e function, leaving the check flawed.\u003c/p\u003e\n\n\u003cp\u003eI have prepared a live example that shows the issue in action, follow the steps below to reproduce:\u003cbr\u003e\n1- Visit \u003ca title=\"http://strukt.tk/pocs/eeredirect.html\" href=\"/redirect?url=http%3A%2F%2Fstrukt.tk%2Fpocs%2Feeredirect.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://strukt.tk/pocs/eeredirect.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n2- Enter your hostname with the \u003ccode\u003eURL\u003c/code\u003e GET parameter set to whatever external page you desire, the supplied URL should look like \u003ccode\u003ehttp://HOST/PATH_TO_EE/index.php?URL=https://www.example.com\u003c/code\u003e\u003cbr\u003e\n3- Click the \u003ccode\u003eTest !!\u003c/code\u003e button and then click the link that will appear below the input box\u003cbr\u003e\n4- Notice that you have been redirected directly to the supplied value of the \u003ccode\u003eURL\u003c/code\u003e GET parameter rather than being prompted as usual\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003c/p\u003e\n","weakness":{"id":53,"name":"Open Redirect"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-07-16T18:03:09.704Z","allow_singular_disclosure_after":-108990225.39701991,"singular_disclosure_allowed":true,"vote_count":5,"voters":["eveeez","detroitsmash","exception","japz","sumit7"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1745304,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Nice catch! I've changed the code to this which seems to do a better job. Let us know if you happen to give it a try, otherwise it'll be in the next release.\n\n```\n--- a/system/ee/legacy/libraries/Redirect.php\n+++ b/system/ee/legacy/libraries/Redirect.php\n@@ -64,7 +64,12 @@ if ( ! filter_var($url, FILTER_VALIDATE_URL) OR $link !== ee('Security/XSS')-\u003ecl\n // Make sure all requests to iframe this page are denied\n header('X-Frame-Options: SAMEORIGIN');\n \n-if ($force_redirect == TRUE OR ( ! isset($_SERVER['HTTP_REFERER']) OR ! stristr($_SERVER['HTTP_REFERER'], $host)))\n+$referrer_parts = isset($_SERVER['HTTP_REFERER'])\n+       ? parse_url($_SERVER['HTTP_REFERER'])\n+       : FALSE;\n+\n+if ($force_redirect == TRUE\n+       OR ( ! $referrer_parts OR $referrer_parts['host'] !== $host))\n {\n        // Possibly not from our site, so we give the user the option\n        // Of clicking the link or not\n```","markdown_message":"\u003cp\u003eNice catch! I\u0026#39;ve changed the code to this which seems to do a better job. Let us know if you happen to give it a try, otherwise it\u0026#39;ll be in the next release.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e--- a/system/ee/legacy/libraries/Redirect.php\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/system/ee/legacy/libraries/Redirect.php\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -64,7 +64,12 @@\u003c/span\u003e if ( ! filter_var($url, FILTER_VALIDATE_URL) OR $link !== ee(\u0026#39;Security/XSS\u0026#39;)-\u0026gt;cl\n // Make sure all requests to iframe this page are denied\n header(\u0026#39;X-Frame-Options: SAMEORIGIN\u0026#39;);\n\n-if ($force_redirect == TRUE OR ( ! isset($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;]) OR ! stristr($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;], $host)))\n\u003cspan class=\"gi\"\u003e+$referrer_parts = isset($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;])\n+       ? parse_url($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;])\n+       : FALSE;\n+\n+if ($force_redirect == TRUE\n+       OR ( ! $referrer_parts OR $referrer_parts[\u0026#39;host\u0026#39;] !== $host))\n\u003c/span\u003e {\n        // Possibly not from our site, so we give the user the option\n        // Of clicking the link or not\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2017-06-09T19:16:05.110Z","updated_at":"2017-06-09T19:16:05.110Z","actor":{"username":"kevincupp","cleared":false,"url":"/kevincupp","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"expressionengine","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1761514,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Fixed in 3.5.8","markdown_message":"\u003cp\u003eFixed in 3.5.8\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-16T17:26:24.831Z","updated_at":"2017-06-16T17:26:24.831Z","actor":{"username":"kevincupp","cleared":false,"url":"/kevincupp","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"strukt","url":"/strukt"},"genius_execution_id":null,"team_handle":"expressionengine","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1761646,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"@kevincupp Thank you, can we disclose this ?","markdown_message":"\u003cp\u003e\u003ca href=\"/kevincupp\"\u003e@kevincupp\u003c/a\u003e Thank you, can we disclose this ?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-06-16T18:03:09.660Z","updated_at":"2017-06-16T18:03:09.660Z","first_to_agree":true,"actor":{"username":"strukt","cleared":true,"url":"/strukt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/038/303/42cd71a4698d80f88ab65e3117fd9fc401a57048_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"expressionengine","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1761815,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-16T18:59:16.839Z","updated_at":"2017-06-16T18:59:16.839Z","actor":{"username":"kevincupp","cleared":false,"url":"/kevincupp","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"expressionengine","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1761816,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2017-06-16T18:59:16.886Z","updated_at":"2017-06-16T18:59:16.886Z","actor":{"username":"kevincupp","cleared":false,"url":"/kevincupp","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"expressionengine","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}