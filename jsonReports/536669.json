{"id":536669,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzY2Njk=","url":"https://hackerone.com/reports/536669","title":"\"Test target\" of the \"HTTP target\" extension can unintentionally send username and password in the Authorization header","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2019-04-12T14:14:58.291Z","submitted_at":"2019-04-12T14:14:58.291Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"nathand","url":"/nathand","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":205,"url":"https://hackerone.com/zendesk","handle":"zendesk","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/205/1f7838d9b4201d122e0a7fbacc8ff3e90f57fa0c_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/205/1f7838d9b4201d122e0a7fbacc8ff3e90f57fa0c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Zendesk","twitter_handle":"","website":"https://www.zendesk.com","about":"Zendesk is a leading cloud-based customer service software solution. Over 100,000 customer accounts use Zendesk to increase customer satisfaction."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-10-25T19:22:49.119Z","bug_reporter_agreed_on_going_public_at":"2019-06-26T01:48:01.214Z","team_member_agreed_on_going_public_at":"2019-10-25T19:22:48.997Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\n\nIn certain conditions, the HTTP target extension is sending the username and password of the authenticated user testing the target in the test request's `Authorization` header as base64 encoded (i.e. HTTP basic auth).\n\nI have graded this as a medium due to some mitigating circumstances (browser specific) and actions required by the victim for an attack to be successful.\n\n**Description:**\n\nThe HTTP target extension allows admins to create a trigger and automation action that sends data to an arbitrary Internet accessible web resource. While creating the target via the Admin \u003e Extensions \u003e add target screen, the user can test the target, which sends the relevant HTTP request to the target URL and allows the user to inspect the request and response, to validate the settings before creating the target.\n\nUpon inspecting the request on a successful test, it became clear that the HTTP target test request is sending the username and password of the user performing this test:\n\n```\nGET /test.php HTTP/1.1\nAuthorization: Basic ████\nUser-Agent: Zendesk Target\nAccept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3\nAccept: */*\nConnection: close\nHost: nathandavison.com\n```\n\n(FYI: this user is a username and password user, and is not authenticating using a 3rd party service like Google)\n\nTo confirm this information is being sent over the wire, I set up a simple PHP script to collect the username and password from the test request using `$_SERVER['PHP_AUTH_USER']` and `$_SERVER['PHP_AUTH_PW']`, and I can confirm the values were being sent.\n\nWhile the HTTP target creation and test form does allow the user to specify Basic Authentication configuration, from what I can tell the test request is sending the agent's username and password as Basic auth even with the \"Enabled\" checkbox unticked - please see the attached video regarding this. Therefore, I would classify this as a cleartext transmission of sensitive information when such a thing would not be expected by the user.\n\n**Cause and potential fix:**\n\nMy testing suggests that this is client side behavior, in that because I have chosen to save my Zendesk username and password in my browser, the browser proceeds to auto-populate the username and password fields in the Basic Authentication's username and password fields in the HTTP target creation/edit form. This was tested in Firefox 66 - I have been unable to replicate the behavior in Chrome 73.\n\nTherefore it seems likely that the HTTP target test feature in Zendesk is not respecting the \"Enabled\" checkbox when performing the test request, and is rather sending the username and password values in the test request if the fields happen to have values. If this is true, the fix may be to stop this behavior, and only send the credentials when the checkbox is enabled.\n\nMy testing suggests this is not the case in the live target runs - if I save a target with my credentials populated in the basic auth fields, but leave the checkbox unticked, the real HTTP target calls do *not* contain my credentials.\n\n**Attack scenario:**\n\nTo exploit this, an attacker could create a 3rd party service for consumption by Zendesk users via the HTTP target extension, offering a genuine service for them to connect to and silently collect the username and passwords provided as described in this report. Because \"Test target\" is the default call to action in this form, it is likely a user would perform the test before creating the target, and inadvertently send their credentials. By default, the username and password fields in the target creation page are not visible, so it would not be obvious to a user they are populated with sensitive information.\n\nIf it is true that this is a Firefox specific behavior, the attacker could instruct users to use Firefox when setting up the HTTP target to try and maximize results (obviously not a relevant request, but perhaps something a majority of potential victims would not recognise as unusual or unreasonable).\n\n## Impact\n\nThe impact of this vulnerability is an attacker could steal user credentials, likely without the user being aware.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eIn certain conditions, the HTTP target extension is sending the username and password of the authenticated user testing the target in the test request\u0026#39;s \u003ccode\u003eAuthorization\u003c/code\u003e header as base64 encoded (i.e. HTTP basic auth).\u003c/p\u003e\n\n\u003cp\u003eI have graded this as a medium due to some mitigating circumstances (browser specific) and actions required by the victim for an attack to be successful.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe HTTP target extension allows admins to create a trigger and automation action that sends data to an arbitrary Internet accessible web resource. While creating the target via the Admin \u0026gt; Extensions \u0026gt; add target screen, the user can test the target, which sends the relevant HTTP request to the target URL and allows the user to inspect the request and response, to validate the settings before creating the target.\u003c/p\u003e\n\n\u003cp\u003eUpon inspecting the request on a successful test, it became clear that the HTTP target test request is sending the username and password of the user performing this test:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /test.php HTTP/1.1\nAuthorization: Basic ████\nUser-Agent: Zendesk Target\nAccept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3\nAccept: */*\nConnection: close\nHost: nathandavison.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e(FYI: this user is a username and password user, and is not authenticating using a 3rd party service like Google)\u003c/p\u003e\n\n\u003cp\u003eTo confirm this information is being sent over the wire, I set up a simple PHP script to collect the username and password from the test request using \u003ccode\u003e$_SERVER[\u0026#39;PHP_AUTH_USER\u0026#39;]\u003c/code\u003e and \u003ccode\u003e$_SERVER[\u0026#39;PHP_AUTH_PW\u0026#39;]\u003c/code\u003e, and I can confirm the values were being sent.\u003c/p\u003e\n\n\u003cp\u003eWhile the HTTP target creation and test form does allow the user to specify Basic Authentication configuration, from what I can tell the test request is sending the agent\u0026#39;s username and password as Basic auth even with the \u0026quot;Enabled\u0026quot; checkbox unticked - please see the attached video regarding this. Therefore, I would classify this as a cleartext transmission of sensitive information when such a thing would not be expected by the user.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCause and potential fix:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eMy testing suggests that this is client side behavior, in that because I have chosen to save my Zendesk username and password in my browser, the browser proceeds to auto-populate the username and password fields in the Basic Authentication\u0026#39;s username and password fields in the HTTP target creation/edit form. This was tested in Firefox 66 - I have been unable to replicate the behavior in Chrome 73.\u003c/p\u003e\n\n\u003cp\u003eTherefore it seems likely that the HTTP target test feature in Zendesk is not respecting the \u0026quot;Enabled\u0026quot; checkbox when performing the test request, and is rather sending the username and password values in the test request if the fields happen to have values. If this is true, the fix may be to stop this behavior, and only send the credentials when the checkbox is enabled.\u003c/p\u003e\n\n\u003cp\u003eMy testing suggests this is not the case in the live target runs - if I save a target with my credentials populated in the basic auth fields, but leave the checkbox unticked, the real HTTP target calls do \u003cem\u003enot\u003c/em\u003e contain my credentials.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAttack scenario:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eTo exploit this, an attacker could create a 3rd party service for consumption by Zendesk users via the HTTP target extension, offering a genuine service for them to connect to and silently collect the username and passwords provided as described in this report. Because \u0026quot;Test target\u0026quot; is the default call to action in this form, it is likely a user would perform the test before creating the target, and inadvertently send their credentials. By default, the username and password fields in the target creation page are not visible, so it would not be obvious to a user they are populated with sensitive information.\u003c/p\u003e\n\n\u003cp\u003eIf it is true that this is a Firefox specific behavior, the attacker could instruct users to use Firefox when setting up the HTTP target to try and maximize results (obviously not a relevant request, but perhaps something a majority of potential victims would not recognise as unusual or unreasonable).\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe impact of this vulnerability is an attacker could steal user credentials, likely without the user being aware.\u003c/p\u003e\n","bounty_amount":"100.0","formatted_bounty":"$100","weakness":{"id":34,"name":"Cleartext Transmission of Sensitive Information"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":11,"voters":["sameerphad72","cr4xerbik4sh","cryptographer","frank0t","joyride","kubiksoft","ud1116_sv","thepomerium","random53","birdopr3y","and 1 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":{"databaseId":16067,"asset_type":"URL","asset_identifier":"h1-your-domain.zendesk.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4547816,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In case it isn't clear from above - to replicate this, please use Firefox 66, and when authenticating to the Zendesk instance, save the credentials in Firefox's credential store.","markdown_message":"\u003cp\u003eIn case it isn\u0026#39;t clear from above - to replicate this, please use Firefox 66, and when authenticating to the Zendesk instance, save the credentials in Firefox\u0026#39;s credential store.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T14:24:56.087Z","updated_at":"2019-04-12T14:24:56.087Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4547850,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI this also appears to be happening in Edge.","markdown_message":"\u003cp\u003eFYI this also appears to be happening in Edge.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T14:29:35.981Z","updated_at":"2019-04-12T14:29:35.981Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4549333,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @nathand - Thanks for the submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share. ","markdown_message":"\u003cp\u003eHey \u003ca href=\"/nathand\"\u003e@nathand\u003c/a\u003e - Thanks for the submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T17:15:30.777Z","updated_at":"2019-04-12T17:15:30.777Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4549571,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @nathand - Thanks for the report. Can you please include clear step-by-step instructions demonstrating how to reproduce this? ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nathand\"\u003e@nathand\u003c/a\u003e - Thanks for the report. Can you please include clear step-by-step instructions demonstrating how to reproduce this? \u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T18:04:38.101Z","updated_at":"2019-04-12T18:04:38.101Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4551059,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"@tuxedo No problems, apologies for not including this sooner.\n\n  1. In Firefox or Edge, authenticate to your Zendesk instance (e.g. `xxx.zendesk.com`). When providing your username and password, choose to save/update your saved password in your browser (this last part is vital). If you already chose not to do this before, you may need to configure the browser to forget this to be prompted again.\n  1. Once authenticated, go to Admin from the left hand menu (the cog), scroll down to Settings, and choose Extensions.\n  1. From the Extensions page, choose to \"add target\".\n  1. From the \"Select target to add\" page, choose the \"HTTP target\".\n  1. From the \"HTTP target\" page, input a title and a URL of a web server you control. If you want to confirm the reception of username and password, you can create a PHP script or similar that dumps the request headers it receives to a log file etc, and point this target URL at that script.\n  1. Choose \"Test target\" (the default) and hit Submit. From the URL parameters popup, hit Submit again.\n  \nThe test request will have been sent, and you should see the Request contain the `Authorization` header with your account username and password in the result modal (as well as on your server if you pointed this test to a script that collects the header). This is without ticking the basic auth checkbox in the target configuration. If you go back to this target creation/edit screen, and you tick the basic auth checkbox, it will display the username and password fields, which will be populated already with your Zendesk creds.","markdown_message":"\u003cp\u003e\u003ca href=\"/tuxedo\"\u003e@tuxedo\u003c/a\u003e No problems, apologies for not including this sooner.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIn Firefox or Edge, authenticate to your Zendesk instance (e.g. \u003ccode\u003exxx.zendesk.com\u003c/code\u003e). When providing your username and password, choose to save/update your saved password in your browser (this last part is vital). If you already chose not to do this before, you may need to configure the browser to forget this to be prompted again.\u003c/li\u003e\n\u003cli\u003eOnce authenticated, go to Admin from the left hand menu (the cog), scroll down to Settings, and choose Extensions.\u003c/li\u003e\n\u003cli\u003eFrom the Extensions page, choose to \u0026quot;add target\u0026quot;.\u003c/li\u003e\n\u003cli\u003eFrom the \u0026quot;Select target to add\u0026quot; page, choose the \u0026quot;HTTP target\u0026quot;.\u003c/li\u003e\n\u003cli\u003eFrom the \u0026quot;HTTP target\u0026quot; page, input a title and a URL of a web server you control. If you want to confirm the reception of username and password, you can create a PHP script or similar that dumps the request headers it receives to a log file etc, and point this target URL at that script.\u003c/li\u003e\n\u003cli\u003eChoose \u0026quot;Test target\u0026quot; (the default) and hit Submit. From the URL parameters popup, hit Submit again.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe test request will have been sent, and you should see the Request contain the \u003ccode\u003eAuthorization\u003c/code\u003e header with your account username and password in the result modal (as well as on your server if you pointed this test to a script that collects the header). This is without ticking the basic auth checkbox in the target configuration. If you go back to this target creation/edit screen, and you tick the basic auth checkbox, it will display the username and password fields, which will be populated already with your Zendesk creds.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T23:13:46.851Z","updated_at":"2019-04-12T23:14:34.914Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4552276,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also, please see the attached video - it is following these step-by-step instructions.","markdown_message":"\u003cp\u003eAlso, please see the attached video - it is following these step-by-step instructions.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-13T05:17:32.570Z","updated_at":"2019-04-13T05:17:32.570Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4557231,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"If you want a quick and easy way to confirm the username and password is making it to the test target, you can point the target's URL to the following PHP script being hosted on some web server you control:\n\n```\n\u003c?php\n\nheader('HTTP/1.1 200 OK');\n\necho $_SERVER['PHP_AUTH_USER'].':'.$_SERVER['PHP_AUTH_PW'];\n```\n\nThen, when you run the test, you'll get your username and password back in the response (example in the attached screenshot).","markdown_message":"\u003cp\u003eIf you want a quick and easy way to confirm the username and password is making it to the test target, you can point the target\u0026#39;s URL to the following PHP script being hosted on some web server you control:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;HTTP/1.1 200 OK\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;PHP_AUTH_USER\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_SERVER\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;PHP_AUTH_PW\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen, when you run the test, you\u0026#39;ll get your username and password back in the response (example in the attached screenshot).\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-14T10:43:51.593Z","updated_at":"2019-04-14T10:43:51.593Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4568588,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Other than the HTTP target, other extensions whose creation forms are also preset with the browser saved Zendesk creds include Clickatell, URL target, JIRA target, Get Satisfaction target, Basecamp target, and the SugarCRM target (according to its page source code anyway, these fields aren't showing visually for the SugarCRM one).\n\nThe difference with these compared to the HTTP target is the username and password fields are clearly visible in their respective forms and, other than URL target, presumably these are trusted platforms. Regardless though, users may also accidentally send their Zendesk creds to these targets unintentionally due to the prefilling of creds.","markdown_message":"\u003cp\u003eOther than the HTTP target, other extensions whose creation forms are also preset with the browser saved Zendesk creds include Clickatell, URL target, JIRA target, Get Satisfaction target, Basecamp target, and the SugarCRM target (according to its page source code anyway, these fields aren\u0026#39;t showing visually for the SugarCRM one).\u003c/p\u003e\n\n\u003cp\u003eThe difference with these compared to the HTTP target is the username and password fields are clearly visible in their respective forms and, other than URL target, presumably these are trusted platforms. Regardless though, users may also accidentally send their Zendesk creds to these targets unintentionally due to the prefilling of creds.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-16T02:07:46.893Z","updated_at":"2019-04-16T02:09:01.726Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4637363,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tuxedo any luck in replicating this?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/tuxedo\"\u003e@tuxedo\u003c/a\u003e any luck in replicating this?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-24T22:11:06.169Z","updated_at":"2019-04-24T22:11:06.169Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4644305,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @nathand - We are still looking into this report and will update you when we have additional information to share. Thanks for your patience! ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nathand\"\u003e@nathand\u003c/a\u003e - We are still looking into this report and will update you when we have additional information to share. Thanks for your patience! \u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-25T20:05:48.915Z","updated_at":"2019-04-25T20:05:48.915Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4645163,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-25T22:23:56.057Z","updated_at":"2019-04-25T22:23:56.057Z","additional_data":{"old_severity":"Medium","new_severity":"Low","old_severity_id":345221,"new_severity_id":358108},"actor":{"username":"dsouth","cleared":false,"url":"/dsouth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/173/799/44384d16978acfc893735ebd9611beeeae3b7340_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4645173,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Hi @nathand,\n\nAlthough low risk, this appears to be valid. A more simple way of reproducing this would be to simply check the \"Basic Auth Enabled\" checkbox, fill in a username and password, then uncheck the checkbox to disable basic auth. The credentials still get sent. The method using the Browser's configuration with saved passwords is still valid because those are auto-populated the username/password fields on page load whether the \"Basic Auth Enabled\" checkbox is ever enabled or not.\n\nWe see this similar to what a \"Self-XSS\" issue would be, ultimately we believe the responsibility of sending requests to other servers should be shared by both Zendesk and the user, however, in this case I think we unintentionally make it easier for the client user to mess up and potentially send sensitive info to a server they may not control. We are going to honor this report as a low severity issue and pay out accordingly. If you feel we may have missed something in our assessment please raise that with us.\n\nRegards,\n[Zendesk Security](https://www.zendesk.com/product/features/zendesk-security/)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nathand\"\u003e@nathand\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eAlthough low risk, this appears to be valid. A more simple way of reproducing this would be to simply check the \u0026quot;Basic Auth Enabled\u0026quot; checkbox, fill in a username and password, then uncheck the checkbox to disable basic auth. The credentials still get sent. The method using the Browser\u0026#39;s configuration with saved passwords is still valid because those are auto-populated the username/password fields on page load whether the \u0026quot;Basic Auth Enabled\u0026quot; checkbox is ever enabled or not.\u003c/p\u003e\n\n\u003cp\u003eWe see this similar to what a \u0026quot;Self-XSS\u0026quot; issue would be, ultimately we believe the responsibility of sending requests to other servers should be shared by both Zendesk and the user, however, in this case I think we unintentionally make it easier for the client user to mess up and potentially send sensitive info to a server they may not control. We are going to honor this report as a low severity issue and pay out accordingly. If you feel we may have missed something in our assessment please raise that with us.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fwww.zendesk.com%2Fproduct%2Ffeatures%2Fzendesk-security%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eZendesk Security\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-25T22:26:47.722Z","updated_at":"2019-04-25T22:26:47.722Z","actor":{"url":"/zendesk","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/205/1f7838d9b4201d122e0a7fbacc8ff3e90f57fa0c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Zendesk"}},"bounty_amount":"100.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"zendesk","collaborator":{"username":"nathand","url":"/nathand"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4645231,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Zendesk team,\n\nThat sounds like a fair assessment. I figured the fact the username and password fields are hidden by default on this particular form but still used in the query meant it was unlikely an affected user would ever realise (so wouldn't think to change their password afterwards) and can't really be expected to shoulder any responsibility, and hence warranted a medium compared to the other extension forms that show these auto-populated fields by default and would be easier to catch, but I agree it is fairly low risk regardless.\n\nThanks.","markdown_message":"\u003cp\u003eHi Zendesk team,\u003c/p\u003e\n\n\u003cp\u003eThat sounds like a fair assessment. I figured the fact the username and password fields are hidden by default on this particular form but still used in the query meant it was unlikely an affected user would ever realise (so wouldn\u0026#39;t think to change their password afterwards) and can\u0026#39;t really be expected to shoulder any responsibility, and hence warranted a medium compared to the other extension forms that show these auto-populated fields by default and would be easier to catch, but I agree it is fairly low risk regardless.\u003c/p\u003e\n\n\u003cp\u003eThanks.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-25T22:56:22.253Z","updated_at":"2019-04-25T22:56:57.169Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4695367,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-30T22:12:23.285Z","updated_at":"2019-04-30T22:12:23.285Z","actor":{"username":"dsouth","cleared":false,"url":"/dsouth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/173/799/44384d16978acfc893735ebd9611beeeae3b7340_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5194705,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for participating in the [Zendesk Bug Bounty program](https://hackerone.com/zendesk). Please feel free to reach out if you have any questions or concerns.\n\nRegards,\n[Zendesk Security](https://www.zendesk.com/product/features/zendesk-security/)","markdown_message":"\u003cp\u003eThank you for participating in the \u003ca href=\"https://hackerone.com/zendesk\"\u003eZendesk Bug Bounty program\u003c/a\u003e. Please feel free to reach out if you have any questions or concerns.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fwww.zendesk.com%2Fproduct%2Ffeatures%2Fzendesk-security%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eZendesk Security\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-25T22:29:13.435Z","updated_at":"2019-06-25T22:29:13.435Z","actor":{"username":"dsouth","cleared":false,"url":"/dsouth","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/173/799/44384d16978acfc893735ebd9611beeeae3b7340_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"nathand","url":"/nathand"},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5195886,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks @dsouth - fix looks good, I'm no longer seeing the Authorization header in the test requests being populated without deliberately setting the username and password.\n\nCan we disclose this one? seems to be a fairly interesting issue I haven't come across before.","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/dsouth\"\u003e@dsouth\u003c/a\u003e - fix looks good, I\u0026#39;m no longer seeing the Authorization header in the test requests being populated without deliberately setting the username and password.\u003c/p\u003e\n\n\u003cp\u003eCan we disclose this one? seems to be a fairly interesting issue I haven\u0026#39;t come across before.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T01:48:01.285Z","updated_at":"2019-06-26T01:48:01.285Z","first_to_agree":true,"actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6020041,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi - just bumping this to see if we can get it disclosed?","markdown_message":"\u003cp\u003eHi - just bumping this to see if we can get it disclosed?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-12T00:23:52.951Z","updated_at":"2019-10-12T00:23:52.951Z","actor":{"username":"nathand","cleared":false,"url":"/nathand","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/NY2oTeWofAnqK1X5MRNFCDXy/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6140663,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-25T19:08:19.198Z","updated_at":"2019-10-25T19:08:19.198Z","additional_data":{"old_title":"The HTTP target test feature is conditionally sending the agent's username and password in the Authorization header","new_title":"\"Test target\" of the \"HTTP target\" extension can unintentionally send username and password in the Authorization header"},"actor":{"username":"thepomerium","cleared":false,"url":"/thepomerium","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sMJZc5YhRen9pFb2p3JCLqMP/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6140727,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-25T19:22:49.026Z","updated_at":"2019-10-25T19:22:49.026Z","actor":{"username":"thepomerium","cleared":false,"url":"/thepomerium","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sMJZc5YhRen9pFb2p3JCLqMP/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6140728,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-25T19:22:49.153Z","updated_at":"2019-10-25T19:22:49.153Z","actor":{"username":"thepomerium","cleared":false,"url":"/thepomerium","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/sMJZc5YhRen9pFb2p3JCLqMP/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"zendesk","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":18662,"category":"team","content":"@nathand discovered that the \"Test target\" feature of our \"HTTP Target\" extension in Zendesk Support would send Basic Authentication credentials, regardless of that option being enabled, as long as the Username and Password field were populated. ","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003e\u003ca href=\"/nathand\"\u003e@nathand\u003c/a\u003e discovered that the \u0026quot;Test target\u0026quot; feature of our \u0026quot;HTTP Target\u0026quot; extension in Zendesk Support would send Basic Authentication credentials, regardless of that option being enabled, as long as the Username and Password field were populated. \u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}