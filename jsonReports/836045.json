{"id":836045,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MzYwNDU=","url":"https://hackerone.com/reports/836045","title":"Buffer overread in parse_angle_addr called from message_address_parse_path ","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2020-04-01T09:13:55.676Z","submitted_at":"2020-04-01T09:13:55.676Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"catenacyber","url":"/catenacyber","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-04-02T19:02:07.154Z","bug_reporter_agreed_on_going_public_at":"2020-04-02T19:02:07.086Z","team_member_agreed_on_going_public_at":"2020-04-02T16:28:46.506Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Call `message_address_parse_path(pool_datastack_create(), data0, size0, \u0026addr2);` with input `0x3c,0x40,0x5b,0x40,0x40,0x28,` ie\n`\u003c@[@@(`\n\nStack trace is \n```\n==26434==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200002b7d6 at pc 0x0001002ed0fe bp 0x7ffeef94ffd0 sp 0x7ffeef94ffc8\nREAD of size 1 at 0x60200002b7d6 thread T0\n    #0 0x1002ed0fd in parse_angle_addr message-address.c:180\n    #1 0x1002edb61 in parse_path message-address.c:431\n    #2 0x1002ea289 in message_address_parse_path_real message-address.c:484\n    #3 0x1002ea045 in message_address_parse_path message-address.c:515\n```\n\nProblem is that `parse_domain_list` can advance the offset after eof and we do not check it afterwards\n\nPatch can be \n```\ndiff --git a/src/lib-mail/message-address.c b/src/lib-mail/message-address.c\nindex b1d2a14d1a..bc1d14d43c 100644\n--- a/src/lib-mail/message-address.c\n+++ b/src/lib-mail/message-address.c\n@@ -177,7 +177,7 @@ static int parse_angle_addr(struct message_address_parser_context *ctx,\n        if (*ctx-\u003eparser.data == '@') {\n                if (parse_domain_list(ctx) \u003e 0 \u0026\u0026 *ctx-\u003eparser.data == ':') {\n                        ctx-\u003eparser.data++;\n-               } else if (parsing_path \u0026\u0026 *ctx-\u003eparser.data != ':') {\n+               } else if (parsing_path \u0026\u0026 ctx-\u003eparser.data \u003c ctx-\u003eparser.end \u0026\u0026 *ctx-\u003eparser.data != ':') {\n                        return -1;\n                } else {\n                        if (ctx-\u003efill_missing)\n```\n\n## Impact\n\nBuffer overhead might result in sensitive data leak, or crash","vulnerability_information_html":"\u003cp\u003eCall \u003ccode\u003emessage_address_parse_path(pool_datastack_create(), data0, size0, \u0026amp;addr2);\u003c/code\u003e with input \u003ccode\u003e0x3c,0x40,0x5b,0x40,0x40,0x28,\u003c/code\u003e ie\u003cbr\u003e\n\u003ccode\u003e\u0026lt;@[@@(\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eStack trace is \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e==26434==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200002b7d6 at pc 0x0001002ed0fe bp 0x7ffeef94ffd0 sp 0x7ffeef94ffc8\nREAD of size 1 at 0x60200002b7d6 thread T0\n    #0 0x1002ed0fd in parse_angle_addr message-address.c:180\n    #1 0x1002edb61 in parse_path message-address.c:431\n    #2 0x1002ea289 in message_address_parse_path_real message-address.c:484\n    #3 0x1002ea045 in message_address_parse_path message-address.c:515\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eProblem is that \u003ccode\u003eparse_domain_list\u003c/code\u003e can advance the offset after eof and we do not check it afterwards\u003c/p\u003e\n\n\u003cp\u003ePatch can be \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/src/lib-mail/message-address.c b/src/lib-mail/message-address.c\nindex b1d2a14d1a..bc1d14d43c 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/src/lib-mail/message-address.c\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/src/lib-mail/message-address.c\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -177,7 +177,7 @@\u003c/span\u003e static int parse_angle_addr(struct message_address_parser_context *ctx,\n        if (*ctx-\u0026gt;parser.data == \u0026#39;@\u0026#39;) {\n                if (parse_domain_list(ctx) \u0026gt; 0 \u0026amp;\u0026amp; *ctx-\u0026gt;parser.data == \u0026#39;:\u0026#39;) {\n                        ctx-\u0026gt;parser.data++;\n\u003cspan class=\"gd\"\u003e-               } else if (parsing_path \u0026amp;\u0026amp; *ctx-\u0026gt;parser.data != \u0026#39;:\u0026#39;) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+               } else if (parsing_path \u0026amp;\u0026amp; ctx-\u0026gt;parser.data \u0026lt; ctx-\u0026gt;parser.end \u0026amp;\u0026amp; *ctx-\u0026gt;parser.data != \u0026#39;:\u0026#39;) {\n\u003c/span\u003e                        return -1;\n                } else {\n                        if (ctx-\u0026gt;fill_missing)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eBuffer overhead might result in sensitive data leak, or crash\u003c/p\u003e\n","bounty_amount":"50.0","formatted_bounty":"$50","weakness":{"id":9,"name":"Buffer Over-read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":2,"voters":["since2003","ram15"],"severity":{"rating":"none","score":0.0,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":42899,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7502558,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi! Thanks, we'll look into this.","markdown_message":"\u003cp\u003eHi! Thanks, we\u0026#39;ll look into this.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-01T09:43:24.171Z","updated_at":"2020-04-01T09:43:24.171Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7502884,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi!\n\nI was able to spot that this is used only by dovecot-lda (deliver) when sending out refusal. I tried to feed it something like this:\n\n```.eml\nReturn-Path: \u003c@[@@(testuser)testuser]foobar\u003e\nFrom: \u003c@[@@(testuser)testuser]foobar\u003e\nTo: \u003c@[@@(testuser)testuser]foobar\u003e\nSubject: This is h1 bug test\n\nbug testing for hackerone\n```\n\nbut I only got \n\n```\nApr 01 12:58:45 lda(testuser)\u003c18542\u003e\u003cE4DmDdVlhF5uSAAAIZd7Eg\u003e: Info: sieve: msgid=unspecified: reject action: not sending reject message to \u003c\u003e\n```","markdown_message":"\u003cp\u003eHi!\u003c/p\u003e\n\n\u003cp\u003eI was able to spot that this is used only by dovecot-lda (deliver) when sending out refusal. I tried to feed it something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eReturn-Path: \u0026lt;@[@@(testuser)testuser]foobar\u0026gt;\nFrom: \u0026lt;@[@@(testuser)testuser]foobar\u0026gt;\nTo: \u0026lt;@[@@(testuser)testuser]foobar\u0026gt;\nSubject: This is h1 bug test\n\nbug testing for hackerone\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebut I only got \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eApr 01 12:58:45 lda(testuser)\u0026lt;18542\u0026gt;\u0026lt;E4DmDdVlhF5uSAAAIZd7Eg\u0026gt;: Info: sieve: msgid=unspecified: reject action: not sending reject message to \u0026lt;\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-04-01T10:00:11.608Z","updated_at":"2020-04-01T10:00:11.608Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7503200,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-01T10:11:53.990Z","updated_at":"2020-04-01T10:11:53.990Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7504733,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Did you check that this PoC ends up calling `message_address_parse_path` with only `\u003c@[@@(` and not `\u003c@[@@(testuser)testuser]foobar\u003e` ?\n\nAnyways, it is likely that a few bytes buffer overread does not induce a crash.\nAs for information leak, it is not sure and needs more work to do exploitation.\n\nSo, if I now understand better what you are looking for, I guess we can call it a regular bug.","markdown_message":"\u003cp\u003eDid you check that this PoC ends up calling \u003ccode\u003emessage_address_parse_path\u003c/code\u003e with only \u003ccode\u003e\u0026lt;@[@@(\u003c/code\u003e and not \u003ccode\u003e\u0026lt;@[@@(testuser)testuser]foobar\u0026gt;\u003c/code\u003e ?\u003c/p\u003e\n\n\u003cp\u003eAnyways, it is likely that a few bytes buffer overread does not induce a crash.\u003cbr\u003e\nAs for information leak, it is not sure and needs more work to do exploitation.\u003c/p\u003e\n\n\u003cp\u003eSo, if I now understand better what you are looking for, I guess we can call it a regular bug.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-01T12:49:45.472Z","updated_at":"2020-04-01T12:49:45.472Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7504968,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I tried with \n\n```\nReturn-Path: \u003c@[@@(\n```\n\nand still get\n\n```\nApr 01 16:15:49 lda(testuser)\u003c7041\u003e\u003cwVA0OASUhF6BGwAAIZd7Eg\u003e: Info: sieve: msgid=unspecified: reject action: not sending reject message to \u003c\u003e\n```\n\nso I'm guessing we deal this as regular bug.","markdown_message":"\u003cp\u003eI tried with \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eReturn-Path: \u0026lt;@[@@(\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand still get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eApr 01 16:15:49 lda(testuser)\u0026lt;7041\u0026gt;\u0026lt;wVA0OASUhF6BGwAAIZd7Eg\u0026gt;: Info: sieve: msgid=unspecified: reject action: not sending reject message to \u0026lt;\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eso I\u0026#39;m guessing we deal this as regular bug.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-01T13:16:33.476Z","updated_at":"2020-04-01T13:16:33.476Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7515000,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-02T08:42:23.893Z","updated_at":"2020-04-02T08:42:23.893Z","actor":{"username":"tss","cleared":false,"url":"/tss","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7515087,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"All of the callers to message_address_parse_path() pass it a pointer to a NUL-terminated string. So `*ctx-\u003eparser.data != ':'` can only access the NUL byte. So it's a bug, but with current callers it can't cause any actual problems.","markdown_message":"\u003cp\u003eAll of the callers to message_address_parse_path() pass it a pointer to a NUL-terminated string. So \u003ccode\u003e*ctx-\u0026gt;parser.data != \u0026#39;:\u0026#39;\u003c/code\u003e can only access the NUL byte. So it\u0026#39;s a bug, but with current callers it can\u0026#39;t cause any actual problems.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-02T08:48:59.104Z","updated_at":"2020-04-02T08:48:59.104Z","actor":{"username":"tss","cleared":false,"url":"/tss","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7518204,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-02T12:44:16.144Z","updated_at":"2020-04-02T12:44:16.144Z","additional_data":{"old_severity":"Medium (5.4)","new_severity":"None (0.0)","old_severity_id":677222,"new_severity_id":678601},"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7518277,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We'll move this into our bug tracker and fix it.","markdown_message":"\u003cp\u003eWe\u0026#39;ll move this into our bug tracker and fix it.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-02T12:51:00.908Z","updated_at":"2020-04-02T12:51:00.908Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"catenacyber","url":"/catenacyber"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7519719,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, so no Github PR needed ?","markdown_message":"\u003cp\u003eOk, so no Github PR needed ?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-02T15:02:02.717Z","updated_at":"2020-04-02T15:02:02.717Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7519785,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think could be added to github. But I think the fix is a bit wrong. This looks more like the original intent:\n\n               } else if (parsing_path \u0026\u0026 (ctx-\u003eparser.data \u003e= ctx-\u003eparser.end || *ctx-\u003eparser.data != ':')) {\n","markdown_message":"\u003cp\u003eI think could be added to github. But I think the fix is a bit wrong. This looks more like the original intent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e           } else if (parsing_path \u0026amp;\u0026amp; (ctx-\u0026gt;parser.data \u0026gt;= ctx-\u0026gt;parser.end || *ctx-\u0026gt;parser.data != \u0026#39;:\u0026#39;)) {\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-04-02T15:06:51.341Z","updated_at":"2020-04-02T15:06:51.341Z","actor":{"username":"tss","cleared":false,"url":"/tss","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7520140,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://github.com/dovecot/core/pull/123\n","markdown_message":"\u003cp\u003e\u003ca title=\"https://github.com/dovecot/core/pull/123\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fdovecot%2Fcore%2Fpull%2F123\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/dovecot/core/pull/123\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-02T15:30:47.013Z","updated_at":"2020-04-02T15:30:47.013Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7520680,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-02T16:28:46.547Z","updated_at":"2020-04-02T16:28:46.547Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7522568,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Disclosing","markdown_message":"\u003cp\u003eDisclosing\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-02T19:02:07.110Z","updated_at":"2020-04-02T19:02:07.110Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7522569,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-02T19:02:07.180Z","updated_at":"2020-04-02T19:02:07.180Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7525735,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-03T06:02:31.704Z","updated_at":"2020-04-03T06:02:31.704Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"50.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"catenacyber","url":"/catenacyber"},"actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}