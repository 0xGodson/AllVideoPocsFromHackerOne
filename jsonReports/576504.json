{"id":576504,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NzY1MDQ=","url":"https://hackerone.com/reports/576504","title":"Authentication Bypass by abusing Insecure crypto tokens in /lib/OA/Dal/PasswordRecovery.php:","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-05-10T12:35:35.004Z","submitted_at":"2019-05-10T12:35:35.004Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"paulos_","url":"/paulos_","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":2367,"url":"https://hackerone.com/revive_adserver","handle":"revive_adserver","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/367/4f47a5b4a364515d4bbdc17550d67ea5415363cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/367/4f47a5b4a364515d4bbdc17550d67ea5415363cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Revive Adserver","twitter_handle":"revive_adserver","website":"https://www.revive-adserver.com","about":"Revive Adserver is a free open source ad serving system"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-05-21T15:15:41.490Z","bug_reporter_agreed_on_going_public_at":"2019-05-21T15:15:41.338Z","team_member_agreed_on_going_public_at":"2019-05-21T13:16:46.680Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\n\nThis is a fun bug I came across while doing a pentest for a client, after going through Revive Advserver's code for a few hours, I found this authentication bypass. This vulnerability seem to affect all versions, including the latest one, I was sent by one of your developers to report it here.\n\nIt goes like this:\n\nIn */lib/OA/Dal/PasswordRecovery.php*:\n\n```php\n50: function generateRecoveryId($userId)\n{\n$doPwdRecovery = OA_Dal::factoryDO('password_recovery');\n\n    // Make sure that recoveryId is unique in password_recovery table\n    do {\n        $recoveryId = strtoupper(md5(uniqid('', true)));\n        $recoveryId = substr(chunk_split($recoveryId, 8, '-'), -23, 22);\n        $doPwdRecovery-\u003erecovery_id = $recoveryId;\n        ....\n .....\n....\n```\n\nThat function is used to generate the password reset token used to create new password for admins. The token generated for changing password is insecure because it soley just relies on uniqid() which, according to PHP manual states:\n\n*\"This function does not create random nor unpredictable string. This function must not be used for security purposes. Use cryptographically secure random function/generator and cryptographically secure hash functions to create unpredictable secure ID.\"*\n\nThe reason being that the function does not generate cryptographically secure tokens, in fact without being passed any additional parameters the return value is little different from *microtime()*. If you need to generate cryptographically secure tokens use *openssl_random_pseudo_bytes()*\n\n*uniqid()* is worse than the manual makes it out to be. An example return value is `58fc30c53db63` . Already, this is only \u003c7 bytes of entropy. But it becomes worse, because without the more_entropy flag set, PHP only uses the current time to generate the return value, PHP code says:\n\n```C\nsec = (int) tv.tv_sec;\nusec = (int) (tv.tv_usec % 0x100000);\nif (more_entropy) {\nuniqid = strpprintf(0, \"%s%08x%05x%.8F\", prefix, sec, usec, php_combined_lcg() * 10);\n} else {\nuniqid = strpprintf(0, \"%s%08x%05x\", prefix, sec, usec);\n}\n```\n\nThe first four bytes are the current UNIX timestamp, and the last 20 bits are derived from the current time in microseconds.\n\nThis gives a bit less than 2²⁰, or one million, possible results per given second. If you are able to predict when a new session key is generated for a user, you can guess their key with a decent number of requests, depending on how accurate your guess is. On a popular forum, you may not even need to target a specific user, as the number of users logging in at one time may be large enough.\n\nAnd lucky for us, we can easily predict what Revive Adserver uses:\n\nIdeally an attacker will look up the host IP of their target, locate the server's geoip and set their timezone similar to the server's timezone to make a more accurate prediction.\n\n### Making it more practical\n\nWhen looking more closely I noticed, most servers that host Revive respond with the following headers:\n```\nHTTP/1.1 200 OK\nServer: nginx\nDate: Thu, 09 May 2019 21:26:20 GMT\nContent-Type: application/x-javascript\nConnection: close\nVary: Accept-Encoding\nX-Cacheable: NO:Not Cacheable\nAge: 0\nX-Cache: MISS\nX-Frame-Options: SAMEORIGIN\nContent-Length: ...\n```\n\nDo you see it? It says *Date: Thu, 09 May 2019 21:26:20 GMT* -- so we can easily know what timezone the server syncs and uses (in this case GMT+0 as timezone) , all an attacker have to do is change their timezone to GMT, request a password reset token simultaneously as they they generate uniqid() from their side as well. All an attacker needs is the email address of the account they reset (which can be enumurated in numerous ways, including by abusing *admin/password-recovery.php* by sending some email addresses until it says *Email Password Reset sent*)\n\n\nA PoC one would use can look like the following (except weaponized to request a password and generate the tokens simultaneously):\n\n```php\nfor($i=0;$i\u003c=10000;$i++){\n\n     $recoveryId = strtoupper(md5(uniqid('', true)));\n     $recoveryId = substr(chunk_split($recoveryId, 8, '-'), -23, 22);\n\n     print $recoveryId.\"\u003c/br\u003e\";\n\n}\n```\n\nThis generates 10,000 tokens we can try as a token to login as the admin by automating this with process with Burp Intruder. \n\nYou get the idea! :)\n\n### Suggested Fix\n\nRelaying on more cryptographically secure functions like *openssl_random_pseudo_bytes()* is better for such sensitive tokens.\n\n## Impact\n\nAuthentication Bypass\n\n\nThanks,","vulnerability_information_html":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eThis is a fun bug I came across while doing a pentest for a client, after going through Revive Advserver\u0026#39;s code for a few hours, I found this authentication bypass. This vulnerability seem to affect all versions, including the latest one, I was sent by one of your developers to report it here.\u003c/p\u003e\n\n\u003cp\u003eIt goes like this:\u003c/p\u003e\n\n\u003cp\u003eIn \u003cem\u003e/lib/OA/Dal/PasswordRecovery.php\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateRecoveryId\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$userId\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$doPwdRecovery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eOA_Dal\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"na\"\u003efactoryDO\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password_recovery\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Make sure that recoveryId is unique in password_recovery table\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estrtoupper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003emd5\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003euniqid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003echunk_split\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$doPwdRecovery\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"na\"\u003erecovery_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e....\u003c/span\u003e\n \u003cspan class=\"o\"\u003e.....\u003c/span\u003e\n\u003cspan class=\"o\"\u003e....\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat function is used to generate the password reset token used to create new password for admins. The token generated for changing password is insecure because it soley just relies on uniqid() which, according to PHP manual states:\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u0026quot;This function does not create random nor unpredictable string. This function must not be used for security purposes. Use cryptographically secure random function/generator and cryptographically secure hash functions to create unpredictable secure ID.\u0026quot;\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe reason being that the function does not generate cryptographically secure tokens, in fact without being passed any additional parameters the return value is little different from \u003cem\u003emicrotime()\u003c/em\u003e. If you need to generate cryptographically secure tokens use \u003cem\u003eopenssl_random_pseudo_bytes()\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003euniqid()\u003c/em\u003e is worse than the manual makes it out to be. An example return value is \u003ccode\u003e58fc30c53db63\u003c/code\u003e . Already, this is only \u0026lt;7 bytes of entropy. But it becomes worse, because without the more_entropy flag set, PHP only uses the current time to generate the return value, PHP code says:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003esec = (int) tv.tv_sec;\nusec = (int) (tv.tv_usec % 0x100000);\nif (more_entropy) {\nuniqid = strpprintf(0, \u0026quot;%s%08x%05x%.8F\u0026quot;, prefix, sec, usec, php_combined_lcg() * 10);\n} else {\nuniqid = strpprintf(0, \u0026quot;%s%08x%05x\u0026quot;, prefix, sec, usec);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe first four bytes are the current UNIX timestamp, and the last 20 bits are derived from the current time in microseconds.\u003c/p\u003e\n\n\u003cp\u003eThis gives a bit less than 2²⁰, or one million, possible results per given second. If you are able to predict when a new session key is generated for a user, you can guess their key with a decent number of requests, depending on how accurate your guess is. On a popular forum, you may not even need to target a specific user, as the number of users logging in at one time may be large enough.\u003c/p\u003e\n\n\u003cp\u003eAnd lucky for us, we can easily predict what Revive Adserver uses:\u003c/p\u003e\n\n\u003cp\u003eIdeally an attacker will look up the host IP of their target, locate the server\u0026#39;s geoip and set their timezone similar to the server\u0026#39;s timezone to make a more accurate prediction.\u003c/p\u003e\n\n\u003ch3 id=\"making-it-more-practical\"\u003eMaking it more practical\u003c/h3\u003e\n\n\u003cp\u003eWhen looking more closely I noticed, most servers that host Revive respond with the following headers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\nServer: nginx\nDate: Thu, 09 May 2019 21:26:20 GMT\nContent-Type: application/x-javascript\nConnection: close\nVary: Accept-Encoding\nX-Cacheable: NO:Not Cacheable\nAge: 0\nX-Cache: MISS\nX-Frame-Options: SAMEORIGIN\nContent-Length: ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDo you see it? It says \u003cem\u003eDate: Thu, 09 May 2019 21:26:20 GMT\u003c/em\u003e -- so we can easily know what timezone the server syncs and uses (in this case GMT+0 as timezone) , all an attacker have to do is change their timezone to GMT, request a password reset token simultaneously as they they generate uniqid() from their side as well. All an attacker needs is the email address of the account they reset (which can be enumurated in numerous ways, including by abusing \u003cem\u003eadmin/password-recovery.php\u003c/em\u003e by sending some email addresses until it says \u003cem\u003eEmail Password Reset sent\u003c/em\u003e)\u003c/p\u003e\n\n\u003cp\u003eA PoC one would use can look like the following (except weaponized to request a password and generate the tokens simultaneously):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight php\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n\n     \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estrtoupper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003emd5\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003euniqid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n     \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003echunk_split\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n     \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"nv\"\u003e$recoveryId\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026quot;\u0026lt;/br\u0026gt;\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis generates 10,000 tokens we can try as a token to login as the admin by automating this with process with Burp Intruder. \u003c/p\u003e\n\n\u003cp\u003eYou get the idea! :)\u003c/p\u003e\n\n\u003ch3 id=\"suggested-fix\"\u003eSuggested Fix\u003c/h3\u003e\n\n\u003cp\u003eRelaying on more cryptographically secure functions like \u003cem\u003eopenssl_random_pseudo_bytes()\u003c/em\u003e is better for such sensitive tokens.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAuthentication Bypass\u003c/p\u003e\n\n\u003cp\u003eThanks,\u003c/p\u003e\n","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-06-20T13:16:46.779Z","allow_singular_disclosure_after":-48186347.487318166,"singular_disclosure_allowed":true,"vote_count":24,"voters":["ranapir","kapytein","foobar7","joshualaurencio","0xd0m7","yassineaboukir","aeswagyewgyes","an0nym0us","prinzhorn","shinkurt","and 14 more..."],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":154,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/revive-adserver/revive-adserver","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4809719,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Dear Paulos_,\n\nThanks for your detailed and well researched report. We're going to study this carefully and will get back to you with our findings shortly.\n\nOn behalf of the Revive Adserver team, Erik Geurts","markdown_message":"\u003cp\u003eDear Paulos_,\u003c/p\u003e\n\n\u003cp\u003eThanks for your detailed and well researched report. We\u0026#39;re going to study this carefully and will get back to you with our findings shortly.\u003c/p\u003e\n\n\u003cp\u003eOn behalf of the Revive Adserver team, Erik Geurts\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-10T13:44:08.378Z","updated_at":"2019-05-10T13:44:08.378Z","actor":{"username":"erikgeurts","cleared":false,"url":"/erikgeurts","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/033/878/a7a35960c7fd0f0474c483f125a4dfb682e9b5ee_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4810191,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the report. The issue is confirmed. As Erik wrote, we'll get back to you shortly.","markdown_message":"\u003cp\u003eThanks for the report. The issue is confirmed. As Erik wrote, we\u0026#39;ll get back to you shortly.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-10T15:29:47.466Z","updated_at":"2019-05-10T15:29:47.466Z","actor":{"username":"mbeccati","cleared":false,"url":"/mbeccati","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Vb1MGAtUFpEE4kdMaxxr1ACZ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4810931,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @erikgeurts @mbeccati ,\n\nThank you. I appreciate the quick response, please let me know if I can be of any help. :)","markdown_message":"\u003cp\u003eHi \u003ca href=\"/erikgeurts\"\u003e@erikgeurts\u003c/a\u003e \u003ca href=\"/mbeccati\"\u003e@mbeccati\u003c/a\u003e ,\u003c/p\u003e\n\n\u003cp\u003eThank you. I appreciate the quick response, please let me know if I can be of any help. :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-10T16:54:08.564Z","updated_at":"2019-05-10T16:54:08.564Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4853171,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello, I was wondering if you have an update or ETA on this","markdown_message":"\u003cp\u003eHello, I was wondering if you have an update or ETA on this\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-16T00:18:00.222Z","updated_at":"2019-05-16T00:18:00.222Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4854200,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi paulos_, sure. Here's the patch for you to test. We're still discussing a release date, but a potential candidate is currently Tue 21st.","markdown_message":"\u003cp\u003eHi paulos_, sure. Here\u0026#39;s the patch for you to test. We\u0026#39;re still discussing a release date, but a potential candidate is currently Tue 21st.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-16T06:09:37.960Z","updated_at":"2019-05-16T06:09:37.960Z","actor":{"username":"mbeccati","cleared":false,"url":"/mbeccati","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Vb1MGAtUFpEE4kdMaxxr1ACZ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":491102,"filename":"h1-576504.diff","type":"text/x-diff","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/491/102/205b5f54ba424995e644cef06000e655955ef71c/h1-576504.diff?response-content-disposition=attachment%3B%20filename%3D%22h1-576504.diff%22%3B%20filename%2A%3DUTF-8%27%27h1-576504.diff\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQW2BAZGD3%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T062234Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf7CC1janFXxWWF6QZ1Z6X6%2F6j0WDhv4gDyzEWu%2BScUAIhAOhgsmE64VangXFyIz5AGmDMLeT8sYG2vBQ4PwiaYS%2FZKrQDCFUQARoMMDEzNjE5Mjc0ODQ5Igy754oCq3nK3vWmRbMqkQM98qKdRlMDTd4bBwR4jJMppOWz7EU3ySwJK1geVZm7GvrSHyp8wAx03nVbAIisdh9q5SCYJs%2FJTXi%2Fsm9znfJcHgIy1DUYcyZol0zQmN4hQAlOUZZ6AJANKMjzew6Gbci4hpgZqkt7kMNinONmzU36EDiWMOc0y0LBIMMe8ckWdal2vM1amkx9g4%2B7jkxStLKe4Ry%2FVeqOEFeDj5B3%2Fim8atXFDPnaA6ZctYC0kADebiu9zFF1dQsSdkzsLG93dLAMR0ARXm0vun9nbqpp5oxDQafvSrdE7oDp0yem%2B391K5yvQ%2FVkTdyMd797ooD1IAYqUdwlX0lVblqv9ErzI2EUbOnFhO5widZFoU8s5JQDxyTzDlNAHHPnQpU8XD7uIRyR%2Bh43I9VvsEn1pERJ2rOM57I1PkAM8vesvdhiNkLY7KsmmB1q5drdmKxzSDeK5uPJY%2F7b6ZdCcYzDgNfX18d6h0A0FHbvXn7qPH9NQWGUsNXamCikRs9AA%2BK%2BzqwxI%2FlZdCdkUBJNbFqefOmuHA6y4DCuw6r%2FBTrqAZ4iBH5JOWBgJ5BPglFYT1gWFkwyMqq8gmMxb5SeS%2FjunuR9x9HhadmGfzTt7avXh7ra%2BbCbT8G5EBTHekw5tLrBpYwkzmLiedzIpJ4pJqrAXmk%2B6qfKdpUFGOfE%2FoOdzhIkM32hFOTOwwCcLwfUCOQXCXHweJlGlDZdV%2FgvnAv5llJv80AS6mRncqu5cTdZ6kwskL6mtLuZx022Hs9iVQEhZVcVFVxWNFIMlrPZufuNWFtnv13RkAoiqYOJgDn3UWRAP9lucn7OMZs0NyqKFy1iLho2FCO%2BegcGHVqDf%2FVxOtLAlnkhjmFRxg%3D%3D\u0026X-Amz-Signature=042d5fdbfa217f46ebc6d0730809566e6b966a9fb168bdd1fe84fd6d911ac5ca"}],"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4857193,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @mbeccati -- It looks great! \n\nThanks, ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/mbeccati\"\u003e@mbeccati\u003c/a\u003e -- It looks great! \u003c/p\u003e\n\n\u003cp\u003eThanks, \u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-16T12:32:31.780Z","updated_at":"2019-05-16T12:32:31.780Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4878853,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again. The release of 4.2.1 is scheduled for tomorrow.","markdown_message":"\u003cp\u003eThanks again. The release of 4.2.1 is scheduled for tomorrow.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-20T08:01:47.797Z","updated_at":"2019-05-20T08:01:47.797Z","actor":{"username":"mbeccati","cleared":false,"url":"/mbeccati","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Vb1MGAtUFpEE4kdMaxxr1ACZ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"paulos_","url":"/paulos_"},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4878902,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mbeccati I wanted to say thanks for the nice feedback and also wanted to add `random_bytes()` is a PHP 7 function and if you have backwards compatibility in your application that might cause problems. :)","markdown_message":"\u003cp\u003e\u003ca href=\"/mbeccati\"\u003e@mbeccati\u003c/a\u003e I wanted to say thanks for the nice feedback and also wanted to add \u003ccode\u003erandom_bytes()\u003c/code\u003e is a PHP 7 function and if you have backwards compatibility in your application that might cause problems. :)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-20T08:17:51.846Z","updated_at":"2019-05-20T08:17:51.846Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4878913,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you. 4.2.x is PHP7+ only, so no problem with that.","markdown_message":"\u003cp\u003eThank you. 4.2.x is PHP7+ only, so no problem with that.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-20T08:21:11.899Z","updated_at":"2019-05-20T08:21:11.899Z","actor":{"username":"mbeccati","cleared":false,"url":"/mbeccati","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Vb1MGAtUFpEE4kdMaxxr1ACZ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4893738,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-21T13:16:46.717Z","updated_at":"2019-05-21T13:16:46.717Z","first_to_agree":true,"actor":{"username":"mbeccati","cleared":false,"url":"/mbeccati","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Vb1MGAtUFpEE4kdMaxxr1ACZ/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4894924,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-21T15:15:41.407Z","updated_at":"2019-05-21T15:15:41.407Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4894925,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-21T15:15:41.520Z","updated_at":"2019-05-21T15:15:41.520Z","actor":{"username":"paulos_","cleared":false,"url":"/paulos_","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/008/601/abf2077609ef0546be8676abd1bec49aaefc9ff2_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"revive_adserver","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}